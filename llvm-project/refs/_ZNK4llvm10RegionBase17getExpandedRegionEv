<dec f='llvm/llvm/include/llvm/Analysis/RegionInfo.h' l='394' type='RegionT * llvm::RegionBase::getExpandedRegion() const'/>
<doc f='llvm/llvm/include/llvm/Analysis/RegionInfo.h' l='388'>/// Return a new (non-canonical) region, that is obtained by joining
  ///        this region with its predecessors.
  ///
  /// @return A region also starting at getEntry(), but reaching to the next
  ///         basic block that forms with getEntry() a (non-canonical) region.
  ///         NULL if such a basic block does not exist.</doc>
<def f='llvm/llvm/include/llvm/Analysis/RegionInfoImpl.h' l='458' ll='487' type='typename Tr::RegionT * llvm::RegionBase::getExpandedRegion() const'/>
