<def f='llvm/clang/include/clang/AST/ASTTypeTraits.h' l='486' ll='488'/>
<def f='llvm/clang/include/clang/AST/ASTTypeTraits.h' l='490' ll='492'/>
<def f='llvm/clang/include/clang/AST/ASTTypeTraits.h' l='494' ll='496'/>
<def f='llvm/clang/include/clang/AST/ASTTypeTraits.h' l='498' ll='500'/>
<def f='llvm/clang/include/clang/AST/ASTTypeTraits.h' l='502' ll='505'/>
<def f='llvm/clang/include/clang/AST/ASTTypeTraits.h' l='507' ll='509'/>
<def f='llvm/clang/include/clang/AST/ASTTypeTraits.h' l='511' ll='513'/>
<def f='llvm/clang/include/clang/AST/ASTTypeTraits.h' l='519' ll='523'/>
<size>1</size>
<doc f='llvm/clang/include/clang/AST/ASTTypeTraits.h' l='515'>// The only operation we allow on unsupported types is \c get.
// This allows to conveniently use \c DynTypedNode when having an arbitrary
// AST node that is not supported, but prevents misuse - a user cannot create
// a DynTypedNode from arbitrary types.</doc>
<fun r='_ZN5clang15ast_type_traits12DynTypedNode13BaseConverter3getENS0_11ASTNodeKindEPKc'/>
