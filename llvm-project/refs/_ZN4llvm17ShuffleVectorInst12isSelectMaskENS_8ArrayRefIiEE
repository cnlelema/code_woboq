<dec f='llvm/llvm/include/llvm/IR/Instructions.h' l='2114' type='static bool llvm::ShuffleVectorInst::isSelectMask(ArrayRef&lt;int&gt; Mask)'/>
<use f='llvm/llvm/include/llvm/IR/Instructions.h' l='2119' u='c' c='_ZN4llvm17ShuffleVectorInst12isSelectMaskEPKNS_8ConstantE'/>
<doc f='llvm/llvm/include/llvm/IR/Instructions.h' l='2106'>/// Return true if this shuffle mask chooses elements from its source vectors
  /// without lane crossings. A shuffle using this mask would be
  /// equivalent to a vector select with a constant condition operand.
  /// Example: &lt;4,1,6,undef&gt;
  /// This returns false if the mask does not choose from both input vectors.
  /// In that case, the shuffle is better classified as an identity shuffle.
  /// This assumes that vector operands are the same length as the mask
  /// (a length-changing shuffle can never be equivalent to a vector select).</doc>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='1971' ll='1982' type='static bool llvm::ShuffleVectorInst::isSelectMask(ArrayRef&lt;int&gt; Mask)'/>
