<def f='llvm/llvm/include/llvm/ExecutionEngine/Orc/LazyReexports.h' l='182' ll='189' type='std::unique_ptr&lt;LazyReexportsMaterializationUnit&gt; llvm::orc::lazyReexports(llvm::orc::LazyCallThroughManager &amp; LCTManager, llvm::orc::IndirectStubsManager &amp; ISManager, llvm::orc::JITDylib &amp; SourceJD, SymbolAliasMap CallableAliases, VModuleKey K = VModuleKey())'/>
<use f='llvm/llvm/lib/ExecutionEngine/Orc/CompileOnDemandLayer.cpp' l='160' u='c' c='_ZN4llvm3orc20CompileOnDemandLayer4emitENS0_29MaterializationResponsibilityENS0_16ThreadSafeModuleE'/>
<doc f='llvm/llvm/include/llvm/ExecutionEngine/Orc/LazyReexports.h' l='179'>/// Define lazy-reexports based on the given SymbolAliasMap. Each lazy re-export
/// is a callable symbol that will look up and dispatch to the given aliasee on
/// first call. All subsequent calls will go directly to the aliasee.</doc>
<use f='llvm/llvm/lib/ExecutionEngine/Orc/LazyReexports.cpp' l='151' u='c' c='_ZN4llvm3orc32LazyReexportsMaterializationUnit11materializeENS0_29MaterializationResponsibilityE'/>
