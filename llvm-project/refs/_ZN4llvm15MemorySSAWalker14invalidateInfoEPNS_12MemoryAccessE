<def f='llvm/llvm/include/llvm/Analysis/MemorySSA.h' l='1052' type='void llvm::MemorySSAWalker::invalidateInfo(llvm::MemoryAccess * )'/>
<doc f='llvm/llvm/include/llvm/Analysis/MemorySSA.h' l='1047'>/// Given a memory access, invalidate anything this walker knows about
  /// that access.
  /// This API is used by walkers that store information to perform basic cache
  /// invalidation.  This will be called by MemorySSA at appropriate times for
  /// the walker it uses or returns.</doc>
<ovr f='llvm/llvm/lib/Analysis/MemorySSA.cpp' l='1035' c='_ZN4llvm9MemorySSA13CachingWalker14invalidateInfoEPNS_12MemoryAccessE'/>
<ovr f='llvm/llvm/lib/Analysis/MemorySSA.cpp' l='1071' c='_ZN4llvm9MemorySSA14SkipSelfWalker14invalidateInfoEPNS_12MemoryAccessE'/>
<use f='llvm/llvm/lib/Analysis/MemorySSA.cpp' l='1793' u='c' c='_ZN4llvm9MemorySSA17removeFromLookupsEPNS_12MemoryAccessE'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='786' u='c' c='_ZN41MemorySSATest_WalkerInvariantLoadOpt_Test8TestBodyEv'/>
