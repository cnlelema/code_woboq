<inh f='llvm/clang/include/clang/AST/Type.h' l='1428' c='clang::Type'/>
<inh f='llvm/llvm/include/llvm/ADT/FoldingSet.h' l='135' c='llvm::FoldingSetBase::Node'/>
<def f='llvm/clang/include/clang/AST/Type.h' l='5439' ll='5488'/>
<size>40</size>
<doc f='llvm/clang/include/clang/AST/Type.h' l='5417'>/// Represents a pack expansion of types.
///
/// Pack expansions are part of C++11 variadic templates. A pack
/// expansion contains a pattern, which itself contains one or more
/// &quot;unexpanded&quot; parameter packs. When instantiated, a pack expansion
/// produces a series of types, each instantiated from the pattern of
/// the expansion, where the Ith instantiation of the pattern uses the
/// Ith arguments bound to each of the unexpanded parameter packs. The
/// pack expansion is considered to &quot;expand&quot; these unexpanded
/// parameter packs.
///
/// \code
/// template&lt;typename ...Types&gt; struct tuple;
///
/// template&lt;typename ...Types&gt;
/// struct tuple_of_references {
///   typedef tuple&lt;Types&amp;...&gt; type;
/// };
/// \endcode
///
/// Here, the pack expansion \c Types&amp;... is represented via a
/// PackExpansionType whose pattern is Types&amp;.</doc>
<mbr r='clang::PackExpansionType::Pattern' o='256' t='clang::QualType'/>
<fun r='_ZN5clang17PackExpansionTypeC1ENS_8QualTypeES1_N4llvm8OptionalIjEE'/>
<fun r='_ZNK5clang17PackExpansionType10getPatternEv'/>
<fun r='_ZNK5clang17PackExpansionType16getNumExpansionsEv'/>
<fun r='_ZNK5clang17PackExpansionType9isSugaredEv'/>
<fun r='_ZNK5clang17PackExpansionType7desugarEv'/>
<fun r='_ZN5clang17PackExpansionType7ProfileERN4llvm16FoldingSetNodeIDE'/>
<fun r='_ZN5clang17PackExpansionType7ProfileERN4llvm16FoldingSetNodeIDENS_8QualTypeENS1_8OptionalIjEE'/>
<fun r='_ZN5clang17PackExpansionType7classofEPKNS_4TypeE'/>
