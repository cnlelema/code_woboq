<def f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='347' ll='351' type='bool llvm::TargetLoweringBase::shouldExpandBuildVectorWithShuffles(llvm::EVT , unsigned int DefinedValues) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='338'>// There are two general methods for expanding a BUILD_VECTOR node:
  //  1. Use SCALAR_TO_VECTOR on the defined scalar values and then shuffle
  //     them together.
  //  2. Build the vector on the stack and then load it.
  // If this function returns true, then method (1) will be used, subject to
  // the constraint that all of the necessary shuffles are legal (as determined
  // by isShuffleMaskLegal). If this function returns false, then method (2) is
  // always used. The vector type, and the number of defined values, are
  // provided.</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp' l='2021' u='c' c='_ZN12_GLOBAL__N_120SelectionDAGLegalize18ExpandBUILD_VECTOREPN4llvm6SDNodeE'/>
<ovr f='llvm/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp' l='1836' c='_ZNK4llvm21HexagonTargetLowering35shouldExpandBuildVectorWithShufflesENS_3EVTEj'/>
<ovr f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='14644' c='_ZNK4llvm17PPCTargetLowering35shouldExpandBuildVectorWithShufflesENS_3EVTEj'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='14652' u='c' c='_ZNK4llvm17PPCTargetLowering35shouldExpandBuildVectorWithShufflesENS_3EVTEj'/>
