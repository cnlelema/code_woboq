<dec f='llvm/clang/include/clang/AST/ASTContext.h' l='2286' type='const clang::CXXMethodDecl * clang::ASTContext::getCurrentKeyFunction(const clang::CXXRecordDecl * RD)'/>
<doc f='llvm/clang/include/clang/AST/ASTContext.h' l='2276'>/// Get our current best idea for the key function of the
  /// given record decl, or nullptr if there isn&apos;t one.
  ///
  /// The key function is, according to the Itanium C++ ABI section 5.2.3:
  ///   ...the first non-pure virtual function that is not inline at the
  ///   point of class definition.
  ///
  /// Other ABIs use the same idea.  However, the ARM C++ ABI ignores
  /// virtual functions that are defined &apos;inline&apos;, which means that
  /// the result of this computation can change.</doc>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='10189' u='c' c='_ZN5clang10ASTContext17DeclMustBeEmittedEPKNS_4DeclE'/>
<def f='llvm/clang/lib/AST/RecordLayoutBuilder.cpp' l='3070' ll='3091' type='const clang::CXXMethodDecl * clang::ASTContext::getCurrentKeyFunction(const clang::CXXRecordDecl * RD)'/>
<use f='llvm/clang/lib/CodeGen/CGVTables.cpp' l='804' u='c' c='_ZN5clang7CodeGen13CodeGenModule16getVTableLinkageEPKNS_13CXXRecordDeclE'/>
<use f='llvm/clang/lib/CodeGen/CGVTables.cpp' l='937' u='c' c='_ZN5clang7CodeGen14CodeGenVTables16isVTableExternalEPKNS_13CXXRecordDeclE'/>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='13481' u='c' c='_ZN5clang4Sema23ActOnFinishFunctionBodyEPNS_4DeclEPNS_4StmtEb'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='15164' u='c' c='_ZN5clang4Sema17DefineUsedVTablesEv'/>
