<dec f='llvm/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldMachO.h' l='57' type='int64_t llvm::RuntimeDyldMachO::memcpyAddend(const llvm::RelocationEntry &amp; RE) const'/>
<doc f='llvm/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldMachO.h' l='55'>/// This convenience method uses memcpy to extract a contiguous addend (the
  /// addend size and offset are taken from the corresponding fields of the RE).</doc>
<use f='llvm/llvm/lib/ExecutionEngine/RuntimeDyld/Targets/RuntimeDyldMachOARM.h' l='69' u='c' c='_ZNK4llvm19RuntimeDyldMachOARM12decodeAddendERKNS_15RelocationEntryE'/>
<use f='llvm/llvm/lib/ExecutionEngine/RuntimeDyld/Targets/RuntimeDyldMachOI386.h' l='68' u='c' c='_ZN4llvm20RuntimeDyldMachOI38620processRelocationRefEjNS_6object16content_iteratorINS1_13RelocationRefEEERKNS1_10ObjectFileERSt3mapINS1_10SectionRefEj840235'/>
<use f='llvm/llvm/lib/ExecutionEngine/RuntimeDyld/Targets/RuntimeDyldMachOX86_64.h' l='51' u='c' c='_ZN4llvm22RuntimeDyldMachOX86_6420processRelocationRefEjNS_6object16content_iteratorINS1_13RelocationRefEEERKNS1_10ObjectFileERSt3mapINS1_10SectionRef13460665'/>
<def f='llvm/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldMachO.cpp' l='46' ll='51' type='int64_t llvm::RuntimeDyldMachO::memcpyAddend(const llvm::RelocationEntry &amp; RE) const'/>
