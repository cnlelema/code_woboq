<dec f='llvm/clang/include/clang/Sema/Sema.h' l='1556' type='bool clang::Sema::CheckEquivalentExceptionSpec(const clang::FunctionProtoType * Old, clang::SourceLocation OldLoc, const clang::FunctionProtoType * New, clang::SourceLocation NewLoc)'/>
<def f='llvm/clang/lib/Sema/SemaExceptionSpec.cpp' l='469' ll='486' type='bool clang::Sema::CheckEquivalentExceptionSpec(const clang::FunctionProtoType * Old, clang::SourceLocation OldLoc, const clang::FunctionProtoType * New, clang::SourceLocation NewLoc)'/>
<doc f='llvm/clang/lib/Sema/SemaExceptionSpec.cpp' l='465'>/// CheckEquivalentExceptionSpec - Check if the two types have equivalent
/// exception specifications. Exception specifications are equivalent if
/// they allow exactly the same set of exception types. It does not matter how
/// that is achieved. See C++ [except.spec]p2.</doc>
