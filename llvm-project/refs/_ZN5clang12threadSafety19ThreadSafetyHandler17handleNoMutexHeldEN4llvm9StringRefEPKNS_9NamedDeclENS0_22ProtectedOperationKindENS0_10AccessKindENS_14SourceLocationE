<def f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafety.h' l='175' ll='177' type='void clang::threadSafety::ThreadSafetyHandler::handleNoMutexHeld(llvm::StringRef Kind, const clang::NamedDecl * D, clang::threadSafety::ProtectedOperationKind POK, clang::threadSafety::AccessKind AK, clang::SourceLocation Loc)'/>
<doc f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafety.h' l='169'>/// Warn when a protected operation occurs while no locks are held.
  /// \param Kind -- the capability&apos;s name parameter (role, mutex, etc).
  /// \param D -- The decl for the protected variable or function
  /// \param POK -- The kind of protected operation (e.g. variable access)
  /// \param AK -- The kind of access (i.e. read or write) that occurred
  /// \param Loc -- The location of the protected operation.</doc>
<ovr f='llvm/clang/lib/Sema/AnalysisBasedWarnings.cpp' l='1751' c='_ZN5clang12threadSafety12_GLOBAL__N_120ThreadSafetyReporter17handleNoMutexHeldEN4llvm9StringRefEPKNS_9NamedDeclENS0_22ProtectedOperationKindENS0_10Acc14924165'/>
