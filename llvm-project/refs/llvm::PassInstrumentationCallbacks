<def f='llvm/llvm/include/llvm/IR/PassInstrumentation.h' l='68' ll='125'/>
<size>720</size>
<doc f='llvm/llvm/include/llvm/IR/PassInstrumentation.h' l='66'>/// This class manages callbacks registration, as well as provides a way for
/// PassInstrumentation to pass control to the registered callbacks.</doc>
<fun r='_ZN4llvm28PassInstrumentationCallbacksC1Ev'/>
<fun r='_ZN4llvm28PassInstrumentationCallbacksC1ERKS0_'/>
<fun r='_ZN4llvm28PassInstrumentationCallbacksaSERKS0_'/>
<fun r='_ZN4llvm28PassInstrumentationCallbacks26registerBeforePassCallbackET_'/>
<fun r='_ZN4llvm28PassInstrumentationCallbacks25registerAfterPassCallbackET_'/>
<fun r='_ZN4llvm28PassInstrumentationCallbacks36registerAfterPassInvalidatedCallbackET_'/>
<fun r='_ZN4llvm28PassInstrumentationCallbacks30registerBeforeAnalysisCallbackET_'/>
<fun r='_ZN4llvm28PassInstrumentationCallbacks29registerAfterAnalysisCallbackET_'/>
<mbr r='llvm::PassInstrumentationCallbacks::BeforePassCallbacks' o='0' t='SmallVector&lt;llvm::unique_function&lt;BeforePassFunc&gt;, 4&gt;'/>
<mbr r='llvm::PassInstrumentationCallbacks::AfterPassCallbacks' o='1152' t='SmallVector&lt;llvm::unique_function&lt;AfterPassFunc&gt;, 4&gt;'/>
<mbr r='llvm::PassInstrumentationCallbacks::AfterPassInvalidatedCallbacks' o='2304' t='SmallVector&lt;llvm::unique_function&lt;AfterPassInvalidatedFunc&gt;, 4&gt;'/>
<mbr r='llvm::PassInstrumentationCallbacks::BeforeAnalysisCallbacks' o='3456' t='SmallVector&lt;llvm::unique_function&lt;BeforeAnalysisFunc&gt;, 4&gt;'/>
<mbr r='llvm::PassInstrumentationCallbacks::AfterAnalysisCallbacks' o='4608' t='SmallVector&lt;llvm::unique_function&lt;AfterAnalysisFunc&gt;, 4&gt;'/>
