<def f='llvm/clang/include/clang/Analysis/CloneDetection.h' l='33' ll='151'/>
<size>24</size>
<doc f='llvm/clang/include/clang/Analysis/CloneDetection.h' l='29'>/// Identifies a list of statements.
///
/// Can either identify a single arbitrary Stmt object, a continuous sequence of
/// child statements inside a CompoundStmt or no statements at all.</doc>
<mbr r='clang::StmtSequence::S' o='0' t='const clang::Stmt *'/>
<mbr r='clang::StmtSequence::D' o='64' t='const clang::Decl *'/>
<mbr r='clang::StmtSequence::StartIndex' o='128' t='unsigned int'/>
<mbr r='clang::StmtSequence::EndIndex' o='160' t='unsigned int'/>
<fun r='_ZN5clang12StmtSequenceC1EPKNS_12CompoundStmtEPKNS_4DeclEjj'/>
<fun r='_ZN5clang12StmtSequenceC1EPKNS_4StmtEPKNS_4DeclE'/>
<fun r='_ZN5clang12StmtSequenceC1Ev'/>
<fun r='_ZNK5clang12StmtSequence5beginEv'/>
<fun r='_ZNK5clang12StmtSequence3endEv'/>
<fun r='_ZNK5clang12StmtSequence5frontEv'/>
<fun r='_ZNK5clang12StmtSequence4backEv'/>
<fun r='_ZNK5clang12StmtSequence4sizeEv'/>
<fun r='_ZNK5clang12StmtSequence5emptyEv'/>
<fun r='_ZNK5clang12StmtSequence13getASTContextEv'/>
<fun r='_ZNK5clang12StmtSequence17getContainingDeclEv'/>
<fun r='_ZNK5clang12StmtSequence13holdsSequenceEv'/>
<fun r='_ZNK5clang12StmtSequence11getBeginLocEv'/>
<fun r='_ZNK5clang12StmtSequence9getEndLocEv'/>
<fun r='_ZNK5clang12StmtSequence14getSourceRangeEv'/>
<fun r='_ZNK5clang12StmtSequenceeqERKS0_'/>
<fun r='_ZNK5clang12StmtSequenceneERKS0_'/>
<fun r='_ZNK5clang12StmtSequence8containsERKS0_'/>
<fun r='_ZN5clang12StmtSequenceC1EPKNS_12CompoundStmtEPKNS_4DeclEjj'/>
<fun r='_ZN5clang12StmtSequenceC1EPKNS_4StmtEPKNS_4DeclE'/>
<fun r='_ZN5clang12StmtSequenceC1Ev'/>
<fun r='_ZNK5clang12StmtSequence8containsERKS0_'/>
<fun r='_ZNK5clang12StmtSequence5beginEv'/>
<fun r='_ZNK5clang12StmtSequence3endEv'/>
<fun r='_ZNK5clang12StmtSequence13getASTContextEv'/>
<fun r='_ZNK5clang12StmtSequence11getBeginLocEv'/>
<fun r='_ZNK5clang12StmtSequence9getEndLocEv'/>
<fun r='_ZNK5clang12StmtSequence14getSourceRangeEv'/>
