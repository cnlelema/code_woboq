<inh f='llvm/clang/include/clang/AST/OpenMPClause.h' l='50' c='clang::OMPClause'/>
<def f='llvm/clang/include/clang/AST/OpenMPClause.h' l='618' ll='663'/>
<size>24</size>
<doc f='llvm/clang/include/clang/AST/OpenMPClause.h' l='606'>/// This represents &apos;safelen&apos; clause in the &apos;#pragma omp ...&apos;
/// directive.
///
/// \code
/// #pragma omp simd safelen(4)
/// \endcode
/// In this example directive &apos;#pragma omp simd&apos; has clause &apos;safelen&apos;
/// with single expression &apos;4&apos;.
/// If the safelen clause is used then no two iterations executed
/// concurrently with SIMD instructions can have a greater distance
/// in the logical iteration space than its value. The parameter of
/// the safelen clause must be a constant positive integer expression.</doc>
<mbr r='clang::OMPSafelenClause::LParenLoc' o='96' t='clang::SourceLocation'/>
<mbr r='clang::OMPSafelenClause::Safelen' o='128' t='clang::Stmt *'/>
<fun r='_ZN5clang16OMPSafelenClause10setSafelenEPNS_4ExprE'/>
<fun r='_ZN5clang16OMPSafelenClauseC1EPNS_4ExprENS_14SourceLocationES3_S3_'/>
<fun r='_ZN5clang16OMPSafelenClauseC1Ev'/>
<fun r='_ZN5clang16OMPSafelenClause12setLParenLocENS_14SourceLocationE'/>
<fun r='_ZNK5clang16OMPSafelenClause12getLParenLocEv'/>
<fun r='_ZNK5clang16OMPSafelenClause10getSafelenEv'/>
<fun r='_ZN5clang16OMPSafelenClause8childrenEv'/>
<fun r='_ZNK5clang16OMPSafelenClause8childrenEv'/>
<fun r='_ZN5clang16OMPSafelenClause7classofEPKNS_9OMPClauseE'/>
