<dec f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='158' type='LatticeVal llvm::SparseSolver::getValueState(LatticeKey Key)'/>
<def f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='226' ll='241' type='LatticeVal llvm::SparseSolver::getValueState(LatticeKey Key)'/>
<use f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='302' u='c' c='_ZN4llvm12SparseSolver21getFeasibleSuccessorsERNS_11InstructionERNS_15SmallVectorImplIbEEb'/>
<use f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='341' u='c' c='_ZN4llvm12SparseSolver21getFeasibleSuccessorsERNS_11InstructionERNS_15SmallVectorImplIbEEb'/>
<use f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='412' u='c' c='_ZN4llvm12SparseSolver12visitPHINodeERNS_7PHINodeE'/>
<use f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='436' u='c' c='_ZN4llvm12SparseSolver12visitPHINodeERNS_7PHINodeE'/>
<doc f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='155'>/// getValueState - Return the LatticeVal object corresponding to the given
  /// value from the ValueState map. If the value is not in the map, its state
  /// is initialized.</doc>
<doc f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='222'>//===----------------------------------------------------------------------===//
//                          SparseSolver Implementation
//===----------------------------------------------------------------------===//</doc>
