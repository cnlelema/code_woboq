<dec f='llvm/llvm/include/llvm/Analysis/CallGraphSCCPass.h' l='104' type='void llvm::CallGraphSCC::ReplaceNode(llvm::CallGraphNode * Old, llvm::CallGraphNode * New)'/>
<doc f='llvm/llvm/include/llvm/Analysis/CallGraphSCCPass.h' l='102'>/// ReplaceNode - This informs the SCC and the pass manager that the specified
  /// Old node has been deleted, and New is to be used in its place.</doc>
<def f='llvm/llvm/lib/Analysis/CallGraphSCCPass.cpp' l='547' ll='560' type='void llvm::CallGraphSCC::ReplaceNode(llvm::CallGraphNode * Old, llvm::CallGraphNode * New)'/>
<doc f='llvm/llvm/lib/Analysis/CallGraphSCCPass.cpp' l='541'>//===----------------------------------------------------------------------===//
// CallGraphSCC Implementation
//===----------------------------------------------------------------------===//

/// This informs the SCC and the pass manager that the specified
/// Old node has been deleted, and New is to be used in its place.</doc>
<use f='llvm/llvm/lib/Transforms/IPO/ArgumentPromotion.cpp' l='1127' u='c' c='_ZN12_GLOBAL__N_112ArgPromotion8runOnSCCERN4llvm12CallGraphSCCE'/>
