<def f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='232' ll='345'/>
<size>384</size>
<doc f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='225'>/// Representation of the alloca slices.
///
/// This class represents the slices of an alloca which are formed by its
/// various uses. If a pointer escapes, we can&apos;t fully build a representation
/// for the slices used and we reflect that in this structure. The uses are
/// stored, sorted by increasing beginning offset and with unsplittable slices
/// starting at a particular offset before splittable slices.</doc>
<fun r='_ZN4llvm4sroa12AllocaSlicesC1ERKNS_10DataLayoutERNS_10AllocaInstE'/>
<fun r='_ZNK4llvm4sroa12AllocaSlices9isEscapedEv'/>
<fun r='_ZN4llvm4sroa12AllocaSlices10partitionsEv'/>
<fun r='_ZNK4llvm4sroa12AllocaSlices12getDeadUsersEv'/>
<fun r='_ZNK4llvm4sroa12AllocaSlices15getDeadOperandsEv'/>
<fun r='_ZNK4llvm4sroa12AllocaSlices5printERNS_11raw_ostreamE'/>
<fun r='_ZNK4llvm4sroa12AllocaSlices4dumpEv'/>
<mbr r='llvm::sroa::AllocaSlices::AI' o='0' t='llvm::AllocaInst &amp;'/>
<mbr r='llvm::sroa::AllocaSlices::PointerEscapingInstr' o='64' t='llvm::Instruction *'/>
<mbr r='llvm::sroa::AllocaSlices::Slices' o='128' t='SmallVector&lt;(anonymous namespace)::Slice, 8&gt;'/>
<mbr r='llvm::sroa::AllocaSlices::DeadUsers' o='1792' t='SmallVector&lt;llvm::Instruction *, 8&gt;'/>
<mbr r='llvm::sroa::AllocaSlices::DeadOperands' o='2432' t='SmallVector&lt;llvm::Use *, 8&gt;'/>
<fun r='_ZN4llvm4sroa12AllocaSlices10partitionsEv'/>
<fun r='_ZN4llvm4sroa12AllocaSlicesC1ERKNS_10DataLayoutERNS_10AllocaInstE'/>
<fun r='_ZNK4llvm4sroa12AllocaSlices5printERNS_11raw_ostreamE'/>
<fun r='_ZNK4llvm4sroa12AllocaSlices4dumpEv'/>
