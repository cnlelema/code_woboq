<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='743' ll='746' type='bool llvm::TargetInstrInfo::isProfitableToUnpredicate(llvm::MachineBasicBlock &amp; TMBB, llvm::MachineBasicBlock &amp; FMBB) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='732'>/// Return true if it&apos;s profitable to unpredicate
  /// one side of a &apos;diamond&apos;, i.e. two sides of if-else predicated on mutually
  /// exclusive predicates.
  /// e.g.
  ///   subeq  r0, r1, #1
  ///   addne  r0, r1, #1
  /// =&gt;
  ///   sub    r0, r1, #1
  ///   addne  r0, r1, #1
  ///
  /// This may be profitable is conditional instructions are always executed.</doc>
<use f='llvm/llvm/lib/CodeGen/IfConversion.cpp' l='1810' u='c' c='_ZN12_GLOBAL__N_111IfConverter22IfConvertDiamondCommonERNS0_6BBInfoES2_S2_jjbbbb'/>
