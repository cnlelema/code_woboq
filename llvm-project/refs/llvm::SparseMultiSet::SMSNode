<def f='llvm/llvm/include/llvm/ADT/SparseMultiSet.h' l='96' ll='118'/>
<doc f='llvm/llvm/include/llvm/ADT/SparseMultiSet.h' l='90'>/// The actual data that&apos;s stored, as a doubly-linked list implemented via
  /// indices into the DenseVector.  The doubly linked list is implemented
  /// circular in Prev indices, and INVALID-terminated in Next indices. This
  /// provides efficient access to list tails. These nodes can also be
  /// tombstones, in which case they are actually nodes in a single-linked
  /// freelist of recyclable slots.</doc>
<smbr r='llvm::SparseMultiSet::SMSNode::INVALID' t='const unsigned int'/>
<mbr r='llvm::SparseMultiSet::SMSNode::Data' t='ValueT'/>
<mbr r='llvm::SparseMultiSet::SMSNode::Prev' t='unsigned int'/>
<mbr r='llvm::SparseMultiSet::SMSNode::Next' t='unsigned int'/>
<fun r='_ZN4llvm14SparseMultiSet7SMSNodeC1ET_jj'/>
<fun r='_ZNK4llvm14SparseMultiSet7SMSNode6isTailEv'/>
<fun r='_ZNK4llvm14SparseMultiSet7SMSNode11isTombstoneEv'/>
<fun r='_ZNK4llvm14SparseMultiSet7SMSNode7isValidEv'/>
