<def f='llvm/llvm/unittests/ExecutionEngine/MCJIT/MCJITTestBase.h' l='234' ll='241' type='void llvm::TrivialModuleBuilder::createTwoModuleCase(std::unique_ptr&lt;Module&gt; &amp; A, llvm::Function *&amp; FA, std::unique_ptr&lt;Module&gt; &amp; B, llvm::Function *&amp; FB)'/>
<use f='llvm/llvm/unittests/ExecutionEngine/MCJIT/MCJITMultipleModuleTest.cpp' l='94' u='c' c='_ZN12_GLOBAL__N_144MCJITMultipleModuleTest_two_module_case_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/ExecutionEngine/MCJIT/MCJITMultipleModuleTest.cpp' l='114' u='c' c='_ZN12_GLOBAL__N_152MCJITMultipleModuleTest_two_module_reverse_case_Test8TestBodyEv'/>
<doc f='llvm/llvm/unittests/ExecutionEngine/MCJIT/MCJITTestBase.h' l='231'>// Module A { Function FA },
  // Populates Modules A and B:
  // Module B { Function FB }</doc>
