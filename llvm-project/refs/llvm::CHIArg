<def f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='142' ll='153'/>
<size>24</size>
<doc f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='132'>// CHI keeps information about values flowing out of a basic block.  It is
// similar to PHI but in the inverse graph, and used for outgoing values on each
// edge. For conciseness, it is computed only for instructions with multiple
// occurrences in the CFG because they are the only hoistable candidates.
//     A (CHI[{V, B, I1}, {V, C, I2}]
//  /     \
// /       \
// B(I1)  C (I2)
// The Value number for both I1 and I2 is V, the CHI node will save the
// instruction as well as the edge where the value is flowing to.</doc>
