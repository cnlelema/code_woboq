<def f='llvm/llvm/include/llvm/Support/GenericDomTree.h' l='551' ll='557' type='void llvm::DominatorTreeBase::deleteEdge(NodeT * From, NodeT * To)'/>
<doc f='llvm/llvm/include/llvm/Support/GenericDomTree.h' l='541'>/// Inform the dominator tree about a CFG edge deletion and update the tree.
  ///
  /// This function has to be called just after making the update on the actual
  /// CFG. An internal functions checks if the edge doesn&apos;t exist in the CFG in
  /// DEBUG mode. There cannot be any other updates that the
  /// dominator tree doesn&apos;t know about.
  ///
  /// Note that for postdominators it automatically takes care of deleting
  /// a reverse edge internally (so there&apos;s no need to swap the parameters).
  ///</doc>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='379' u='c' c='_ZN4llvm14DomTreeUpdater10deleteEdgeEPNS_10BasicBlockES2_'/>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='381' u='c' c='_ZN4llvm14DomTreeUpdater10deleteEdgeEPNS_10BasicBlockES2_'/>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='400' u='c' c='_ZN4llvm14DomTreeUpdater17deleteEdgeRelaxedEPNS_10BasicBlockES2_'/>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='402' u='c' c='_ZN4llvm14DomTreeUpdater17deleteEdgeRelaxedEPNS_10BasicBlockES2_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp' l='512' u='c' c='_ZL21unswitchTrivialBranchRN4llvm4LoopERNS_10BranchInstERNS_13DominatorTreeERNS_8LoopInfoEPNS_15ScalarEvolutionEPNS_16MemorySSAUpdaterE'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopRotationUtils.cpp' l='485' u='c' c='_ZN12_GLOBAL__N_110LoopRotate10rotateLoopEPN4llvm4LoopEb'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='395' u='c' c='_ZN54DominatorTree_DeletingEdgesIntroducesUnreachables_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='396' u='c' c='_ZN54DominatorTree_DeletingEdgesIntroducesUnreachables_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='488' u='c' c='_ZN54DominatorTree_DeletingEdgesIntroducesInfiniteLoop_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='490' u='c' c='_ZN54DominatorTree_DeletingEdgesIntroducesInfiniteLoop_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='577' u='c' c='_ZN55DominatorTree_DeletingEdgesIntroducesInfiniteLoop2_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='578' u='c' c='_ZN55DominatorTree_DeletingEdgesIntroducesInfiniteLoop2_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='861' u='c' c='_ZN34DominatorTree_DeleteReachable_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='863' u='c' c='_ZN34DominatorTree_DeleteReachable_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='887' u='c' c='_ZN36DominatorTree_DeleteUnreachable_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='889' u='c' c='_ZN36DominatorTree_DeleteUnreachable_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='920' u='c' c='_ZN31DominatorTree_InsertDelete_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='921' u='c' c='_ZN31DominatorTree_InsertDelete_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='958' u='c' c='_ZN41DominatorTree_InsertDeleteExhaustive_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeTest.cpp' l='959' u='c' c='_ZN41DominatorTree_InsertDeleteExhaustive_Test8TestBodyEv'/>
