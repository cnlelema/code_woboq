<dec f='llvm/llvm/include/llvm/IR/Value.h' l='523' type='const llvm::Value * llvm::Value::stripPointerCastsAndInvariantGroups() const'/>
<use f='llvm/llvm/include/llvm/IR/Value.h' l='526' u='c' c='_ZN4llvm5Value35stripPointerCastsAndInvariantGroupsEv'/>
<doc f='llvm/llvm/include/llvm/IR/Value.h' l='517'>/// Strip off pointer casts, all-zero GEPs, aliases and invariant group
  /// info.
  ///
  /// Returns the original uncasted value.  If this is called on a non-pointer
  /// value, it returns &apos;this&apos;. This function should be used only in
  /// Alias analysis.</doc>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='1068' u='c' c='_ZL24aliasSameBasePointerGEPsPKN4llvm11GEPOperatorENS_12LocationSizeES2_S3_RKNS_10DataLayoutE'/>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='1069' u='c' c='_ZL24aliasSameBasePointerGEPsPKN4llvm11GEPOperatorENS_12LocationSizeES2_S3_RKNS_10DataLayoutE'/>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='1364' u='c' c='_ZN4llvm13BasicAAResult8aliasGEPEPKNS_11GEPOperatorENS_12LocationSizeERKNS_9AAMDNodesEPKNS_5ValueES4_S7_SA_SA_RNS_11AAQueryInfoE'/>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='1365' u='c' c='_ZN4llvm13BasicAAResult8aliasGEPEPKNS_11GEPOperatorENS_12LocationSizeERKNS_9AAMDNodesEPKNS_5ValueES4_S7_SA_SA_RNS_11AAQueryInfoE'/>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='1723' u='c' c='_ZN4llvm13BasicAAResult10aliasCheckEPKNS_5ValueENS_12LocationSizeENS_9AAMDNodesES3_S4_S5_RNS_11AAQueryInfoES3_S3_'/>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='1724' u='c' c='_ZN4llvm13BasicAAResult10aliasCheckEPKNS_5ValueENS_12LocationSizeENS_9AAMDNodesES3_S4_S5_RNS_11AAQueryInfoES3_S3_'/>
<def f='llvm/llvm/lib/IR/Value.cpp' l='552' ll='555' type='const llvm::Value * llvm::Value::stripPointerCastsAndInvariantGroups() const'/>
