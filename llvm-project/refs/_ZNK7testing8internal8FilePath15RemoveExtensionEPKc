<dec f='llvm/llvm/utils/unittest/googletest/include/gtest/internal/gtest-filepath.h' l='138' type='testing::internal::FilePath testing::internal::FilePath::RemoveExtension(const char * extension) const'/>
<doc f='llvm/llvm/utils/unittest/googletest/include/gtest/internal/gtest-filepath.h' l='134'>// Returns a copy of the FilePath with the case-insensitive extension removed.
  // Example: FilePath(&quot;dir/file.exe&quot;).RemoveExtension(&quot;EXE&quot;) returns
  // FilePath(&quot;dir/file&quot;). If a case-insensitive extension is not
  // found, returns a copy of the original FilePath.</doc>
<def f='llvm/llvm/utils/unittest/googletest/src/gtest-filepath.cc' l='124' ll='131' type='testing::internal::FilePath testing::internal::FilePath::RemoveExtension(const char * extension) const'/>
<doc f='llvm/llvm/utils/unittest/googletest/src/gtest-filepath.cc' l='120'>// Returns a copy of the FilePath with the case-insensitive extension removed.
// Example: FilePath(&quot;dir/file.exe&quot;).RemoveExtension(&quot;EXE&quot;) returns
// FilePath(&quot;dir/file&quot;). If a case-insensitive extension is not
// found, returns a copy of the original FilePath.</doc>
