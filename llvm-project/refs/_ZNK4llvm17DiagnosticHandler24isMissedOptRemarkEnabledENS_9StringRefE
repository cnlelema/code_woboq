<dec f='llvm/llvm/include/llvm/IR/DiagnosticHandler.h' l='56' type='bool llvm::DiagnosticHandler::isMissedOptRemarkEnabled(llvm::StringRef PassName) const'/>
<use f='llvm/llvm/include/llvm/IR/DiagnosticHandler.h' l='64' u='c' c='_ZNK4llvm17DiagnosticHandler18isAnyRemarkEnabledENS_9StringRefE'/>
<doc f='llvm/llvm/include/llvm/IR/DiagnosticHandler.h' l='54'>/// Return true if missed optimization remarks are enabled, override
  /// to provide different implementation.</doc>
<use f='llvm/llvm/include/llvm/CodeGen/MachineOptimizationRemarkEmitter.h' l='103' u='c' c='_ZNK4llvm31MachineOptimizationRemarkMissed9isEnabledEv'/>
<ovr f='llvm/clang/lib/CodeGen/CodeGenAction.cpp' l='62' c='_ZNK5clang22ClangDiagnosticHandler24isMissedOptRemarkEnabledEN4llvm9StringRefE'/>
<def f='llvm/llvm/lib/IR/DiagnosticHandler.cpp' l='78' ll='81' type='bool llvm::DiagnosticHandler::isMissedOptRemarkEnabled(llvm::StringRef PassName) const'/>
<use f='llvm/llvm/lib/IR/DiagnosticInfo.cpp' l='284' u='c' c='_ZNK4llvm24OptimizationRemarkMissed9isEnabledEv'/>
<use f='llvm/llvm/lib/Transforms/IPO/Inliner.cpp' l='1009' u='c' c='_ZN4llvm11InlinerPass3runERNS_13LazyCallGraph3SCCERNS_15AnalysisManagerIS2_JRS1_EEES5_RNS_17CGSCCUpdateResultE'/>
<use f='llvm/llvm/lib/Transforms/IPO/PartialInlining.cpp' l='776' u='c' c='_ZN12_GLOBAL__N_118PartialInlinerImpl19shouldPartialInlineEN4llvm8CallSiteERNS0_14FunctionClonerENS1_14BlockFrequencyERNS1_25OptimizationRemarkEmitterE'/>
