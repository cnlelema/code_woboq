<dec f='llvm/llvm/utils/TableGen/CodeGenRegisters.h' l='388' type='Optional&lt;std::pair&lt;CodeGenRegisterClass *, CodeGenRegisterClass *&gt; &gt; llvm::CodeGenRegisterClass::getMatchingSubClassWithSubRegs(llvm::CodeGenRegBank &amp; RegBank, const llvm::CodeGenSubRegIndex * SubIdx) const'/>
<doc f='llvm/llvm/utils/TableGen/CodeGenRegisters.h' l='379'>/// Find largest subclass where all registers have SubIdx subregisters in
    /// SubRegClass and the largest subregister class that contains those
    /// subregisters without (as far as possible) also containing additional registers.
    ///
    /// This can be used to find a suitable pair of classes for subregister copies.
    /// \return std::pair&lt;SubClass, SubRegClass&gt; where SubClass is a SubClass is
    /// a class where every register has SubIdx and SubRegClass is a class where
    /// every register is covered by the SubIdx subregister of SubClass.</doc>
<def f='llvm/llvm/utils/TableGen/CodeGenRegisters.cpp' l='981' ll='1057' type='Optional&lt;std::pair&lt;CodeGenRegisterClass *, CodeGenRegisterClass *&gt; &gt; llvm::CodeGenRegisterClass::getMatchingSubClassWithSubRegs(llvm::CodeGenRegBank &amp; RegBank, const llvm::CodeGenSubRegIndex * SubIdx) const'/>
<use f='llvm/llvm/utils/TableGen/GlobalISelEmitter.cpp' l='3745' u='c' c='_ZN12_GLOBAL__N_117GlobalISelEmitter26importExplicitUseRenderersESt14_List_iteratorISt10unique_ptrINS_11MatchActionESt14default_deleteIS3_EEERNS_11Rul12205898'/>
<use f='llvm/llvm/utils/TableGen/GlobalISelEmitter.cpp' l='4060' u='c' c='_ZN12_GLOBAL__N_117GlobalISelEmitter12runOnPatternERKN4llvm14PatternToMatchE'/>
