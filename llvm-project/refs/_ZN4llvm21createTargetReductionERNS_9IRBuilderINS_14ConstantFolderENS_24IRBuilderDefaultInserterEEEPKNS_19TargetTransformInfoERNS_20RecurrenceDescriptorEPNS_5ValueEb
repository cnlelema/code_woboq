<dec f='llvm/llvm/include/llvm/Transforms/Utils/LoopUtils.h' l='325' type='llvm::Value * llvm::createTargetReduction(IRBuilder&lt;&gt; &amp; B, const llvm::TargetTransformInfo * TTI, llvm::RecurrenceDescriptor &amp; Desc, llvm::Value * Src, bool NoNaN = false)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/LoopUtils.h' l='321'>/// Create a generic target reduction using a recurrence descriptor \p Desc
/// The target is queried to determine if intrinsics or shuffle sequences are
/// required to implement the reduction.
/// Fast-math-flags are propagated using the RecurrenceDescriptor.</doc>
<def f='llvm/llvm/lib/Transforms/Utils/LoopUtils.cpp' l='870' ll='913' type='llvm::Value * llvm::createTargetReduction(IRBuilder&lt;&gt; &amp; B, const llvm::TargetTransformInfo * TTI, llvm::RecurrenceDescriptor &amp; Desc, llvm::Value * Src, bool NoNaN = false)'/>
<doc f='llvm/llvm/lib/Transforms/Utils/LoopUtils.cpp' l='869'>/// Create a vector reduction using a given recurrence descriptor.</doc>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='3628' u='c' c='_ZN4llvm19InnerLoopVectorizer12fixReductionEPNS_7PHINodeE'/>
