<def f='llvm/llvm/lib/TableGen/TGLexer.h' l='73' ll='369'/>
<size>200</size>
<doc f='llvm/llvm/lib/TableGen/TGLexer.h' l='72'>/// TGLexer - TableGen Lexer class.</doc>
<mbr r='llvm::TGLexer::SrcMgr' o='0' t='llvm::SourceMgr &amp;'/>
<mbr r='llvm::TGLexer::CurPtr' o='64' t='const char *'/>
<mbr r='llvm::TGLexer::CurBuf' o='128' t='llvm::StringRef'/>
<mbr r='llvm::TGLexer::TokStart' o='256' t='const char *'/>
<mbr r='llvm::TGLexer::CurCode' o='320' t='tgtok::TokKind'/>
<mbr r='llvm::TGLexer::CurStrVal' o='384' t='std::string'/>
<mbr r='llvm::TGLexer::CurIntVal' o='640' t='int64_t'/>
<mbr r='llvm::TGLexer::CurBuffer' o='704' t='unsigned int'/>
<mbr r='llvm::TGLexer::Dependencies' o='768' t='DependenciesMapTy'/>
<fun r='_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE'/>
<fun r='_ZN4llvm7TGLexer3LexEv'/>
<fun r='_ZNK4llvm7TGLexer15getDependenciesEv'/>
<fun r='_ZNK4llvm7TGLexer7getCodeEv'/>
<fun r='_ZNK4llvm7TGLexer12getCurStrValEv'/>
<fun r='_ZNK4llvm7TGLexer12getCurIntValEv'/>
<fun r='_ZNK4llvm7TGLexer18getCurBinaryIntValEv'/>
<fun r='_ZNK4llvm7TGLexer6getLocEv'/>
<fun r='_ZN4llvm7TGLexer8LexTokenEb'/>
<fun r='_ZN4llvm7TGLexer11ReturnErrorENS_5SMLocERKNS_5TwineE'/>
<fun r='_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE'/>
<fun r='_ZN4llvm7TGLexer11getNextCharEv'/>
<fun r='_ZNK4llvm7TGLexer12peekNextCharEi'/>
<fun r='_ZN4llvm7TGLexer15SkipBCPLCommentEv'/>
<fun r='_ZN4llvm7TGLexer12SkipCCommentEv'/>
<fun r='_ZN4llvm7TGLexer13LexIdentifierEv'/>
<fun r='_ZN4llvm7TGLexer10LexIncludeEv'/>
<fun r='_ZN4llvm7TGLexer9LexStringEv'/>
<fun r='_ZN4llvm7TGLexer10LexVarNameEv'/>
<fun r='_ZN4llvm7TGLexer9LexNumberEv'/>
<fun r='_ZN4llvm7TGLexer10LexBracketEv'/>
<fun r='_ZN4llvm7TGLexer10LexExclaimEv'/>
<fun r='_ZN4llvm7TGLexer10processEOFEv'/>
<mbr r='llvm::TGLexer::DefinedMacros' o='1152' t='StringSet&lt;&gt;'/>
<mbr r='llvm::TGLexer::PrepIncludeStack' o='1408' t='std::vector&lt;std::unique_ptr&lt;std::vector&lt;PreprocessorControlDesc&gt; &gt; &gt;'/>
<fun r='_ZN4llvm7TGLexer15prepExitIncludeEb'/>
<fun r='_ZNK4llvm7TGLexer15prepIsDirectiveEv'/>
<fun r='_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE'/>
<fun r='_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb'/>
<fun r='_ZN4llvm7TGLexer14prepSkipRegionEb'/>
<fun r='_ZN4llvm7TGLexer16prepLexMacroNameEv'/>
<fun r='_ZN4llvm7TGLexer17prepSkipLineBeginEv'/>
<fun r='_ZN4llvm7TGLexer20prepSkipDirectiveEndEv'/>
<fun r='_ZN4llvm7TGLexer17prepSkipToLineEndEv'/>
<fun r='_ZN4llvm7TGLexer23prepIsProcessingEnabledEv'/>
<fun r='_ZN4llvm7TGLexer32prepReportPreprocessorStackErrorEv'/>
