<dec f='llvm/llvm/lib/Target/AMDGPU/AMDGPUSubtarget.h' l='98' type='std::pair&lt;unsigned int, unsigned int&gt; llvm::AMDGPUSubtarget::getFlatWorkGroupSizes(const llvm::Function &amp; F) const'/>
<doc f='llvm/llvm/lib/Target/AMDGPU/AMDGPUSubtarget.h' l='91'>/// \returns Subtarget&apos;s default pair of minimum/maximum flat work group sizes
  /// for function \p F, or minimum/maximum flat work group sizes explicitly
  /// requested using &quot;amdgpu-flat-work-group-size&quot; attribute attached to
  /// function \p F.
  ///
  /// \returns Subtarget&apos;s default values if explicitly requested values cannot
  /// be converted to integer, or violate subtarget&apos;s specifications.</doc>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUPromoteAlloca.cpp' l='754' u='c' c='_ZN12_GLOBAL__N_119AMDGPUPromoteAlloca12handleAllocaERN4llvm10AllocaInstEb'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUSubtarget.cpp' l='289' u='c' c='_ZNK4llvm15AMDGPUSubtarget31getMaxLocalMemSizeWithWaveCountEjRKNS_8FunctionE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUSubtarget.cpp' l='299' u='c' c='_ZNK4llvm15AMDGPUSubtarget28getOccupancyWithLocalMemSizeEjRKNS_8FunctionE'/>
<def f='llvm/llvm/lib/Target/AMDGPU/AMDGPUSubtarget.cpp' l='337' ll='359' type='std::pair&lt;unsigned int, unsigned int&gt; llvm::AMDGPUSubtarget::getFlatWorkGroupSizes(const llvm::Function &amp; F) const'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUSubtarget.cpp' l='367' u='c' c='_ZNK4llvm15AMDGPUSubtarget13getWavesPerEUERKNS_8FunctionE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUSubtarget.cpp' l='409' u='c' c='_ZNK4llvm15AMDGPUSubtarget20makeLIDRangeMetadataEPNS_11InstructionE'/>
