<use f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='179' u='w' c='_ZN4llvm16MemoryDepCheckerC1ERNS_25PredicatedScalarEvolutionEPKNS_4LoopE'/>
<use f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='223' u='r' c='_ZNK4llvm16MemoryDepChecker27shouldRetryWithRuntimeCheckEv'/>
<dec f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='287' type='bool'/>
<offset>1728</offset>
<doc f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='285'>/// If we see a non-constant dependence distance we can still try to
  /// vectorize this loop with runtime checks.</doc>
<use f='llvm/llvm/lib/Analysis/LoopAccessAnalysis.cpp' l='1493' u='w' c='_ZN4llvm16MemoryDepChecker11isDependentERKNS_14PointerIntPairIPNS_5ValueELj1EbNS_21PointerLikeTypeTraitsIS3_EENS_18PointerIntPairInfoIS3_Lj1ES5_EEEEjS12820736'/>
