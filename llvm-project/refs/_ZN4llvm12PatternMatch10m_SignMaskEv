<def f='llvm/llvm/include/llvm/IR/PatternMatch.h' l='408' ll='410' type='cst_pred_ty&lt;llvm::PatternMatch::is_sign_mask&gt; llvm::PatternMatch::m_SignMask()'/>
<doc f='llvm/llvm/include/llvm/IR/PatternMatch.h' l='406'>/// Match an integer or vector with only the sign bit(s) set.
/// For vectors, this includes constants with undefined elements.</doc>
<use f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='611' u='c' c='_ZL15SimplifyAddInstPN4llvm5ValueES1_bbRKNS_13SimplifyQueryEj'/>
<use f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='612' u='c' c='_ZL15SimplifyAddInstPN4llvm5ValueES1_bbRKNS_13SimplifyQueryEj'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='1871' u='c' c='_ZL22isKnownToBeAPowerOfTwoPKN4llvm5ValueEbjRKN12_GLOBAL__N_15QueryE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='1027' u='c' c='_ZN4llvm12InstCombiner9visitSDivERNS_14BinaryOperatorE'/>
