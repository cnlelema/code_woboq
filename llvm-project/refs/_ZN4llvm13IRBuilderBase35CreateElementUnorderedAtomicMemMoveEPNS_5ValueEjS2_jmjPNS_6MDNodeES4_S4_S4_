<def f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='522' ll='530' type='llvm::CallInst * llvm::IRBuilderBase::CreateElementUnorderedAtomicMemMove(llvm::Value * Dst, unsigned int DstAlign, llvm::Value * Src, unsigned int SrcAlign, uint64_t Size, uint32_t ElementSize, llvm::MDNode * TBAATag = nullptr, llvm::MDNode * TBAAStructTag = nullptr, llvm::MDNode * ScopeTag = nullptr, llvm::MDNode * NoAliasTag = nullptr)'/>
<doc f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='513'>/// \brief Create and insert an element unordered-atomic memmove between the
  /// specified pointers.
  ///
  /// DstAlign/SrcAlign are the alignments of the Dst/Src pointers,
  /// respectively.
  ///
  /// If the pointers aren&apos;t i8*, they will be converted.  If a TBAA tag is
  /// specified, it will be added to the instruction. Likewise with alias.scope
  /// and noalias tags.</doc>
