<dec f='llvm/clang/include/clang/Sema/Sema.h' l='6582' type='bool clang::Sema::CheckDependentFunctionTemplateSpecialization(clang::FunctionDecl * FD, const clang::TemplateArgumentListInfo &amp; ExplicitTemplateArgs, clang::LookupResult &amp; Previous)'/>
<def f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='8172' ll='8212' type='bool clang::Sema::CheckDependentFunctionTemplateSpecialization(clang::FunctionDecl * FD, const clang::TemplateArgumentListInfo &amp; ExplicitTemplateArgs, clang::LookupResult &amp; Previous)'/>
<doc f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='8157'>/// Perform semantic analysis for the given dependent function
/// template specialization.
///
/// The only possible way to get a dependent function template specialization
/// is with a friend declaration, like so:
///
/// \code
///   template \&lt;class T&gt; void foo(T);
///   template \&lt;class T&gt; class A {
///     friend void foo&lt;&gt;(T);
///   };
/// \endcode
///
/// There really isn&apos;t any useful analysis we can do here, so we
/// just store the information.</doc>
