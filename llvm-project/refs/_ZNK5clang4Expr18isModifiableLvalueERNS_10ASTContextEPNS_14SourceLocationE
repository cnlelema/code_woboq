<dec f='llvm/clang/include/clang/AST/Expr.h' l='307' type='clang::Expr::isModifiableLvalueResult clang::Expr::isModifiableLvalue(clang::ASTContext &amp; Ctx, clang::SourceLocation * Loc = nullptr) const'/>
<doc f='llvm/clang/include/clang/AST/Expr.h' l='297'>/// isModifiableLvalue - C99 6.3.2.1: an lvalue that does not have array type,
  /// does not have an incomplete type, does not have a const-qualified type,
  /// and if it is a structure or union, does not have any member (including,
  /// recursively, any member or element of all contained aggregates or unions)
  /// with a const-qualified type.
  ///
  /// \param Loc [in,out] - A source location which *may* be filled
  /// in with the location of the expression making this a
  /// non-modifiable lvalue, if specified.</doc>
<def f='llvm/clang/lib/AST/ExprClassification.cpp' l='671' ll='707' type='Expr::isModifiableLvalueResult clang::Expr::isModifiableLvalue(clang::ASTContext &amp; Ctx, clang::SourceLocation * Loc = nullptr) const'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='11535' u='c' c='_ZL24CheckForModifiableLvaluePN5clang4ExprENS_14SourceLocationERNS_4SemaE'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='17036' u='c' c='_ZN5clang4Sema31DiagnoseEqualityWithExtraParensEPNS_9ParenExprE'/>
<use f='llvm/clang/lib/Sema/SemaStmtAsm.cpp' l='301' u='c' c='_ZN5clang4Sema15ActOnGCCAsmStmtENS_14SourceLocationEbbjjPPNS_14IdentifierInfoEN4llvm15MutableArrayRefIPNS_4ExprEEES9_S8_S9_jS1_'/>
