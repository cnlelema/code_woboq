<dec f='llvm/llvm/lib/Target/X86/X86InstrInfo.h' l='235' type='llvm::MachineInstr * llvm::X86InstrInfo::convertToThreeAddress(MachineFunction::iterator &amp; MFI, llvm::MachineInstr &amp; MI, llvm::LiveVariables * LV) const'/>
<doc f='llvm/llvm/lib/Target/X86/X86InstrInfo.h' l='225'>/// convertToThreeAddress - This method must be implemented by targets that
  /// set the M_CONVERTIBLE_TO_3_ADDR flag.  When this flag is set, the target
  /// may be able to convert a two-address instruction into a true
  /// three-address instruction on demand.  This allows the X86 target (for
  /// example) to convert ADD and SHL instructions into LEA instructions if they
  /// would require register copies due to two-addressness.
  ///
  /// This method returns a null pointer if the transformation cannot be
  /// performed, otherwise it returns the new instruction.
  ///</doc>
<use f='llvm/llvm/lib/Target/X86/X86FixupLEAs.cpp' l='180' u='c' c='_ZNK12_GLOBAL__N_112FixupLEAPass18postRAConvertToLEAERN4llvm17MachineBasicBlockERNS1_26MachineInstrBundleIteratorINS1_12MachineInstrELb0EEE'/>
<def f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='842' ll='1206' type='llvm::MachineInstr * llvm::X86InstrInfo::convertToThreeAddress(MachineFunction::iterator &amp; MFI, llvm::MachineInstr &amp; MI, llvm::LiveVariables * LV) const'/>
<doc f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='832'>/// This method must be implemented by targets that
/// set the M_CONVERTIBLE_TO_3_ADDR flag.  When this flag is set, the target
/// may be able to convert a two-address instruction into a true
/// three-address instruction on demand.  This allows the X86 target (for
/// example) to convert ADD and SHL instructions into LEA instructions if they
/// would require register copies due to two-addressness.
///
/// This method returns a null pointer if the transformation cannot be
/// performed, otherwise it returns the new instruction.
///</doc>
