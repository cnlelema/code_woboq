<dec f='llvm/llvm/include/llvm/ADT/APFloat.h' l='282' type='llvm::APFloatBase::opStatus llvm::detail::IEEEFloat::convertFromSignExtendedInteger(const integerPart * , unsigned int , bool , llvm::APFloatBase::roundingMode )'/>
<use f='llvm/llvm/include/llvm/ADT/APFloat.h' l='1084' u='c' c='_ZN4llvm7APFloat30convertFromSignExtendedIntegerEPKmjbNS_11APFloatBase12roundingModeE'/>
<def f='llvm/llvm/lib/Support/APFloat.cpp' l='2227' ll='2250' type='IEEEFloat::opStatus llvm::detail::IEEEFloat::convertFromSignExtendedInteger(const integerPart * src, unsigned int srcCount, bool isSigned, llvm::APFloatBase::roundingMode rounding_mode)'/>
<doc f='llvm/llvm/lib/Support/APFloat.cpp' l='2224'>/* Convert a two&apos;s complement integer SRC to a floating point number,
   rounding according to ROUNDING_MODE.  ISSIGNED is true if the
   integer is signed, in which case it must be sign-extended.  */</doc>
