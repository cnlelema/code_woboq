<def f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='756' ll='766' type='llvm::LegalizeRuleSet &amp; llvm::LegalizeRuleSet::maxScalarIf(LegalityPredicate Predicate, unsigned int TypeIdx, const llvm::LLT &amp; Ty)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='753'>/// Conditionally limit the maximum size of the scalar.
  /// For example, when the maximum size of one type depends on the size of
  /// another such as extracting N bits from an M bit container.</doc>
<use f='llvm/llvm/lib/Target/AArch64/AArch64LegalizerInfo.cpp' l='177' u='c' c='_ZN4llvm20AArch64LegalizerInfoC1ERKNS_16AArch64SubtargetE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64LegalizerInfo.cpp' l='176' u='c' c='_ZN4llvm20AArch64LegalizerInfoC1ERKNS_16AArch64SubtargetE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64LegalizerInfo.cpp' l='197' u='c' c='_ZN4llvm20AArch64LegalizerInfoC1ERKNS_16AArch64SubtargetE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64LegalizerInfo.cpp' l='196' u='c' c='_ZN4llvm20AArch64LegalizerInfoC1ERKNS_16AArch64SubtargetE'/>
