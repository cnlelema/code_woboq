<def f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3708' ll='3710' type='bool llvm::TargetLowering::ExpandInlineAsm(llvm::CallInst * ) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3700'>//===--------------------------------------------------------------------===//
  // Inline Asm Support hooks
  //

  /// This hook allows the target to expand an inline asm call to be explicit
  /// llvm code if it wants to.  This is useful for turning simple inline asms
  /// into LLVM intrinsics, which gives the compiler more information about the
  /// behavior of the code.</doc>
<use f='llvm/llvm/lib/CodeGen/CodeGenPrepare.cpp' l='1778' u='c' c='_ZN12_GLOBAL__N_114CodeGenPrepare16optimizeCallInstEPN4llvm8CallInstERb'/>
<ovr f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='13894' c='_ZNK4llvm17ARMTargetLowering15ExpandInlineAsmEPNS_8CallInstE'/>
<ovr f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='43816' c='_ZNK4llvm17X86TargetLowering15ExpandInlineAsmEPNS_8CallInstE'/>
