<dec f='llvm/clang/include/clang-c/Index.h' l='3548' type='long long clang_Cursor_getTemplateArgumentValue(CXCursor C, unsigned int I)'/>
<doc f='llvm/clang/include/clang-c/Index.h' l='3531'>/**
 * Retrieve the value of an Integral TemplateArgument (of a function
 *  decl representing a template specialization) as a signed long long.
 *
 * It is undefined to call this function on a CXCursor that does not represent a
 * FunctionDecl or whose I&apos;th template argument is not an integral value.
 *
 * For example, for the following declaration and specialization:
 *   template &lt;typename T, int kInt, bool kBool&gt;
 *   void foo() { ... }
 *
 *   template &lt;&gt;
 *   void foo&lt;float, -7, true&gt;();
 *
 * If called with I = 1 or 2, -7 or true will be returned, respectively.
 * For I == 0, this function&apos;s behavior is undefined.
 */</doc>
<use f='llvm/clang/tools/c-index-test/c-index-test.c' l='1021' u='c' c='PrintCursor'/>
<def f='llvm/clang/tools/libclang/CXCursor.cpp' l='1318' ll='1332' type='long long clang_Cursor_getTemplateArgumentValue(CXCursor C, unsigned int I)'/>
