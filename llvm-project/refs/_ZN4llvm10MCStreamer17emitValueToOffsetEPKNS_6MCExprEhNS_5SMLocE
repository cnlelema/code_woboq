<dec f='llvm/llvm/include/llvm/MC/MCStreamer.h' l='835' type='void llvm::MCStreamer::emitValueToOffset(const llvm::MCExpr * Offset, unsigned char Value, llvm::SMLoc Loc)'/>
<doc f='llvm/llvm/include/llvm/MC/MCStreamer.h' l='827'>/// Emit some number of copies of \p Value until the byte offset \p
  /// Offset is reached.
  ///
  /// This is used to implement assembler directives such as .org.
  ///
  /// \param Offset - The offset to reach. This may be an expression, but the
  /// expression must be associated with the current section.
  /// \param Value - The value to use when filling bytes.</doc>
<ovr f='llvm/llvm/lib/MC/MCAsmStreamer.cpp' l='1140' c='_ZN12_GLOBAL__N_113MCAsmStreamer17emitValueToOffsetEPKN4llvm6MCExprEhNS1_5SMLocE'/>
<ovr f='llvm/llvm/lib/MC/MCObjectStreamer.cpp' l='551' c='_ZN4llvm16MCObjectStreamer17emitValueToOffsetEPKNS_6MCExprEhNS_5SMLocE'/>
<use f='llvm/llvm/lib/MC/MCParser/AsmParser.cpp' l='3243' u='c' c='_ZN12_GLOBAL__N_19AsmParser17parseDirectiveOrgEv'/>
<use f='llvm/llvm/lib/MC/MCParser/AsmParser.cpp' l='6030' u='c' c='_ZN4llvm13MCParserUtils25parseAssignmentExpressionENS_9StringRefEbRNS_11MCAsmParserERPNS_8MCSymbolERPKNS_6MCExprE'/>
<def f='llvm/llvm/lib/MC/MCStreamer.cpp' l='1144' ll='1145' type='void llvm::MCStreamer::emitValueToOffset(const llvm::MCExpr * Offset, unsigned char Value, llvm::SMLoc Loc)'/>
