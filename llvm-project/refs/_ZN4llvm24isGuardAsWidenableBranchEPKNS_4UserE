<dec f='llvm/llvm/include/llvm/Analysis/GuardUtils.h' l='27' type='bool llvm::isGuardAsWidenableBranch(const llvm::User * U)'/>
<doc f='llvm/llvm/include/llvm/Analysis/GuardUtils.h' l='25'>/// Returns true iff \p U has semantics of a guard expressed in a form of a
/// widenable conditional branch to deopt block.</doc>
<def f='llvm/llvm/lib/Analysis/GuardUtils.cpp' l='22' ll='36' type='bool llvm::isGuardAsWidenableBranch(const llvm::User * U)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GuardWidening.cpp' l='100' u='c' c='_ZN12_GLOBAL__N_1L12getConditionEPN4llvm11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GuardWidening.cpp' l='277' u='c' c='_ZN12_GLOBAL__N_117GuardWideningImpl10widenGuardEPN4llvm11InstructionEPNS1_5ValueEb'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GuardWidening.cpp' l='304' u='c' c='_ZL27isSupportedGuardInstructionPKN4llvm11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GuardWidening.cpp' l='480' u='c' c='_ZN12_GLOBAL__N_117GuardWideningImpl20computeWideningScoreEPN4llvm11InstructionES3_b'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopPredication.cpp' l='812' u='c' c='_ZN12_GLOBAL__N_115LoopPredication35widenWidenableBranchGuardConditionsEPN4llvm10BranchInstERNS1_12SCEVExpanderE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopPredication.cpp' l='835' u='c' c='_ZN12_GLOBAL__N_115LoopPredication35widenWidenableBranchGuardConditionsEPN4llvm10BranchInstERNS1_12SCEVExpanderE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopPredication.cpp' l='1011' u='c' c='_ZN12_GLOBAL__N_115LoopPredication9runOnLoopEPN4llvm4LoopE'/>
