<dec f='llvm/clang/include/clang/Tooling/Refactoring/AtomicChange.h' l='147' type='bool'/>
<use f='llvm/clang/lib/Tooling/Refactoring/AtomicChange.cpp' l='320' u='r' c='_ZN5clang7tooling18applyAtomicChangesEN4llvm9StringRefES2_NS1_8ArrayRefINS0_12AtomicChangeEEERKNS0_16ApplyChangesSpecE'/>
<offset>0</offset>
<doc f='llvm/clang/include/clang/Tooling/Refactoring/AtomicChange.h' l='144'>// If true, cleans up redundant/erroneous code around changed code with
  // clang-format&apos;s cleanup functionality, e.g. redundant commas around deleted
  // parameter or empty namespaces introduced by deletions.</doc>
<use f='llvm/clang/tools/clang-refactor/ClangRefactor.cpp' l='483' u='w' c='_ZN12_GLOBAL__N_117ClangRefactorTool18applySourceChangesEv'/>
<use f='llvm/clang/tools/clang-refactor/TestSupport.cpp' l='90' u='w' c='_ZN5clang8refactor12_GLOBAL__N_121printRewrittenSourcesERKSt6vectorINS_7tooling12AtomicChangeESaIS4_EERN4llvm11raw_ostreamE'/>
<use f='llvm/clang/unittests/Tooling/RefactoringTest.cpp' l='1300' u='w' c='_ZN5clang7tooling22ApplyAtomicChangesTestC1Ev'/>
<use f='llvm/clang/unittests/Tooling/RefactoringTest.cpp' l='1673' u='w' c='_ZN5clang7tooling42ApplyAtomicChangesTest_DisableCleanup_Test8TestBodyEv'/>
