<dec f='llvm/llvm/include/llvm/Transforms/Scalar/JumpThreading.h' l='152' type='llvm::BasicBlock * llvm::JumpThreadingPass::SplitBlockPreds(llvm::BasicBlock * BB, ArrayRef&lt;llvm::BasicBlock *&gt; Preds, const char * Suffix)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='1446' u='c' c='_ZN4llvm17JumpThreadingPass30SimplifyPartiallyRedundantLoadEPNS_8LoadInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='1949' u='c' c='_ZN4llvm17JumpThreadingPass10ThreadEdgeEPNS_10BasicBlockERKNS_15SmallVectorImplIS2_EES2_'/>
<def f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2081' ll='2120' type='llvm::BasicBlock * llvm::JumpThreadingPass::SplitBlockPreds(llvm::BasicBlock * BB, ArrayRef&lt;llvm::BasicBlock *&gt; Preds, const char * Suffix)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2270' u='c' c='_ZN4llvm17JumpThreadingPass32DuplicateCondBranchOnPHIIntoPredEPNS_10BasicBlockERKNS_15SmallVectorImplIS2_EE'/>
<doc f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2078'>/// Create a new basic block that will be the predecessor of BB and successor of
/// all blocks in Preds. When profile data is available, update the frequency of
/// this new block.</doc>
