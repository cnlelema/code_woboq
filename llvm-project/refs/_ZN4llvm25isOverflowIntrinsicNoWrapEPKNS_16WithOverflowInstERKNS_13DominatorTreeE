<dec f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='472' type='bool llvm::isOverflowIntrinsicNoWrap(const llvm::WithOverflowInst * WO, const llvm::DominatorTree &amp; DT)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='469'>/// Returns true if the arithmetic part of the \p WO &apos;s result is
  /// used only along the paths control dependent on the computation
  /// not overflowing, \p WO being an &lt;op&gt;.with.overflow intrinsic.</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='4553' u='c' c='_ZL13MatchBinaryOpPN4llvm5ValueERNS_13DominatorTreeE'/>
<def f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4320' ll='4368' type='bool llvm::isOverflowIntrinsicNoWrap(const llvm::WithOverflowInst * WO, const llvm::DominatorTree &amp; DT)'/>
