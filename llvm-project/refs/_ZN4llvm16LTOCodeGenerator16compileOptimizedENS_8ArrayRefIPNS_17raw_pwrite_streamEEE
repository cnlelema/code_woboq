<dec f='llvm/llvm/include/llvm/LTO/legacy/LTOCodeGenerator.h' l='178' type='bool llvm::LTOCodeGenerator::compileOptimized(ArrayRef&lt;llvm::raw_pwrite_stream *&gt; Out)'/>
<use f='llvm/llvm/lib/LTO/LTOCodeGenerator.cpp' l='268' u='c' c='_ZN4llvm16LTOCodeGenerator22compileOptimizedToFileEPPKc'/>
<def f='llvm/llvm/lib/LTO/LTOCodeGenerator.cpp' l='573' ll='613' type='bool llvm::LTOCodeGenerator::compileOptimized(ArrayRef&lt;llvm::raw_pwrite_stream *&gt; Out)'/>
<doc f='llvm/llvm/include/llvm/LTO/legacy/LTOCodeGenerator.h' l='171'>/// Compile the merged optimized module into out.size() output files each
  /// representing a linkable partition of the module. If out contains more
  /// than one element, code generation is done in parallel with out.size()
  /// threads.  Output files will be written to members of out. Returns true on
  /// success.
  ///
  /// Calls \a verifyMergedModuleOnce().</doc>
<use f='llvm/llvm/tools/llvm-lto/llvm-lto.cpp' l='1029' u='c' c='main'/>
