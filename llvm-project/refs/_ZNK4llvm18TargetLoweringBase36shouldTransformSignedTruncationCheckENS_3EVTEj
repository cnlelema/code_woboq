<def f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='589' ll='593' type='bool llvm::TargetLoweringBase::shouldTransformSignedTruncationCheck(llvm::EVT XVT, unsigned int KeptBits) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='582'>/// Should we tranform the IR-optimal check for whether given truncation
  /// down into KeptBits would be truncating or not:
  ///   (add %x, (1 &lt;&lt; (KeptBits-1))) srccond (1 &lt;&lt; KeptBits)
  /// Into it&apos;s more traditional form:
  ///   ((%x &lt;&lt; C) a&gt;&gt; C) dstcond %x
  /// Return true if we should transform.
  /// Return false if there is no preference.</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp' l='2594' u='c' c='_ZNK4llvm14TargetLowering36optimizeSetCCOfSignedTruncationCheckENS_3EVTENS_7SDValueES2_NS_3ISD8CondCodeERNS0_15DAGCombinerInfoERKNS_5SDLocE'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.h' l='483' c='_ZNK4llvm21AArch64TargetLowering36shouldTransformSignedTruncationCheckENS_3EVTEj'/>
<ovr f='llvm/llvm/lib/Target/X86/X86ISelLowering.h' l='850' c='_ZNK4llvm17X86TargetLowering36shouldTransformSignedTruncationCheckENS_3EVTEj'/>
