<dec f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='584' type='void clang::CodeGen::CodeGenFunction::FinallyInfo::enter(clang::CodeGen::CodeGenFunction &amp; CGF, const clang::Stmt * Finally, llvm::FunctionCallee beginCatchFn, llvm::FunctionCallee endCatchFn, llvm::FunctionCallee rethrowFn)'/>
<def f='llvm/clang/lib/CodeGen/CGException.cpp' l='1372' ll='1423' type='void clang::CodeGen::CodeGenFunction::FinallyInfo::enter(clang::CodeGen::CodeGenFunction &amp; CGF, const clang::Stmt * body, llvm::FunctionCallee beginCatchFn, llvm::FunctionCallee endCatchFn, llvm::FunctionCallee rethrowFn)'/>
<doc f='llvm/clang/lib/CodeGen/CGException.cpp' l='1369'>/// Enters a finally block for an implementation using zero-cost
/// exceptions.  This is mostly general, but hard-codes some
/// language/ABI-specific behavior in the catch-all sections.</doc>
<use f='llvm/clang/lib/CodeGen/CGObjCRuntime.cpp' l='158' u='c' c='_ZN5clang7CodeGen13CGObjCRuntime16EmitTryCatchStmtERNS0_15CodeGenFunctionERKNS_13ObjCAtTryStmtEN4llvm14FunctionCalleeES8_S8_'/>
