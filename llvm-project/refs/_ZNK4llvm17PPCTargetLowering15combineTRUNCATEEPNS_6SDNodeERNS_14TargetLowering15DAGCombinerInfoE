<dec f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.h' l='1146' type='llvm::SDValue llvm::PPCTargetLowering::combineTRUNCATE(llvm::SDNode * N, llvm::TargetLowering::DAGCombinerInfo &amp; DCI) const'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='13076' u='c' c='_ZNK4llvm17PPCTargetLowering17PerformDAGCombineEPNS_6SDNodeERNS_14TargetLowering15DAGCombinerInfoE'/>
<def f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='14934' ll='14975' type='llvm::SDValue llvm::PPCTargetLowering::combineTRUNCATE(llvm::SDNode * N, llvm::TargetLowering::DAGCombinerInfo &amp; DCI) const'/>
<doc f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='14925'>// Detect TRUNCATE operations on bitcasts of float128 values.
// What we are looking for here is the situtation where we extract a subset
// of bits from a 128 bit float.
// This can be of two forms:
// 1) BITCAST of f128 feeding TRUNCATE
// 2) BITCAST of f128 feeding SRL (a shift) feeding TRUNCATE
// The reason this is required is because we do not have a legal i128 type
// and so we want to prevent having to store the f128 and then reload part
// of it.</doc>
