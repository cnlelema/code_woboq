<dec f='llvm/llvm/include/llvm/MC/MCRegisterInfo.h' l='369' type='unsigned int llvm::MCRegisterInfo::getSubRegIdxOffset(unsigned int Idx) const'/>
<doc f='llvm/llvm/include/llvm/MC/MCRegisterInfo.h' l='366'>/// Get the offset of the bit range covered by a sub-register index.
  /// If an Offset doesn&apos;t make sense (the index isn&apos;t continuous, or is used to
  /// access sub-registers at different offsets), return -1.</doc>
<use f='llvm/llvm/lib/CodeGen/AsmPrinter/DwarfExpression.cpp' l='123' u='c' c='_ZN4llvm15DwarfExpression13addMachineRegERKNS_18TargetRegisterInfoEjj'/>
<use f='llvm/llvm/lib/CodeGen/AsmPrinter/DwarfExpression.cpp' l='146' u='c' c='_ZN4llvm15DwarfExpression13addMachineRegERKNS_18TargetRegisterInfoEjj'/>
<use f='llvm/llvm/lib/CodeGen/StackMaps.cpp' l='161' u='c' c='_ZNK4llvm9StackMaps12parseOperandEPKNS_14MachineOperandES3_RNS_11SmallVectorINS0_8LocationELj8EEERNS4_INS0_10LiveOutRegELj8EEE'/>
<use f='llvm/llvm/lib/CodeGen/TargetInstrInfo.cpp' l='386' u='c' c='_ZNK4llvm15TargetInstrInfo17getStackSlotRangeEPKNS_19TargetRegisterClassEjRjS4_RKNS_15MachineFunctionE'/>
<def f='llvm/llvm/lib/MC/MCRegisterInfo.cpp' l='60' ll='64' type='unsigned int llvm::MCRegisterInfo::getSubRegIdxOffset(unsigned int Idx) const'/>
