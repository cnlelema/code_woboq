<dec f='llvm/llvm/include/llvm/Transforms/Utils/LowerMemIntrinsics.h' l='37' type='void llvm::createMemCpyLoopKnownSize(llvm::Instruction * InsertBefore, llvm::Value * SrcAddr, llvm::Value * DstAddr, llvm::ConstantInt * CopyLen, unsigned int SrcAlign, unsigned int DestAlign, bool SrcIsVolatile, bool DstIsVolatile, const llvm::TargetTransformInfo &amp; TTI)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/LowerMemIntrinsics.h' l='35'>/// Emit a loop implementing the semantics of an llvm.memcpy whose size is a
/// compile time constant. Loop is inserted at \p InsertBefore.</doc>
<use f='llvm/llvm/lib/Target/NVPTX/NVPTXLowerAggrCopies.cpp' l='113' u='c' c='_ZN12_GLOBAL__N_120NVPTXLowerAggrCopies13runOnFunctionERN4llvm8FunctionE'/>
<def f='llvm/llvm/lib/Transforms/Utils/LowerMemIntrinsics.cpp' l='25' ll='133' type='void llvm::createMemCpyLoopKnownSize(llvm::Instruction * InsertBefore, llvm::Value * SrcAddr, llvm::Value * DstAddr, llvm::ConstantInt * CopyLen, unsigned int SrcAlign, unsigned int DestAlign, bool SrcIsVolatile, bool DstIsVolatile, const llvm::TargetTransformInfo &amp; TTI)'/>
<use f='llvm/llvm/lib/Transforms/Utils/LowerMemIntrinsics.cpp' l='411' u='c' c='_ZN4llvm18expandMemCpyAsLoopEPNS_10MemCpyInstERKNS_19TargetTransformInfoE'/>
