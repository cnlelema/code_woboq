<dec f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='147' type='bool llvm::LazyCallGraph::Edge::operator bool() const'/>
<use f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='207' u='c' c='_ZN4llvm13LazyCallGraph12EdgeSequence8iteratorC1EPNS0_4EdgeES4_'/>
<use f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='218' u='c' c='_ZN4llvm13LazyCallGraph12EdgeSequence8iteratorppEv'/>
<use f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='237' u='c' c='_ZN4llvm13LazyCallGraph12EdgeSequence13call_iterator17advanceToNextEdgeEv'/>
<use f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='265' u='c' c='_ZN4llvm13LazyCallGraph12EdgeSequenceixERNS0_4NodeE'/>
<use f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='274' u='c' c='_ZN4llvm13LazyCallGraph12EdgeSequence6lookupERNS0_4NodeE'/>
<use f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='288' u='c' c='_ZN4llvm13LazyCallGraph12EdgeSequence5emptyEv'/>
<def f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='1213' ll='1215' type='bool llvm::LazyCallGraph::Edge::operator bool() const'/>
<use f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='1218' u='c' c='_ZNK4llvm13LazyCallGraph4Edge7getKindEv'/>
<use f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='1223' u='c' c='_ZNK4llvm13LazyCallGraph4Edge6isCallEv'/>
<use f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='1228' u='c' c='_ZNK4llvm13LazyCallGraph4Edge7getNodeEv'/>
<use f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='1233' u='c' c='_ZNK4llvm13LazyCallGraph4Edge11getFunctionEv'/>
<doc f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='143'>/// Test whether the edge is null.
    ///
    /// This happens when an edge has been deleted. We leave the edge objects
    /// around but clear them.</doc>
