<inh f='llvm/llvm/include/llvm/IR/User.h' l='44' c='llvm::User'/>
<inh f='llvm/llvm/include/llvm/ADT/ilist_node.h' l='256' c='llvm::ilist_node_with_parent'/>
<def f='llvm/llvm/include/llvm/IR/Instruction.h' l='43' ll='776'/>
<size>56</size>
<mbr r='llvm::Instruction::Parent' o='320' t='llvm::BasicBlock *'/>
<mbr r='llvm::Instruction::DbgLoc' o='384' t='llvm::DebugLoc'/>
<fun r='_ZN4llvm11InstructionD1Ev'/>
<fun r='_ZN4llvm11InstructionC1ERKS0_'/>
<fun r='_ZN4llvm11InstructionaSERKS0_'/>
<fun r='_ZN4llvm11Instruction9user_backEv'/>
<fun r='_ZNK4llvm11Instruction9user_backEv'/>
<fun r='_ZNK4llvm11Instruction9getParentEv'/>
<fun r='_ZN4llvm11Instruction9getParentEv'/>
<fun r='_ZNK4llvm11Instruction9getModuleEv'/>
<fun r='_ZN4llvm11Instruction9getModuleEv'/>
<fun r='_ZNK4llvm11Instruction11getFunctionEv'/>
<fun r='_ZN4llvm11Instruction11getFunctionEv'/>
<fun r='_ZN4llvm11Instruction16removeFromParentEv'/>
<fun r='_ZN4llvm11Instruction15eraseFromParentEv'/>
<fun r='_ZN4llvm11Instruction12insertBeforeEPS0_'/>
<fun r='_ZN4llvm11Instruction11insertAfterEPS0_'/>
<fun r='_ZN4llvm11Instruction10moveBeforeEPS0_'/>
<fun r='_ZN4llvm11Instruction10moveBeforeERNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS0_Lb1ELb0EvEELb0ELb0EEE'/>
<fun r='_ZN4llvm11Instruction9moveAfterEPS0_'/>
<fun r='_ZNK4llvm11Instruction9getOpcodeEv'/>
<fun r='_ZNK4llvm11Instruction13getOpcodeNameEv'/>
<fun r='_ZNK4llvm11Instruction12isTerminatorEv'/>
<fun r='_ZNK4llvm11Instruction9isUnaryOpEv'/>
<fun r='_ZNK4llvm11Instruction10isBinaryOpEv'/>
<fun r='_ZNK4llvm11Instruction11isIntDivRemEv'/>
<fun r='_ZN4llvm11Instruction7isShiftEv'/>
<fun r='_ZNK4llvm11Instruction6isCastEv'/>
<fun r='_ZNK4llvm11Instruction12isFuncletPadEv'/>
<fun r='_ZNK4llvm11Instruction23isExceptionalTerminatorEv'/>
<fun r='_ZNK4llvm11Instruction20isIndirectTerminatorEv'/>
<fun r='_ZN4llvm11Instruction13getOpcodeNameEj'/>
<fun r='_ZN4llvm11Instruction12isTerminatorEj'/>
<fun r='_ZN4llvm11Instruction9isUnaryOpEj'/>
<fun r='_ZN4llvm11Instruction10isBinaryOpEj'/>
<fun r='_ZN4llvm11Instruction11isIntDivRemEj'/>
<fun r='_ZN4llvm11Instruction7isShiftEj'/>
<fun r='_ZNK4llvm11Instruction14isLogicalShiftEv'/>
<fun r='_ZNK4llvm11Instruction17isArithmeticShiftEv'/>
<fun r='_ZN4llvm11Instruction16isBitwiseLogicOpEj'/>
<fun r='_ZNK4llvm11Instruction16isBitwiseLogicOpEv'/>
<fun r='_ZN4llvm11Instruction6isCastEj'/>
<fun r='_ZN4llvm11Instruction12isFuncletPadEj'/>
<fun r='_ZN4llvm11Instruction23isExceptionalTerminatorEj'/>
<fun r='_ZN4llvm11Instruction20isIndirectTerminatorEj'/>
<fun r='_ZNK4llvm11Instruction11hasMetadataEv'/>
<fun r='_ZNK4llvm11Instruction28hasMetadataOtherThanDebugLocEv'/>
<fun r='_ZNK4llvm11Instruction11getMetadataEj'/>
<fun r='_ZNK4llvm11Instruction11getMetadataENS_9StringRefE'/>
<fun r='_ZNK4llvm11Instruction14getAllMetadataERNS_15SmallVectorImplISt4pairIjPNS_6MDNodeEEEE'/>
<fun r='_ZNK4llvm11Instruction31getAllMetadataOtherThanDebugLocERNS_15SmallVectorImplISt4pairIjPNS_6MDNodeEEEE'/>
<fun r='_ZNK4llvm11Instruction13getAAMetadataERNS_9AAMDNodesEb'/>
<fun r='_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE'/>
<fun r='_ZN4llvm11Instruction11setMetadataENS_9StringRefEPNS_6MDNodeE'/>
<fun r='_ZN4llvm11Instruction12copyMetadataERKS0_NS_8ArrayRefIjEE'/>
<fun r='_ZN4llvm11Instruction16swapProfMetadataEv'/>
<fun r='_ZN4llvm11Instruction27dropUnknownNonDebugMetadataENS_8ArrayRefIjEE'/>
<fun r='_ZN4llvm11Instruction27dropUnknownNonDebugMetadataEv'/>
<fun r='_ZN4llvm11Instruction27dropUnknownNonDebugMetadataEj'/>
<fun r='_ZN4llvm11Instruction27dropUnknownNonDebugMetadataEjj'/>
<fun r='_ZN4llvm11Instruction13setAAMetadataERKNS_9AAMDNodesE'/>
<fun r='_ZNK4llvm11Instruction19extractProfMetadataERmS1_'/>
<fun r='_ZNK4llvm11Instruction22extractProfTotalWeightERm'/>
<fun r='_ZN4llvm11Instruction13setProfWeightEm'/>
<fun r='_ZN4llvm11Instruction11setDebugLocENS_8DebugLocE'/>
<fun r='_ZNK4llvm11Instruction11getDebugLocEv'/>
<fun r='_ZN4llvm11Instruction20setHasNoUnsignedWrapEb'/>
<fun r='_ZN4llvm11Instruction18setHasNoSignedWrapEb'/>
<fun r='_ZN4llvm11Instruction10setIsExactEb'/>
<fun r='_ZNK4llvm11Instruction17hasNoUnsignedWrapEv'/>
<fun r='_ZNK4llvm11Instruction15hasNoSignedWrapEv'/>
<fun r='_ZN4llvm11Instruction25dropPoisonGeneratingFlagsEv'/>
<fun r='_ZNK4llvm11Instruction7isExactEv'/>
<fun r='_ZN4llvm11Instruction7setFastEb'/>
<fun r='_ZN4llvm11Instruction18setHasAllowReassocEb'/>
<fun r='_ZN4llvm11Instruction12setHasNoNaNsEb'/>
<fun r='_ZN4llvm11Instruction12setHasNoInfsEb'/>
<fun r='_ZN4llvm11Instruction19setHasNoSignedZerosEb'/>
<fun r='_ZN4llvm11Instruction21setHasAllowReciprocalEb'/>
<fun r='_ZN4llvm11Instruction16setHasApproxFuncEb'/>
<fun r='_ZN4llvm11Instruction16setFastMathFlagsENS_13FastMathFlagsE'/>
<fun r='_ZN4llvm11Instruction17copyFastMathFlagsENS_13FastMathFlagsE'/>
<fun r='_ZNK4llvm11Instruction6isFastEv'/>
<fun r='_ZNK4llvm11Instruction15hasAllowReassocEv'/>
<fun r='_ZNK4llvm11Instruction9hasNoNaNsEv'/>
<fun r='_ZNK4llvm11Instruction9hasNoInfsEv'/>
<fun r='_ZNK4llvm11Instruction16hasNoSignedZerosEv'/>
<fun r='_ZNK4llvm11Instruction18hasAllowReciprocalEv'/>
<fun r='_ZNK4llvm11Instruction16hasAllowContractEv'/>
<fun r='_ZNK4llvm11Instruction13hasApproxFuncEv'/>
<fun r='_ZNK4llvm11Instruction16getFastMathFlagsEv'/>
<fun r='_ZN4llvm11Instruction17copyFastMathFlagsEPKS0_'/>
<fun r='_ZN4llvm11Instruction11copyIRFlagsEPKNS_5ValueEb'/>
<fun r='_ZN4llvm11Instruction10andIRFlagsEPKNS_5ValueE'/>
<fun r='_ZN4llvm11Instruction19applyMergedLocationEPKNS_10DILocationES3_'/>
<fun r='_ZNK4llvm11Instruction20hasMetadataHashEntryEv'/>
<fun r='_ZNK4llvm11Instruction15getMetadataImplEj'/>
<fun r='_ZNK4llvm11Instruction15getMetadataImplENS_9StringRefE'/>
<fun r='_ZNK4llvm11Instruction18getAllMetadataImplERNS_15SmallVectorImplISt4pairIjPNS_6MDNodeEEEE'/>
<fun r='_ZNK4llvm11Instruction35getAllMetadataOtherThanDebugLocImplERNS_15SmallVectorImplISt4pairIjPNS_6MDNodeEEEE'/>
<fun r='_ZN4llvm11Instruction24clearMetadataHashEntriesEv'/>
<fun r='_ZNK4llvm11Instruction13isAssociativeEv'/>
<fun r='_ZN4llvm11Instruction13isAssociativeEj'/>
<fun r='_ZNK4llvm11Instruction13isCommutativeEv'/>
<fun r='_ZN4llvm11Instruction13isCommutativeEj'/>
<fun r='_ZNK4llvm11Instruction12isIdempotentEv'/>
<fun r='_ZN4llvm11Instruction12isIdempotentEj'/>
<fun r='_ZNK4llvm11Instruction11isNilpotentEv'/>
<fun r='_ZN4llvm11Instruction11isNilpotentEj'/>
<fun r='_ZNK4llvm11Instruction16mayWriteToMemoryEv'/>
<fun r='_ZNK4llvm11Instruction17mayReadFromMemoryEv'/>
<fun r='_ZNK4llvm11Instruction20mayReadOrWriteMemoryEv'/>
<fun r='_ZNK4llvm11Instruction8isAtomicEv'/>
<fun r='_ZNK4llvm11Instruction13hasAtomicLoadEv'/>
<fun r='_ZNK4llvm11Instruction14hasAtomicStoreEv'/>
<fun r='_ZNK4llvm11Instruction8mayThrowEv'/>
<fun r='_ZNK4llvm11Instruction14hasSideEffectsEv'/>
<fun r='_ZNK4llvm11Instruction11isFenceLikeEv'/>
<fun r='_ZNK4llvm11Instruction18mayHaveSideEffectsEv'/>
<fun r='_ZNK4llvm11Instruction14isSafeToRemoveEv'/>
<fun r='_ZNK4llvm11Instruction7isEHPadEv'/>
<fun r='_ZNK4llvm11Instruction20isLifetimeStartOrEndEv'/>
<fun r='_ZNK4llvm11Instruction26getNextNonDebugInstructionEv'/>
<fun r='_ZN4llvm11Instruction26getNextNonDebugInstructionEv'/>
<fun r='_ZNK4llvm11Instruction26getPrevNonDebugInstructionEv'/>
<fun r='_ZN4llvm11Instruction26getPrevNonDebugInstructionEv'/>
<fun r='_ZNK4llvm11Instruction5cloneEv'/>
<fun r='_ZNK4llvm11Instruction13isIdenticalToEPKS0_'/>
<fun r='_ZNK4llvm11Instruction24isIdenticalToWhenDefinedEPKS0_'/>
<fun r='_ZNK4llvm11Instruction17isSameOperationAsEPKS0_j'/>
<fun r='_ZNK4llvm11Instruction20isUsedOutsideOfBlockEPKNS_10BasicBlockE'/>
<fun r='_ZNK4llvm11Instruction16getNumSuccessorsEv'/>
<fun r='_ZNK4llvm11Instruction12getSuccessorEj'/>
<fun r='_ZN4llvm11Instruction12setSuccessorEjPNS_10BasicBlockE'/>
<fun r='_ZN4llvm11Instruction20replaceSuccessorWithEPNS_10BasicBlockES2_'/>
<fun r='_ZN4llvm11Instruction7classofEPKNS_5ValueE'/>
<fun r='_ZN4llvm11Instruction20setValueSubclassDataEt'/>
<fun r='_ZNK4llvm11Instruction24getSubclassDataFromValueEv'/>
<fun r='_ZN4llvm11Instruction23setHasMetadataHashEntryEb'/>
<fun r='_ZN4llvm11Instruction9setParentEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm11Instruction26setInstructionSubclassDataEt'/>
<fun r='_ZNK4llvm11Instruction30getSubclassDataFromInstructionEv'/>
<fun r='_ZN4llvm11InstructionC1EPNS_4TypeEjPNS_3UseEjPS0_'/>
<fun r='_ZN4llvm11InstructionC1EPNS_4TypeEjPNS_3UseEjPNS_10BasicBlockE'/>
<fun r='_ZNK4llvm11Instruction9cloneImplEv'/>
<ovr f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='57' c='llvm::UnaryInstruction'/>
<ovr f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='188' c='llvm::BinaryOperator'/>
<ovr f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='722' c='llvm::CmpInst'/>
<ovr f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='1100' c='llvm::CallBase'/>
<ovr f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='2132' c='llvm::FuncletPadInst'/>
<ovr f='llvm/llvm/include/llvm/IR/Instructions.h' l='320' c='llvm::StoreInst'/>
<ovr f='llvm/llvm/include/llvm/IR/Instructions.h' l='454' c='llvm::FenceInst'/>
<ovr f='llvm/llvm/include/llvm/IR/Instructions.h' l='528' c='llvm::AtomicCmpXchgInst'/>
<ovr f='llvm/llvm/include/llvm/IR/Instructions.h' l='691' c='llvm::AtomicRMWInst'/>
<ovr f='llvm/llvm/include/llvm/IR/Instructions.h' l='873' c='llvm::GetElementPtrInst'/>
<ovr f='llvm/llvm/include/llvm/IR/Instructions.h' l='1707' c='llvm::SelectInst'/>
<ovr f='llvm/llvm/include/llvm/IR/Instructions.h' l='1838' c='llvm::ExtractElementInst'/>
<ovr f='llvm/llvm/include/llvm/IR/Instructions.h' l='1902' c='llvm::InsertElementInst'/>
<ovr f='llvm/llvm/include/llvm/IR/Instructions.h' l='1965' c='llvm::ShuffleVectorInst'/>
<ovr f='llvm/llvm/include/llvm/IR/Instructions.h' l='2391' c='llvm::InsertValueInst'/>
<ovr f='llvm/llvm/include/llvm/IR/Instructions.h' l='2534' c='llvm::PHINode'/>
<ovr f='llvm/llvm/include/llvm/IR/Instructions.h' l='2766' c='llvm::LandingPadInst'/>
<ovr f='llvm/llvm/include/llvm/IR/Instructions.h' l='2868' c='llvm::ReturnInst'/>
<ovr f='llvm/llvm/include/llvm/IR/Instructions.h' l='2950' c='llvm::BranchInst'/>
<ovr f='llvm/llvm/include/llvm/IR/Instructions.h' l='3094' c='llvm::SwitchInst'/>
<ovr f='llvm/llvm/include/llvm/IR/Instructions.h' l='3505' c='llvm::IndirectBrInst'/>
<ovr f='llvm/llvm/include/llvm/IR/Instructions.h' l='4143' c='llvm::ResumeInst'/>
<ovr f='llvm/llvm/include/llvm/IR/Instructions.h' l='4200' c='llvm::CatchSwitchInst'/>
<ovr f='llvm/llvm/include/llvm/IR/Instructions.h' l='4466' c='llvm::CatchReturnInst'/>
<ovr f='llvm/llvm/include/llvm/IR/Instructions.h' l='4547' c='llvm::CleanupReturnInst'/>
<ovr f='llvm/llvm/include/llvm/IR/Instructions.h' l='4652' c='llvm::UnreachableInst'/>
