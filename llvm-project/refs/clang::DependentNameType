<inh f='llvm/clang/include/clang/AST/Type.h' l='5162' c='clang::TypeWithKeyword'/>
<inh f='llvm/llvm/include/llvm/ADT/FoldingSet.h' l='135' c='llvm::FoldingSetBase::Node'/>
<def f='llvm/clang/include/clang/AST/Type.h' l='5296' ll='5343'/>
<size>48</size>
<doc f='llvm/clang/include/clang/AST/Type.h' l='5284'>/// Represents a qualified type name for which the type name is
/// dependent.
///
/// DependentNameType represents a class of dependent types that involve a
/// possibly dependent nested-name-specifier (e.g., &quot;T::&quot;) followed by a
/// name of a type. The DependentNameType may start with a &quot;typename&quot; (for a
/// typename-specifier), &quot;class&quot;, &quot;struct&quot;, &quot;union&quot;, or &quot;enum&quot; (for a
/// dependent elaborated-type-specifier), or nothing (in contexts where we
/// know that we must be referring to a type, e.g., in a base class specifier).
/// Typically the nested-name-specifier is dependent, but in MSVC compatibility
/// mode, this type is used with non-dependent names to delay name lookup until
/// instantiation.</doc>
<mbr r='clang::DependentNameType::NNS' o='256' t='clang::NestedNameSpecifier *'/>
<mbr r='clang::DependentNameType::Name' o='320' t='const clang::IdentifierInfo *'/>
<fun r='_ZN5clang17DependentNameTypeC1ENS_21ElaboratedTypeKeywordEPNS_19NestedNameSpecifierEPKNS_14IdentifierInfoENS_8QualTypeE'/>
<fun r='_ZNK5clang17DependentNameType12getQualifierEv'/>
<fun r='_ZNK5clang17DependentNameType13getIdentifierEv'/>
<fun r='_ZNK5clang17DependentNameType9isSugaredEv'/>
<fun r='_ZNK5clang17DependentNameType7desugarEv'/>
<fun r='_ZN5clang17DependentNameType7ProfileERN4llvm16FoldingSetNodeIDE'/>
<fun r='_ZN5clang17DependentNameType7ProfileERN4llvm16FoldingSetNodeIDENS_21ElaboratedTypeKeywordEPNS_19NestedNameSpecifierEPKNS_14IdentifierInfoE'/>
<fun r='_ZN5clang17DependentNameType7classofEPKNS_4TypeE'/>
