<dec f='llvm/clang/include/clang/AST/NestedNameSpecifier.h' l='123' type='static clang::NestedNameSpecifier * clang::NestedNameSpecifier::Create(const clang::ASTContext &amp; Context, clang::NestedNameSpecifier * Prefix, clang::IdentifierInfo * II)'/>
<doc f='llvm/clang/include/clang/AST/NestedNameSpecifier.h' l='118'>/// Builds a specifier combining a prefix and an identifier.
  ///
  /// The prefix must be dependent, since nested name specifiers
  /// referencing an identifier are only permitted when the identifier
  /// cannot be resolved.</doc>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='5519' u='c' c='_ZNK5clang10ASTContext31getCanonicalNestedNameSpecifierEPNS_19NestedNameSpecifierE'/>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='5548' u='c' c='_ZNK5clang10ASTContext31getCanonicalNestedNameSpecifierEPNS_19NestedNameSpecifierE'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='7964' u='c' c='_ZN5clang11ASTImporter6ImportEPNS_19NestedNameSpecifierE'/>
<def f='llvm/clang/lib/AST/NestedNameSpecifier.cpp' l='57' ll='68' type='static clang::NestedNameSpecifier * clang::NestedNameSpecifier::Create(const clang::ASTContext &amp; Context, clang::NestedNameSpecifier * Prefix, clang::IdentifierInfo * II)'/>
<use f='llvm/clang/lib/AST/NestedNameSpecifier.cpp' l='588' u='c' c='_ZN5clang29NestedNameSpecifierLocBuilder6ExtendERNS_10ASTContextEPNS_14IdentifierInfoENS_14SourceLocationES5_'/>
<use f='llvm/clang/lib/Serialization/ASTReader.cpp' l='9032' u='c' c='_ZN5clang9ASTReader23ReadNestedNameSpecifierERNS_13serialization10ModuleFileERKN4llvm11SmallVectorImLj64EEERj'/>
