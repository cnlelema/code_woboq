<def f='llvm/llvm/include/llvm/Demangle/Demangle.h' l='49' ll='100'/>
<size>16</size>
<doc f='llvm/llvm/include/llvm/Demangle/Demangle.h' l='46'>/// &quot;Partial&quot; demangler. This supports demangling a string into an AST
/// (typically an intermediate stage in itaniumDemangle) and querying certain
/// properties or partially printing the demangled name.</doc>
<fun r='_ZN4llvm23ItaniumPartialDemanglerC1Ev'/>
<fun r='_ZN4llvm23ItaniumPartialDemanglerC1EOS0_'/>
<fun r='_ZN4llvm23ItaniumPartialDemangleraSEOS0_'/>
<fun r='_ZN4llvm23ItaniumPartialDemangler15partialDemangleEPKc'/>
<fun r='_ZNK4llvm23ItaniumPartialDemangler14finishDemangleEPcPm'/>
<fun r='_ZNK4llvm23ItaniumPartialDemangler19getFunctionBaseNameEPcPm'/>
<fun r='_ZNK4llvm23ItaniumPartialDemangler26getFunctionDeclContextNameEPcPm'/>
<fun r='_ZNK4llvm23ItaniumPartialDemangler15getFunctionNameEPcPm'/>
<fun r='_ZNK4llvm23ItaniumPartialDemangler21getFunctionParametersEPcPm'/>
<fun r='_ZNK4llvm23ItaniumPartialDemangler21getFunctionReturnTypeEPcPm'/>
<fun r='_ZNK4llvm23ItaniumPartialDemangler21hasFunctionQualifiersEv'/>
<fun r='_ZNK4llvm23ItaniumPartialDemangler12isCtorOrDtorEv'/>
<fun r='_ZNK4llvm23ItaniumPartialDemangler10isFunctionEv'/>
<fun r='_ZNK4llvm23ItaniumPartialDemangler6isDataEv'/>
<fun r='_ZNK4llvm23ItaniumPartialDemangler13isSpecialNameEv'/>
<fun r='_ZN4llvm23ItaniumPartialDemanglerD1Ev'/>
<mbr r='llvm::ItaniumPartialDemangler::RootNode' o='0' t='void *'/>
<mbr r='llvm::ItaniumPartialDemangler::Context' o='64' t='void *'/>
