<def f='llvm/clang/include/clang/AST/ASTLambda.h' l='27' ll='31' type='bool clang::isLambdaCallOperator(const clang::CXXMethodDecl * MD)'/>
<use f='llvm/clang/include/clang/AST/ASTLambda.h' l='35' u='c' c='_ZN5clang20isLambdaCallOperatorEPKNS_11DeclContextE'/>
<doc f='llvm/clang/include/clang/AST/ASTLambda.h' l='25'>// This function returns true if M is a specialization, a template,
// or a non-generic lambda call operator.</doc>
<use f='llvm/clang/lib/AST/ExprConstant.cpp' l='5163' u='c' c='_ZL18HandleFunctionCallN5clang14SourceLocationEPKNS_12FunctionDeclEPKN12_GLOBAL__N_16LValueEN4llvm8ArrayRefIPKNS_4ExprEEEPKNS_4StmtERNS4_8EvalInfoERNS_7APValueES7_'/>
<use f='llvm/clang/lib/CodeGen/CodeGenFunction.cpp' l='1024' u='c' c='_ZN5clang7CodeGen15CodeGenFunction13StartFunctionENS_10GlobalDeclENS_8QualTypeEPN4llvm8FunctionERKNS0_14CGFunctionInfoERKNS0_15FunctionArgListENS_14SourceLocationESD_'/>
<use f='llvm/clang/lib/Sema/SemaCoroutine.cpp' l='519' u='c' c='_ZN5clang4Sema21buildCoroutinePromiseENS_14SourceLocationE'/>
<use f='llvm/clang/lib/Sema/SemaCoroutine.cpp' l='1166' u='c' c='_ZN5clang20CoroutineStmtBuilder20makeNewAndDeleteExprEv'/>
<use f='llvm/clang/lib/Sema/SemaTemplateInstantiate.cpp' l='839' u='c' c='_ZN12_GLOBAL__N_120TemplateInstantiator20transformedLocalDeclEPN5clang4DeclEN4llvm8ArrayRefIS3_EE'/>
