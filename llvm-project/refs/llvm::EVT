<def f='llvm/llvm/include/llvm/CodeGen/ValueTypes.h' l='32' ll='436'/>
<size>16</size>
<doc f='llvm/llvm/include/llvm/CodeGen/ValueTypes.h' l='29'>/// Extended Value Type. Capable of holding value types which are not native
  /// for any processor (such as the i12345 type), as well as the types an MVT
  /// can represent.</doc>
<mbr r='llvm::EVT::V' o='0' t='llvm::MVT'/>
<mbr r='llvm::EVT::LLVMTy' o='64' t='llvm::Type *'/>
<fun r='_ZN4llvm3EVTC1Ev'/>
<fun r='_ZN4llvm3EVTC1ENS_3MVT15SimpleValueTypeE'/>
<fun r='_ZN4llvm3EVTC1ENS_3MVTE'/>
<fun r='_ZNK4llvm3EVTeqES0_'/>
<fun r='_ZNK4llvm3EVTneES0_'/>
<fun r='_ZN4llvm3EVT18getFloatingPointVTEj'/>
<fun r='_ZN4llvm3EVT12getIntegerVTERNS_11LLVMContextEj'/>
<fun r='_ZN4llvm3EVT11getVectorVTERNS_11LLVMContextES0_jb'/>
<fun r='_ZN4llvm3EVT11getVectorVTERNS_11LLVMContextES0_NS_3MVT12ElementCountE'/>
<fun r='_ZNK4llvm3EVT32changeVectorElementTypeToIntegerEv'/>
<fun r='_ZN4llvm3EVT19changeTypeToIntegerEv'/>
<fun r='_ZNK4llvm3EVT8isSimpleEv'/>
<fun r='_ZNK4llvm3EVT10isExtendedEv'/>
<fun r='_ZNK4llvm3EVT15isFloatingPointEv'/>
<fun r='_ZNK4llvm3EVT9isIntegerEv'/>
<fun r='_ZNK4llvm3EVT12isFatPointerEv'/>
<fun r='_ZNK4llvm3EVT15isScalarIntegerEv'/>
<fun r='_ZNK4llvm3EVT8isVectorEv'/>
<fun r='_ZNK4llvm3EVT16isScalableVectorEv'/>
<fun r='_ZNK4llvm3EVT13is16BitVectorEv'/>
<fun r='_ZNK4llvm3EVT13is32BitVectorEv'/>
<fun r='_ZNK4llvm3EVT13is64BitVectorEv'/>
<fun r='_ZNK4llvm3EVT14is128BitVectorEv'/>
<fun r='_ZNK4llvm3EVT14is256BitVectorEv'/>
<fun r='_ZNK4llvm3EVT14is512BitVectorEv'/>
<fun r='_ZNK4llvm3EVT15is1024BitVectorEv'/>
<fun r='_ZNK4llvm3EVT15is2048BitVectorEv'/>
<fun r='_ZNK4llvm3EVT12isOverloadedEv'/>
<fun r='_ZNK4llvm3EVT11isByteSizedEv'/>
<fun r='_ZNK4llvm3EVT7isRoundEv'/>
<fun r='_ZNK4llvm3EVT6bitsEqES0_'/>
<fun r='_ZNK4llvm3EVT6bitsGTES0_'/>
<fun r='_ZNK4llvm3EVT6bitsGEES0_'/>
<fun r='_ZNK4llvm3EVT6bitsLTES0_'/>
<fun r='_ZNK4llvm3EVT6bitsLEES0_'/>
<fun r='_ZNK4llvm3EVT11getSimpleVTEv'/>
<fun r='_ZNK4llvm3EVT13getScalarTypeEv'/>
<fun r='_ZNK4llvm3EVT20getVectorElementTypeEv'/>
<fun r='_ZNK4llvm3EVT20getVectorNumElementsEv'/>
<fun r='_ZNK4llvm3EVT21getVectorElementCountEv'/>
<fun r='_ZNK4llvm3EVT13getSizeInBitsEv'/>
<fun r='_ZNK4llvm3EVT19getScalarSizeInBitsEv'/>
<fun r='_ZNK4llvm3EVT12getStoreSizeEv'/>
<fun r='_ZNK4llvm3EVT18getStoreSizeInBitsEv'/>
<fun r='_ZNK4llvm3EVT19getRoundIntegerTypeERNS_11LLVMContextE'/>
<fun r='_ZNK4llvm3EVT21getHalfSizedIntegerVTERNS_11LLVMContextE'/>
<fun r='_ZNK4llvm3EVT29widenIntegerVectorElementTypeERNS_11LLVMContextE'/>
<fun r='_ZNK4llvm3EVT26getHalfNumVectorElementsVTERNS_11LLVMContextE'/>
<fun r='_ZNK4llvm3EVT16isPow2VectorTypeEv'/>
<fun r='_ZNK4llvm3EVT17getPow2VectorTypeERNS_11LLVMContextE'/>
<fun r='_ZNK4llvm3EVT12getEVTStringEv'/>
<fun r='_ZNK4llvm3EVT13getTypeForEVTERNS_11LLVMContextE'/>
<fun r='_ZN4llvm3EVT6getEVTEPNS_4TypeEb'/>
<fun r='_ZNK4llvm3EVT10getRawBitsEv'/>
<fun r='_ZNK4llvm3EVT27changeExtendedTypeToIntegerEv'/>
<fun r='_ZNK4llvm3EVT40changeExtendedVectorElementTypeToIntegerEv'/>
<fun r='_ZN4llvm3EVT20getExtendedIntegerVTERNS_11LLVMContextEj'/>
<fun r='_ZN4llvm3EVT19getExtendedVectorVTERNS_11LLVMContextES0_j'/>
<fun r='_ZNK4llvm3EVT23isExtendedFloatingPointEv'/>
<fun r='_ZNK4llvm3EVT17isExtendedIntegerEv'/>
<fun r='_ZNK4llvm3EVT23isExtendedScalarIntegerEv'/>
<fun r='_ZNK4llvm3EVT16isExtendedVectorEv'/>
<fun r='_ZNK4llvm3EVT21isExtended16BitVectorEv'/>
<fun r='_ZNK4llvm3EVT21isExtended32BitVectorEv'/>
<fun r='_ZNK4llvm3EVT21isExtended64BitVectorEv'/>
<fun r='_ZNK4llvm3EVT22isExtended128BitVectorEv'/>
<fun r='_ZNK4llvm3EVT22isExtended256BitVectorEv'/>
<fun r='_ZNK4llvm3EVT22isExtended512BitVectorEv'/>
<fun r='_ZNK4llvm3EVT23isExtended1024BitVectorEv'/>
<fun r='_ZNK4llvm3EVT23isExtended2048BitVectorEv'/>
<fun r='_ZNK4llvm3EVT28getExtendedVectorElementTypeEv'/>
<fun r='_ZNK4llvm3EVT28getExtendedVectorNumElementsEv'/>
<fun r='_ZNK4llvm3EVT21getExtendedSizeInBitsEv'/>
