<dec f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='1143' type='bool llvm::LoopVectorizationCostModel::interleavedAccessCanBeWidened(llvm::Instruction * I, unsigned int VF = 1)'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='4407' ll='4434' type='bool llvm::LoopVectorizationCostModel::interleavedAccessCanBeWidened(llvm::Instruction * I, unsigned int VF = 1)'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='5743' u='c' c='_ZN4llvm26LoopVectorizationCostModel28setCostBasedWideningDecisionEj'/>
<doc f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='1140'>/// Returns true if \p I is a memory instruction in an interleaved-group
  /// of memory accesses that can be vectorized with wide vector loads/stores
  /// and shuffles.</doc>
