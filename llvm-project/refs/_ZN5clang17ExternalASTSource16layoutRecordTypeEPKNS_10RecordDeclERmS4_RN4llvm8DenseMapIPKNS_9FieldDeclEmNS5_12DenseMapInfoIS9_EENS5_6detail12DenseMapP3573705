<dec f='llvm/clang/include/clang/AST/ExternalASTSource.h' l='300' type='bool clang::ExternalASTSource::layoutRecordType(const clang::RecordDecl * Record, uint64_t &amp; Size, uint64_t &amp; Alignment, llvm::DenseMap&lt;const FieldDecl *, uint64_t&gt; &amp; FieldOffsets, llvm::DenseMap&lt;const CXXRecordDecl *, CharUnits&gt; &amp; BaseOffsets, llvm::DenseMap&lt;const CXXRecordDecl *, CharUnits&gt; &amp; VirtualBaseOffsets)'/>
<doc f='llvm/clang/include/clang/AST/ExternalASTSource.h' l='273'>/// Perform layout on the given record.
  ///
  /// This routine allows the external AST source to provide an specific
  /// layout for a record, overriding the layout that would normally be
  /// constructed. It is intended for clients who receive specific layout
  /// details rather than source code (such as LLDB). The client is expected
  /// to fill in the field offsets, base offsets, virtual base offsets, and
  /// complete object size.
  ///
  /// \param Record The record whose layout is being requested.
  ///
  /// \param Size The final size of the record, in bits.
  ///
  /// \param Alignment The final alignment of the record, in bits.
  ///
  /// \param FieldOffsets The offset of each of the fields within the record,
  /// expressed in bits. All of the fields must be provided with offsets.
  ///
  /// \param BaseOffsets The offset of each of the direct, non-virtual base
  /// classes. If any bases are not given offsets, the bases will be laid
  /// out according to the ABI.
  ///
  /// \param VirtualBaseOffsets The offset of each of the virtual base classes
  /// (either direct or not). If any bases are not given offsets, the bases will be laid
  /// out according to the ABI.
  ///
  /// \returns true if the record layout was provided, false otherwise.</doc>
<def f='llvm/clang/lib/AST/ExternalASTSource.cpp' l='74' ll='80' type='bool clang::ExternalASTSource::layoutRecordType(const clang::RecordDecl * Record, uint64_t &amp; Size, uint64_t &amp; Alignment, llvm::DenseMap&lt;const FieldDecl *, uint64_t&gt; &amp; FieldOffsets, llvm::DenseMap&lt;const CXXRecordDecl *, CharUnits&gt; &amp; BaseOffsets, llvm::DenseMap&lt;const CXXRecordDecl *, CharUnits&gt; &amp; VirtualBaseOffsets)'/>
<use f='llvm/clang/lib/AST/RecordLayoutBuilder.cpp' l='1273' u='c' c='_ZN12_GLOBAL__N_126ItaniumRecordLayoutBuilder16InitializeLayoutEPKN5clang4DeclE'/>
<use f='llvm/clang/lib/AST/RecordLayoutBuilder.cpp' l='2496' u='c' c='_ZN12_GLOBAL__N_128MicrosoftRecordLayoutBuilder16initializeLayoutEPKN5clang10RecordDeclE'/>
<ovr f='llvm/clang/lib/Frontend/LayoutOverrideSource.cpp' l='155' c='_ZN5clang20LayoutOverrideSource16layoutRecordTypeEPKNS_10RecordDeclERmS4_RN4llvm8DenseMapIPKNS_9FieldDeclEmNS5_12DenseMapInfoIS9_EENS5_6detail12DenseM5883865'/>
<ovr f='llvm/clang/lib/Sema/MultiplexExternalSemaSource.cpp' l='180' c='_ZN5clang27MultiplexExternalSemaSource16layoutRecordTypeEPKNS_10RecordDeclERmS4_RN4llvm8DenseMapIPKNS_9FieldDeclEmNS5_12DenseMapInfoIS9_EENS5_6detail110574493'/>
<use f='llvm/clang/lib/Sema/MultiplexExternalSemaSource.cpp' l='187' u='c' c='_ZN5clang27MultiplexExternalSemaSource16layoutRecordTypeEPKNS_10RecordDeclERmS4_RN4llvm8DenseMapIPKNS_9FieldDeclEmNS5_12DenseMapInfoIS9_EENS5_6detail110574493'/>
