<dec f='llvm/llvm/lib/Target/Mips/MipsAsmPrinter.h' l='138' type='void llvm::MipsAsmPrinter::printSavedRegsBitmask()'/>
<def f='llvm/llvm/lib/Target/Mips/MipsAsmPrinter.cpp' l='337' ll='383' type='void llvm::MipsAsmPrinter::printSavedRegsBitmask()'/>
<use f='llvm/llvm/lib/Target/Mips/MipsAsmPrinter.cpp' l='446' u='c' c='_ZN4llvm14MipsAsmPrinter21EmitFunctionBodyStartEv'/>
<doc f='llvm/llvm/lib/Target/Mips/MipsAsmPrinter.cpp' l='300'>//===----------------------------------------------------------------------===//
//
//  Mips Asm Directives
//
//  -- Frame directive &quot;frame Stackpointer, Stacksize, RARegister&quot;
//  Describe the stack frame.
//
//  -- Mask directives &quot;(f)mask  bitmask, offset&quot;
//  Tells the assembler which registers are saved and where.
//  bitmask - contain a little endian bitset indicating which registers are
//            saved on function prologue (e.g. with a 0x80000000 mask, the
//            assembler knows the register 31 (RA) is saved at prologue.
//  offset  - the position before stack pointer subtraction indicating where
//            the first saved register on prologue is located. (e.g. with a
//
//  Consider the following function prologue:
//
//    .frame  $fp,48,$ra
//    .mask   0xc0000000,-8
//       addiu $sp, $sp, -48
//       sw $ra, 40($sp)
//       sw $fp, 36($sp)
//
//    With a 0xc0000000 mask, the assembler knows the register 31 (RA) and
//    30 (FP) are saved at prologue. As the save order on prologue is from
//    left to right, RA is saved first. A -8 offset means that after the
//    stack pointer subtration, the first register in the mask (RA) will be
//    saved at address 48-8=40.
//
//===----------------------------------------------------------------------===//

//===----------------------------------------------------------------------===//
// Mask directives
//===----------------------------------------------------------------------===//

// Create a bitmask with all callee saved registers for CPU or Floating Point
// registers. For CPU registers consider RA, GP and FP for saving if necessary.</doc>
