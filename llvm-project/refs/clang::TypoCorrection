<def f='llvm/clang/include/clang/Sema/TypoCorrection.h' l='42' ll='277'/>
<size>88</size>
<doc f='llvm/clang/include/clang/Sema/TypoCorrection.h' l='41'>/// Simple class containing the result of Sema::CorrectTypo</doc>
<smbr r='clang::TypoCorrection::InvalidDistance' t='const unsigned int'/>
<smbr r='clang::TypoCorrection::MaximumDistance' t='const unsigned int'/>
<smbr r='clang::TypoCorrection::CharDistanceWeight' t='const unsigned int'/>
<smbr r='clang::TypoCorrection::QualifierDistanceWeight' t='const unsigned int'/>
<smbr r='clang::TypoCorrection::CallbackDistanceWeight' t='const unsigned int'/>
<fun r='_ZN5clang14TypoCorrectionC1ERKNS_15DeclarationNameEPNS_9NamedDeclEPNS_19NestedNameSpecifierEjj'/>
<fun r='_ZN5clang14TypoCorrectionC1EPNS_9NamedDeclEPNS_19NestedNameSpecifierEj'/>
<fun r='_ZN5clang14TypoCorrectionC1ENS_15DeclarationNameEPNS_19NestedNameSpecifierEj'/>
<fun r='_ZN5clang14TypoCorrectionC1Ev'/>
<fun r='_ZNK5clang14TypoCorrection13getCorrectionEv'/>
<fun r='_ZNK5clang14TypoCorrection29getCorrectionAsIdentifierInfoEv'/>
<fun r='_ZNK5clang14TypoCorrection22getCorrectionSpecifierEv'/>
<fun r='_ZN5clang14TypoCorrection22setCorrectionSpecifierEPNS_19NestedNameSpecifierE'/>
<fun r='_ZN5clang14TypoCorrection20WillReplaceSpecifierEb'/>
<fun r='_ZNK5clang14TypoCorrection20WillReplaceSpecifierEv'/>
<fun r='_ZN5clang14TypoCorrection20setQualifierDistanceEj'/>
<fun r='_ZN5clang14TypoCorrection19setCallbackDistanceEj'/>
<fun r='_ZN5clang14TypoCorrection21NormalizeEditDistanceEj'/>
<fun r='_ZNK5clang14TypoCorrection15getEditDistanceEb'/>
<fun r='_ZNK5clang14TypoCorrection12getFoundDeclEv'/>
<fun r='_ZNK5clang14TypoCorrection17getCorrectionDeclEv'/>
<fun r='_ZNK5clang14TypoCorrection19getCorrectionDeclAsEv'/>
<fun r='_ZN5clang14TypoCorrection20ClearCorrectionDeclsEv'/>
<fun r='_ZN5clang14TypoCorrection17setCorrectionDeclEPNS_9NamedDeclE'/>
<fun r='_ZN5clang14TypoCorrection18setCorrectionDeclsEN4llvm8ArrayRefIPNS_9NamedDeclEEE'/>
<fun r='_ZN5clang14TypoCorrection17addCorrectionDeclEPNS_9NamedDeclE'/>
<fun r='_ZNK5clang14TypoCorrection11getAsStringERKNS_11LangOptionsE'/>
<fun r='_ZNK5clang14TypoCorrection9getQuotedERKNS_11LangOptionsE'/>
<fun r='_ZNK5clang14TypoCorrectioncvbEv'/>
<fun r='_ZN5clang14TypoCorrection11makeKeywordEv'/>
<fun r='_ZNK5clang14TypoCorrection9isKeywordEv'/>
<fun r='_ZNK5clang14TypoCorrection9isKeywordERAT__Kc'/>
<fun r='_ZNK5clang14TypoCorrection10isResolvedEv'/>
<fun r='_ZNK5clang14TypoCorrection12isOverloadedEv'/>
<fun r='_ZN5clang14TypoCorrection18setCorrectionRangeEPNS_12CXXScopeSpecERKNS_19DeclarationNameInfoE'/>
<fun r='_ZNK5clang14TypoCorrection18getCorrectionRangeEv'/>
<fun r='_ZN5clang14TypoCorrection5beginEv'/>
<fun r='_ZN5clang14TypoCorrection3endEv'/>
<fun r='_ZNK5clang14TypoCorrection5beginEv'/>
<fun r='_ZNK5clang14TypoCorrection3endEv'/>
<fun r='_ZNK5clang14TypoCorrection14requiresImportEv'/>
<fun r='_ZN5clang14TypoCorrection17setRequiresImportEb'/>
<fun r='_ZN5clang14TypoCorrection18addExtraDiagnosticENS_17PartialDiagnosticE'/>
<fun r='_ZNK5clang14TypoCorrection19getExtraDiagnosticsEv'/>
<fun r='_ZNK5clang14TypoCorrection17hasCorrectionDeclEv'/>
<mbr r='clang::TypoCorrection::CorrectionName' o='0' t='clang::DeclarationName'/>
<mbr r='clang::TypoCorrection::CorrectionNameSpec' o='64' t='clang::NestedNameSpecifier *'/>
<mbr r='clang::TypoCorrection::CorrectionDecls' o='128' t='SmallVector&lt;clang::NamedDecl *, 1&gt;'/>
<mbr r='clang::TypoCorrection::CharDistance' o='320' t='unsigned int'/>
<mbr r='clang::TypoCorrection::QualifierDistance' o='352' t='unsigned int'/>
<mbr r='clang::TypoCorrection::CallbackDistance' o='384' t='unsigned int'/>
<mbr r='clang::TypoCorrection::CorrectionRange' o='416' t='clang::SourceRange'/>
<mbr r='clang::TypoCorrection::ForceSpecifierReplacement' o='480' t='bool'/>
<mbr r='clang::TypoCorrection::RequiresImport' o='488' t='bool'/>
<mbr r='clang::TypoCorrection::ExtraDiagnostics' o='512' t='std::vector&lt;PartialDiagnostic&gt;'/>
