<dec f='llvm/llvm/lib/Transforms/Coroutines/CoroInternal.h' l='61' type='llvm::Value * llvm::coro::LowererBase::makeSubFnCall(llvm::Value * Arg, int Index, llvm::Instruction * InsertPt)'/>
<use f='llvm/llvm/lib/Transforms/Coroutines/CoroEarly.cpp' l='53' u='c' c='_ZN12_GLOBAL__N_17Lowerer20lowerResumeOrDestroyEN4llvm8CallSiteENS1_13CoroSubFnInst10ResumeKindE'/>
<use f='llvm/llvm/lib/Transforms/Coroutines/CoroSplit.cpp' l='850' u='c' c='_ZL15prepareForSplitRN4llvm8FunctionERNS_9CallGraphE'/>
<def f='llvm/llvm/lib/Transforms/Coroutines/Coroutines.cpp' l='107' ll='120' type='llvm::Value * llvm::coro::LowererBase::makeSubFnCall(llvm::Value * Arg, int Index, llvm::Instruction * InsertPt)'/>
<doc f='llvm/llvm/lib/Transforms/Coroutines/Coroutines.cpp' l='101'>// Creates a sequence of instructions to obtain a resume function address using
// llvm.coro.subfn.addr. It generates the following sequence:
//
//    call i8* @llvm.coro.subfn.addr(i8* %Arg, i8 %index)
//    bitcast i8* %2 to void(i8*)*</doc>
