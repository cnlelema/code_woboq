<def f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='1423' ll='1425' type='unsigned int llvm::TargetLoweringBase::getMemcmpEqZeroLoadsPerBlock() const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='1415'>/// For memcmp expansion when the memcmp result is only compared equal or
  /// not-equal to 0, allow up to this number of load pairs per block. As an
  /// example, this may allow &apos;memcmp(a, b, 3) == 0&apos; in a single block:
  ///   a0 = load2bytes &amp;a[0]
  ///   b0 = load2bytes &amp;b[0]
  ///   a2 = load1byte  &amp;a[2]
  ///   b2 = load1byte  &amp;b[2]
  ///   r  = cmp eq (a0 ^ b0 | a2 ^ b2), 0</doc>
<use f='llvm/llvm/lib/CodeGen/ExpandMemCmp.cpp' l='764' u='c' c='_ZN12_GLOBAL__N_1L12expandMemCmpEPN4llvm8CallInstEPKNS0_19TargetTransformInfoEPKNS0_14TargetLoweringEPKNS0_10DataLayoutE'/>
<ovr f='llvm/llvm/lib/Target/X86/X86ISelLowering.h' l='883' c='_ZNK4llvm17X86TargetLowering28getMemcmpEqZeroLoadsPerBlockEv'/>
