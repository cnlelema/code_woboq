<dec f='llvm/llvm/include/llvm/Analysis/LoopInfo.h' l='742' type='void llvm::Loop::setLoopAlreadyUnrolled()'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopInfo.h' l='736'>/// Add llvm.loop.unroll.disable to this loop&apos;s loop id metadata.
  ///
  /// Remove existing unroll metadata and add unroll disable metadata to
  /// indicate the loop has already been unrolled.  This prevents a loop
  /// from being unrolled more than is directed by a pragma if the loop
  /// unrolling pass is run more than once (which it generally is).</doc>
<def f='llvm/llvm/lib/Analysis/LoopInfo.cpp' l='483' ll='492' type='void llvm::Loop::setLoopAlreadyUnrolled()'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopUnrollAndJamPass.cpp' l='424' u='c' c='_ZL21tryToUnrollAndJamLoopPN4llvm4LoopERNS_13DominatorTreeEPNS_8LoopInfoERNS_15ScalarEvolutionERKNS_19TargetTransformInfoERNS_15AssumptionCacheERNS_147069670'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopUnrollPass.cpp' l='1143' u='c' c='_ZL15tryToUnrollLoopPN4llvm4LoopERNS_13DominatorTreeEPNS_8LoopInfoERNS_15ScalarEvolutionERKNS_19TargetTransformInfoERNS_15AssumptionCacheERNS_25Optimi6926510'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp' l='419' u='c' c='_ZL15CloneLoopBlocksPN4llvm4LoopEPNS_5ValueEbbbPNS_10BasicBlockES5_S5_RSt6vectorIS5_SaIS5_EERNS_13LoopBlocksDFSERNS_8ValueMapIPKS2_NS_14WeakTrackingVH13680398'/>
