<dec f='llvm/llvm/include/llvm/IR/BasicBlock.h' l='249' type='const llvm::BasicBlock * llvm::BasicBlock::getSingleSuccessor() const'/>
<use f='llvm/llvm/include/llvm/IR/BasicBlock.h' l='252' u='c' c='_ZN4llvm10BasicBlock18getSingleSuccessorEv'/>
<doc f='llvm/llvm/include/llvm/IR/BasicBlock.h' l='245'>/// Return the successor of this block if it has a single successor.
  /// Otherwise return a null pointer.
  ///
  /// This method is analogous to getSinglePredecessor above.</doc>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4578' u='c' c='_ZN4llvm28programUndefinedIfFullPoisonEPKNS_11InstructionE'/>
<def f='llvm/llvm/lib/IR/BasicBlock.cpp' l='268' ll='274' type='const llvm::BasicBlock * llvm::BasicBlock::getSingleSuccessor() const'/>
