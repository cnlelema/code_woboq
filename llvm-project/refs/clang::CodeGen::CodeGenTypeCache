<def f='llvm/clang/lib/CodeGen/CodeGenTypeCache.h' l='32' ll='128'/>
<ovr f='llvm/clang/lib/CodeGen/CodeGenModule.h' l='277' c='clang::CodeGen::CodeGenModule'/>
<ovr f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='229' c='clang::CodeGen::CodeGenFunction'/>
<size>136</size>
<doc f='llvm/clang/lib/CodeGen/CodeGenTypeCache.h' l='29'>/// This structure provides a set of types that are commonly used
/// during IR emission.  It&apos;s initialized once in CodeGenModule&apos;s
/// constructor and then copied around into new CodeGenFunctions.</doc>
<mbr r='clang::CodeGen::CodeGenTypeCache::VoidTy' o='0' t='llvm::Type *'/>
<mbr r='clang::CodeGen::CodeGenTypeCache::Int8Ty' o='64' t='llvm::IntegerType *'/>
<mbr r='clang::CodeGen::CodeGenTypeCache::Int16Ty' o='128' t='llvm::IntegerType *'/>
<mbr r='clang::CodeGen::CodeGenTypeCache::Int32Ty' o='192' t='llvm::IntegerType *'/>
<mbr r='clang::CodeGen::CodeGenTypeCache::Int64Ty' o='256' t='llvm::IntegerType *'/>
<mbr r='clang::CodeGen::CodeGenTypeCache::HalfTy' o='320' t='llvm::Type *'/>
<mbr r='clang::CodeGen::CodeGenTypeCache::FloatTy' o='384' t='llvm::Type *'/>
<mbr r='clang::CodeGen::CodeGenTypeCache::DoubleTy' o='448' t='llvm::Type *'/>
<mbr r='clang::CodeGen::CodeGenTypeCache::IntTy' o='512' t='llvm::IntegerType *'/>
<fun r='_ZNK5clang7CodeGen16CodeGenTypeCache10getIntSizeEv'/>
<fun r='_ZNK5clang7CodeGen16CodeGenTypeCache11getIntAlignEv'/>
<mbr r='clang::CodeGen::CodeGenTypeCache::PointerWidthInBits' o='976' t='unsigned short'/>
<mbr r='clang::CodeGen::CodeGenTypeCache::ASTAllocaAddressSpace' o='1024' t='clang::LangAS'/>
<fun r='_ZNK5clang7CodeGen16CodeGenTypeCache11getSizeSizeEv'/>
<fun r='_ZNK5clang7CodeGen16CodeGenTypeCache12getSizeAlignEv'/>
<fun r='_ZNK5clang7CodeGen16CodeGenTypeCache14getPointerSizeEv'/>
<fun r='_ZNK5clang7CodeGen16CodeGenTypeCache15getPointerAlignEv'/>
<mbr r='clang::CodeGen::CodeGenTypeCache::RuntimeCC' o='1056' t='llvm::CallingConv::ID'/>
<fun r='_ZNK5clang7CodeGen16CodeGenTypeCache12getRuntimeCCEv'/>
<fun r='_ZNK5clang7CodeGen16CodeGenTypeCache24getASTAllocaAddressSpaceEv'/>
