<dec f='llvm/llvm/include/llvm/Transforms/Utils/IntegerDivision.h' l='32' type='bool llvm::expandRemainder(llvm::BinaryOperator * Rem)'/>
<def f='llvm/llvm/lib/Transforms/Utils/IntegerDivision.cpp' l='375' ll='423' type='bool llvm::expandRemainder(llvm::BinaryOperator * Rem)'/>
<use f='llvm/llvm/lib/Transforms/Utils/IntegerDivision.cpp' l='499' u='c' c='_ZN4llvm25expandRemainderUpTo32BitsEPNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/Utils/IntegerDivision.cpp' l='526' u='c' c='_ZN4llvm25expandRemainderUpTo32BitsEPNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/Utils/IntegerDivision.cpp' l='547' u='c' c='_ZN4llvm25expandRemainderUpTo64BitsEPNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/Utils/IntegerDivision.cpp' l='574' u='c' c='_ZN4llvm25expandRemainderUpTo64BitsEPNS_14BinaryOperatorE'/>
<doc f='llvm/llvm/lib/Transforms/Utils/IntegerDivision.cpp' l='368'>/// Generate code to calculate the remainder of two integers, replacing Rem with
/// the generated code. This currently generates code using the udiv expansion,
/// but future work includes generating more specialized code, e.g. when more
/// information about the operands are known. Implements both 32bit and 64bit
/// scalar division.
///
/// Replace Rem with generated code.</doc>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/IntegerDivision.h' l='25'>/// Generate code to calculate the remainder of two integers, replacing Rem
  /// with the generated code. This currently generates code using the udiv
  /// expansion, but future work includes generating more specialized code,
  /// e.g. when more information about the operands are known. Implements both
  /// 32bit and 64bit scalar division.
  ///
  /// Replace Rem with generated code.</doc>
<use f='llvm/llvm/unittests/Transforms/Utils/IntegerDivisionTest.cpp' l='105' u='c' c='_ZN12_GLOBAL__N_125IntegerDivision_SRem_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Transforms/Utils/IntegerDivisionTest.cpp' l='135' u='c' c='_ZN12_GLOBAL__N_125IntegerDivision_URem_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Transforms/Utils/IntegerDivisionTest.cpp' l='226' u='c' c='_ZN12_GLOBAL__N_127IntegerDivision_SRem64_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Transforms/Utils/IntegerDivisionTest.cpp' l='256' u='c' c='_ZN12_GLOBAL__N_127IntegerDivision_URem64_Test8TestBodyEv'/>
