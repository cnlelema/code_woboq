<def f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='500' ll='506' type='llvm::CallInst * llvm::IRBuilderBase::CreateMemMove(llvm::Value * Dst, unsigned int DstAlign, llvm::Value * Src, unsigned int SrcAlign, uint64_t Size, bool isVolatile = false, llvm::MDNode * TBAATag = nullptr, llvm::MDNode * ScopeTag = nullptr, llvm::MDNode * NoAliasTag = nullptr)'/>
<doc f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='494'>/// Create and insert a memmove between the specified
  /// pointers.
  ///
  /// If the pointers aren&apos;t i8*, they will be converted.  If a TBAA tag is
  /// specified, it will be added to the instruction. Likewise with alias.scope
  /// and noalias tags.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp' l='679' u='c' c='_ZN4llvm13MemCpyOptPass12processStoreEPNS_9StoreInstERNS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEE'/>
