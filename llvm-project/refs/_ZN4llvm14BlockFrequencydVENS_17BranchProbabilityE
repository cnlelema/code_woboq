<dec f='llvm/llvm/include/llvm/Support/BlockFrequency.h' l='44' type='llvm::BlockFrequency &amp; llvm::BlockFrequency::operator/=(llvm::BranchProbability Prob)'/>
<doc f='llvm/llvm/include/llvm/Support/BlockFrequency.h' l='42'>/// Divide by a non-zero branch probability using saturating
  /// arithmetic.</doc>
<use f='llvm/llvm/lib/CodeGen/RegAllocGreedy.cpp' l='2863' u='c' c='_ZN12_GLOBAL__N_18RAGreedy17initializeCSRCostEv'/>
<def f='llvm/llvm/lib/Support/BlockFrequency.cpp' l='29' ll='32' type='llvm::BlockFrequency &amp; llvm::BlockFrequency::operator/=(llvm::BranchProbability Prob)'/>
<use f='llvm/llvm/lib/Support/BlockFrequency.cpp' l='36' u='c' c='_ZNK4llvm14BlockFrequencydvENS_17BranchProbabilityE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopSink.cpp' l='88' u='c' c='_ZL15adjustedSumFreqRN4llvm15SmallPtrSetImplIPNS_10BasicBlockEEERNS_18BlockFrequencyInfoE'/>
<use f='llvm/llvm/unittests/Support/BlockFrequencyTest.cpp' l='98' u='c' c='_ZN12_GLOBAL__N_126BlockFrequency_Divide_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/BlockFrequencyTest.cpp' l='104' u='c' c='_ZN12_GLOBAL__N_132BlockFrequencyTest_Saturate_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/BlockFrequencyTest.cpp' l='106' u='c' c='_ZN12_GLOBAL__N_132BlockFrequencyTest_Saturate_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/BlockFrequencyTest.cpp' l='110' u='c' c='_ZN12_GLOBAL__N_132BlockFrequencyTest_Saturate_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/BlockFrequencyTest.cpp' l='115' u='c' c='_ZN12_GLOBAL__N_132BlockFrequencyTest_Saturate_Test8TestBodyEv'/>
