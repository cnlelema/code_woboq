<dec f='llvm/llvm/include/llvm/Support/TargetRegistry.h' l='684' type='static void llvm::TargetRegistry::RegisterTarget(llvm::Target &amp; T, const char * Name, const char * ShortDesc, const char * BackendName, Target::ArchMatchFnTy ArchMatchFn, bool HasJIT = false)'/>
<use f='llvm/llvm/include/llvm/Support/TargetRegistry.h' l='922' u='c' c='_ZN4llvm14RegisterTargetC1ERNS_6TargetEPKcS4_S4_'/>
<doc f='llvm/llvm/include/llvm/Support/TargetRegistry.h' l='662'>/// @}
  /// @name Target Registration
  /// @{

  /// RegisterTarget - Register the given target. Attempts to register a
  /// target which has already been registered will be ignored.
  ///
  /// Clients are responsible for ensuring that registration doesn&apos;t occur
  /// while another thread is attempting to access the registry. Typically
  /// this is done by initializing all targets at program startup.
  ///
  /// @param T - The target being registered.
  /// @param Name - The target name. This should be a static string.
  /// @param ShortDesc - A short target description. This should be a static
  /// string.
  /// @param BackendName - The name of the backend. This should be a static
  /// string that is the same for all targets that share a backend
  /// implementation and must match the name used in the &apos;def X : Target ...&apos; in
  /// TableGen.
  /// @param ArchMatchFn - The arch match checking function for this target.
  /// @param HasJIT - Whether the target supports JIT code
  /// generation.</doc>
<def f='llvm/llvm/lib/Support/TargetRegistry.cpp' l='88' ll='110' type='static void llvm::TargetRegistry::RegisterTarget(llvm::Target &amp; T, const char * Name, const char * ShortDesc, const char * BackendName, Target::ArchMatchFnTy ArchMatchFn, bool HasJIT = false)'/>
<use f='llvm/llvm/lib/Target/AArch64/TargetInfo/AArch64TargetInfo.cpp' l='37' u='c' c='LLVMInitializeAArch64TargetInfo'/>
<use f='llvm/llvm/lib/Target/AArch64/TargetInfo/AArch64TargetInfo.cpp' l='40' u='c' c='LLVMInitializeAArch64TargetInfo'/>
<use f='llvm/llvm/lib/Target/BPF/TargetInfo/BPFTargetInfo.cpp' l='28' u='c' c='LLVMInitializeBPFTargetInfo'/>
