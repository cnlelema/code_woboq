<def f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='970' ll='974' type='bool llvm::LoopVectorizationCostModel::canTruncateToMinimalBitwidth(llvm::Instruction * I, unsigned int VF) const'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='5842' u='c' c='_ZN4llvm26LoopVectorizationCostModel18getInstructionCostEPNS_11InstructionEjRPNS_4TypeE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='5988' u='c' c='_ZN4llvm26LoopVectorizationCostModel18getInstructionCostEPNS_11InstructionEjRPNS_4TypeE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='6030' u='c' c='_ZN4llvm26LoopVectorizationCostModel18getInstructionCostEPNS_11InstructionEjRPNS_4TypeE'/>
<doc f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='968'>/// \returns True if instruction \p I can be truncated to a smaller bitwidth
  /// for vectorization factor \p VF.</doc>
