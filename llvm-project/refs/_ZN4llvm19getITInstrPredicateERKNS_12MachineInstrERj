<dec f='llvm/llvm/lib/Target/ARM/Thumb2InstrInfo.h' l='70' type='ARMCC::CondCodes llvm::getITInstrPredicate(const llvm::MachineInstr &amp; MI, unsigned int &amp; PredReg)'/>
<use f='llvm/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp' l='1417' u='c' c='_ZN12_GLOBAL__N_118ARMConstantIslands14createNewWaterEjjRPN4llvm17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp' l='1440' u='c' c='_ZN12_GLOBAL__N_118ARMConstantIslands14createNewWaterEjjRPN4llvm17MachineBasicBlockE'/>
<doc f='llvm/llvm/lib/Target/ARM/Thumb2InstrInfo.h' l='67'>/// getITInstrPredicate - Valid only in Thumb2 mode. This function is identical
/// to llvm::getInstrPredicate except it returns AL for conditional branch
/// instructions which are &quot;predicated&quot;, but are not in IT blocks.</doc>
<use f='llvm/llvm/lib/Target/ARM/Thumb2ITBlockPass.cpp' l='189' u='c' c='_ZN12_GLOBAL__N_117Thumb2ITBlockPass20MoveCopyOutOfITBlockEPN4llvm12MachineInstrENS1_5ARMCC9CondCodesES5_RNS1_8SmallSetIjLj4ESt4lessIjEEESA_'/>
<use f='llvm/llvm/lib/Target/ARM/Thumb2ITBlockPass.cpp' l='206' u='c' c='_ZN12_GLOBAL__N_117Thumb2ITBlockPass20InsertITInstructionsERN4llvm17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/ARM/Thumb2ITBlockPass.cpp' l='246' u='c' c='_ZN12_GLOBAL__N_117Thumb2ITBlockPass20InsertITInstructionsERN4llvm17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/ARM/Thumb2InstrInfo.cpp' l='118' u='c' c='_ZNK4llvm15Thumb2InstrInfo19isLegalToSplitMBBAtERNS_17MachineBasicBlockENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEE'/>
<def f='llvm/llvm/lib/Target/ARM/Thumb2InstrInfo.cpp' l='681' ll='687' type='ARMCC::CondCodes llvm::getITInstrPredicate(const llvm::MachineInstr &amp; MI, unsigned int &amp; PredReg)'/>
