<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolutionExpander.h' l='186' type='llvm::PHINode * llvm::SCEVExpander::getOrInsertCanonicalInductionVariable(const llvm::Loop * L, llvm::Type * Ty)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolutionExpander.h' l='182'>/// This method returns the canonical induction variable of the specified
    /// type for the specified loop (inserting one if there is none).  A
    /// canonical induction variable starts at zero and steps by one on each
    /// iteration.</doc>
<def f='llvm/llvm/lib/Analysis/ScalarEvolutionExpander.cpp' l='1914' ll='1930' type='llvm::PHINode * llvm::SCEVExpander::getOrInsertCanonicalInductionVariable(const llvm::Loop * L, llvm::Type * Ty)'/>
<doc f='llvm/llvm/lib/Analysis/ScalarEvolutionExpander.cpp' l='1910'>/// getOrInsertCanonicalInductionVariable - This method returns the
/// canonical induction variable of the specified type for the specified
/// loop (inserting one if there is none).  A canonical induction variable
/// starts at zero and steps by one on each iteration.</doc>
