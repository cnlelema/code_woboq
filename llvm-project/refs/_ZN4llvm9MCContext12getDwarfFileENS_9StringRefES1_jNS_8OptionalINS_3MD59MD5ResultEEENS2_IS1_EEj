<dec f='llvm/llvm/include/llvm/MC/MCContext.h' l='512' type='Expected&lt;unsigned int&gt; llvm::MCContext::getDwarfFile(llvm::StringRef Directory, llvm::StringRef FileName, unsigned int FileNumber, Optional&lt;MD5::MD5Result&gt; Checksum, Optional&lt;llvm::StringRef&gt; Source, unsigned int CUID)'/>
<doc f='llvm/llvm/include/llvm/MC/MCContext.h' l='511'>/// Creates an entry in the dwarf file and directory tables.</doc>
<def f='llvm/llvm/lib/MC/MCContext.cpp' l='612' ll='621' type='Expected&lt;unsigned int&gt; llvm::MCContext::getDwarfFile(llvm::StringRef Directory, llvm::StringRef FileName, unsigned int FileNumber, Optional&lt;MD5::MD5Result&gt; Checksum, Optional&lt;llvm::StringRef&gt; Source, unsigned int CUID)'/>
<doc f='llvm/llvm/lib/MC/MCContext.cpp' l='608'>/// getDwarfFile - takes a file name and number to place in the dwarf file and
/// directory tables.  If the file number has already been allocated it is an
/// error and zero is returned and the client reports the error, else the
/// allocated file number is returned.  The file numbers may be in any order.</doc>
<use f='llvm/llvm/lib/MC/MCStreamer.cpp' l='287' u='c' c='_ZN4llvm10MCStreamer25tryEmitDwarfFileDirectiveEjNS_9StringRefES1_NS_8OptionalINS_3MD59MD5ResultEEENS2_IS1_EEj'/>
