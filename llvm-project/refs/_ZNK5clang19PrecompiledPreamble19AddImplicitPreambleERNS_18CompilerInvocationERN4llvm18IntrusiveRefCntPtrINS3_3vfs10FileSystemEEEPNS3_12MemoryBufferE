<dec f='llvm/clang/include/clang/Frontend/PrecompiledPreamble.h' l='111' type='void clang::PrecompiledPreamble::AddImplicitPreamble(clang::CompilerInvocation &amp; CI, IntrusiveRefCntPtr&lt;llvm::vfs::FileSystem&gt; &amp; VFS, llvm::MemoryBuffer * MainFileBuffer) const'/>
<doc f='llvm/clang/include/clang/Frontend/PrecompiledPreamble.h' l='103'>/// Changes options inside \p CI to use PCH from this preamble. Also remaps
  /// main file to \p MainFileBuffer and updates \p VFS to ensure the preamble
  /// is accessible.
  /// Requires that CanReuse() is true.
  /// For in-memory preambles, PrecompiledPreamble instance continues to own the
  /// MemoryBuffer with the Preamble after this method returns. The caller is
  /// responsible for making sure the PrecompiledPreamble instance outlives the
  /// compiler run and the AST that will be using the PCH.</doc>
<use f='llvm/clang/lib/Frontend/ASTUnit.cpp' l='1112' u='c' c='_ZN5clang7ASTUnit5ParseESt10shared_ptrINS_22PCHContainerOperationsEESt10unique_ptrIN4llvm12MemoryBufferESt14default_deleteIS6_EENS5_18IntrusiveRefCntP13048862'/>
<use f='llvm/clang/lib/Frontend/ASTUnit.cpp' l='2264' u='c' c='_ZN5clang7ASTUnit12CodeCompleteEN4llvm9StringRefEjjNS1_8ArrayRefISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPNS1_12MemoryBufferEEEEbb5253603'/>
<def f='llvm/clang/lib/Frontend/PrecompiledPreamble.cpp' l='506' ll='511' type='void clang::PrecompiledPreamble::AddImplicitPreamble(clang::CompilerInvocation &amp; CI, IntrusiveRefCntPtr&lt;llvm::vfs::FileSystem&gt; &amp; VFS, llvm::MemoryBuffer * MainFileBuffer) const'/>
