<inh f='llvm/clang/include/clang/AST/Decl.h' l='812' c='clang::VarDecl'/>
<def f='llvm/clang/include/clang/AST/DeclOpenMP.h' l='312' ll='336'/>
<size>1</size>
<doc f='llvm/clang/include/clang/AST/DeclOpenMP.h' l='305'>/// Pseudo declaration for capturing expressions. Also is used for capturing of
/// non-static data members in non-static member functions.
///
/// Clang supports capturing of variables only, but OpenMP 4.5 allows to
/// privatize non-static members of current class in non-static member
/// functions. This pseudo-declaration allows properly handle this kind of
/// capture by wrapping captured expression into a variable-like declaration.</doc>
<fun r='_ZN5clang19OMPCapturedExprDecl6anchorEv'/>
<fun r='_ZN5clang19OMPCapturedExprDeclC1ERNS_10ASTContextEPNS_11DeclContextEPNS_14IdentifierInfoENS_8QualTypeEPNS_14TypeSourceInfoENS_14SourceLocationE'/>
<fun r='_ZN5clang19OMPCapturedExprDecl6CreateERNS_10ASTContextEPNS_11DeclContextEPNS_14IdentifierInfoENS_8QualTypeENS_14SourceLocationE'/>
<fun r='_ZN5clang19OMPCapturedExprDecl18CreateDeserializedERNS_10ASTContextEj'/>
<fun r='_ZNK5clang19OMPCapturedExprDecl14getSourceRangeEv'/>
<fun r='_ZN5clang19OMPCapturedExprDecl7classofEPKNS_4DeclE'/>
<fun r='_ZN5clang19OMPCapturedExprDecl11classofKindENS_4Decl4KindE'/>
