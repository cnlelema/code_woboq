<dec f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='277' type='iterator_range&lt;llvm::sroa::AllocaSlices::partition_iterator&gt; llvm::sroa::AllocaSlices::partitions()'/>
<def f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='618' ll='621' type='iterator_range&lt;AllocaSlices::partition_iterator&gt; llvm::sroa::AllocaSlices::partitions()'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='3643' u='c' c='_ZN4llvm4SROA22presplitLoadsAndStoresERNS_10AllocaInstERNS_4sroa12AllocaSlicesE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='4315' u='c' c='_ZN4llvm4SROA11splitAllocaERNS_10AllocaInstERNS_4sroa12AllocaSlicesE'/>
<doc f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='611'>/// A forward range over the partitions of the alloca&apos;s slices.
///
/// This accesses an iterator range over the partitions of the alloca&apos;s
/// slices. It computes these partitions on the fly based on the overlapping
/// offsets of the slices and the ability to split them. It will visit &quot;empty&quot;
/// partitions to cover regions of the alloca only accessed via split
/// slices.</doc>
