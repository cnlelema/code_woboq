<dec f='llvm/llvm/include/llvm/Analysis/InstructionPrecedenceTracking.h' l='80' type='void llvm::InstructionPrecedenceTracking::insertInstructionTo(const llvm::Instruction * Inst, const llvm::BasicBlock * BB)'/>
<doc f='llvm/llvm/include/llvm/Analysis/InstructionPrecedenceTracking.h' l='77'>/// Notifies this tracking that we are going to insert a new instruction \p
  /// Inst to the basic block \p BB. It makes all necessary updates to internal
  /// caches to keep them consistent.</doc>
<def f='llvm/llvm/lib/Analysis/InstructionPrecedenceTracking.cpp' l='102' ll='107' type='void llvm::InstructionPrecedenceTracking::insertInstructionTo(const llvm::Instruction * Inst, const llvm::BasicBlock * BB)'/>
<use f='llvm/llvm/lib/Analysis/MustExecute.cpp' l='87' u='c' c='_ZN4llvm17ICFLoopSafetyInfo19insertInstructionToEPKNS_11InstructionEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/MustExecute.cpp' l='88' u='c' c='_ZN4llvm17ICFLoopSafetyInfo19insertInstructionToEPKNS_11InstructionEPKNS_10BasicBlockE'/>
