<def f='llvm/llvm/include/llvm/Analysis/DependenceAnalysis.h' l='132' type='bool llvm::Dependence::isOrdered() const'/>
<doc f='llvm/llvm/include/llvm/Analysis/DependenceAnalysis.h' l='130'>/// isOrdered - Returns true if dependence is Output, Flow, or Anti
    ///</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopFuse.cpp' l='861' u='c' c='_ZN9LoopFuser22dependencesAllowFusionERK15FusionCandidateS2_RN4llvm11InstructionES5_b30FusionDependenceAnalysisChoice'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopInterchange.cpp' l='126' u='c' c='_ZL24populateDependencyMatrixRSt6vectorIS_IcSaIcEESaIS1_EEjPN4llvm4LoopEPNS5_14DependenceInfoE'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp' l='631' u='c' c='_ZL17checkDependenciesRN4llvm11SmallVectorIPNS_5ValueELj4EEES4_jbRNS_14DependenceInfoE'/>
