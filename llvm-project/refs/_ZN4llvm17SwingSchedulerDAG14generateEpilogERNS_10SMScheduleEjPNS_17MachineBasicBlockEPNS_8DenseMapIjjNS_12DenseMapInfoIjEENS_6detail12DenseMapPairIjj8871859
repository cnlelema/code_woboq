<dec f='llvm/llvm/include/llvm/CodeGen/MachinePipeliner.h' l='304' type='void llvm::SwingSchedulerDAG::generateEpilog(llvm::SMSchedule &amp; Schedule, unsigned int LastStage, llvm::MachineBasicBlock * KernelBB, ValueMapTy * VRMap, MBBVectorTy &amp; EpilogBBs, MBBVectorTy &amp; PrologBBs)'/>
<use f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='2081' u='c' c='_ZN4llvm17SwingSchedulerDAG21generatePipelinedLoopERNS_10SMScheduleE'/>
<def f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='2166' ll='2255' type='void llvm::SwingSchedulerDAG::generateEpilog(llvm::SMSchedule &amp; Schedule, unsigned int LastStage, llvm::MachineBasicBlock * KernelBB, ValueMapTy * VRMap, MBBVectorTy &amp; EpilogBBs, MBBVectorTy &amp; PrologBBs)'/>
<doc f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='2163'>/// Generate the pipeline epilog code. The epilog code finishes the iterations
/// that were started in either the prolog or the kernel.  We create a basic
/// block for each stage that needs to complete.</doc>
