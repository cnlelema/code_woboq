<dec f='llvm/llvm/include/llvm/Support/DynamicLibrary.h' l='77' type='static llvm::sys::DynamicLibrary llvm::sys::DynamicLibrary::addPermanentLibrary(void * handle, std::string * errMsg = nullptr)'/>
<doc f='llvm/llvm/include/llvm/Support/DynamicLibrary.h' l='70'>/// Registers an externally loaded library. The library will be unloaded
    /// when the program terminates.
    ///
    /// It is safe to call this function multiple times for the same library,
    /// though ownership is only taken if there was no error.
    ///
    /// \returns An empty \p DynamicLibrary if the library was already loaded.</doc>
<def f='llvm/llvm/lib/Support/DynamicLibrary.cpp' l='163' ll='171' type='static llvm::sys::DynamicLibrary llvm::sys::DynamicLibrary::addPermanentLibrary(void * Handle, std::string * Err = nullptr)'/>
