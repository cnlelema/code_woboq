<dec f='llvm/clang/include/clang/Sema/Sema.h' l='9814' type='bool clang::Sema::GatherArgumentsForCall(clang::SourceLocation CallLoc, clang::FunctionDecl * FDecl, const clang::FunctionProtoType * Proto, unsigned int FirstParam, ArrayRef&lt;clang::Expr *&gt; Args, SmallVectorImpl&lt;clang::Expr *&gt; &amp; AllArgs, clang::Sema::VariadicCallType CallType = VariadicDoesNotApply, bool AllowExplicit = false, bool IsListInitialization = false)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='9812'>/// GatherArgumentsForCall - Collector argument expressions for various
  /// form of call prototypes.</doc>
<def f='llvm/clang/lib/Sema/SemaExpr.cpp' l='5098' ll='5199' type='bool clang::Sema::GatherArgumentsForCall(clang::SourceLocation CallLoc, clang::FunctionDecl * FDecl, const clang::FunctionProtoType * Proto, unsigned int FirstParam, ArrayRef&lt;clang::Expr *&gt; Args, SmallVectorImpl&lt;clang::Expr *&gt; &amp; AllArgs, clang::Sema::VariadicCallType CallType = VariadicDoesNotApply, bool AllowExplicit = false, bool IsListInitialization = false)'/>
