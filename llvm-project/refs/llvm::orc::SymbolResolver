<def f='llvm/llvm/include/llvm/ExecutionEngine/Orc/Legacy.h' l='29' ll='44'/>
<ovr f='llvm/llvm/include/llvm/ExecutionEngine/Orc/Legacy.h' l='49' c='llvm::orc::LambdaSymbolResolver'/>
<ovr f='llvm/llvm/include/llvm/ExecutionEngine/Orc/Legacy.h' l='174' c='llvm::orc::LegacyLookupFnResolver'/>
<size>8</size>
<doc f='llvm/llvm/include/llvm/ExecutionEngine/Orc/Legacy.h' l='22'>/// SymbolResolver is a composable interface for looking up symbol flags
///        and addresses using the AsynchronousSymbolQuery type. It will
///        eventually replace the LegacyJITSymbolResolver interface as the
///        stardard ORC symbol resolver type.
///
/// FIXME: SymbolResolvers should go away and be replaced with VSOs with
///        defenition generators.</doc>
<fun r='_ZN4llvm3orc14SymbolResolverD1Ev'/>
<fun r='_ZN4llvm3orc14SymbolResolver20getResponsibilitySetERKNS_8DenseSetINS0_15SymbolStringPtrENS_12DenseMapInfoIS3_EEEE'/>
<fun r='_ZN4llvm3orc14SymbolResolver6lookupESt10shared_ptrINS0_23AsynchronousSymbolQueryEENS_8DenseSetINS0_15SymbolStringPtrENS_12DenseMapInfoIS6_EEEE'/>
<fun r='_ZN4llvm3orc14SymbolResolver6anchorEv'/>
<ovr f='llvm/llvm/include/llvm/ExecutionEngine/Orc/NullResolver.h' l='23' c='llvm::orc::NullResolver'/>
<ovr f='llvm/llvm/lib/ExecutionEngine/Orc/OrcCBindingsStack.h' l='123' c='llvm::OrcCBindingsStack::CBindingsResolver'/>
<ovr f='llvm/llvm/lib/ExecutionEngine/Orc/OrcMCJITReplacement.h' l='142' c='llvm::orc::OrcMCJITReplacement::LinkingORCResolver'/>
