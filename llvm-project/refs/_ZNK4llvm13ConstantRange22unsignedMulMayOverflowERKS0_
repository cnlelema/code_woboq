<dec f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='450' type='llvm::ConstantRange::OverflowResult llvm::ConstantRange::unsignedMulMayOverflow(const llvm::ConstantRange &amp; Other) const'/>
<doc f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='449'>/// Return whether unsigned mul of the two ranges always/never overflows.</doc>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4166' u='c' c='_ZN4llvm29computeOverflowForUnsignedMulEPKNS_5ValueES2_RKNS_10DataLayoutEPNS_15AssumptionCacheEPKNS_11InstructionEPKNS_13DominatorTreeEb'/>
<def f='llvm/llvm/lib/IR/ConstantRange.cpp' l='1382' ll='1400' type='ConstantRange::OverflowResult llvm::ConstantRange::unsignedMulMayOverflow(const llvm::ConstantRange &amp; Other) const'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1810' u='c' c='_ZN12_GLOBAL__N_152ConstantRangeTest_UnsignedMulOverflowExhaustive_Test8TestBodyEv'/>
