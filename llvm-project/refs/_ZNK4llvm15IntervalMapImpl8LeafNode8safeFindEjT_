<def f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='594' ll='601' type='unsigned int llvm::IntervalMapImpl::LeafNode::safeFind(unsigned int i, KeyT x) const'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='609' u='c' c='_ZNK4llvm15IntervalMapImpl8LeafNode10safeLookupET_T0_'/>
<doc f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='587'>/// safeFind - Find an interval that is known to exist. This is the same as
  /// findFrom except is it assumed that x is at least within range of the last
  /// interval.
  /// @param i Starting index for the search.
  /// @param x Key to search for.
  /// @return  First index with !stopLess(key[i].stop, x), never size.
  ///          This is the first interval that can possibly contain x.</doc>
