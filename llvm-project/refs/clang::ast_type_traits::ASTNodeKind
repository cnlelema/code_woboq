<def f='llvm/clang/include/clang/AST/ASTTypeTraits.h' l='57' ll='186'/>
<size>4</size>
<doc f='llvm/clang/include/clang/AST/ASTTypeTraits.h' l='52'>/// Kind identifier.
///
/// It can be constructed from any node kind and allows for runtime type
/// hierarchy checks.
/// Use getFromNodeKind&lt;T&gt;() to construct them.</doc>
<fun r='_ZN5clang15ast_type_traits11ASTNodeKindC1Ev'/>
<fun r='_ZN5clang15ast_type_traits11ASTNodeKind15getFromNodeKindEv'/>
<fun r='_ZN5clang15ast_type_traits11ASTNodeKind11getFromNodeERKNS_4DeclE'/>
<fun r='_ZN5clang15ast_type_traits11ASTNodeKind11getFromNodeERKNS_4StmtE'/>
<fun r='_ZN5clang15ast_type_traits11ASTNodeKind11getFromNodeERKNS_4TypeE'/>
<fun r='_ZN5clang15ast_type_traits11ASTNodeKind11getFromNodeERKNS_9OMPClauseE'/>
<fun r='_ZNK5clang15ast_type_traits11ASTNodeKind6isSameES1_'/>
<fun r='_ZNK5clang15ast_type_traits11ASTNodeKind6isNoneEv'/>
<fun r='_ZNK5clang15ast_type_traits11ASTNodeKind8isBaseOfES1_Pj'/>
<fun r='_ZNK5clang15ast_type_traits11ASTNodeKind11asStringRefEv'/>
<fun r='_ZNK5clang15ast_type_traits11ASTNodeKindltERKS1_'/>
<fun r='_ZN5clang15ast_type_traits11ASTNodeKind18getMostDerivedTypeES1_S1_'/>
<fun r='_ZN5clang15ast_type_traits11ASTNodeKind28getMostDerivedCommonAncestorES1_S1_'/>
<fun r='_ZNK5clang15ast_type_traits11ASTNodeKind18hasPointerIdentityEv'/>
<fun r='_ZN5clang15ast_type_traits11ASTNodeKindC1ENS1_10NodeKindIdE'/>
<fun r='_ZN5clang15ast_type_traits11ASTNodeKind8isBaseOfENS1_10NodeKindIdES2_Pj'/>
<smbr r='clang::ast_type_traits::ASTNodeKind::AllKindInfo' t='const clang::ast_type_traits::ASTNodeKind::KindInfo [120]'/>
<mbr r='clang::ast_type_traits::ASTNodeKind::KindId' o='0' t='clang::ast_type_traits::ASTNodeKind::NodeKindId'/>
