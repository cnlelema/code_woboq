<dec f='llvm/llvm/lib/TableGen/TGParser.h' l='172' type='bool llvm::TGParser::ParseTemplateArgList(llvm::Record * CurRec)'/>
<def f='llvm/llvm/lib/TableGen/TGParser.cpp' l='2519' ll='2552' type='bool llvm::TGParser::ParseTemplateArgList(llvm::Record * CurRec)'/>
<use f='llvm/llvm/lib/TableGen/TGParser.cpp' l='2846' u='c' c='_ZN4llvm8TGParser10ParseClassEv'/>
<use f='llvm/llvm/lib/TableGen/TGParser.cpp' l='2976' u='c' c='_ZN4llvm8TGParser15ParseMultiClassEv'/>
<doc f='llvm/llvm/lib/TableGen/TGParser.cpp' l='2512'>/// ParseTemplateArgList - Read a template argument list, which is a non-empty
/// sequence of template-declarations in &lt;&gt;&apos;s.  If CurRec is non-null, these are
/// template args for a def, which may or may not be in a multiclass.  If null,
/// these are the template args for a multiclass.
///
///    TemplateArgList ::= &apos;&lt;&apos; Declaration (&apos;,&apos; Declaration)* &apos;&gt;&apos;
///</doc>
