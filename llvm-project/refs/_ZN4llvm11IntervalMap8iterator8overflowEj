<dec f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1529' type='bool llvm::IntervalMap::iterator::overflow(unsigned int Level)'/>
<def f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1962' ll='2039' type='bool llvm::IntervalMap::iterator::overflow(unsigned int Level)'/>
<doc f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1956'>/// overflow - Distribute entries of the current node evenly among
/// its siblings and ensure that the current node is not full.
/// This may require allocating a new node.
/// @tparam NodeT The type of node at Level (Leaf or Branch).
/// @param Level path index of the overflowing node.
/// @return True when the tree height was changed.</doc>
