<dec f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.h' l='422' type='bool llvm::ARMBaseInstrInfo::isFpMLxInstruction(unsigned int Opcode, unsigned int &amp; MulOpc, unsigned int &amp; AddSubOpc, bool &amp; NegAcc, bool &amp; HasLane) const'/>
<doc f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.h' l='419'>/// isFpMLxInstruction - This version also returns the multiply opcode and the
  /// addition / subtraction opcode to expand to. Return true for &apos;HasLane&apos; for
  /// the MLX instructions with an extra lane operand.</doc>
<def f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp' l='4661' ll='4675' type='bool llvm::ARMBaseInstrInfo::isFpMLxInstruction(unsigned int Opcode, unsigned int &amp; MulOpc, unsigned int &amp; AddSubOpc, bool &amp; NegAcc, bool &amp; HasLane) const'/>
<use f='llvm/llvm/lib/Target/ARM/MLxExpansionPass.cpp' l='358' u='c' c='_ZN12_GLOBAL__N_112MLxExpansion23ExpandFPMLxInstructionsERN4llvm17MachineBasicBlockE'/>
