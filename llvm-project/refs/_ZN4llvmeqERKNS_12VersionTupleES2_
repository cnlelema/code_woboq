<def f='llvm/llvm/include/llvm/Support/VersionTuple.h' l='92' ll='95' type='bool llvm::operator==(const llvm::VersionTuple &amp; X, const llvm::VersionTuple &amp; Y)'/>
<use f='llvm/llvm/include/llvm/Support/VersionTuple.h' l='102' u='c' c='_ZN4llvmneERKNS_12VersionTupleES2_'/>
<use f='llvm/clang/include/clang/Basic/ObjCRuntime.h' l='465' u='c' c='_ZN5clangeqERKNS_11ObjCRuntimeES2_'/>
<doc f='llvm/llvm/include/llvm/Support/VersionTuple.h' l='90'>/// Determine if two version numbers are equivalent. If not
  /// provided, minor and subminor version numbers are considered to be zero.</doc>
<use f='llvm/clang/lib/Driver/ToolChains/Darwin.h' l='338' u='c' c='_ZNK5clang6driver10toolchains6Darwin9setTargetENS2_18DarwinPlatformKindENS2_21DarwinEnvironmentKindEjjj'/>
<use f='llvm/clang/lib/Sema/SemaDeclAttr.cpp' l='2346' u='c' c='_ZL13versionsMatchRKN4llvm12VersionTupleES2_b'/>
