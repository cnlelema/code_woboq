<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizationArtifactCombiner.h' l='50' u='c' c='_ZN4llvm28LegalizationArtifactCombiner16tryCombineAnyExtERNS_12MachineInstrERNS_15SmallVectorImplIPS1_EE'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizationArtifactCombiner.h' l='62' u='c' c='_ZN4llvm28LegalizationArtifactCombiner16tryCombineAnyExtERNS_12MachineInstrERNS_15SmallVectorImplIPS1_EE'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizationArtifactCombiner.h' l='91' u='c' c='_ZN4llvm28LegalizationArtifactCombiner14tryCombineZExtERNS_12MachineInstrERNS_15SmallVectorImplIPS1_EE'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizationArtifactCombiner.h' l='125' u='c' c='_ZN4llvm28LegalizationArtifactCombiner14tryCombineSExtERNS_12MachineInstrERNS_15SmallVectorImplIPS1_EE'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizationArtifactCombiner.h' l='160' u='c' c='_ZN4llvm28LegalizationArtifactCombiner18tryFoldImplicitDefERNS_12MachineInstrERNS_15SmallVectorImplIPS1_EE'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizationArtifactCombiner.h' l='252' u='c' c='_ZN4llvm28LegalizationArtifactCombiner16tryCombineMergesERNS_12MachineInstrERNS_15SmallVectorImplIPS1_EE'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizationArtifactCombiner.h' l='311' u='c' c='_ZN4llvm28LegalizationArtifactCombiner17tryCombineExtractERNS_12MachineInstrERNS_15SmallVectorImplIPS1_EE'/>
<def f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizationArtifactCombiner.h' l='372' ll='402' type='void llvm::LegalizationArtifactCombiner::markInstAndDefDead(llvm::MachineInstr &amp; MI, llvm::MachineInstr &amp; DefMI, SmallVectorImpl&lt;llvm::MachineInstr *&gt; &amp; DeadInsts)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizationArtifactCombiner.h' l='367'>/// Mark MI as dead. If a def of one of MI&apos;s operands, DefMI, would also be
  /// dead due to MI being killed, then mark DefMI as dead too.
  /// Some of the combines (extends(trunc)), try to walk through redundant
  /// copies in between the extends and the truncs, and this attempts to collect
  /// the in between copies if they&apos;re dead.</doc>
