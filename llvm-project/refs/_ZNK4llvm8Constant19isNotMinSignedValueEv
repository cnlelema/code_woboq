<dec f='llvm/llvm/include/llvm/IR/Constant.h' l='68' type='bool llvm::Constant::isNotMinSignedValue() const'/>
<doc f='llvm/llvm/include/llvm/IR/Constant.h' l='67'>/// Return true if the value is not the smallest signed value.</doc>
<def f='llvm/llvm/lib/IR/Constants.cpp' l='177' ll='199' type='bool llvm::Constant::isNotMinSignedValue() const'/>
<use f='llvm/llvm/lib/IR/Constants.cpp' l='191' u='c' c='_ZNK4llvm8Constant19isNotMinSignedValueEv'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp' l='1553' u='c' c='_ZN4llvm12InstCombiner8visitSubERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='3454' u='c' c='_ZN4llvm12InstCombiner13foldICmpBinOpERNS_8ICmpInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='165' u='c' c='_ZN4llvm12InstCombiner8visitMulERNS_14BinaryOperatorE'/>
