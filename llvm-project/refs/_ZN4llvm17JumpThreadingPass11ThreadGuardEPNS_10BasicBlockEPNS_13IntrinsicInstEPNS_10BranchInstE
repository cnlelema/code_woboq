<dec f='llvm/llvm/include/llvm/Transforms/Scalar/JumpThreading.h' l='149' type='bool llvm::JumpThreadingPass::ThreadGuard(llvm::BasicBlock * BB, llvm::IntrinsicInst * Guard, llvm::BranchInst * BI)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2655' u='c' c='_ZN4llvm17JumpThreadingPass13ProcessGuardsEPNS_10BasicBlockE'/>
<def f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2664' ll='2734' type='bool llvm::JumpThreadingPass::ThreadGuard(llvm::BasicBlock * BB, llvm::IntrinsicInst * Guard, llvm::BranchInst * BI)'/>
<doc f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2661'>/// Try to propagate the guard from BB which is the lower block of a diamond
/// to one of its branches, in case if diamond&apos;s condition implies guard&apos;s
/// condition.</doc>
