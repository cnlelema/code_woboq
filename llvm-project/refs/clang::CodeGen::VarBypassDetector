<def f='llvm/clang/lib/CodeGen/VarBypassDetector.h' l='39' ll='66'/>
<size>1128</size>
<doc f='llvm/clang/lib/CodeGen/VarBypassDetector.h' l='30'>/// The class detects jumps which bypass local variables declaration:
///    goto L;
///    int a;
///  L:
///
/// This is simplified version of JumpScopeChecker. Primary differences:
///  * Detects only jumps into the scope local variables.
///  * Does not detect jumps out of the scope of local variables.
///  * Not limited to variables with initializers, JumpScopeChecker is limited.</doc>
<mbr r='clang::CodeGen::VarBypassDetector::Scopes' o='0' t='llvm::SmallVector&lt;std::pair&lt;unsigned int, const VarDecl *&gt;, 48&gt;'/>
<mbr r='clang::CodeGen::VarBypassDetector::FromScopes' o='6272' t='llvm::SmallVector&lt;std::pair&lt;const Stmt *, unsigned int&gt;, 16&gt;'/>
<mbr r='clang::CodeGen::VarBypassDetector::ToScopes' o='8448' t='llvm::DenseMap&lt;const Stmt *, unsigned int&gt;'/>
<mbr r='clang::CodeGen::VarBypassDetector::Bypasses' o='8704' t='llvm::DenseSet&lt;const VarDecl *&gt;'/>
<mbr r='clang::CodeGen::VarBypassDetector::AlwaysBypassed' o='8960' t='bool'/>
<fun r='_ZN5clang7CodeGen17VarBypassDetector4InitEPKNS_4StmtE'/>
<fun r='_ZNK5clang7CodeGen17VarBypassDetector10IsBypassedEPKNS_7VarDeclE'/>
<fun r='_ZN5clang7CodeGen17VarBypassDetector21BuildScopeInformationEPKNS_4DeclERj'/>
<fun r='_ZN5clang7CodeGen17VarBypassDetector21BuildScopeInformationEPKNS_4StmtERj'/>
<fun r='_ZN5clang7CodeGen17VarBypassDetector6DetectEv'/>
<fun r='_ZN5clang7CodeGen17VarBypassDetector6DetectEjj'/>
