<dec f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='4261' type='llvm::Value * clang::CodeGen::CodeGenFunction::emitBuiltinObjectSize(const clang::Expr * E, unsigned int Type, llvm::IntegerType * ResType, llvm::Value * EmittedE, bool IsDynamic)'/>
<doc f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='4258'>/// Emits the size of E, as required by __builtin_object_size. This
  /// function is aware of pass_object_size parameters, and will act accordingly
  /// if E is a parameter with the pass_object_size attribute.</doc>
<use f='llvm/clang/lib/CodeGen/CGBuiltin.cpp' l='562' u='c' c='_ZN5clang7CodeGen15CodeGenFunction31evaluateOrEmitBuiltinObjectSizeEPKNS_4ExprEjPN4llvm11IntegerTypeEPNS5_5ValueEb'/>
<def f='llvm/clang/lib/CodeGen/CGBuiltin.cpp' l='575' ll='617' type='llvm::Value * clang::CodeGen::CodeGenFunction::emitBuiltinObjectSize(const clang::Expr * E, unsigned int Type, llvm::IntegerType * ResType, llvm::Value * EmittedE, bool IsDynamic)'/>
<use f='llvm/clang/lib/CodeGen/CGBuiltin.cpp' l='2224' u='c' c='_ZN5clang7CodeGen15CodeGenFunction15EmitBuiltinExprENS_10GlobalDeclEjPKNS_8CallExprENS0_15ReturnValueSlotE'/>
<doc f='llvm/clang/lib/CodeGen/CGBuiltin.cpp' l='566'>/// Returns a Value corresponding to the size of the given expression.
/// This Value may be either of the following:
///   - A llvm::Argument (if E is a param with the pass_object_size attribute on
///     it)
///   - A call to the @llvm.objectsize intrinsic
///
/// EmittedE is the result of emitting `E` as a scalar expr. If it&apos;s non-null
/// and we wouldn&apos;t otherwise try to reference a pass_object_size parameter,
/// we&apos;ll call @llvm.objectsize on EmittedE, rather than emitting E.</doc>
