<use f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='425' u='c' c='_ZN4llvm21InterleavedAccessInfoD1Ev'/>
<def f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='437' ll='446' type='void llvm::InterleavedAccessInfo::reset()'/>
<doc f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='433'>/// Invalidate groups, e.g., in case all blocks in loop will be predicated
  /// contrary to original assumption. Although we currently prevent group
  /// formation for predicated accesses, we may be able to relax this limitation
  /// in the future once we handle more complicated blocks.</doc>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='6194' u='c' c='_ZN4llvm24LoopVectorizationPlanner4planEbj'/>
