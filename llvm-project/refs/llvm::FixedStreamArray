<def f='llvm/llvm/include/llvm/Support/BinaryStreamArray.h' l='258' ll='315'/>
<doc f='llvm/llvm/include/llvm/Support/BinaryStreamArray.h' l='253'>/// FixedStreamArray is similar to VarStreamArray, except with each record
/// having a fixed-length.  As with VarStreamArray, there is no upfront
/// cost associated with building or copying a FixedStreamArray, as the
/// memory for each element is not read from the backing stream until that
/// element is iterated.</doc>
<fun r='_ZN4llvm16FixedStreamArrayC1Ev'/>
<fun r='_ZN4llvm16FixedStreamArrayC1ENS_15BinaryStreamRefE'/>
<fun r='_ZNK4llvm16FixedStreamArrayeqERKNS_16FixedStreamArrayIT_EE'/>
<fun r='_ZNK4llvm16FixedStreamArrayneERKNS_16FixedStreamArrayIT_EE'/>
<fun r='_ZN4llvm16FixedStreamArrayaSERKNS_16FixedStreamArrayIT_EE'/>
<fun r='_ZNK4llvm16FixedStreamArrayixEj'/>
<fun r='_ZNK4llvm16FixedStreamArray4sizeEv'/>
<fun r='_ZNK4llvm16FixedStreamArray5emptyEv'/>
<fun r='_ZNK4llvm16FixedStreamArray5beginEv'/>
<fun r='_ZNK4llvm16FixedStreamArray3endEv'/>
<fun r='_ZNK4llvm16FixedStreamArray5frontEv'/>
<fun r='_ZNK4llvm16FixedStreamArray4backEv'/>
<fun r='_ZNK4llvm16FixedStreamArray19getUnderlyingStreamEv'/>
<mbr r='llvm::FixedStreamArray::Stream' t='llvm::BinaryStreamRef'/>
