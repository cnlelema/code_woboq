<def f='llvm/llvm/include/llvm/IR/GlobalValue.h' l='546' ll='548' type='bool llvm::GlobalValue::isStrongDefinitionForLinker() const'/>
<use f='llvm/llvm/include/llvm/IR/GlobalVariable.h' l='134' u='c' c='_ZNK4llvm14GlobalVariable20hasUniqueInitializerEv'/>
<doc f='llvm/llvm/include/llvm/IR/GlobalValue.h' l='540'>/// Returns true if this global&apos;s definition will be the one chosen by the
  /// linker.
  ///
  /// NB! Ideally this should not be used at the IR level at all.  If you&apos;re
  /// interested in optimization constraints implied by the linker&apos;s ability to
  /// choose an implementation, prefer using \c hasExactDefinition.</doc>
<use f='llvm/llvm/lib/IR/Globals.cpp' l='244' u='c' c='_ZNK4llvm11GlobalValue20canIncreaseAlignmentEv'/>
<use f='llvm/llvm/lib/IR/Value.cpp' l='678' u='c' c='_ZNK4llvm5Value19getPointerAlignmentERKNS_10DataLayoutE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='2083' u='c' c='_ZNK4llvm17ARMTargetLowering9LowerCallERNS_14TargetLowering16CallLoweringInfoERNS_15SmallVectorImplINS_7SDValueEEE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='4457' u='c' c='_ZL17callsShareTOCBasePKN4llvm8FunctionENS_7SDValueERKNS_13TargetMachineE'/>
<use f='llvm/llvm/lib/Target/TargetMachine.cpp' l='173' u='c' c='_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE'/>
