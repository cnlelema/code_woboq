<inh f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='361' c='clang::OMPLoopDirective'/>
<def f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='1062' ll='1116'/>
<size>40</size>
<doc f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='1053'>/// This represents &apos;#pragma omp simd&apos; directive.
///
/// \code
/// #pragma omp simd private(a,b) linear(i,j:s) reduction(+:c,d)
/// \endcode
/// In this example directive &apos;#pragma omp simd&apos; has clauses &apos;private&apos;
/// with the variables &apos;a&apos; and &apos;b&apos;, &apos;linear&apos; with variables &apos;i&apos;, &apos;j&apos; and
/// linear step &apos;s&apos;, &apos;reduction&apos; with operator &apos;+&apos; and variables &apos;c&apos; and &apos;d&apos;.
///</doc>
<fun r='_ZN5clang16OMPSimdDirectiveC1ENS_14SourceLocationES1_jj'/>
<fun r='_ZN5clang16OMPSimdDirectiveC1Ejj'/>
<fun r='_ZN5clang16OMPSimdDirective6CreateERKNS_10ASTContextENS_14SourceLocationES4_jN4llvm8ArrayRefIPNS_9OMPClauseEEEPNS_4StmtERKNS_16OMPLoopDirective11HelperExprsE'/>
<fun r='_ZN5clang16OMPSimdDirective11CreateEmptyERKNS_10ASTContextEjjNS_4Stmt10EmptyShellE'/>
<fun r='_ZN5clang16OMPSimdDirective7classofEPKNS_4StmtE'/>
