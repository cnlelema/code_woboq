<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='852' type='llvm::Instruction * llvm::InstCombiner::foldICmpUsingKnownBits(llvm::ICmpInst &amp; Cmp)'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='4442' ll='4688' type='llvm::Instruction * llvm::InstCombiner::foldICmpUsingKnownBits(llvm::ICmpInst &amp; I)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='4949' u='c' c='_ZN4llvm12InstCombiner13visitICmpInstERNS_8ICmpInstE'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='4440'>/// Try to fold the comparison based on range information we can get by checking
/// whether bits are known to be zero or one in the inputs.</doc>
