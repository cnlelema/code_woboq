<dec f='llvm/clang/include/clang/Sema/Sema.h' l='969' type='1'/>
<use f='llvm/clang/include/clang/Sema/Sema.h' l='1073' u='r' c='_ZNK5clang4Sema33ExpressionEvaluationContextRecord13isUnevaluatedEv'/>
<use f='llvm/clang/include/clang/Sema/Sema.h' l='11270' u='r' c='_ZN5clang32EnterExpressionEvaluationContextC1ERNS_4SemaENS0_11InitListTagEb'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='965'>/// The current expression occurs within a braced-init-list within
    /// an unevaluated operand. This is mostly like a regular unevaluated
    /// context, except that we still instantiate constexpr functions that are
    /// referenced here so that we can perform narrowing checks correctly.</doc>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='15166' c='_ZL37isPotentiallyConstantEvaluatedContextRN5clang4SemaE'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='15279' c='_ZL15isOdrUseContextRN5clang4SemaE'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='16877' c='_ZN5clang4Sema19DiagRuntimeBehaviorENS_14SourceLocationEN4llvm8ArrayRefIPKNS_4StmtEEERKNS_17PartialDiagnosticE'/>
<use f='llvm/clang/lib/Sema/SemaExprMember.cpp' l='136' c='_ZL28ClassifyImplicitMemberAccessRN5clang4SemaERKNS_12LookupResultE'/>
<use f='llvm/clang/lib/Sema/SemaLambda.cpp' l='1799' c='_ZN5clang4Sema15BuildLambdaExprENS_14SourceLocationES1_PNS_4sema15LambdaScopeInfoE'/>
