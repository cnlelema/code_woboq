<dec f='llvm/llvm/lib/AsmParser/LLParser.h' l='549' type='bool llvm::LLParser::ParseArgumentList(SmallVectorImpl&lt;llvm::LLParser::ArgInfo&gt; &amp; ArgList, bool &amp; isVarArg)'/>
<def f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='2556' ll='2622' type='bool llvm::LLParser::ParseArgumentList(SmallVectorImpl&lt;llvm::LLParser::ArgInfo&gt; &amp; ArgList, bool &amp; isVarArg)'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='2634' u='c' c='_ZN4llvm8LLParser17ParseFunctionTypeERPNS_4TypeE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='5361' u='c' c='_ZN4llvm8LLParser19ParseFunctionHeaderERPNS_8FunctionEb'/>
<doc f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='2547'>/// ParseArgumentList - Parse the argument list for a function type or function
/// prototype.
///   ::= &apos;(&apos; ArgTypeListI &apos;)&apos;
/// ArgTypeListI
///   ::= /*empty*/
///   ::= &apos;...&apos;
///   ::= ArgTypeList &apos;,&apos; &apos;...&apos;
///   ::= ArgType (&apos;,&apos; ArgType)*
///</doc>
