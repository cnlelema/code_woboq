<def f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='2154' ll='2158' type='bool llvm::TargetLoweringBase::getAddrModeArguments(llvm::IntrinsicInst * , SmallVectorImpl&lt;llvm::Value *&gt; &amp; , llvm::Type *&amp; ) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='2145'>//===--------------------------------------------------------------------===//
  // Addressing mode description hooks (used by LSR etc).
  //

  /// CodeGenPrepare sinks address calculations into the same BB as Load/Store
  /// instructions reading the address. This allows as much computation as
  /// possible to be done in the address mode for that operand. This hook lets
  /// targets also pass back when this should be done on intrinsics which
  /// load/store.</doc>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='2154'>/*I*/</doc>
<use f='llvm/llvm/lib/CodeGen/CodeGenPrepare.cpp' l='1927' u='c' c='_ZN12_GLOBAL__N_114CodeGenPrepare16optimizeCallInstEPN4llvm8CallInstERb'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/SIISelLowering.cpp' l='969' c='_ZNK4llvm16SITargetLowering20getAddrModeArgumentsEPNS_13IntrinsicInstERNS_15SmallVectorImplIPNS_5ValueEEERPNS_4TypeE'/>
