<inh f='llvm/clang/lib/CodeGen/ABIInfo.h' l='50' c='clang::CodeGen::ABIInfo'/>
<def f='llvm/clang/lib/CodeGen/ABIInfo.h' l='123' ll='141'/>
<size>24</size>
<doc f='llvm/clang/lib/CodeGen/ABIInfo.h' l='118'>/// A refining implementation of ABIInfo for targets that support swiftcall.
  ///
  /// If we find ourselves wanting multiple such refinements, they&apos;ll probably
  /// be independent refinements, and we should probably find another way
  /// to do it than simple inheritance.</doc>
<fun r='_ZN5clang7CodeGen12SwiftABIInfoC1ERNS0_12CodeGenTypesE'/>
<fun r='_ZNK5clang7CodeGen12SwiftABIInfo13supportsSwiftEv'/>
<fun r='_ZNK5clang7CodeGen12SwiftABIInfo28shouldPassIndirectlyForSwiftEN4llvm8ArrayRefIPNS2_4TypeEEEb'/>
<fun r='_ZNK5clang7CodeGen12SwiftABIInfo25isLegalVectorTypeForSwiftENS_9CharUnitsEPN4llvm4TypeEj'/>
<fun r='_ZNK5clang7CodeGen12SwiftABIInfo22isSwiftErrorInRegisterEv'/>
<fun r='_ZN5clang7CodeGen12SwiftABIInfo7classofEPKNS0_7ABIInfoE'/>
<ovr f='llvm/clang/lib/CodeGen/TargetInfo.cpp' l='758' c='(anonymousnamespace)::WebAssemblyABIInfo'/>
<ovr f='llvm/clang/lib/CodeGen/TargetInfo.cpp' l='1026' c='(anonymousnamespace)::X86_32ABIInfo'/>
<ovr f='llvm/clang/lib/CodeGen/TargetInfo.cpp' l='2103' c='(anonymousnamespace)::X86_64ABIInfo'/>
<ovr f='llvm/clang/lib/CodeGen/TargetInfo.cpp' l='2272' c='(anonymousnamespace)::WinX86_64ABIInfo'/>
<ovr f='llvm/clang/lib/CodeGen/TargetInfo.cpp' l='4375' c='(anonymousnamespace)::PPC64_SVR4_ABIInfo'/>
<ovr f='llvm/clang/lib/CodeGen/TargetInfo.cpp' l='4971' c='(anonymousnamespace)::AArch64ABIInfo'/>
<ovr f='llvm/clang/lib/CodeGen/TargetInfo.cpp' l='5589' c='(anonymousnamespace)::ARMABIInfo'/>
<ovr f='llvm/clang/lib/CodeGen/TargetInfo.cpp' l='6505' c='(anonymousnamespace)::SystemZABIInfo'/>
<fun r='_ZNK5clang7CodeGen12SwiftABIInfo25isLegalVectorTypeForSwiftENS_9CharUnitsEPN4llvm4TypeEj'/>
