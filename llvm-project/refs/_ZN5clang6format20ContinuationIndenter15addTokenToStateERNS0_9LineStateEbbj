<dec f='llvm/clang/lib/Format/ContinuationIndenter.h' l='84' type='unsigned int clang::format::ContinuationIndenter::addTokenToState(clang::format::LineState &amp; State, bool Newline, bool DryRun, unsigned int ExtraSpaces = 0)'/>
<doc f='llvm/clang/lib/Format/ContinuationIndenter.h' l='76'>/// Appends the next token to \p State and updates information
  /// necessary for indentation.
  ///
  /// Puts the token on the current line if \p Newline is \c false and adds a
  /// line break and necessary indentation otherwise.
  ///
  /// If \p DryRun is \c false, also creates and stores the required
  /// \c Replacement.</doc>
<def f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='503' ll='538' type='unsigned int clang::format::ContinuationIndenter::addTokenToState(clang::format::LineState &amp; State, bool Newline, bool DryRun, unsigned int ExtraSpaces = 0)'/>
<use f='llvm/clang/lib/Format/FormatToken.cpp' l='128' u='c' c='_ZN5clang6format18CommaSeparatedList16formatAfterTokenERNS0_9LineStateEPNS0_20ContinuationIndenterEb'/>
<use f='llvm/clang/lib/Format/UnwrappedLineFormatter.cpp' l='815' u='c' c='_ZN5clang6format12_GLOBAL__N_126NoColumnLimitLineFormatter10formatLineERKNS0_13AnnotatedLineEjjb'/>
<use f='llvm/clang/lib/Format/UnwrappedLineFormatter.cpp' l='837' u='c' c='_ZN5clang6format12_GLOBAL__N_120NoLineBreakFormatter10formatLineERKNS0_13AnnotatedLineEjjb'/>
<use f='llvm/clang/lib/Format/UnwrappedLineFormatter.cpp' l='987' u='c' c='_ZN5clang6format12_GLOBAL__N_123OptimizingLineFormatter19addNextStateToQueueEjPNS2_9StateNodeEbPjPSt14priority_queueISt4pairIS7_IjjES4_ESt6vectorIS9_S1276459'/>
<use f='llvm/clang/lib/Format/UnwrappedLineFormatter.cpp' l='1005' u='c' c='_ZN5clang6format12_GLOBAL__N_123OptimizingLineFormatter15reconstructPathERNS0_9LineStateEPNS2_9StateNodeE'/>
