<inh f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='361' c='clang::OMPLoopDirective'/>
<def f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='1127' ll='1193'/>
<size>40</size>
<doc f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='1118'>/// This represents &apos;#pragma omp for&apos; directive.
///
/// \code
/// #pragma omp for private(a,b) reduction(+:c,d)
/// \endcode
/// In this example directive &apos;#pragma omp for&apos; has clauses &apos;private&apos; with the
/// variables &apos;a&apos; and &apos;b&apos; and &apos;reduction&apos; with operator &apos;+&apos; and variables &apos;c&apos;
/// and &apos;d&apos;.
///</doc>
<mbr r='clang::OMPForDirective::HasCancel' o='288' t='bool'/>
<fun r='_ZN5clang15OMPForDirectiveC1ENS_14SourceLocationES1_jj'/>
<fun r='_ZN5clang15OMPForDirectiveC1Ejj'/>
<fun r='_ZN5clang15OMPForDirective12setHasCancelEb'/>
<fun r='_ZN5clang15OMPForDirective6CreateERKNS_10ASTContextENS_14SourceLocationES4_jN4llvm8ArrayRefIPNS_9OMPClauseEEEPNS_4StmtERKNS_16OMPLoopDirective11HelperExprsEb'/>
<fun r='_ZN5clang15OMPForDirective11CreateEmptyERKNS_10ASTContextEjjNS_4Stmt10EmptyShellE'/>
<fun r='_ZNK5clang15OMPForDirective9hasCancelEv'/>
<fun r='_ZN5clang15OMPForDirective7classofEPKNS_4StmtE'/>
