<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1839' type='const llvm::SCEV * llvm::ScalarEvolution::computeMaxBECountForLT(const llvm::SCEV * Start, const llvm::SCEV * Stride, const llvm::SCEV * End, unsigned int BitWidth, bool IsSigned)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1833'>/// Compute the maximum backedge count based on the range of values
  /// permitted by Start, End, and Stride. This is for loops of the form
  /// {Start, +, Stride} LT End.
  ///
  /// Precondition: the induction variable is known to be positive.  We *don&apos;t*
  /// assert these preconditions so please be careful.</doc>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='10448' ll='10489' type='const llvm::SCEV * llvm::ScalarEvolution::computeMaxBECountForLT(const llvm::SCEV * Start, const llvm::SCEV * Stride, const llvm::SCEV * End, unsigned int BitWidth, bool IsSigned)'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='10584' u='c' c='_ZN4llvm15ScalarEvolution16howManyLessThansEPKNS_4SCEVES3_PKNS_4LoopEbbb'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='10621' u='c' c='_ZN4llvm15ScalarEvolution16howManyLessThansEPKNS_4SCEVES3_PKNS_4LoopEbbb'/>
