<dec f='llvm/clang/include/clang/AST/ASTImporter.h' l='297' type='clang::IdentifierInfo * clang::ASTImporter::Import(const clang::IdentifierInfo * FromId)'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='871' u='c' c='_ZN5clang15ASTNodeImporter6importERKT_'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='1428' u='c' c='_ZN5clang15ASTNodeImporter40VisitDependentTemplateSpecializationTypeEPKNS_35DependentTemplateSpecializationTypeE'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='1446' u='c' c='_ZN5clang15ASTNodeImporter22VisitDependentNameTypeEPKNS_17DependentNameTypeE'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='5559' u='c' c='_ZN5clang15ASTNodeImporter15VisitGCCAsmStmtEPNS_10GCCAsmStmtE'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='5566' u='c' c='_ZN5clang15ASTNodeImporter15VisitGCCAsmStmtEPNS_10GCCAsmStmtE'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='6739' u='c' c='_ZN5clang15ASTNodeImporter17VisitOffsetOfExprEPNS_12OffsetOfExprE'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='7141' u='c' c='_ZN5clang15ASTNodeImporter28VisitCXXPseudoDestructorExprEPNS_23CXXPseudoDestructorExprE'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='7965' u='c' c='_ZN5clang11ASTImporter6ImportEPNS_19NestedNameSpecifierE'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='8138' u='c' c='_ZN5clang11ASTImporter6ImportENS_12TemplateNameE'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='8420' u='c' c='_ZN5clang11ASTImporter6ImportENS_15DeclarationNameE'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='8468' u='c' c='_ZN5clang11ASTImporter6ImportENS_15DeclarationNameE'/>
<def f='llvm/clang/lib/AST/ASTImporter.cpp' l='8478' ll='8488' type='clang::IdentifierInfo * clang::ASTImporter::Import(const clang::IdentifierInfo * FromId)'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='8495' u='c' c='_ZN5clang11ASTImporter6ImportENS_8SelectorE'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='8497' u='c' c='_ZN5clang11ASTImporter6ImportENS_8SelectorE'/>
<doc f='llvm/clang/include/clang/AST/ASTImporter.h' l='292'>/// Import the given identifier from the &quot;from&quot; context
    /// into the &quot;to&quot; context.
    ///
    /// \returns The equivalent identifier in the &quot;to&quot; context. Note: It
    /// returns nullptr only if the FromId was nullptr.</doc>
