<dec f='llvm/clang/include/clang/Sema/Sema.h' l='6549' type='clang::TemplateNameKind clang::Sema::ActOnDependentTemplateName(clang::Scope * S, clang::CXXScopeSpec &amp; SS, clang::SourceLocation TemplateKWLoc, const clang::UnqualifiedId &amp; Name, ParsedType ObjectType, bool EnteringContext, TemplateTy &amp; Template, bool AllowInjectedClassName = false)'/>
<use f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='322' u='c' c='_ZN5clang6Parser30ParseOptionalCXXScopeSpecifierERNS_12CXXScopeSpecENS_9OpaquePtrINS_8QualTypeEEEbPbbPPNS_14IdentifierInfoEb'/>
<use f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='528' u='c' c='_ZN5clang6Parser30ParseOptionalCXXScopeSpecifierERNS_12CXXScopeSpecENS_9OpaquePtrINS_8QualTypeEEEbPbbPPNS_14IdentifierInfoEb'/>
<use f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='2201' u='c' c='_ZN5clang6Parser28ParseUnqualifiedIdTemplateIdERNS_12CXXScopeSpecENS_14SourceLocationEPNS_14IdentifierInfoES3_bNS_9OpaquePtrINS_8QualTypeEEERNS_13UnqualifiedIdEb'/>
<use f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='2238' u='c' c='_ZN5clang6Parser28ParseUnqualifiedIdTemplateIdERNS_12CXXScopeSpecENS_14SourceLocationEPNS_14IdentifierInfoES3_bNS_9OpaquePtrINS_8QualTypeEEERNS_13UnqualifiedIdEb'/>
<use f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='2263' u='c' c='_ZN5clang6Parser28ParseUnqualifiedIdTemplateIdERNS_12CXXScopeSpecENS_14SourceLocationEPNS_14IdentifierInfoES3_bNS_9OpaquePtrINS_8QualTypeEEERNS_13UnqualifiedIdEb'/>
<use f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='2675' u='c' c='_ZN5clang6Parser18ParseUnqualifiedIdERNS_12CXXScopeSpecEbbbbNS_9OpaquePtrINS_8QualTypeEEEPNS_14SourceLocationERNS_13UnqualifiedIdE'/>
<use f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='2754' u='c' c='_ZN5clang6Parser18ParseUnqualifiedIdERNS_12CXXScopeSpecEbbbbNS_9OpaquePtrINS_8QualTypeEEEPNS_14SourceLocationERNS_13UnqualifiedIdE'/>
<use f='llvm/clang/lib/Parse/ParseTemplate.cpp' l='1192' u='c' c='_ZN5clang6Parser29ParseTemplateTemplateArgumentEv'/>
<def f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='4331' ll='4436' type='clang::TemplateNameKind clang::Sema::ActOnDependentTemplateName(clang::Scope * S, clang::CXXScopeSpec &amp; SS, clang::SourceLocation TemplateKWLoc, const clang::UnqualifiedId &amp; Name, ParsedType ObjectType, bool EnteringContext, TemplateTy &amp; Result, bool AllowInjectedClassName = false)'/>
<doc f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='4324'>/// Form a dependent template name.
///
/// This action forms a dependent template name given the template
/// name and its (presumably dependent) scope specifier. For
/// example, given &quot;MetaFun::template apply&quot;, the scope specifier \p
/// SS will be &quot;MetaFun::&quot;, \p TemplateKWLoc contains the location
/// of the &quot;template&quot; keyword, and &quot;apply&quot; is the \p Name.</doc>
