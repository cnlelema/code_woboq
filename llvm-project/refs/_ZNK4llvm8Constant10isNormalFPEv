<dec f='llvm/llvm/include/llvm/IR/Constant.h' l='79' type='bool llvm::Constant::isNormalFP() const'/>
<doc f='llvm/llvm/include/llvm/IR/Constant.h' l='77'>/// Return true if this is a normal (as opposed to denormal) floating-point
  /// scalar constant or a vector constant with all normal elements.</doc>
<def f='llvm/llvm/lib/IR/Constants.cpp' l='214' ll='225' type='bool llvm::Constant::isNormalFP() const'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='400' u='c' c='_ZN4llvm12InstCombiner9visitFMulERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='406' u='c' c='_ZN4llvm12InstCombiner9visitFMulERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='412' u='c' c='_ZN4llvm12InstCombiner9visitFMulERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='1112' u='c' c='_ZL23foldFDivConstantDivisorRN4llvm14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='1120' u='c' c='_ZL23foldFDivConstantDivisorRN4llvm14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='1154' u='c' c='_ZL24foldFDivConstantDividendRN4llvm14BinaryOperatorE'/>
