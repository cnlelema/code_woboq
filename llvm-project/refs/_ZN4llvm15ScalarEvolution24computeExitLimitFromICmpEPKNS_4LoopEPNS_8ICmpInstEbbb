<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1573' type='llvm::ScalarEvolution::ExitLimit llvm::ScalarEvolution::computeExitLimitFromICmp(const llvm::Loop * L, llvm::ICmpInst * ExitCond, bool ExitIfTrue, bool IsSubExpr, bool AllowPredicates = false)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1568'>/// Compute the number of times the backedge of the specified loop will
  /// execute if its exit condition were a conditional branch of the ICmpInst
  /// ExitCond and ExitIfTrue. If AllowPredicates is set, this call will try
  /// to use a minimal set of SCEV predicates in order to return an exact
  /// answer.</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='7284' u='c' c='_ZN4llvm15ScalarEvolution28computeExitLimitFromCondImplERNS0_14ExitLimitCacheEPKNS_4LoopEPNS_5ValueEbbb'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='7289' u='c' c='_ZN4llvm15ScalarEvolution28computeExitLimitFromCondImplERNS0_14ExitLimitCacheEPKNS_4LoopEPNS_5ValueEbbb'/>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='7310' ll='7407' type='ScalarEvolution::ExitLimit llvm::ScalarEvolution::computeExitLimitFromICmp(const llvm::Loop * L, llvm::ICmpInst * ExitCond, bool ExitIfTrue, bool ControlsExit, bool AllowPredicates = false)'/>
