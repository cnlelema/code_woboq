<dec f='llvm/clang/include/clang/Sema/Sema.h' l='5675' type='bool clang::Sema::ActOnCXXNestedNameSpecifier(clang::Scope * S, clang::CXXScopeSpec &amp; SS, clang::SourceLocation TemplateKWLoc, TemplateTy TemplateName, clang::SourceLocation TemplateNameLoc, clang::SourceLocation LAngleLoc, ASTTemplateArgsPtr TemplateArgs, clang::SourceLocation RAngleLoc, clang::SourceLocation CCLoc, bool EnteringContext)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='5652'>/// The parser has parsed a nested-name-specifier
  /// &apos;template[opt] template-name &lt; template-args &gt;::&apos;.
  ///
  /// \param S The scope in which this nested-name-specifier occurs.
  ///
  /// \param SS The nested-name-specifier, which is both an input
  /// parameter (the nested-name-specifier before this type) and an
  /// output parameter (containing the full nested-name-specifier,
  /// including this new type).
  ///
  /// \param TemplateKWLoc the location of the &apos;template&apos; keyword, if any.
  /// \param TemplateName the template name.
  /// \param TemplateNameLoc The location of the template name.
  /// \param LAngleLoc The location of the opening angle bracket  (&apos;&lt;&apos;).
  /// \param TemplateArgs The template arguments.
  /// \param RAngleLoc The location of the closing angle bracket  (&apos;&gt;&apos;).
  /// \param CCLoc The location of the &apos;::&apos;.
  ///
  /// \param EnteringContext Whether we&apos;re entering the context of the
  /// nested-name-specifier.
  ///
  ///
  /// \returns true if an error occurred, false otherwise.</doc>
<use f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='362' u='c' c='_ZN5clang6Parser30ParseOptionalCXXScopeSpecifierERNS_12CXXScopeSpecENS_9OpaquePtrINS_8QualTypeEEEbPbbPPNS_14IdentifierInfoEb'/>
<def f='llvm/clang/lib/Sema/SemaCXXScopeSpec.cpp' l='888' ll='983' type='bool clang::Sema::ActOnCXXNestedNameSpecifier(clang::Scope * S, clang::CXXScopeSpec &amp; SS, clang::SourceLocation TemplateKWLoc, TemplateTy OpaqueTemplate, clang::SourceLocation TemplateNameLoc, clang::SourceLocation LAngleLoc, ASTTemplateArgsPtr TemplateArgsIn, clang::SourceLocation RAngleLoc, clang::SourceLocation CCLoc, bool EnteringContext)'/>
