<dec f='llvm/clang/include/clang/CodeGen/SwiftCallingConv.h' l='153' type='void clang::CodeGen::swiftcall::legalizeVectorType(clang::CodeGen::CodeGenModule &amp; CGM, clang::CharUnits vectorSize, llvm::VectorType * vectorTy, llvm::SmallVectorImpl&lt;llvm::Type *&gt; &amp; types)'/>
<doc f='llvm/clang/include/clang/CodeGen/SwiftCallingConv.h' l='149'>/// Turn a vector type in a sequence of legal component vector types.
///
/// The caller may assume that the sum of the data sizes of the resulting
/// types will equal the data size of the vector type.</doc>
<use f='llvm/clang/lib/CodeGen/SwiftCallingConv.cpp' l='206' u='c' c='_ZN5clang7CodeGen9swiftcall16SwiftAggLowering12addTypedDataEPN4llvm4TypeENS_9CharUnitsES6_'/>
<def f='llvm/clang/lib/CodeGen/SwiftCallingConv.cpp' l='703' ll='774' type='void clang::CodeGen::swiftcall::legalizeVectorType(clang::CodeGen::CodeGenModule &amp; CGM, clang::CharUnits origVectorSize, llvm::VectorType * origVectorTy, llvm::SmallVectorImpl&lt;llvm::Type *&gt; &amp; components)'/>
