<def f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='2214' ll='2216' type='bool llvm::TargetLoweringBase::isLegalAddImmediate(int64_t ) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='2211'>/// Return true if the specified immediate is legal add immediate, that is the
  /// target has add instructions which can add a register with the immediate
  /// without having to materialize the immediate into a register.</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp' l='4521' u='c' c='_ZN12_GLOBAL__N_111DAGCombiner12visitANDLikeEN4llvm7SDValueES2_PNS1_6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp' l='4526' u='c' c='_ZN12_GLOBAL__N_111DAGCombiner12visitANDLikeEN4llvm7SDValueES2_PNS1_6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp' l='14208' u='c' c='_ZNK12_GLOBAL__N_111LoadedSlice7isLegalEv'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='8738' c='_ZNK4llvm21AArch64TargetLowering19isLegalAddImmediateEl'/>
<ovr f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='13513' c='_ZNK4llvm17ARMTargetLowering19isLegalAddImmediateEl'/>
<use f='llvm/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp' l='528' u='c' c='_ZN12_GLOBAL__N_115ARMLoadStoreOpt17UpdateBaseRegUsesERN4llvm17MachineBasicBlockENS1_26MachineInstrBundleIteratorINS1_12MachineInstrELb0EEERKNS1_8Debu6282416'/>
<use f='llvm/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp' l='713' u='c' c='_ZN12_GLOBAL__N_115ARMLoadStoreOpt20CreateLoadStoreMultiERN4llvm17MachineBasicBlockENS1_26MachineInstrBundleIteratorINS1_12MachineInstrELb0EEEijbjNS1_3290807'/>
<ovr f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='14561' c='_ZNK4llvm17PPCTargetLowering19isLegalAddImmediateEl'/>
<ovr f='llvm/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp' l='759' c='_ZNK4llvm21SystemZTargetLowering19isLegalAddImmediateEl'/>
<ovr f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='28492' c='_ZNK4llvm17X86TargetLowering19isLegalAddImmediateEl'/>
