<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='677' type='const llvm::SCEV * llvm::ScalarEvolution::getUMinFromMismatchedTypes(SmallVectorImpl&lt;const llvm::SCEV *&gt; &amp; Ops)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='675'>/// Promote the operands to the wider of the types using zero-extension, and
  /// then perform a umin operation with them. N-ary function.</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='4127' u='c' c='_ZN4llvm15ScalarEvolution26getUMinFromMismatchedTypesEPKNS_4SCEVES3_'/>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='4130' ll='4152' type='const llvm::SCEV * llvm::ScalarEvolution::getUMinFromMismatchedTypes(SmallVectorImpl&lt;const llvm::SCEV *&gt; &amp; Ops)'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='6890' u='c' c='_ZNK4llvm15ScalarEvolution17BackedgeTakenInfo8getExactEPKNS_4LoopEPS0_PNS_18SCEVUnionPredicateE'/>
