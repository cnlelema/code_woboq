<def f='llvm/llvm/include/llvm/ExecutionEngine/Orc/Layer.h' l='42' ll='44' type='void llvm::orc::IRLayer::setCloneToNewContextOnEmit(bool CloneToNewContextOnEmit)'/>
<doc f='llvm/llvm/include/llvm/ExecutionEngine/Orc/Layer.h' l='33'>/// Sets the CloneToNewContextOnEmit flag (false by default).
  ///
  /// When set, IR modules added to this layer will be cloned on to a new
  /// context before emit is called. This can be used by clients who want
  /// to load all IR using one LLVMContext (to save memory via type and
  /// constant uniquing), but want to move Modules to fresh contexts before
  /// compiling them to enable concurrent compilation.
  /// Single threaded clients, or clients who load every module on a new
  /// context, need not set this.</doc>
<use f='llvm/llvm/lib/ExecutionEngine/Orc/LLJIT.cpp' l='113' u='c' c='_ZN4llvm3orc5LLJITC1ERNS0_17LLJITBuilderStateERNS_5ErrorE'/>
<use f='llvm/llvm/lib/ExecutionEngine/Orc/LLJIT.cpp' l='231' u='c' c='_ZN4llvm3orc9LLLazyJITC1ERNS0_21LLLazyJITBuilderStateERNS_5ErrorE'/>
