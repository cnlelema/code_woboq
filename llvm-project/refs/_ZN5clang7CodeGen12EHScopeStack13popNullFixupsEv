<dec f='llvm/clang/lib/CodeGen/EHScopeStack.h' l='410' type='void clang::CodeGen::EHScopeStack::popNullFixups()'/>
<doc f='llvm/clang/lib/CodeGen/EHScopeStack.h' l='407'>/// Pops lazily-removed fixups from the end of the list.  This
  /// should only be called by procedures which have just popped a
  /// cleanup or resolved one or more fixups.</doc>
<use f='llvm/clang/lib/CodeGen/CGCleanup.cpp' l='223' u='c' c='_ZN5clang7CodeGen12EHScopeStack10popCleanupEv'/>
<def f='llvm/clang/lib/CodeGen/CGCleanup.cpp' l='263' ll='275' type='void clang::CodeGen::EHScopeStack::popNullFixups()'/>
<use f='llvm/clang/lib/CodeGen/CGCleanup.cpp' l='413' u='c' c='_ZN5clang7CodeGen15CodeGenFunction19ResolveBranchFixupsEPN4llvm10BasicBlockE'/>
<doc f='llvm/clang/lib/CodeGen/CGCleanup.cpp' l='258'>/// Remove any &apos;null&apos; fixups on the stack.  However, we can&apos;t pop more
/// fixups than the fixup depth on the innermost normal cleanup, or
/// else fixups that we try to add to that cleanup will end up in the
/// wrong place.  We *could* try to shrink fixup depths, but that&apos;s
/// actually a lot of work for little benefit.</doc>
