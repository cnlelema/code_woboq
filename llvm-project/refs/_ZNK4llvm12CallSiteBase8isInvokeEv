<def f='llvm/llvm/include/llvm/IR/CallSite.h' l='91' type='bool llvm::CallSiteBase::isInvoke() const'/>
<doc f='llvm/llvm/include/llvm/IR/CallSite.h' l='89'>/// Return true if a InvokeInst is enclosed. !I.getInt() may also signify a
  /// NULL instruction pointer, so check that.</doc>
<use f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3446' u='c' c='_ZN4llvm14TargetLowering16CallLoweringInfo9setCalleeEPNS_4TypeEPNS_12FunctionTypeENS_7SDValueEOSt6vectorINS_18TargetLoweringBase12ArgListEntryESaIS9_E9407170'/>
<use f='llvm/llvm/lib/CodeGen/WinEHPrepare.cpp' l='962' u='c' c='_ZN12_GLOBAL__N_112WinEHPrepare29removeImplausibleInstructionsERN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='4000' u='c' c='_ZNK4llvm17X86TargetLowering9LowerCallERNS_14TargetLowering16CallLoweringInfoERNS_15SmallVectorImplINS_7SDValueEEE'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp' l='3236' u='c' c='_ZN12_GLOBAL__N_122MemorySanitizerVisitor13visitCallSiteEN4llvm8CallSiteE'/>
