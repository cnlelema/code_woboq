<dec f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='126' type='bool llvm::isKnownPositive(const llvm::Value * V, const llvm::DataLayout &amp; DL, unsigned int Depth = 0, llvm::AssumptionCache * AC = nullptr, const llvm::Instruction * CxtI = nullptr, const llvm::DominatorTree * DT = nullptr, bool UseInstrInfo = true)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='124'>/// Returns true if the given value is known be positive (i.e. non-negative
  /// and non-zero).</doc>
<def f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='256' ll='266' type='bool llvm::isKnownPositive(const llvm::Value * V, const llvm::DataLayout &amp; DL, unsigned int Depth = 0, llvm::AssumptionCache * AC = nullptr, const llvm::Instruction * CxtI = nullptr, const llvm::DominatorTree * DT = nullptr, bool UseInstrInfo = true)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='1330' u='c' c='_ZN4llvm12InstCombiner16foldICmpWithZeroERNS_8ICmpInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='1332' u='c' c='_ZN4llvm12InstCombiner16foldICmpWithZeroERNS_8ICmpInstE'/>
