<dec f='llvm/clang/include/clang/Tooling/Refactoring.h' l='92' type='bool clang::tooling::formatAndApplyAllReplacements(const std::map&lt;std::string, Replacements&gt; &amp; FileToReplaces, clang::Rewriter &amp; Rewrite, llvm::StringRef Style = &quot;file&quot;)'/>
<def f='llvm/clang/lib/Tooling/Refactoring.cpp' l='69' ll='100' type='bool clang::tooling::formatAndApplyAllReplacements(const std::map&lt;std::string, Replacements&gt; &amp; FileToReplaces, clang::Rewriter &amp; Rewrite, llvm::StringRef Style = &quot;file&quot;)'/>
<doc f='llvm/clang/include/clang/Tooling/Refactoring.h' l='74'>/// Groups \p Replaces by the file path and applies each group of
/// Replacements on the related file in \p Rewriter. In addition to applying
/// given Replacements, this function also formats the changed code.
///
/// \pre Replacements must be conflict-free.
///
/// FileToReplaces will be deduplicated with `groupReplacementsByFile` before
/// application.
///
/// Replacement applications happen independently of the success of other
/// applications.
///
/// \param[in] FileToReplaces Replacements (grouped by files) to apply.
/// \param[in] Rewrite The `Rewritter` to apply replacements on.
/// \param[in] Style The style name used for reformatting. See ```getStyle``` in
/// &quot;include/clang/Format/Format.h&quot; for all possible style forms.
///
/// \returns true if all replacements applied and formatted. false otherwise.</doc>
<use f='llvm/clang/unittests/Rename/ClangRenameTest.h' l='84' u='c' c='_ZN5clang12clang_rename4test15ClangRenameTest20runClangRenameOnCodeEN4llvm9StringRefES4_S4_'/>
<use f='llvm/clang/unittests/Tooling/RefactoringTest.cpp' l='542' u='c' c='_ZN5clang7tooling50ReplacementTest_MultipleFilesReplaceAndFormat_Test8TestBodyEv'/>
