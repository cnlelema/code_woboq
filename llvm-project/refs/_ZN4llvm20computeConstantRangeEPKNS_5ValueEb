<dec f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='478' type='llvm::ConstantRange llvm::computeConstantRange(const llvm::Value * V, bool UseInstrInfo = true)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='476'>/// Determine the possible constant range of an integer or vector of integer
  /// value. This is intended as a cheap, non-recursive check.</doc>
<use f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='2507' u='c' c='_ZL24simplifyICmpWithConstantN4llvm7CmpInst9PredicateEPNS_5ValueES3_RKNS_14InstrInfoQueryE'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4150' u='c' c='_ZL38computeConstantRangeIncludingKnownBitsPKN4llvm5ValueEbRKNS_10DataLayoutEjPNS_15AssumptionCacheEPKNS_11InstructionEPKNS_13DominatorTreeEPNS_25Opti10733203'/>
<def f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='5828' ll='5853' type='llvm::ConstantRange llvm::computeConstantRange(const llvm::Value * V, bool UseInstrInfo = true)'/>
