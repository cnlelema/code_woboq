<inh f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='361' c='clang::OMPLoopDirective'/>
<def f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='1655' ll='1712'/>
<size>40</size>
<doc f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='1645'>/// This represents &apos;#pragma omp parallel for simd&apos; directive.
///
/// \code
/// #pragma omp parallel for simd private(a,b) linear(i,j:s) reduction(+:c,d)
/// \endcode
/// In this example directive &apos;#pragma omp parallel for simd&apos; has clauses
/// &apos;private&apos; with the variables &apos;a&apos; and &apos;b&apos;, &apos;linear&apos; with variables &apos;i&apos;, &apos;j&apos;
/// and linear step &apos;s&apos;, &apos;reduction&apos; with operator &apos;+&apos; and variables &apos;c&apos; and
/// &apos;d&apos;.
///</doc>
<fun r='_ZN5clang27OMPParallelForSimdDirectiveC1ENS_14SourceLocationES1_jj'/>
<fun r='_ZN5clang27OMPParallelForSimdDirectiveC1Ejj'/>
<fun r='_ZN5clang27OMPParallelForSimdDirective6CreateERKNS_10ASTContextENS_14SourceLocationES4_jN4llvm8ArrayRefIPNS_9OMPClauseEEEPNS_4StmtERKNS_16OMPLoopDirective11HelperExprsE'/>
<fun r='_ZN5clang27OMPParallelForSimdDirective11CreateEmptyERKNS_10ASTContextEjjNS_4Stmt10EmptyShellE'/>
<fun r='_ZN5clang27OMPParallelForSimdDirective7classofEPKNS_4StmtE'/>
