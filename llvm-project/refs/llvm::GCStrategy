<def f='llvm/llvm/include/llvm/CodeGen/GCStrategy.h' l='66' ll='120'/>
<size>48</size>
<doc f='llvm/llvm/include/llvm/CodeGen/GCStrategy.h' l='61'>/// GCStrategy describes a garbage collector algorithm&apos;s code generation
/// requirements, and provides overridable hooks for those needs which cannot
/// be abstractly described.  GCStrategy objects must be looked up through
/// the Function.  The objects themselves are owned by the Context and must
/// be immutable.</doc>
<mbr r='llvm::GCStrategy::Name' o='64' t='std::string'/>
<mbr r='llvm::GCStrategy::UseStatepoints' o='320' t='bool'/>
<mbr r='llvm::GCStrategy::NeededSafePoints' o='328' t='bool'/>
<mbr r='llvm::GCStrategy::UsesMetadata' o='336' t='bool'/>
<fun r='_ZN4llvm10GCStrategyC1Ev'/>
<fun r='_ZN4llvm10GCStrategyD1Ev'/>
<fun r='_ZNK4llvm10GCStrategy7getNameEv'/>
<fun r='_ZNK4llvm10GCStrategy14useStatepointsEv'/>
<fun r='_ZNK4llvm10GCStrategy18isGCManagedPointerEPKNS_4TypeE'/>
<fun r='_ZNK4llvm10GCStrategy15needsSafePointsEv'/>
<fun r='_ZNK4llvm10GCStrategy12usesMetadataEv'/>
<ovr f='llvm/llvm/lib/CodeGen/BuiltinGCs.cpp' l='27' c='(anonymousnamespace)::ErlangGC'/>
<ovr f='llvm/llvm/lib/CodeGen/BuiltinGCs.cpp' l='38' c='(anonymousnamespace)::OcamlGC'/>
<ovr f='llvm/llvm/lib/CodeGen/BuiltinGCs.cpp' l='54' c='(anonymousnamespace)::ShadowStackGC'/>
<ovr f='llvm/llvm/lib/CodeGen/BuiltinGCs.cpp' l='65' c='(anonymousnamespace)::StatepointGC'/>
<ovr f='llvm/llvm/lib/CodeGen/BuiltinGCs.cpp' l='97' c='(anonymousnamespace)::CoreCLRGC'/>
