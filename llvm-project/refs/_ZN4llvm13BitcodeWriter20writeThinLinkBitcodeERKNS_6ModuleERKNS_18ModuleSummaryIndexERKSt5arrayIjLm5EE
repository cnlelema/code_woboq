<dec f='llvm/llvm/include/llvm/Bitcode/BitcodeWriter.h' l='99' type='void llvm::BitcodeWriter::writeThinLinkBitcode(const llvm::Module &amp; M, const llvm::ModuleSummaryIndex &amp; Index, const ModuleHash &amp; ModHash)'/>
<doc f='llvm/llvm/include/llvm/Bitcode/BitcodeWriter.h' l='92'>/// Write the specified thin link bitcode file (i.e., the minimized bitcode
    /// file) to the buffer specified at construction time. The thin link
    /// bitcode file is used for thin link, and it only contains the necessary
    /// information for thin link.
    ///
    /// ModHash is for use in ThinLTO incremental build, generated while the
    /// IR bitcode file writing.</doc>
<def f='llvm/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp' l='4544' ll='4559' type='void llvm::BitcodeWriter::writeThinLinkBitcode(const llvm::Module &amp; M, const llvm::ModuleSummaryIndex &amp; Index, const ModuleHash &amp; ModHash)'/>
<use f='llvm/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp' l='4571' u='c' c='_ZN4llvm26WriteThinLinkBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE'/>
<use f='llvm/llvm/lib/Transforms/IPO/ThinLTOBitcodeWriter.cpp' l='411' u='c' c='_ZN12_GLOBAL__N_127splitAndWriteThinLTOBitcodeERN4llvm11raw_ostreamEPS1_NS0_12function_refIFRNS0_9AAResultsERNS0_8FunctionEEEERNS0_6ModuleE'/>
