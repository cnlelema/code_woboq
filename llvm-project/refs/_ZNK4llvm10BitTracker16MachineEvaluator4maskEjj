<dec f='llvm/llvm/lib/Target/Hexagon/BitTracker.h' l='464' type='llvm::BitTracker::BitMask llvm::BitTracker::MachineEvaluator::mask(unsigned int Reg, unsigned int Sub) const'/>
<use f='llvm/llvm/lib/Target/Hexagon/BitTracker.cpp' l='367' u='c' c='_ZNK4llvm10BitTracker16MachineEvaluator7getCellERKNS0_11RegisterRefERKSt3mapIjNS0_12RegisterCellESt4lessIjESaISt4pairIKjS6_EEE'/>
<def f='llvm/llvm/lib/Target/Hexagon/BitTracker.cpp' l='706' ll='711' type='BT::BitMask llvm::BitTracker::MachineEvaluator::mask(unsigned int Reg, unsigned int Sub) const'/>
<use f='llvm/llvm/lib/Target/Hexagon/BitTracker.cpp' l='735' u='c' c='_ZNK4llvm10BitTracker16MachineEvaluator8evaluateERKNS_12MachineInstrERKSt3mapIjNS0_12RegisterCellESt4lessIjESaISt4pairIKjS6_EEERSD_'/>
<use f='llvm/llvm/lib/Target/Hexagon/BitTracker.cpp' l='736' u='c' c='_ZNK4llvm10BitTracker16MachineEvaluator8evaluateERKNS_12MachineInstrERKSt3mapIjNS0_12RegisterCellESt4lessIjESaISt4pairIKjS6_EEERSD_'/>
<use f='llvm/llvm/lib/Target/Hexagon/BitTracker.cpp' l='1000' u='c' c='_ZN4llvm10BitTracker5substENS0_11RegisterRefES1_'/>
<use f='llvm/llvm/lib/Target/Hexagon/BitTracker.cpp' l='1001' u='c' c='_ZN4llvm10BitTracker5substENS0_11RegisterRefES1_'/>
<doc f='llvm/llvm/lib/Target/Hexagon/BitTracker.h' l='455'>// User-provided functions for individual targets:

  // Return a sub-register mask that indicates which bits in Reg belong
  // to the subregister Sub. These bits are assumed to be contiguous in
  // the super-register, and have the same ordering in the sub-register
  // as in the super-register. It is valid to call this function with
  // Sub == 0, in this case, the function should return a mask that spans
  // the entire register Reg (which is what the default implementation
  // does).</doc>
<ovr f='llvm/llvm/lib/Target/Hexagon/HexagonBitTracker.cpp' l='89' c='_ZNK4llvm16HexagonEvaluator4maskEjj'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonBitTracker.cpp' l='91' u='c' c='_ZNK4llvm16HexagonEvaluator4maskEjj'/>
