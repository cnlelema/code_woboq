<dec f='llvm/llvm/include/llvm/IR/Constants.h' l='1112' type='bool llvm::ConstantExpr::isGEPWithNoNotionalOverIndexing() const'/>
<doc f='llvm/llvm/include/llvm/IR/Constants.h' l='1107'>/// Return true if this is a getelementptr expression and all
  /// the index operands are compile-time known integers within the
  /// corresponding notional static array extents. Note that this is
  /// not equivalant to, a subset of, or a superset of the &quot;inbounds&quot;
  /// property.</doc>
<use f='llvm/llvm/lib/IR/ConstantFold.cpp' l='1719' u='c' c='_ZL20evaluateICmpRelationPN4llvm8ConstantES1_b'/>
<use f='llvm/llvm/lib/IR/ConstantFold.cpp' l='1720' u='c' c='_ZL20evaluateICmpRelationPN4llvm8ConstantES1_b'/>
<def f='llvm/llvm/lib/IR/Constants.cpp' l='1162' ll='1182' type='bool llvm::ConstantExpr::isGEPWithNoNotionalOverIndexing() const'/>
<use f='llvm/llvm/lib/Transforms/Scalar/ConstantHoisting.cpp' l='464' u='c' c='_ZN4llvm20ConstantHoistingPass25collectConstantCandidatesERNS_8DenseMapINS_12PointerUnionIJPNS_11ConstantIntEPNS_12ConstantExprEEEEjNS_12DenseMapInfoI9949241'/>
<use f='llvm/llvm/lib/Transforms/Scalar/ConstantHoisting.cpp' l='797' u='c' c='_ZN4llvm20ConstantHoistingPass17emitBaseConstantsEPNS_11InstructionEPNS_8ConstantEPNS_4TypeERKNS_10consthoist12ConstantUserE'/>
<use f='llvm/llvm/lib/Transforms/Utils/Evaluator.cpp' l='158' u='c' c='_ZL29isSimpleEnoughPointerToCommitPN4llvm8ConstantE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyCFG.cpp' l='4613' u='c' c='_ZL24ValidLookupTableConstantPN4llvm8ConstantERKNS_19TargetTransformInfoE'/>
