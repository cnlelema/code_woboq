<dec f='llvm/lld/ELF/Relocations.h' l='148' type='void lld::elf::ThunkCreator::createInitialThunkSections(ArrayRef&lt;lld::elf::OutputSection *&gt; OutputSections)'/>
<def f='llvm/lld/ELF/Relocations.cpp' l='1699' ll='1731' type='void lld::elf::ThunkCreator::createInitialThunkSections(ArrayRef&lt;lld::elf::OutputSection *&gt; OutputSections)'/>
<use f='llvm/lld/ELF/Relocations.cpp' l='1820' u='c' c='_ZN3lld3elf12ThunkCreator12createThunksEN4llvm8ArrayRefIPNS0_13OutputSectionEEE'/>
<doc f='llvm/lld/ELF/Relocations.cpp' l='1683'>// Create one or more ThunkSections per OS that can be used to place Thunks.
// We attempt to place the ThunkSections using the following desirable
// properties:
// - Within range of the maximum number of callers
// - Minimise the number of ThunkSections
//
// We follow a simple but conservative heuristic to place ThunkSections at
// offsets that are multiples of a Target specific branch range.
// For an InputSectionDescription that is smaller than the range, a single
// ThunkSection at the end of the range will do.
//
// For an InputSectionDescription that is more than twice the size of the range,
// we place the last ThunkSection at range bytes from the end of the
// InputSectionDescription in order to increase the likelihood that the
// distance from a thunk to its target will be sufficiently small to
// allow for the creation of a short thunk.</doc>
