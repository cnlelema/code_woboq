<dec f='llvm/llvm/include/llvm/CodeGen/ScheduleDAG.h' l='420' type='void llvm::SUnit::setHeightToAtLeast(unsigned int NewHeight)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/ScheduleDAG.h' l='417'>/// If NewHeight is greater than this node&apos;s height value, set it to be
    /// the new height value. This also recursively marks predecessor nodes
    /// dirty.</doc>
<def f='llvm/llvm/lib/CodeGen/ScheduleDAG.cpp' l='255' ll='261' type='void llvm::SUnit::setHeightToAtLeast(unsigned int NewHeight)'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp' l='186' u='c' c='_ZN12_GLOBAL__N_115ScheduleDAGFast20ScheduleNodeBottomUpEPN4llvm5SUnitEj'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp' l='414' u='c' c='_ZN12_GLOBAL__N_117ScheduleDAGRRList11ReleasePredEPN4llvm5SUnitEPKNS1_4SDepE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp' l='750' u='c' c='_ZN12_GLOBAL__N_117ScheduleDAGRRList20ScheduleNodeBottomUpEPN4llvm5SUnitE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/GCNILPSched.cpp' l='282' u='c' c='_ZN12_GLOBAL__N_115GCNILPScheduler19releasePredecessorsEPKN4llvm5SUnitE'/>
