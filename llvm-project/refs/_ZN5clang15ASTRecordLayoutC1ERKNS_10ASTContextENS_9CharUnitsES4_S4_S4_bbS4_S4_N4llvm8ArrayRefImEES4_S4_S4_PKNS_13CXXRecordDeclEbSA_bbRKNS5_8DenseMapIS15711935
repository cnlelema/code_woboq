<dec f='llvm/clang/include/clang/AST/RecordLayout.h' l='149' type='void clang::ASTRecordLayout::ASTRecordLayout(const clang::ASTContext &amp; Ctx, clang::CharUnits size, clang::CharUnits alignment, clang::CharUnits unadjustedAlignment, clang::CharUnits requiredAlignment, bool hasOwnVFPtr, bool hasExtendableVFPtr, clang::CharUnits vbptroffset, clang::CharUnits datasize, ArrayRef&lt;uint64_t&gt; fieldoffsets, clang::CharUnits nonvirtualsize, clang::CharUnits nonvirtualalignment, clang::CharUnits SizeOfLargestEmptySubobject, const clang::CXXRecordDecl * PrimaryBase, bool IsPrimaryBaseVirtual, const clang::CXXRecordDecl * BaseSharingVBPtr, bool EndsWithZeroSizedObject, bool LeadsWithZeroSizedBase, const BaseOffsetsMapTy &amp; BaseOffsets, const VBaseOffsetsMapTy &amp; VBaseOffsets)'/>
<doc f='llvm/clang/include/clang/AST/RecordLayout.h' l='148'>// Constructor for C++ records.</doc>
<def f='llvm/clang/lib/AST/RecordLayout.cpp' l='43' ll='94' type='void clang::ASTRecordLayout::ASTRecordLayout(const clang::ASTContext &amp; Ctx, clang::CharUnits size, clang::CharUnits alignment, clang::CharUnits unadjustedAlignment, clang::CharUnits requiredAlignment, bool hasOwnVFPtr, bool hasExtendableVFPtr, clang::CharUnits vbptroffset, clang::CharUnits datasize, ArrayRef&lt;uint64_t&gt; fieldoffsets, clang::CharUnits nonvirtualsize, clang::CharUnits nonvirtualalignment, clang::CharUnits SizeOfLargestEmptySubobject, const clang::CXXRecordDecl * PrimaryBase, bool IsPrimaryBaseVirtual, const clang::CXXRecordDecl * BaseSharingVBPtr, bool EndsWithZeroSizedObject, bool LeadsWithZeroSizedBase, const BaseOffsetsMapTy &amp; BaseOffsets, const VBaseOffsetsMapTy &amp; VBaseOffsets)'/>
<doc f='llvm/clang/lib/AST/RecordLayout.cpp' l='42'>// Constructor for C++ records.</doc>
<use f='llvm/clang/lib/AST/RecordLayoutBuilder.cpp' l='3007' u='c' c='_ZNK5clang10ASTContext18getASTRecordLayoutEPKNS_10RecordDeclE'/>
<use f='llvm/clang/lib/AST/RecordLayoutBuilder.cpp' l='3040' u='c' c='_ZNK5clang10ASTContext18getASTRecordLayoutEPKNS_10RecordDeclE'/>
