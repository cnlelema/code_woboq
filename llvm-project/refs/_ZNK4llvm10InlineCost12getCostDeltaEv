<def f='llvm/llvm/include/llvm/Analysis/InlineCost.h' l='130' type='int llvm::InlineCost::getCostDelta() const'/>
<doc f='llvm/llvm/include/llvm/Analysis/InlineCost.h' l='127'>/// Get the cost delta from the threshold for inlining.
  /// Only valid if the cost is of the variable kind. Returns a negative
  /// value if the cost is too high to inline.</doc>
<use f='llvm/llvm/lib/Transforms/IPO/Inliner.cpp' l='370' u='c' c='_ZL16shouldBeDeferredPN4llvm8FunctionENS_8CallSiteENS_10InlineCostERiNS_12function_refIFS3_S2_EEE'/>
<use f='llvm/llvm/lib/Transforms/IPO/PartialInlining.cpp' l='808' u='c' c='_ZN12_GLOBAL__N_118PartialInlinerImpl19shouldPartialInlineEN4llvm8CallSiteERNS0_14FunctionClonerENS1_14BlockFrequencyERNS1_25OptimizationRemarkEmitterE'/>
<use f='llvm/llvm/lib/Transforms/IPO/PartialInlining.cpp' l='840' u='c' c='_ZN12_GLOBAL__N_118PartialInlinerImpl19shouldPartialInlineEN4llvm8CallSiteERNS0_14FunctionClonerENS1_14BlockFrequencyERNS1_25OptimizationRemarkEmitterE'/>
