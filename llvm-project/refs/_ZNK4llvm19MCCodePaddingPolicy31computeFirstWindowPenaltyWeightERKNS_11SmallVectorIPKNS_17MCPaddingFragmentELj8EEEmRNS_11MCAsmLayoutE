<dec f='llvm/llvm/include/llvm/MC/MCCodePadder.h' l='181' type='double llvm::MCCodePaddingPolicy::computeFirstWindowPenaltyWeight(const MCPFRange &amp; Window, uint64_t Offset, llvm::MCAsmLayout &amp; Layout) const'/>
<doc f='llvm/llvm/include/llvm/MC/MCCodePadder.h' l='169'>/// Computes and returns the penalty weight of a first instruction window in a
  /// range. This requires a special function since the first window does not
  /// contain all the padding fragments in that window. It only contains all the
  /// padding fragments starting from the relevant insertion point.
  ///
  /// \param Window The first window.
  /// \param Offset The offset of the parent section relative to the beginning
  /// of the file, mod the window size.
  /// \param Layout Code layout information.
  ///
  /// \returns the penalty weight of a first instruction window in a range, \p
  /// Window.</doc>
<use f='llvm/llvm/lib/MC/MCCodePadder.cpp' l='319' u='c' c='_ZNK4llvm19MCCodePaddingPolicy25computeRangePenaltyWeightERKNS_11SmallVectorIPKNS_17MCPaddingFragmentELj8EEEmRNS_11MCAsmLayoutE'/>
<def f='llvm/llvm/lib/MC/MCCodePadder.cpp' l='329' ll='370' type='double llvm::MCCodePaddingPolicy::computeFirstWindowPenaltyWeight(const MCPFRange &amp; Window, uint64_t Offset, llvm::MCAsmLayout &amp; Layout) const'/>
