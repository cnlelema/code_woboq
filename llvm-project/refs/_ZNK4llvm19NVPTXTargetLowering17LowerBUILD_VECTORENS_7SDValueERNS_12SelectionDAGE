<dec f='llvm/llvm/lib/Target/NVPTX/NVPTXISelLowering.h' l='555' type='llvm::SDValue llvm::NVPTXTargetLowering::LowerBUILD_VECTOR(llvm::SDValue Op, llvm::SelectionDAG &amp; DAG) const'/>
<def f='llvm/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp' l='1917' ll='1932' type='llvm::SDValue llvm::NVPTXTargetLowering::LowerBUILD_VECTOR(llvm::SDValue Op, llvm::SelectionDAG &amp; DAG) const'/>
<use f='llvm/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp' l='2183' u='c' c='_ZNK4llvm19NVPTXTargetLowering14LowerOperationENS_7SDValueERNS_12SelectionDAGE'/>
<doc f='llvm/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp' l='1907'>// We can init constant f16x2 with a single .b32 move.  Normally it
// would get lowered as two constant loads and vector-packing move.
//        mov.b16         %h1, 0x4000;
//        mov.b16         %h2, 0x3C00;
//        mov.b32         %hh2, {%h2, %h1};
// Instead we want just a constant move:
//        mov.b32         %hh2, 0x40003C00
//
// This results in better SASS code with CUDA 7.x. Ptxas in CUDA 8.0
// generates good SASS in both cases.</doc>
