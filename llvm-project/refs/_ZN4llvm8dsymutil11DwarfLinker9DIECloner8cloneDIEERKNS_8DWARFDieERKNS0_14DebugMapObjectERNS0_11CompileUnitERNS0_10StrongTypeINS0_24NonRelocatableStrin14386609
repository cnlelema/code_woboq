<dec f='llvm/llvm/tools/dsymutil/DwarfLinker.h' l='289' type='llvm::DIE * llvm::dsymutil::DwarfLinker::DIECloner::cloneDIE(const llvm::DWARFDie &amp; InputDIE, const llvm::dsymutil::DebugMapObject &amp; DMO, llvm::dsymutil::CompileUnit &amp; U, OffsetsStringPool &amp; StringPool, int64_t PCOffset, uint32_t OutOffset, unsigned int Flags, bool IsLittleEndian, llvm::DIE * Die = nullptr)'/>
<def f='llvm/llvm/tools/dsymutil/DwarfLinker.cpp' l='1494' ll='1689' type='llvm::DIE * llvm::dsymutil::DwarfLinker::DIECloner::cloneDIE(const llvm::DWARFDie &amp; InputDIE, const llvm::dsymutil::DebugMapObject &amp; DMO, llvm::dsymutil::CompileUnit &amp; Unit, OffsetsStringPool &amp; StringPool, int64_t PCOffset, uint32_t OutOffset, unsigned int Flags, bool IsLittleEndian, llvm::DIE * Die = nullptr)'/>
<use f='llvm/llvm/tools/dsymutil/DwarfLinker.cpp' l='1677' u='c' c='_ZN4llvm8dsymutil11DwarfLinker9DIECloner8cloneDIEERKNS_8DWARFDieERKNS0_14DebugMapObjectERNS0_11CompileUnitERNS0_10StrongTypeINS0_24NonRelocatableStrin14386609'/>
<use f='llvm/llvm/tools/dsymutil/DwarfLinker.cpp' l='2370' u='c' c='_ZN4llvm8dsymutil11DwarfLinker9DIECloner20cloneAllCompileUnitsERNS_12DWARFContextERKNS0_14DebugMapObjectERSt3mapImNS0_19DebugMapObjectRangeESt4lessImE9221335'/>
<doc f='llvm/llvm/tools/dsymutil/DwarfLinker.h' l='278'>/// Recursively clone \p InputDIE into an tree of DIE objects
    /// where useless (as decided by lookForDIEsToKeep()) bits have been
    /// stripped out and addresses have been rewritten according to the
    /// debug map.
    ///
    /// \param OutOffset is the offset the cloned DIE in the output
    /// compile unit.
    /// \param PCOffset (while cloning a function scope) is the offset
    /// applied to the entry point of the function to get the linked address.
    /// \param Die the output DIE to use, pass NULL to create one.
    /// \returns the root of the cloned tree or null if nothing was selected.</doc>
