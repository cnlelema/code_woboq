<dec f='llvm/lld/ELF/SyntheticSections.h' l='996' type='void lld::elf::ARMExidxSyntheticSection::writeTo(uint8_t * Buf)'/>
<inh f='llvm/lld/ELF/SyntheticSections.h' l='48' c='_ZN3lld3elf16SyntheticSection7writeToEPh'/>
<def f='llvm/lld/ELF/SyntheticSections.cpp' l='3362' ll='3389' type='void lld::elf::ARMExidxSyntheticSection::writeTo(uint8_t * Buf)'/>
<doc f='llvm/lld/ELF/SyntheticSections.cpp' l='3353'>// To write the .ARM.exidx table from the ExecutableSections we have three cases
// 1.) The InputSection has a .ARM.exidx InputSection in its dependent sections.
//     We write the .ARM.exidx section contents and apply its relocations.
// 2.) The InputSection does not have a dependent .ARM.exidx InputSection. We
//     must write the contents of an EXIDX_CANTUNWIND directly. We use the
//     start of the InputSection as the purpose of the linker generated
//     section is to terminate the address range of the previous entry.
// 3.) A trailing EXIDX_CANTUNWIND sentinel section is required at the end of
//     the table to terminate the address range of the final entry.</doc>
