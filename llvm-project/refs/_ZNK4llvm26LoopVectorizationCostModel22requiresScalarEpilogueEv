<def f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='1159' ll='1161' type='bool llvm::LoopVectorizationCostModel::requiresScalarEpilogue() const'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='2506' u='c' c='_ZN4llvm19InnerLoopVectorizer26getOrCreateVectorTripCountEPNS_4LoopE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='2557' u='c' c='_ZN4llvm19InnerLoopVectorizer30emitMinimumIterationCountCheckEPNS_4LoopEPNS_10BasicBlockE'/>
<doc f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='1156'>/// Returns true if an interleaved group requires a scalar iteration
  /// to handle accesses with gaps, and there is nothing preventing us from
  /// creating a scalar epilogue.</doc>
