<def f='llvm/clang/include/clang/Lex/Pragma.h' l='65' ll='80'/>
<ovr f='llvm/clang/include/clang/Lex/Pragma.h' l='84' c='clang::EmptyPragmaHandler'/>
<ovr f='llvm/clang/include/clang/Lex/Pragma.h' l='96' c='clang::PragmaNamespace'/>
<ovr f='llvm/clang/examples/AnnotateFunctions/AnnotateFunctions.cpp' l='57' c='(anonymousnamespace)::PragmaAnnotateHandler'/>
<size>40</size>
<doc f='llvm/clang/include/clang/Lex/Pragma.h' l='56'>/// PragmaHandler - Instances of this interface defined to handle the various
/// pragmas that the language front-end uses.  Each handler optionally has a
/// name (e.g. &quot;pack&quot;) and the HandlePragma method is invoked when a pragma with
/// that identifier is found.  If a handler does not match any of the declared
/// pragmas the handler with a null identifier is invoked, if it exists.
///
/// Note that the PragmaNamespace class can be used to subdivide pragmas, e.g.
/// we treat &quot;\#pragma STDC&quot; and &quot;\#pragma GCC&quot; as namespaces that contain other
/// pragmas.</doc>
<mbr r='clang::PragmaHandler::Name' o='64' t='std::string'/>
<fun r='_ZN5clang13PragmaHandlerC1Ev'/>
<fun r='_ZN5clang13PragmaHandlerC1EN4llvm9StringRefE'/>
<fun r='_ZN5clang13PragmaHandlerD1Ev'/>
<fun r='_ZNK5clang13PragmaHandler7getNameEv'/>
<fun r='_ZN5clang13PragmaHandler12HandlePragmaERNS_12PreprocessorENS_16PragmaIntroducerERNS_5TokenE'/>
<fun r='_ZN5clang13PragmaHandler14getIfNamespaceEv'/>
<ovr f='llvm/clang/lib/Frontend/PrintPreprocessedOutput.cpp' l='656' c='(anonymousnamespace)::UnknownPragmaHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='957' c='(anonymousnamespace)::PragmaOnceHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='969' c='(anonymousnamespace)::PragmaMarkHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='979' c='(anonymousnamespace)::PragmaPoisonHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='990' c='(anonymousnamespace)::PragmaSystemHeaderHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='1000' c='(anonymousnamespace)::PragmaDependencyHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='1009' c='(anonymousnamespace)::PragmaDebugHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='1144' c='(anonymousnamespace)::PragmaDiagnosticHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='1229' c='(anonymousnamespace)::PragmaHdrstopHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='1240' c='(anonymousnamespace)::PragmaWarningHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='1363' c='(anonymousnamespace)::PragmaExecCharsetHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='1425' c='(anonymousnamespace)::PragmaIncludeAliasHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='1447' c='(anonymousnamespace)::PragmaMessageHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='1524' c='(anonymousnamespace)::PragmaModuleImportHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='1561' c='(anonymousnamespace)::PragmaModuleBeginHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='1621' c='(anonymousnamespace)::PragmaModuleEndHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='1641' c='(anonymousnamespace)::PragmaModuleBuildHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='1651' c='(anonymousnamespace)::PragmaModuleLoadHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='1675' c='(anonymousnamespace)::PragmaPushMacroHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='1686' c='(anonymousnamespace)::PragmaPopMacroHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='1697' c='(anonymousnamespace)::PragmaARCCFCodeAuditedHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='1752' c='(anonymousnamespace)::PragmaAssumeNonNullHandler'/>
<ovr f='llvm/clang/lib/Lex/Pragma.cpp' l='1821' c='(anonymousnamespace)::PragmaRegionHandler'/>
<fun r='_ZN5clang13PragmaHandlerD1Ev'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='27' c='(anonymousnamespace)::PragmaAlignHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='33' c='(anonymousnamespace)::PragmaGCCVisibilityHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='39' c='(anonymousnamespace)::PragmaOptionsHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='45' c='(anonymousnamespace)::PragmaPackHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='51' c='(anonymousnamespace)::PragmaClangSectionHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='61' c='(anonymousnamespace)::PragmaMSStructHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='67' c='(anonymousnamespace)::PragmaUnusedHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='73' c='(anonymousnamespace)::PragmaWeakHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='79' c='(anonymousnamespace)::PragmaRedefineExtnameHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='85' c='(anonymousnamespace)::PragmaOpaqueHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='97' c='(anonymousnamespace)::PragmaOpenCLExtensionHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='104' c='(anonymousnamespace)::PragmaFPContractHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='113' c='(anonymousnamespace)::PragmaSTDC_FENV_ACCESSHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='139' c='(anonymousnamespace)::PragmaSTDC_CX_LIMITED_RANGEHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='150' c='(anonymousnamespace)::PragmaSTDC_UnknownHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='160' c='(anonymousnamespace)::PragmaFPHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='166' c='(anonymousnamespace)::PragmaNoOpenMPHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='172' c='(anonymousnamespace)::PragmaOpenMPHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='179' c='(anonymousnamespace)::PragmaCommentHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='189' c='(anonymousnamespace)::PragmaDetectMismatchHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='199' c='(anonymousnamespace)::PragmaMSPointersToMembers'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='205' c='(anonymousnamespace)::PragmaMSVtorDisp'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='211' c='(anonymousnamespace)::PragmaMSPragma'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='218' c='(anonymousnamespace)::PragmaOptimizeHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='228' c='(anonymousnamespace)::PragmaLoopHintHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='234' c='(anonymousnamespace)::PragmaUnrollHintHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='241' c='(anonymousnamespace)::PragmaPointerInterpretation'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='255' c='(anonymousnamespace)::PragmaMSIntrinsicHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='261' c='(anonymousnamespace)::PragmaMSOptimizeHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='267' c='(anonymousnamespace)::PragmaForceCUDAHostDeviceHandler'/>
<ovr f='llvm/clang/lib/Parse/ParsePragma.cpp' l='278' c='(anonymousnamespace)::PragmaAttributeHandler'/>
