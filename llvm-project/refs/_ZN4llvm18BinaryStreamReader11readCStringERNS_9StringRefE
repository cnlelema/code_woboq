<dec f='llvm/llvm/include/llvm/Support/BinaryStreamReader.h' l='117' type='llvm::Error llvm::BinaryStreamReader::readCString(llvm::StringRef &amp; Dest)'/>
<use f='llvm/llvm/include/llvm/DebugInfo/CodeView/RecordSerialization.h' l='130' u='c' c='_ZNK4llvm8codeview37serialize_null_term_string_array_impl11deserializeERNS_18BinaryStreamReaderE'/>
<doc f='llvm/llvm/include/llvm/Support/BinaryStreamReader.h' l='111'>/// Read a null terminated string from \p Dest.  Whether a copy occurs depends
  /// on the implementation of the underlying stream.  Updates the stream&apos;s
  /// offset to point after the newly read data.
  ///
  /// \returns a success error code if the data was successfully read, otherwise
  /// returns an appropriate error code.</doc>
<use f='llvm/llvm/lib/DebugInfo/CodeView/CodeViewRecordIO.cpp' l='164' u='c' c='_ZN4llvm8codeview16CodeViewRecordIO10mapStringZERNS_9StringRefE'/>
<use f='llvm/llvm/lib/DebugInfo/CodeView/DebugStringTableSubsection.cpp' l='39' u='c' c='_ZNK4llvm8codeview29DebugStringTableSubsectionRef9getStringEj'/>
<use f='llvm/llvm/lib/DebugInfo/CodeView/RecordSerialization.cpp' l='148' u='c' c='_ZN4llvm8codeview7consumeERNS_18BinaryStreamReaderERNS_9StringRefE'/>
<use f='llvm/llvm/lib/DebugInfo/PDB/Native/DbiModuleDescriptor.cpp' l='34' u='c' c='_ZN4llvm3pdb19DbiModuleDescriptor10initializeENS_15BinaryStreamRefERS1_'/>
<use f='llvm/llvm/lib/DebugInfo/PDB/Native/DbiModuleDescriptor.cpp' l='37' u='c' c='_ZN4llvm3pdb19DbiModuleDescriptor10initializeENS_15BinaryStreamRefERS1_'/>
<use f='llvm/llvm/lib/DebugInfo/PDB/Native/DbiModuleList.cpp' l='276' u='c' c='_ZNK4llvm3pdb13DbiModuleList11getFileNameEj'/>
<use f='llvm/llvm/lib/ObjectYAML/CodeViewYAMLDebugSections.cpp' l='696' u='c' c='_ZN12_GLOBAL__N_125YAMLStringTableSubsection22fromCodeViewSubsectionERKN4llvm8codeview29DebugStringTableSubsectionRefE'/>
<use f='llvm/llvm/lib/ObjectYAML/CodeViewYAMLDebugSections.cpp' l='700' u='c' c='_ZN12_GLOBAL__N_125YAMLStringTableSubsection22fromCodeViewSubsectionERKN4llvm8codeview29DebugStringTableSubsectionRefE'/>
<def f='llvm/llvm/lib/Support/BinaryStreamReader.cpp' l='74' ll='100' type='llvm::Error llvm::BinaryStreamReader::readCString(llvm::StringRef &amp; Dest)'/>
<use f='llvm/llvm/tools/llvm-pdbutil/DumpOutputStyle.cpp' l='1247' u='c' c='_ZN4llvm3pdb15DumpOutputStyle22dumpStringTableFromObjEv'/>
<use f='llvm/llvm/unittests/DebugInfo/MSF/MappedBlockStreamTest.cpp' l='366' u='c' c='_ZN12_GLOBAL__N_144MappedBlockStreamTest_TestWriteThenRead_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/DebugInfo/MSF/MappedBlockStreamTest.cpp' l='430' u='c' c='_ZN12_GLOBAL__N_155MappedBlockStreamTest_TestWriteContiguousStreamRef_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/DebugInfo/MSF/MappedBlockStreamTest.cpp' l='466' u='c' c='_ZN12_GLOBAL__N_158MappedBlockStreamTest_TestWriteDiscontiguousStreamRef_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/DebugInfo/MSF/MappedBlockStreamTest.cpp' l='486' u='c' c='_ZN12_GLOBAL__N_158MappedBlockStreamTest_DataLivesAfterStreamDestruction_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/BinaryStreamTest.cpp' l='289' u='c' c='_ZN12_GLOBAL__N_142BinaryStreamTest_StreamRefDynamicSize_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/BinaryStreamTest.cpp' l='733' u='c' c='_ZN12_GLOBAL__N_141BinaryStreamTest_StreamReaderStrings_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/BinaryStreamTest.cpp' l='734' u='c' c='_ZN12_GLOBAL__N_141BinaryStreamTest_StreamReaderStrings_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/BinaryStreamTest.cpp' l='735' u='c' c='_ZN12_GLOBAL__N_141BinaryStreamTest_StreamReaderStrings_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/BinaryStreamTest.cpp' l='736' u='c' c='_ZN12_GLOBAL__N_141BinaryStreamTest_StreamReaderStrings_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/BinaryStreamTest.cpp' l='827' u='c' c='_ZN12_GLOBAL__N_141BinaryStreamTest_StringWriterStrings_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/BinaryStreamTest.cpp' l='846' u='c' c='_ZN12_GLOBAL__N_140BinaryStreamTest_StreamWriterAppend_Test8TestBodyEv'/>
