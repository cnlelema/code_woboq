<dec f='llvm/clang/include/clang/Driver/Tool.h' l='140' type='void clang::driver::Tool::ConstructJobMultipleOutputs(clang::driver::Compilation &amp; C, const clang::driver::JobAction &amp; JA, const InputInfoList &amp; Outputs, const InputInfoList &amp; Inputs, const llvm::opt::ArgList &amp; TCArgs, const char * LinkingOutput) const'/>
<doc f='llvm/clang/include/clang/Driver/Tool.h' l='131'>/// Construct jobs to perform the action \p JA, writing to the \p Outputs and
  /// with \p Inputs, and add the jobs to \p C. The default implementation
  /// assumes a single output and is expected to be overloaded for the tools
  /// that support multiple inputs.
  ///
  /// \param TCArgs The argument list for this toolchain, with any
  /// tool chain specific translations applied.
  /// \param LinkingOutput If this output will eventually feed the
  /// linker, then this is the final output name of the linked image.</doc>
<use f='llvm/clang/lib/Driver/Driver.cpp' l='4241' u='c' c='_ZNK5clang6driver6Driver25BuildJobsForActionNoCacheERNS0_11CompilationEPKNS0_6ActionEPKNS0_9ToolChainEN4llvm9StringRefEbbPKcRSt3mapISt4pairIS6_NSt7__c8860474'/>
<def f='llvm/clang/lib/Driver/Tool.cpp' l='25' ll='32' type='void clang::driver::Tool::ConstructJobMultipleOutputs(clang::driver::Compilation &amp; C, const clang::driver::JobAction &amp; JA, const InputInfoList &amp; Outputs, const InputInfoList &amp; Inputs, const llvm::opt::ArgList &amp; TCArgs, const char * LinkingOutput) const'/>
<ovr f='llvm/clang/lib/Driver/ToolChains/Clang.cpp' l='6370' c='_ZNK5clang6driver5tools14OffloadBundler27ConstructJobMultipleOutputsERNS0_11CompilationERKNS0_9JobActionERKN4llvm11SmallVectorINS0_9InputInfoELj4EEESD8449179'/>
