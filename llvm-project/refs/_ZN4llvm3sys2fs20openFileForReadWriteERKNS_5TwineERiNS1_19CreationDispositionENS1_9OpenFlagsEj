<def f='llvm/llvm/include/llvm/Support/FileSystem.h' l='1012' ll='1017' type='std::error_code llvm::sys::fs::openFileForReadWrite(const llvm::Twine &amp; Name, int &amp; ResultFD, llvm::sys::fs::CreationDisposition Disp, llvm::sys::fs::OpenFlags Flags, unsigned int Mode = 438)'/>
<doc f='llvm/llvm/include/llvm/Support/FileSystem.h' l='997'>/// @brief Opens the file with the given name in a write-only or read-write
/// mode, returning its open file descriptor. If the file does not exist, it
/// is created.
///
/// The caller is responsible for closing the file descriptor once they are
/// finished with it.
///
/// @param Name The path of the file to open, relative or absolute.
/// @param ResultFD If the file could be opened successfully, its descriptor
///                 is stored in this location. Otherwise, this is set to -1.
/// @param Flags Additional flags used to determine whether the file should be
///              opened in, for example, read-write or in write-only mode.
/// @param Mode The access permissions of the file, represented in octal.
/// @returns errc::success if \a Name has been opened, otherwise a
///          platform-specific error_code.</doc>
<use f='llvm/llvm/lib/Support/MemoryBuffer.cpp' l='366' u='c' c='_ZL16getReadWriteFileRKN4llvm5TwineEmmm'/>
<use f='llvm/llvm/lib/Support/Path.cpp' l='183' u='c' c='_ZL18createUniqueEntityRKN4llvm5TwineERiRNS_15SmallVectorImplIcEEbj8FSEntityNS_3sys2fs9OpenFlagsE'/>
<use f='llvm/llvm/lib/Support/raw_ostream.cpp' l='519' u='c' c='_ZL5getFDN4llvm9StringRefERSt10error_codeNS_3sys2fs19CreationDispositionENS4_10FileAccessENS4_9OpenFlagsE'/>
<use f='llvm/llvm/unittests/Support/Path.cpp' l='1509' u='c' c='_ZN12_GLOBAL__N_147FileSystemTest_ReadWriteFileCanReadOrWrite_Test8TestBodyEv'/>
