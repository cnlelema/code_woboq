<dec f='llvm/clang/lib/Lex/ModuleMap.cpp' l='1416' type='llvm::SmallPtrSet&lt;Module *, 2&gt;'/>
<use f='llvm/clang/lib/Lex/ModuleMap.cpp' l='2211' u='m' c='_ZN5clang15ModuleMapParser17parseRequiresDeclEv'/>
<use f='llvm/clang/lib/Lex/ModuleMap.cpp' l='2252' u='m' c='_ZN5clang15ModuleMapParser15parseHeaderDeclENS_7MMToken9TokenKindENS_14SourceLocationE'/>
<use f='llvm/clang/lib/Lex/ModuleMap.cpp' l='2402' u='m' c='_ZN5clang15ModuleMapParser20parseUmbrellaDirDeclENS_14SourceLocationE'/>
<offset>1664</offset>
<doc f='llvm/clang/lib/Lex/ModuleMap.cpp' l='1408'>/// Whether a module uses the &apos;requires excluded&apos; hack to mark its
    /// contents as &apos;textual&apos;.
    ///
    /// On older Darwin SDK versions, &apos;requires excluded&apos; is used to mark the
    /// contents of the Darwin.C.excluded (assert.h) and Tcl.Private modules as
    /// non-modular headers.  For backwards compatibility, we continue to
    /// support this idiom for just these modules, and map the headers to
    /// &apos;textual&apos; to match the original intent.</doc>
