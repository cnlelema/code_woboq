<dec f='llvm/clang/include/clang/Parse/Parser.h' l='3040' type='bool clang::Parser::ParseModuleName(clang::SourceLocation UseLoc, SmallVectorImpl&lt;std::pair&lt;IdentifierInfo *, SourceLocation&gt; &gt; &amp; Path, bool IsImport)'/>
<use f='llvm/clang/lib/Parse/Parser.cpp' l='2237' u='c' c='_ZN5clang6Parser15ParseModuleDeclEb'/>
<use f='llvm/clang/lib/Parse/Parser.cpp' l='2244' u='c' c='_ZN5clang6Parser15ParseModuleDeclEb'/>
<use f='llvm/clang/lib/Parse/Parser.cpp' l='2304' u='c' c='_ZN5clang6Parser17ParseModuleImportENS_14SourceLocationE'/>
<use f='llvm/clang/lib/Parse/Parser.cpp' l='2312' u='c' c='_ZN5clang6Parser17ParseModuleImportENS_14SourceLocationE'/>
<def f='llvm/clang/lib/Parse/Parser.cpp' l='2357' ll='2384' type='bool clang::Parser::ParseModuleName(clang::SourceLocation UseLoc, SmallVectorImpl&lt;std::pair&lt;IdentifierInfo *, SourceLocation&gt; &gt; &amp; Path, bool IsImport)'/>
<doc f='llvm/clang/lib/Parse/Parser.cpp' l='2350'>/// Parse a C++ Modules TS / Objective-C module name (both forms use the same
/// grammar).
///
///         module-name:
///           module-name-qualifier[opt] identifier
///         module-name-qualifier:
///           module-name-qualifier[opt] identifier &apos;.&apos;</doc>
