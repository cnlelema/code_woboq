<def f='llvm/llvm/include/llvm/IR/Operator.h' l='347' ll='349' type='bool llvm::FPMathOperator::hasAllowReciprocal() const'/>
<doc f='llvm/llvm/include/llvm/IR/Operator.h' l='346'>/// Test if this operation can use reciprocal multiply instead of division.</doc>
<use f='llvm/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp' l='1399' u='c' c='_ZL20getOptimizationFlagsPKN4llvm5ValueE'/>
<use f='llvm/llvm/include/llvm/CodeGen/SelectionDAGNodes.h' l='392' u='c' c='_ZN4llvm11SDNodeFlags7copyFMFERKNS_14FPMathOperatorE'/>
<use f='llvm/llvm/lib/IR/AsmWriter.cpp' l='1259' u='c' c='_ZL21WriteOptimizationInfoRN4llvm11raw_ostreamEPKNS_4UserE'/>
<use f='llvm/llvm/lib/IR/Instruction.cpp' l='219' u='c' c='_ZNK4llvm11Instruction18hasAllowReciprocalEv'/>
