<dec f='llvm/llvm/include/llvm/Transforms/Utils/IntegerDivision.h' l='55' type='bool llvm::expandRemainderUpTo64Bits(llvm::BinaryOperator * Rem)'/>
<def f='llvm/llvm/lib/Transforms/Utils/IntegerDivision.cpp' l='534' ll='575' type='bool llvm::expandRemainderUpTo64Bits(llvm::BinaryOperator * Rem)'/>
<doc f='llvm/llvm/lib/Transforms/Utils/IntegerDivision.cpp' l='529'>/// Generate code to compute the remainder of two integers of bitwidth up to
/// 64 bits. Uses the above routines and extends the inputs/truncates the
/// outputs to operate in 64 bits.
///
/// Replace Rem with emulation code.</doc>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/IntegerDivision.h' l='51'>/// Generate code to calculate the remainder of two integers, replacing Rem
  /// with the generated code. Uses ExpandReminder with a 64bit Rem.
  ///
  /// Replace Rem with generated code.</doc>
