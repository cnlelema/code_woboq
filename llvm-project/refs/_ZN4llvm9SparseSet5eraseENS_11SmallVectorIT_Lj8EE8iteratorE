<def f='llvm/llvm/include/llvm/ADT/SparseSet.h' l='285' ll='297' type='iterator llvm::SparseSet::erase(iterator I)'/>
<doc f='llvm/llvm/include/llvm/ADT/SparseSet.h' l='271'>/// erase - Erases an existing element identified by a valid iterator.
  ///
  /// This invalidates all iterators, but erase() returns an iterator pointing
  /// to the next element.  This makes it possible to erase selected elements
  /// while iterating over the set:
  ///
  ///   for (SparseSet::iterator I = Set.begin(); I != Set.end();)
  ///     if (test(*I))
  ///       I = Set.erase(I);
  ///     else
  ///       ++I;
  ///
  /// Note that end() changes when elements are erased, unlike std::list.
  ///</doc>
<use f='llvm/llvm/lib/CodeGen/LivePhysRegs.cpp' l='37' u='c' c='_ZN4llvm12LivePhysRegs16removeRegsInMaskERKNS_14MachineOperandEPNS_15SmallVectorImplISt4pairItPS2_EEE'/>
<use f='llvm/llvm/lib/CodeGen/MachineCombiner.cpp' l='444' u='c' c='_ZL24insertDeleteInstructionsPN4llvm17MachineBasicBlockERNS_12MachineInstrENS_11SmallVectorIPS2_Lj16EEES6_PNS_19MachineTraceMetrics8EnsembleERNS_9Spar9931741'/>
<use f='llvm/llvm/lib/CodeGen/MachineTraceMetrics.cpp' l='927' u='c' c='_ZL21updatePhysDepsUpwardsRKN4llvm12MachineInstrEjRNS_9SparseSetINS_11LiveRegUnitENS_8identityIjEEhEERKNS_16TargetSchedModelEPKNS_15TargetInstrInfoEPK13369886'/>
<use f='llvm/llvm/unittests/ADT/SparseSetTest.cpp' l='73' u='c' c='_ZN12_GLOBAL__N_133SparseSetTest_SingleEntrySet_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/ADT/SparseSetTest.cpp' l='132' u='c' c='_ZN12_GLOBAL__N_135SparseSetTest_MultipleEntrySet_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/ADT/SparseSetTest.cpp' l='137' u='c' c='_ZN12_GLOBAL__N_135SparseSetTest_MultipleEntrySet_Test8TestBodyEv'/>
