<dec f='llvm/llvm/lib/TableGen/TGLexer.h' l='351' type='bool llvm::TGLexer::prepSkipDirectiveEnd()'/>
<doc f='llvm/llvm/lib/TableGen/TGLexer.h' l='335'>// Skip any whitespaces or comments after a preprocessing directive.
  // The method returns true upon reaching either end of the line
  // or end of the file.  If there is a multiline C-style comment
  // after the preprocessing directive, the method skips
  // the comment, so the final CurPtr may point to one of the next lines.
  // The method returns false, if an error occured during skipping
  // C- or C++-style comment, or a non-whitespace symbol appears
  // after the preprocessing directive.
  //
  // The method maybe called both during lines-skipping and tokens
  // processing.  It actually verifies that only whitespaces or/and
  // comments follow a preprocessing directive.
  //
  // After the execution of this mehod, CurPtr points either to new line
  // symbol, buffer end or non-whitespace symbol following the preprocesing
  // directive.</doc>
<use f='llvm/llvm/lib/TableGen/TGLexer.cpp' l='699' u='c' c='_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb'/>
<use f='llvm/llvm/lib/TableGen/TGLexer.cpp' l='740' u='c' c='_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb'/>
<use f='llvm/llvm/lib/TableGen/TGLexer.cpp' l='768' u='c' c='_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb'/>
<use f='llvm/llvm/lib/TableGen/TGLexer.cpp' l='790' u='c' c='_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb'/>
<def f='llvm/llvm/lib/TableGen/TGLexer.cpp' l='934' ll='993' type='bool llvm::TGLexer::prepSkipDirectiveEnd()'/>
