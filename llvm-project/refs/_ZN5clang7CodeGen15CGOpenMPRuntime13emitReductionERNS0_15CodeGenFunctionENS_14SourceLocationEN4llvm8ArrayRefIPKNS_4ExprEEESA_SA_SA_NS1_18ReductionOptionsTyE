<dec f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.h' l='1309' type='void clang::CodeGen::CGOpenMPRuntime::emitReduction(clang::CodeGen::CodeGenFunction &amp; CGF, clang::SourceLocation Loc, ArrayRef&lt;const clang::Expr *&gt; Privates, ArrayRef&lt;const clang::Expr *&gt; LHSExprs, ArrayRef&lt;const clang::Expr *&gt; RHSExprs, ArrayRef&lt;const clang::Expr *&gt; ReductionOps, clang::CodeGen::CGOpenMPRuntime::ReductionOptionsTy Options)'/>
<doc f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.h' l='1267'>/// Emit a code for reduction clause. Next code should be emitted for
  /// reduction:
  /// \code
  ///
  /// static kmp_critical_name lock = { 0 };
  ///
  /// void reduce_func(void *lhs[&lt;n&gt;], void *rhs[&lt;n&gt;]) {
  ///  ...
  ///  *(Type&lt;i&gt;*)lhs[i] = RedOp&lt;i&gt;(*(Type&lt;i&gt;*)lhs[i], *(Type&lt;i&gt;*)rhs[i]);
  ///  ...
  /// }
  ///
  /// ...
  /// void *RedList[&lt;n&gt;] = {&amp;&lt;RHSExprs&gt;[0], ..., &amp;&lt;RHSExprs&gt;[&lt;n&gt;-1]};
  /// switch (__kmpc_reduce{_nowait}(&lt;loc&gt;, &lt;gtid&gt;, &lt;n&gt;, sizeof(RedList),
  /// RedList, reduce_func, &amp;&lt;lock&gt;)) {
  /// case 1:
  ///  ...
  ///  &lt;LHSExprs&gt;[i] = RedOp&lt;i&gt;(*&lt;LHSExprs&gt;[i], *&lt;RHSExprs&gt;[i]);
  ///  ...
  /// __kmpc_end_reduce{_nowait}(&lt;loc&gt;, &lt;gtid&gt;, &amp;&lt;lock&gt;);
  /// break;
  /// case 2:
  ///  ...
  ///  Atomic(&lt;LHSExprs&gt;[i] = RedOp&lt;i&gt;(*&lt;LHSExprs&gt;[i], *&lt;RHSExprs&gt;[i]));
  ///  ...
  /// break;
  /// default:;
  /// }
  /// \endcode
  ///
  /// \param Privates List of private copies for original reduction arguments.
  /// \param LHSExprs List of LHS in \a ReductionOps reduction operations.
  /// \param RHSExprs List of RHS in \a ReductionOps reduction operations.
  /// \param ReductionOps List of reduction operations in form &apos;LHS binop RHS&apos;
  /// or &apos;operator binop(LHS, RHS)&apos;.
  /// \param Options List of options for reduction codegen:
  ///     WithNowait true if parent directive has also nowait clause, false
  ///     otherwise.
  ///     SimpleReduction Emit reduction operation only. Used for omp simd
  ///     directive on the host.
  ///     ReductionKind The kind of reduction to perform.</doc>
<def f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='5648' ll='5951' type='void clang::CodeGen::CGOpenMPRuntime::emitReduction(clang::CodeGen::CodeGenFunction &amp; CGF, clang::SourceLocation Loc, ArrayRef&lt;const clang::Expr *&gt; Privates, ArrayRef&lt;const clang::Expr *&gt; LHSExprs, ArrayRef&lt;const clang::Expr *&gt; RHSExprs, ArrayRef&lt;const clang::Expr *&gt; ReductionOps, clang::CodeGen::CGOpenMPRuntime::ReductionOptionsTy Options)'/>
<ovr f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='10637' c='_ZN5clang7CodeGen19CGOpenMPSIMDRuntime13emitReductionERNS0_15CodeGenFunctionENS_14SourceLocationEN4llvm8ArrayRefIPKNS_4ExprEEESA_SA_SA_NS0_15CGOpenMPR92396'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='10642' u='c' c='_ZN5clang7CodeGen19CGOpenMPSIMDRuntime13emitReductionERNS0_15CodeGenFunctionENS_14SourceLocationEN4llvm8ArrayRefIPKNS_4ExprEEESA_SA_SA_NS0_15CGOpenMPR92396'/>
<ovr f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeNVPTX.cpp' l='4203' c='_ZN5clang7CodeGen20CGOpenMPRuntimeNVPTX13emitReductionERNS0_15CodeGenFunctionENS_14SourceLocationEN4llvm8ArrayRefIPKNS_4ExprEEESA_SA_SA_NS0_15CGOpenMP12554059'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeNVPTX.cpp' l='4218' u='c' c='_ZN5clang7CodeGen20CGOpenMPRuntimeNVPTX13emitReductionERNS0_15CodeGenFunctionENS_14SourceLocationEN4llvm8ArrayRefIPKNS_4ExprEEESA_SA_SA_NS0_15CGOpenMP12554059'/>
<use f='llvm/clang/lib/CodeGen/CGStmtOpenMP.cpp' l='1194' u='c' c='_ZN5clang7CodeGen15CodeGenFunction27EmitOMPReductionClauseFinalERKNS_22OMPExecutableDirectiveENS_19OpenMPDirectiveKindE'/>
