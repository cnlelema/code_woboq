<dec f='llvm/llvm/lib/ExecutionEngine/MCJIT/MCJIT.h' l='322' type='uint64_t llvm::MCJIT::getSymbolAddress(const std::string &amp; Name, bool CheckFunctionsOnly)'/>
<def f='llvm/llvm/lib/ExecutionEngine/MCJIT/MCJIT.cpp' l='316' ll='331' type='uint64_t llvm::MCJIT::getSymbolAddress(const std::string &amp; Name, bool CheckFunctionsOnly)'/>
<use f='llvm/llvm/lib/ExecutionEngine/MCJIT/MCJIT.cpp' l='392' u='c' c='_ZN4llvm5MCJIT21getGlobalValueAddressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='llvm/llvm/lib/ExecutionEngine/MCJIT/MCJIT.cpp' l='400' u='c' c='_ZN4llvm5MCJIT18getFunctionAddressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<doc f='llvm/llvm/lib/ExecutionEngine/MCJIT/MCJIT.h' l='315'>// DEPRECATED - Please use findSymbol instead.
  //
  // This is not directly exposed via the ExecutionEngine API, but it is
  // used by the LinkingMemoryManager.
  //
  // getSymbolAddress takes an unmangled name and returns the corresponding
  // JITSymbol if a definition of the name has been added to the JIT.</doc>
