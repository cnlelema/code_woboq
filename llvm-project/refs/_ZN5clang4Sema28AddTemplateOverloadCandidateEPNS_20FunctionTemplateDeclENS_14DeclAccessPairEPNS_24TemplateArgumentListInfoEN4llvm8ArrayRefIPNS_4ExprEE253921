<dec f='llvm/clang/include/clang/Sema/Sema.h' l='2920' type='void clang::Sema::AddTemplateOverloadCandidate(clang::FunctionTemplateDecl * FunctionTemplate, clang::DeclAccessPair FoundDecl, clang::TemplateArgumentListInfo * ExplicitTemplateArgs, ArrayRef&lt;clang::Expr *&gt; Args, clang::OverloadCandidateSet &amp; CandidateSet, bool SuppressUserConversions = false, bool PartialOverloading = false, bool AllowExplicit = true, ADLCallKind IsADLCandidate = ADLCallKind::NotADL)'/>
<def f='llvm/clang/lib/Sema/SemaOverload.cpp' l='6785' ll='6842' type='void clang::Sema::AddTemplateOverloadCandidate(clang::FunctionTemplateDecl * FunctionTemplate, clang::DeclAccessPair FoundDecl, clang::TemplateArgumentListInfo * ExplicitTemplateArgs, ArrayRef&lt;clang::Expr *&gt; Args, clang::OverloadCandidateSet &amp; CandidateSet, bool SuppressUserConversions = false, bool PartialOverloading = false, bool AllowExplicit = true, ADLCallKind IsADLCandidate = ADLCallKind::NotADL)'/>
<doc f='llvm/clang/lib/Sema/SemaOverload.cpp' l='6782'>/// Add a C++ function template specialization as a candidate
/// in the candidate set, using template argument deduction to produce
/// an appropriate function template specialization.</doc>
