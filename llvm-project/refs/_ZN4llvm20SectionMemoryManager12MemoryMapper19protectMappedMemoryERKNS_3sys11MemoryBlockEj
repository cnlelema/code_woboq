<dec f='llvm/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h' l='90' type='std::error_code llvm::SectionMemoryManager::MemoryMapper::protectMappedMemory(const sys::MemoryBlock &amp; Block, unsigned int Flags)'/>
<doc f='llvm/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h' l='78'>/// This method sets the protection flags for a block of memory to the state
    /// specified by \p Flags.  The behavior is not specified if the memory was
    /// not allocated using the allocateMappedMemory method.
    /// \p Block describes the memory block to be protected.
    /// \p Flags specifies the new protection state to be assigned to the block.
    ///
    /// If \p Flags is MF_WRITE, the actual behavior varies with the operating
    /// system (i.e. MF_READ | MF_WRITE on Windows) and the target architecture
    /// (i.e. MF_WRITE -&gt; MF_READ | MF_WRITE on i386).
    ///
    /// \r error_success if the function was successful, or an error_code
    /// describing the failure if an error occurred.</doc>
<use f='llvm/llvm/lib/ExecutionEngine/SectionMemoryManager.cpp' l='199' u='c' c='_ZN4llvm20SectionMemoryManager27applyMemoryGroupPermissionsERNS0_11MemoryGroupEj'/>
<ovr f='llvm/llvm/lib/ExecutionEngine/SectionMemoryManager.cpp' l='251' c='_ZN4llvm12_GLOBAL__N_114DefaultMMapper19protectMappedMemoryERKNS_3sys11MemoryBlockEj'/>
