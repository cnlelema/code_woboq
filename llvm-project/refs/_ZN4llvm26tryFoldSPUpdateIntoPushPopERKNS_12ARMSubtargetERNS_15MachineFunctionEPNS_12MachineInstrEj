<dec f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.h' l='554' type='bool llvm::tryFoldSPUpdateIntoPushPop(const llvm::ARMSubtarget &amp; Subtarget, llvm::MachineFunction &amp; MF, llvm::MachineInstr * MI, unsigned int NumBytes)'/>
<doc f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.h' l='549'>/// Tries to add registers to the reglist of a given base-updating
/// push/pop instruction to adjust the stack by an additional
/// NumBytes. This can save a few bytes per function in code-size, but
/// obviously generates more memory traffic. As such, it only takes
/// effect in functions being optimised for size.</doc>
<def f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp' l='2266' ll='2385' type='bool llvm::tryFoldSPUpdateIntoPushPop(const llvm::ARMSubtarget &amp; Subtarget, llvm::MachineFunction &amp; MF, llvm::MachineInstr * MI, unsigned int NumBytes)'/>
<use f='llvm/llvm/lib/Target/ARM/ARMFrameLowering.cpp' l='484' u='c' c='_ZNK4llvm16ARMFrameLowering12emitPrologueERNS_15MachineFunctionERNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMFrameLowering.cpp' l='564' u='c' c='_ZNK4llvm16ARMFrameLowering12emitPrologueERNS_15MachineFunctionERNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMFrameLowering.cpp' l='848' u='c' c='_ZNK4llvm16ARMFrameLowering12emitEpilogueERNS_15MachineFunctionERNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/ARM/Thumb1FrameLowering.cpp' l='215' u='c' c='_ZNK4llvm19Thumb1FrameLowering12emitPrologueERNS_15MachineFunctionERNS_17MachineBasicBlockE'/>
