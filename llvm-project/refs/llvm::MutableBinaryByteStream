<inh f='llvm/llvm/include/llvm/Support/BinaryStream.h' l='73' c='llvm::WritableBinaryStream'/>
<def f='llvm/llvm/include/llvm/Support/BinaryByteStream.h' l='89' ll='131'/>
<ovr f='llvm/llvm/include/llvm/Support/BinaryByteStream.h' l='207' c='llvm::FileBufferByteStream::StreamImpl'/>
<size>56</size>
<doc f='llvm/llvm/include/llvm/Support/BinaryByteStream.h' l='85'>/// An implementation of BinaryStream which holds its entire data set
/// in a single contiguous buffer.  As with BinaryByteStream, the mutable
/// version also guarantees that no read operation will ever incur a copy,
/// and similarly it does not own the underlying buffer.</doc>
<fun r='_ZN4llvm23MutableBinaryByteStreamC1Ev'/>
<fun r='_ZN4llvm23MutableBinaryByteStreamC1ENS_15MutableArrayRefIhEENS_7support10endiannessE'/>
<fun r='_ZNK4llvm23MutableBinaryByteStream9getEndianEv'/>
<fun r='_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE'/>
<fun r='_ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE'/>
<fun r='_ZN4llvm23MutableBinaryByteStream9getLengthEv'/>
<fun r='_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE'/>
<fun r='_ZN4llvm23MutableBinaryByteStream6commitEv'/>
<fun r='_ZNK4llvm23MutableBinaryByteStream4dataEv'/>
<mbr r='llvm::MutableBinaryByteStream::Data' o='64' t='MutableArrayRef&lt;uint8_t&gt;'/>
<mbr r='llvm::MutableBinaryByteStream::ImmutableStream' o='192' t='llvm::BinaryByteStream'/>
