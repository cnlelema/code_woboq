<def f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h' l='340' ll='361'/>
<size>48</size>
<doc f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyCommon.h' l='331'>/// Encapsulates the lexical context of a function call.  The lexical
  /// context includes the arguments to the call, including the implicit object
  /// argument.  When an attribute containing a mutex expression is attached to
  /// a method, the expression may refer to formal parameters of the method.
  /// Actual arguments must be substituted for formal parameters to derive
  /// the appropriate mutex expression in the lexical context where the function
  /// is called.  PrevCtx holds the context in which the arguments themselves
  /// should be evaluated; multiple calling contexts can be chained together
  /// by the lock_returned attribute.</doc>
<mbr r='clang::threadSafety::SExprBuilder::CallingContext::Prev' o='0' t='clang::threadSafety::SExprBuilder::CallingContext *'/>
<mbr r='clang::threadSafety::SExprBuilder::CallingContext::AttrDecl' o='64' t='const clang::NamedDecl *'/>
<mbr r='clang::threadSafety::SExprBuilder::CallingContext::SelfArg' o='128' t='const clang::Expr *'/>
<mbr r='clang::threadSafety::SExprBuilder::CallingContext::NumArgs' o='192' t='unsigned int'/>
<mbr r='clang::threadSafety::SExprBuilder::CallingContext::FunArgs' o='256' t='const clang::Expr *const *'/>
<mbr r='clang::threadSafety::SExprBuilder::CallingContext::SelfArrow' o='320' t='bool'/>
<fun r='_ZN5clang12threadSafety12SExprBuilder14CallingContextC1EPS2_PKNS_9NamedDeclE'/>
