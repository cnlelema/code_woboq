<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='850' ll='855' type='void llvm::TargetInstrInfo::copyPhysReg(llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator MI, const llvm::DebugLoc &amp; DL, unsigned int DestReg, unsigned int SrcReg, bool KillSrc) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='842'>/// Emit instructions to copy a pair of physical registers.
  ///
  /// This function should support copies within any legal register class as
  /// well as any cross-class copies created during instruction selection.
  ///
  /// The source and destination registers may overlap, which may require a
  /// careful implementation when multiple copy instructions are required for
  /// large registers. See for example the ARM target.</doc>
<use f='llvm/llvm/lib/CodeGen/ExpandPostRAPseudos.cpp' l='119' u='c' c='_ZN12_GLOBAL__N_112ExpandPostRA16LowerSubregToRegEPN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/ExpandPostRAPseudos.cpp' l='165' u='c' c='_ZN12_GLOBAL__N_112ExpandPostRA9LowerCopyEPN4llvm12MachineInstrE'/>
