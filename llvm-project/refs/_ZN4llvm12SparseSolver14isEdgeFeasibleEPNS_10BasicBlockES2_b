<dec f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='165' type='bool llvm::SparseSolver::isEdgeFeasible(llvm::BasicBlock * From, llvm::BasicBlock * To, bool AggressiveUndef = false)'/>
<def f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='368' ll='380' type='bool llvm::SparseSolver::isEdgeFeasible(llvm::BasicBlock * From, llvm::BasicBlock * To, bool AggressiveUndef = false)'/>
<use f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='431' u='c' c='_ZN4llvm12SparseSolver12visitPHINodeERNS_7PHINodeE'/>
<doc f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='160'>/// isEdgeFeasible - Return true if the control flow edge from the &apos;From&apos;
  /// basic block to the &apos;To&apos; basic block is currently feasible.  If
  /// AggressiveUndef is true, then this treats values with unknown lattice
  /// values as undefined.  This is generally only useful when solving the
  /// lattice, not when querying it.</doc>
