<dec f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='510' type='llvm::BitVector llvm::TargetRegisterInfo::getReservedRegs(const llvm::MachineFunction &amp; MF) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='500'>/// Returns a bitset indexed by physical register number indicating if a
  /// register is a special register that has particular uses and should be
  /// considered unavailable at all times, e.g. stack pointer, return address.
  /// A reserved register:
  /// - is not allocatable
  /// - is considered always live
  /// - is ignored by liveness tracking
  /// It is often necessary to reserve the super registers of a reserved
  /// register as well, to avoid them getting allocated indirectly. You may use
  /// markSuperRegs() and checkAllSuperRegsMarked() in this case.</doc>
<use f='llvm/llvm/lib/CodeGen/MachineRegisterInfo.cpp' l='507' u='c' c='_ZN4llvm19MachineRegisterInfo18freezeReservedRegsERKNS_15MachineFunctionE'/>
<use f='llvm/llvm/lib/CodeGen/MachineVerifier.cpp' l='579' u='c' c='_ZN12_GLOBAL__N_115MachineVerifier26visitMachineFunctionBeforeEv'/>
<use f='llvm/llvm/lib/CodeGen/TargetRegisterInfo.cpp' l='232' u='c' c='_ZNK4llvm18TargetRegisterInfo17getAllocatableSetERKNS_15MachineFunctionEPKNS_19TargetRegisterClassE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonBlockRanges.cpp' l='222' u='c' c='_ZN4llvm18HexagonBlockRangesC1ERNS_15MachineFunctionE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp' l='1452' u='c' c='_ZNK4llvm20HexagonFrameLowering27assignCalleeSavedSpillSlotsERNS_15MachineFunctionEPKNS_18TargetRegisterInfoERSt6vectorINS_15CalleeSavedInfoESaIS7_EE'/>
