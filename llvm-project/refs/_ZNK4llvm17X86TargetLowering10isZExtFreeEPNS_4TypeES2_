<dec f='llvm/llvm/lib/Target/X86/X86ISelLowering.h' l='1026' type='bool llvm::X86TargetLowering::isZExtFree(llvm::Type * Ty1, llvm::Type * Ty2) const'/>
<doc f='llvm/llvm/lib/Target/X86/X86ISelLowering.h' l='1018'>/// Return true if any actual instruction that defines a
    /// value of type Ty1 implicit zero-extends the value to Ty2 in the result
    /// register. This does not necessarily include registers defined in
    /// unknown ways, such as incoming arguments, or copies from unknown
    /// virtual registers. Also, if isTruncateFree(Ty2, Ty1) is true, this
    /// does not necessarily apply to truncate instructions. e.g. on x86-64,
    /// all instructions that define 32-bit values implicit zero-extend the
    /// result out to 64 bits.</doc>
<inh f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='2384' c='_ZNK4llvm18TargetLoweringBase10isZExtFreeEPNS_4TypeES2_'/>
<def f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='28509' ll='28512' type='bool llvm::X86TargetLowering::isZExtFree(llvm::Type * Ty1, llvm::Type * Ty2) const'/>
