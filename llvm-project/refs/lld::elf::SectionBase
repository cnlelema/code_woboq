<def f='llvm/lld/ELF/InputSection.h' l='41' ll='115'/>
<ovr f='llvm/lld/ELF/InputSection.h' l='118' c='lld::elf::InputSectionBase'/>
<ovr f='llvm/lld/ELF/OutputSections.h' l='32' c='lld::elf::OutputSection'/>
<size>64</size>
<doc f='llvm/lld/ELF/InputSection.h' l='37'>// This is the base class of all sections that lld handles. Some are sections in
// input files, some are sections in the produced output file and some exist
// just as a convenience for implementing special ways of combining some
// sections.</doc>
<fun r='_ZNK3lld3elf11SectionBase4kindEv'/>
<mbr r='lld::elf::SectionBase::Name' o='0' t='llvm::StringRef'/>
<mbr r='lld::elf::SectionBase::Repl' o='128' t='lld::elf::SectionBase *'/>
<mbr r='lld::elf::SectionBase::SectionKind' o='192' t='unsigned int'/>
<mbr r='lld::elf::SectionBase::Assigned' o='195' t='unsigned int'/>
<mbr r='lld::elf::SectionBase::Bss' o='196' t='unsigned int'/>
<mbr r='lld::elf::SectionBase::KeepUnique' o='197' t='unsigned int'/>
<mbr r='lld::elf::SectionBase::Partition' o='200' t='uint8_t'/>
<fun r='_ZNK3lld3elf11SectionBase12getPartitionEv'/>
<mbr r='lld::elf::SectionBase::Alignment' o='224' t='uint32_t'/>
<mbr r='lld::elf::SectionBase::Flags' o='256' t='uint64_t'/>
<mbr r='lld::elf::SectionBase::Entsize' o='320' t='uint64_t'/>
<mbr r='lld::elf::SectionBase::Type' o='384' t='uint32_t'/>
<mbr r='lld::elf::SectionBase::Link' o='416' t='uint32_t'/>
<mbr r='lld::elf::SectionBase::Info' o='448' t='uint32_t'/>
<fun r='_ZN3lld3elf11SectionBase16getOutputSectionEv'/>
<fun r='_ZNK3lld3elf11SectionBase16getOutputSectionEv'/>
<fun r='_ZNK3lld3elf11SectionBase9getOffsetEm'/>
<fun r='_ZNK3lld3elf11SectionBase5getVAEm'/>
<fun r='_ZNK3lld3elf11SectionBase6isLiveEv'/>
<fun r='_ZN3lld3elf11SectionBase8markLiveEv'/>
<fun r='_ZN3lld3elf11SectionBase8markDeadEv'/>
<fun r='_ZN3lld3elf11SectionBaseC1ENS1_4KindEN4llvm9StringRefEmmmjjj'/>
<fun r='_ZNK3lld3elf11SectionBase12getPartitionEv'/>
