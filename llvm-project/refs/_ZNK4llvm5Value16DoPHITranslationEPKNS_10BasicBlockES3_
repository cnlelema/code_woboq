<dec f='llvm/llvm/include/llvm/IR/Value.h' l='594' type='const llvm::Value * llvm::Value::DoPHITranslation(const llvm::BasicBlock * CurBB, const llvm::BasicBlock * PredBB) const'/>
<use f='llvm/llvm/include/llvm/IR/Value.h' l='598' u='c' c='_ZN4llvm5Value16DoPHITranslationEPKNS_10BasicBlockES3_'/>
<doc f='llvm/llvm/include/llvm/IR/Value.h' l='588'>/// Translate PHI node to its predecessor from the given basic block.
  ///
  /// If this value is a PHI node with CurBB as its parent, return the value in
  /// the PHI node corresponding to PredBB.  If not, return ourself.  This is
  /// useful if you want to know the value something has in a predecessor
  /// block.</doc>
<def f='llvm/llvm/lib/IR/Value.cpp' l='712' ll='718' type='const llvm::Value * llvm::Value::DoPHITranslation(const llvm::BasicBlock * CurBB, const llvm::BasicBlock * PredBB) const'/>
