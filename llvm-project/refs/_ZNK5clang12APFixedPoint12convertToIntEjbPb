<dec f='llvm/clang/include/clang/Basic/FixedPoint.h' l='161' type='llvm::APSInt clang::APFixedPoint::convertToInt(unsigned int DstWidth, bool DstSign, bool * Overflow = nullptr) const'/>
<doc f='llvm/clang/include/clang/Basic/FixedPoint.h' l='153'>/// Return the integral part of this fixed point number, rounded towards
  /// zero. The value is stored into an APSInt with the provided width and sign.
  /// If the overflow parameter is provided, and the integral value is not able
  /// to be fully stored in the provided width and sign, the overflow parameter
  /// is set to true.
  ///
  /// If the overflow parameter is provided, set this value to true or false to
  /// indicate if this operation results in an overflow.</doc>
<use f='llvm/clang/lib/AST/ExprConstant.cpp' l='10717' u='c' c='_ZN12_GLOBAL__N_116IntExprEvaluator13VisitCastExprEPKN5clang8CastExprE'/>
<def f='llvm/clang/lib/Basic/FixedPoint.cpp' l='221' ll='248' type='llvm::APSInt clang::APFixedPoint::convertToInt(unsigned int DstWidth, bool DstSign, bool * Overflow = nullptr) const'/>
<use f='llvm/clang/lib/Sema/SemaChecking.cpp' l='11431' u='c' c='_ZL23CheckImplicitConversionRN5clang4SemaEPNS_4ExprENS_8QualTypeENS_14SourceLocationEPb'/>
