<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1634' ll='1636' type='bool llvm::TargetInstrInfo::isBasicBlockPrologue(const llvm::MachineInstr &amp; MI) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1631'>/// True if the instruction is bound to the top of its basic block and no
  /// other instructions shall be inserted before it. This can be implemented
  /// to prevent register allocator to insert spills before such instructions.</doc>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='169' u='c' c='_ZN4llvm17MachineBasicBlock17SkipPHIsAndLabelsENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEE'/>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='184' u='c' c='_ZN4llvm17MachineBasicBlock22SkipPHIsLabelsAndDebugENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEE'/>
