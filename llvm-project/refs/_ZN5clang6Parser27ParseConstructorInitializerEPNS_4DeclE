<dec f='llvm/clang/include/clang/Parse/Parser.h' l='2804' type='void clang::Parser::ParseConstructorInitializer(clang::Decl * ConstructorDecl)'/>
<use f='llvm/clang/lib/Parse/ParseCXXInlineMethods.cpp' l='530' u='c' c='_ZN5clang6Parser19ParseLexedMethodDefERNS0_11LexedMethodE'/>
<def f='llvm/clang/lib/Parse/ParseDeclCXX.cpp' l='3410' ll='3458' type='void clang::Parser::ParseConstructorInitializer(clang::Decl * ConstructorDecl)'/>
<doc f='llvm/clang/lib/Parse/ParseDeclCXX.cpp' l='3389'>/// ParseConstructorInitializer - Parse a C++ constructor initializer,
/// which explicitly initializes the members or base classes of a
/// class (C++ [class.base.init]). For example, the three initializers
/// after the &apos;:&apos; in the Derived constructor below:
///
/// @code
/// class Base { };
/// class Derived : Base {
///   int x;
///   float f;
/// public:
///   Derived(float f) : Base(), x(17), f(f) { }
/// };
/// @endcode
///
/// [C++]  ctor-initializer:
///          &apos;:&apos; mem-initializer-list
///
/// [C++]  mem-initializer-list:
///          mem-initializer ...[opt]
///          mem-initializer ...[opt] , mem-initializer-list</doc>
<use f='llvm/clang/lib/Parse/ParseObjc.cpp' l='3679' u='c' c='_ZN5clang6Parser24ParseLexedObjCMethodDefsERNS0_11LexedMethodEb'/>
<use f='llvm/clang/lib/Parse/ParseStmt.cpp' l='2096' u='c' c='_ZN5clang6Parser21ParseFunctionTryBlockEPNS_4DeclERNS0_10ParseScopeE'/>
<use f='llvm/clang/lib/Parse/ParseTemplate.cpp' l='1427' u='c' c='_ZN5clang6Parser25ParseLateTemplatedFuncDefERNS_18LateParsedTemplateE'/>
<use f='llvm/clang/lib/Parse/Parser.cpp' l='1311' u='c' c='_ZN5clang6Parser23ParseFunctionDefinitionERNS_17ParsingDeclaratorERKNS0_18ParsedTemplateInfoEPNS0_18LateParsedAttrListE'/>
