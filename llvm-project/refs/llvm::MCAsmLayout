<def f='llvm/llvm/include/llvm/MC/MCAsmLayout.h' l='28' ll='102'/>
<size>184</size>
<doc f='llvm/llvm/include/llvm/MC/MCAsmLayout.h' l='21'>/// Encapsulates the layout of an assembly file at a particular point in time.
///
/// Assembly may require computing multiple layouts for a particular assembly
/// file as part of the relaxation process. This class encapsulates the layout
/// at a single point in time in such a way that it is always possible to
/// efficiently compute the exact address of any symbol in the assembly file,
/// even during the relaxation process.</doc>
<mbr r='llvm::MCAsmLayout::Assembler' o='0' t='llvm::MCAssembler &amp;'/>
<mbr r='llvm::MCAsmLayout::SectionOrder' o='64' t='llvm::SmallVector&lt;MCSection *, 16&gt;'/>
<mbr r='llvm::MCAsmLayout::LastValidFragment' o='1216' t='DenseMap&lt;const llvm::MCSection *, llvm::MCFragment *&gt;'/>
<fun r='_ZNK4llvm11MCAsmLayout11ensureValidEPKNS_10MCFragmentE'/>
<fun r='_ZNK4llvm11MCAsmLayout15isFragmentValidEPKNS_10MCFragmentE'/>
<fun r='_ZN4llvm11MCAsmLayoutC1ERNS_11MCAssemblerE'/>
<fun r='_ZNK4llvm11MCAsmLayout12getAssemblerEv'/>
<fun r='_ZN4llvm11MCAsmLayout23invalidateFragmentsFromEPNS_10MCFragmentE'/>
<fun r='_ZN4llvm11MCAsmLayout14layoutFragmentEPNS_10MCFragmentE'/>
<fun r='_ZN4llvm11MCAsmLayout15getSectionOrderEv'/>
<fun r='_ZNK4llvm11MCAsmLayout15getSectionOrderEv'/>
<fun r='_ZNK4llvm11MCAsmLayout17getFragmentOffsetEPKNS_10MCFragmentE'/>
<fun r='_ZNK4llvm11MCAsmLayout21getSectionAddressSizeEPKNS_9MCSectionE'/>
<fun r='_ZNK4llvm11MCAsmLayout18getSectionFileSizeEPKNS_9MCSectionE'/>
<fun r='_ZNK4llvm11MCAsmLayout15getSymbolOffsetERKNS_8MCSymbolERm'/>
<fun r='_ZNK4llvm11MCAsmLayout15getSymbolOffsetERKNS_8MCSymbolE'/>
<fun r='_ZNK4llvm11MCAsmLayout13getBaseSymbolERKNS_8MCSymbolE'/>
