<def f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='222' ll='225' type='bool llvm::MemoryDepChecker::shouldRetryWithRuntimeCheck() const'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='220'>/// In same cases when the dependency check fails we can still
  /// vectorize the loop with a dynamic array access check.</doc>
<use f='llvm/llvm/lib/Analysis/LoopAccessAnalysis.cpp' l='2007' u='c' c='_ZN4llvm14LoopAccessInfo11analyzeLoopEPNS_9AAResultsEPNS_8LoopInfoEPKNS_17TargetLibraryInfoEPNS_13DominatorTreeE'/>
