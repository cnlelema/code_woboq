<dec f='llvm/llvm/include/llvm/ADT/APInt.h' l='1102' type='llvm::APInt llvm::APInt::smul_ov(const llvm::APInt &amp; RHS, bool &amp; Overflow) const'/>
<use f='llvm/clang/lib/AST/ExprConstant.cpp' l='9596' u='c' c='_ZN12_GLOBAL__N_116IntExprEvaluator20VisitBuiltinCallExprEPKN5clang8CallExprEj'/>
<use f='llvm/clang/lib/CodeGen/CGExprScalar.cpp' l='77' u='c' c='_ZN12_GLOBAL__N_122mayHaveIntegerOverflowEPN4llvm11ConstantIntES2_N5clang18BinaryOperatorKindEbRNS0_5APIntE'/>
<use f='llvm/clang/lib/Lex/PPExpressions.cpp' l='681' u='c' c='_ZL24EvaluateDirectiveSubExprRN12_GLOBAL__N_17PPValueEjRN5clang5TokenEbRbRNS2_12PreprocessorE'/>
<use f='llvm/llvm/include/llvm/Support/CheckedArithmetic.h' l='67' u='a' c='_ZN4llvm10checkedMulET_S0_'/>
<def f='llvm/llvm/lib/Support/APInt.cpp' l='1906' ll='1914' type='llvm::APInt llvm::APInt::smul_ov(const llvm::APInt &amp; RHS, bool &amp; Overflow) const'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp' l='1015' u='c' c='_ZL15MulWillOverflowRN4llvm5APIntES1_b'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='608' u='c' c='_ZL17multiplyOverflowsRKN4llvm5APIntES2_RS0_b'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1380' u='c' c='_ZN12_GLOBAL__N_141ConstantRange_NoWrapRegionExhaustive_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1500' u='c' c='_ZN12_GLOBAL__N_165ConstantRange_MakeGuaranteedNoWrapRegionMulSignedSingleValue_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1539' u='c' c='_ZN12_GLOBAL__N_159ConstantRange_MakeGuaranteedNoWrapRegionMulSignedRange_Test8TestBodyEv'/>
