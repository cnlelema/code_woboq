<dec f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='1670' type='void clang::CodeGen::CodeGenFunction::pushRegularPartialArrayCleanup(llvm::Value * arrayBegin, llvm::Value * arrayEnd, clang::QualType elementType, clang::CharUnits elementAlignment, Destroyer * destroyer)'/>
<use f='llvm/clang/lib/CodeGen/CGClass.cpp' l='1980' u='c' c='_ZN5clang7CodeGen15CodeGenFunction26EmitCXXAggrConstructorCallEPKNS_18CXXConstructorDeclEPN4llvm5ValueENS0_7AddressEPKNS_16CXXConstructExprEbb'/>
<use f='llvm/clang/lib/CodeGen/CGDecl.cpp' l='2190' u='c' c='_ZN5clang7CodeGen15CodeGenFunction16emitArrayDestroyEPN4llvm5ValueES4_NS_8QualTypeENS_9CharUnitsEPFvRS1_NS0_7AddressES5_Ebb'/>
<def f='llvm/clang/lib/CodeGen/CGDecl.cpp' l='2312' ll='2321' type='void clang::CodeGen::CodeGenFunction::pushRegularPartialArrayCleanup(llvm::Value * arrayBegin, llvm::Value * arrayEnd, clang::QualType elementType, clang::CharUnits elementAlign, Destroyer * destroyer)'/>
<doc f='llvm/clang/lib/CodeGen/CGDecl.cpp' l='2306'>/// pushRegularPartialArrayCleanup - Push an EH cleanup to destroy
/// already-constructed elements of the given array.  The cleanup
/// may be popped with DeactivateCleanupBlock or PopCleanupBlock.
///
/// \param elementType - the immediate element type of the array;
///   possibly still an array type</doc>
<use f='llvm/clang/lib/CodeGen/CGExprAgg.cpp' l='1660' u='c' c='_ZN12_GLOBAL__N_114AggExprEmitter22VisitArrayInitLoopExprEPKN5clang17ArrayInitLoopExprEPN4llvm5ValueE'/>
<use f='llvm/clang/lib/CodeGen/CGExprCXX.cpp' l='1228' u='c' c='_ZN5clang7CodeGen15CodeGenFunction23EmitNewArrayInitializerEPKNS_10CXXNewExprENS_8QualTypeEPN4llvm4TypeENS0_7AddressEPNS6_5ValueESB_'/>
