<def f='llvm/llvm/include/llvm/CodeGen/TargetFrameLowering.h' l='332' ll='334' type='bool llvm::TargetFrameLowering::canUseAsPrologue(const llvm::MachineBasicBlock &amp; MBB) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetFrameLowering.h' l='324'>/// Check whether or not the given \p MBB can be used as a prologue
  /// for the target.
  /// The prologue will be inserted first in this basic block.
  /// This method is used by the shrink-wrapping pass to decide if
  /// \p MBB will be correctly handled by the target.
  /// As soon as the target enable shrink-wrapping without overriding
  /// this method, we assume that each basic block is a valid
  /// prologue.</doc>
<use f='llvm/llvm/lib/CodeGen/ShrinkWrap.cpp' l='545' u='c' c='_ZN12_GLOBAL__N_110ShrinkWrap20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp' l='381' c='_ZNK4llvm20AArch64FrameLowering16canUseAsPrologueERKNS_17MachineBasicBlockE'/>
<ovr f='llvm/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp' l='708' c='_ZNK4llvm16PPCFrameLowering16canUseAsPrologueERKNS_17MachineBasicBlockE'/>
<ovr f='llvm/llvm/lib/Target/X86/X86FrameLowering.cpp' l='2868' c='_ZNK4llvm16X86FrameLowering16canUseAsPrologueERKNS_17MachineBasicBlockE'/>
