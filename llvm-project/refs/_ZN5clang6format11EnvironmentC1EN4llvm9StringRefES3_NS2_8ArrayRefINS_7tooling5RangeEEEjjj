<dec f='llvm/clang/lib/Format/TokenAnalyzer.h' l='43' type='void clang::format::Environment::Environment(llvm::StringRef Code, llvm::StringRef FileName, ArrayRef&lt;tooling::Range&gt; Ranges, unsigned int FirstStartColumn = 0, unsigned int NextStartColumn = 0, unsigned int LastStartColumn = 0)'/>
<use f='llvm/clang/lib/Format/Format.cpp' l='2332' u='c' c='_ZN5clang6format7cleanupERKNS0_11FormatStyleEN4llvm9StringRefENS4_8ArrayRefINS_7tooling5RangeEEES5_'/>
<use f='llvm/clang/lib/Format/Format.cpp' l='2349' u='c' c='_ZN5clang6format23fixNamespaceEndCommentsERKNS0_11FormatStyleEN4llvm9StringRefENS4_8ArrayRefINS_7tooling5RangeEEES5_'/>
<use f='llvm/clang/lib/Format/Format.cpp' l='2358' u='c' c='_ZN5clang6format21sortUsingDeclarationsERKNS0_11FormatStyleEN4llvm9StringRefENS4_8ArrayRefINS_7tooling5RangeEEES5_'/>
<use f='llvm/clang/lib/Format/Format.cpp' l='2421' u='c' c='_ZN5clang6format13guessLanguageEN4llvm9StringRefES2_'/>
<doc f='llvm/clang/lib/Format/TokenAnalyzer.h' l='38'>// This sets up an virtual file system with file \p FileName containing the
  // fragment \p Code. Assumes that \p Code starts at \p FirstStartColumn,
  // that the next lines of \p Code should start at \p NextStartColumn, and
  // that \p Code should end at \p LastStartColumn if it ends in newline.
  // See also the documentation of clang::format::internal::reformat.</doc>
<use f='llvm/clang/lib/Format/SortJavaScriptImports.cpp' l='445' u='c' c='_ZN5clang6format21sortJavaScriptImportsERKNS0_11FormatStyleEN4llvm9StringRefENS4_8ArrayRefINS_7tooling5RangeEEES5_'/>
<def f='llvm/clang/lib/Format/TokenAnalyzer.cpp' l='36' ll='49' type='void clang::format::Environment::Environment(llvm::StringRef Code, llvm::StringRef FileName, ArrayRef&lt;tooling::Range&gt; Ranges, unsigned int FirstStartColumn = 0, unsigned int NextStartColumn = 0, unsigned int LastStartColumn = 0)'/>
