<def f='llvm/llvm/include/llvm/CodeGen/ScheduleHazardRecognizer.h' l='51' type='bool llvm::ScheduleHazardRecognizer::atIssueLimit() const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/ScheduleHazardRecognizer.h' l='47'>/// atIssueLimit - Return true if no more instructions may be issued in this
  /// cycle.
  ///
  /// FIXME: remove this once MachineScheduler is the only client.</doc>
<use f='llvm/llvm/lib/CodeGen/PostRAHazardRecognizer.cpp' l='91' u='c' c='_ZN12_GLOBAL__N_122PostRAHazardRecognizer20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<use f='llvm/llvm/lib/CodeGen/PostRASchedulerList.cpp' l='631' u='c' c='_ZN12_GLOBAL__N_120SchedulePostRATDList19ListScheduleTopDownEv'/>
<ovr f='llvm/llvm/lib/CodeGen/ScoreboardHazardRecognizer.cpp' l='104' c='_ZNK4llvm26ScoreboardHazardRecognizer12atIssueLimitEv'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp' l='811' u='c' c='_ZN12_GLOBAL__N_117ScheduleDAGRRList20ScheduleNodeBottomUpEPN4llvm5SUnitE'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/GCNHazardRecognizer.h' l='97' c='_ZNK4llvm19GCNHazardRecognizer12atIssueLimitEv'/>
