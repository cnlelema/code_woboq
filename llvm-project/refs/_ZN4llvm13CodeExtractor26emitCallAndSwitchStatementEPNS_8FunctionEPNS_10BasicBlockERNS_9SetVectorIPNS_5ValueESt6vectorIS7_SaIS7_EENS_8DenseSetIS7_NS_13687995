<dec f='llvm/llvm/include/llvm/Transforms/Utils/CodeExtractor.h' l='171' type='llvm::CallInst * llvm::CodeExtractor::emitCallAndSwitchStatement(llvm::Function * newFunction, llvm::BasicBlock * newHeader, ValueSet &amp; inputs, ValueSet &amp; outputs)'/>
<def f='llvm/llvm/lib/Transforms/Utils/CodeExtractor.cpp' l='980' ll='1244' type='llvm::CallInst * llvm::CodeExtractor::emitCallAndSwitchStatement(llvm::Function * newFunction, llvm::BasicBlock * codeReplacer, ValueSet &amp; inputs, ValueSet &amp; outputs)'/>
<use f='llvm/llvm/lib/Transforms/Utils/CodeExtractor.cpp' l='1448' u='c' c='_ZN4llvm13CodeExtractor17extractCodeRegionEv'/>
<doc f='llvm/llvm/lib/Transforms/Utils/CodeExtractor.cpp' l='977'>/// emitCallAndSwitchStatement - This method sets up the caller side by adding
/// the call instruction, splitting any PHI nodes in the header block as
/// necessary.</doc>
