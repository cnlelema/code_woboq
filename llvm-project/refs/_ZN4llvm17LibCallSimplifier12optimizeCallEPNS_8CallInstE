<dec f='llvm/llvm/include/llvm/Transforms/Utils/SimplifyLibCalls.h' l='147' type='llvm::Value * llvm::LibCallSimplifier::optimizeCall(llvm::CallInst * CI)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/SimplifyLibCalls.h' l='140'>/// optimizeCall - Take the given call instruction and return a more
  /// optimal value to replace the instruction with or 0 if a more
  /// optimal form can&apos;t be found.  Note that the returned value may
  /// be equal to the instruction being optimized.  In this case all
  /// other instructions that use the given instruction were modified
  /// and the given instruction is dead.
  /// The call must not be an indirect call.</doc>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp' l='4053' u='c' c='_ZN4llvm12InstCombiner15tryOptimizeCallEPNS_8CallInstE'/>
<def f='llvm/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp' l='2653' ll='2782' type='llvm::Value * llvm::LibCallSimplifier::optimizeCall(llvm::CallInst * CI)'/>
