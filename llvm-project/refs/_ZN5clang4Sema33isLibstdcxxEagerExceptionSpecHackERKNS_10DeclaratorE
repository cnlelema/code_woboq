<dec f='llvm/clang/include/clang/Sema/Sema.h' l='5043' type='bool clang::Sema::isLibstdcxxEagerExceptionSpecHack(const clang::Declarator &amp; D)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='5041'>/// Determine if we&apos;re in a case where we need to (incorrectly) eagerly
  /// parse an exception specification to work around a libstdc++ bug.</doc>
<use f='llvm/clang/lib/Parse/ParseDecl.cpp' l='6308' u='c' c='_ZN5clang6Parser23ParseFunctionDeclaratorERNS_10DeclaratorERNS_16ParsedAttributesERNS_24BalancedDelimiterTrackerEbb'/>
<def f='llvm/clang/lib/Sema/SemaExceptionSpec.cpp' l='41' ll='76' type='bool clang::Sema::isLibstdcxxEagerExceptionSpecHack(const clang::Declarator &amp; D)'/>
<doc f='llvm/clang/lib/Sema/SemaExceptionSpec.cpp' l='37'>/// HACK: libstdc++ has a bug where it shadows std::swap with a member
/// swap function then tries to call std::swap unqualified from the exception
/// specification of that function. This function detects whether we&apos;re in
/// such a case and turns off delay-parsing of exception specifications.</doc>
