<dec f='llvm/llvm/lib/Target/X86/MCTargetDesc/X86MCTargetDesc.h' l='94' type='llvm::MCStreamer * llvm::createX86WinCOFFStreamer(llvm::MCContext &amp; C, std::unique_ptr&lt;MCAsmBackend&gt; &amp;&amp; AB, std::unique_ptr&lt;MCObjectWriter&gt; &amp;&amp; OW, std::unique_ptr&lt;MCCodeEmitter&gt; &amp;&amp; CE, bool RelaxAll, bool IncrementalLinkerCompatible)'/>
<doc f='llvm/llvm/lib/Target/X86/MCTargetDesc/X86MCTargetDesc.h' l='90'>/// Construct an X86 Windows COFF machine code streamer which will generate
/// PE/COFF format object files.
///
/// Takes ownership of \p AB and \p CE.</doc>
<use f='llvm/llvm/lib/Target/X86/MCTargetDesc/X86MCTargetDesc.cpp' l='554' u='r' c='LLVMInitializeX86TargetMC'/>
<def f='llvm/llvm/lib/Target/X86/MCTargetDesc/X86WinCOFFStreamer.cpp' l='62' ll='73' type='llvm::MCStreamer * llvm::createX86WinCOFFStreamer(llvm::MCContext &amp; C, std::unique_ptr&lt;MCAsmBackend&gt; &amp;&amp; AB, std::unique_ptr&lt;MCObjectWriter&gt; &amp;&amp; OW, std::unique_ptr&lt;MCCodeEmitter&gt; &amp;&amp; CE, bool RelaxAll, bool IncrementalLinkerCompatible)'/>
