<use f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='874' u='c' c='_ZNK4llvm7CmpInst21getNonStrictPredicateEv'/>
<dec f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='882' type='static llvm::CmpInst::Predicate llvm::CmpInst::getNonStrictPredicate(llvm::CmpInst::Predicate pred)'/>
<doc f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='877'>/// This is a static version that you can use without an instruction
  /// available.
  /// @returns the non-strict version of comparison provided in \p pred.
  /// If \p pred is not a strict comparison predicate, returns \p pred.
  /// Returns the non-strict version of strict comparisons.</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='9534' u='c' c='_ZN4llvm15ScalarEvolution24isLoopEntryGuardedByCondEPKNS_4LoopENS_7CmpInst9PredicateEPKNS_4SCEVES8_'/>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='3731' ll='3743' type='static CmpInst::Predicate llvm::CmpInst::getNonStrictPredicate(llvm::CmpInst::Predicate pred)'/>
