<def f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='847' ll='852' type='llvm::ReturnInst * llvm::IRBuilder::CreateAggregateRet(llvm::Value *const * retVals, unsigned int N)'/>
<doc f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='840'>/// Create a sequence of N insertvalue instructions,
  /// with one Value from the retVals array each, that build a aggregate
  /// return value one value at a time, and a ret instruction to return
  /// the resulting aggregate value.
  ///
  /// This is a convenience function for code that uses aggregate return values
  /// as a vehicle for having multiple return values.</doc>
<use f='llvm/llvm/lib/IR/Core.cpp' l='3076' u='c' c='LLVMBuildAggregateRet'/>
