<dec f='llvm/clang/include/clang/Sema/Sema.h' l='3038' type='bool clang::Sema::resolveAndFixAddressOfOnlyViableOverloadCandidate(ExprResult &amp; SrcExpr, bool DoFunctionPointerConversion = false)'/>
<use f='llvm/clang/lib/Sema/SemaCast.cpp' l='2127' u='c' c='_ZL32fixOverloadedReinterpretCastExprRN5clang4SemaENS_8QualTypeERNS_12ActionResultIPNS_4ExprELb1EEE'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='17667' u='c' c='_ZN5clang4Sema20CheckPlaceholderExprEPNS_4ExprE'/>
<def f='llvm/clang/lib/Sema/SemaOverload.cpp' l='11561' ll='11583' type='bool clang::Sema::resolveAndFixAddressOfOnlyViableOverloadCandidate(ExprResult &amp; SrcExpr, bool DoFunctionPointerConverion = false)'/>
<doc f='llvm/clang/lib/Sema/SemaOverload.cpp' l='11554'>/// Given an overloaded function, tries to turn it into a non-overloaded
/// function reference using resolveAddressOfOnlyViableOverloadCandidate. This
/// will perform access checks, diagnose the use of the resultant decl, and, if
/// requested, potentially perform a function-to-pointer decay.
///
/// Returns false if resolveAddressOfOnlyViableOverloadCandidate fails.
/// Otherwise, returns true. This may emit diagnostics and return true.</doc>
