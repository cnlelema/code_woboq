<dec f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.h' l='162' type='bool llvm::AggressiveAntiDepBreaker::IsImplicitDefUse(llvm::MachineInstr &amp; MI, llvm::MachineOperand &amp; MO)'/>
<def f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp' l='230' ll='246' type='bool llvm::AggressiveAntiDepBreaker::IsImplicitDefUse(llvm::MachineInstr &amp; MI, llvm::MachineOperand &amp; MO)'/>
<use f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp' l='254' u='c' c='_ZN4llvm24AggressiveAntiDepBreaker15GetPassthruRegsERNS_12MachineInstrERSt3setIjSt4lessIjESaIjEE'/>
<doc f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.h' l='160'>/// Return true if MO represents a register
    /// that is both implicitly used and defined in MI</doc>
