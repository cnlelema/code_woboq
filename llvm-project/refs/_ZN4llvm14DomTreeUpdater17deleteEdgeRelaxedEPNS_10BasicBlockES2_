<dec f='llvm/llvm/include/llvm/Analysis/DomTreeUpdater.h' l='190' type='void llvm::DomTreeUpdater::deleteEdgeRelaxed(llvm::BasicBlock * From, llvm::BasicBlock * To)'/>
<doc f='llvm/llvm/include/llvm/Analysis/DomTreeUpdater.h' l='182'>/// \deprecated { Submit an edge deletion to all available trees.
  /// Under either Strategy, an invalid update will be discard silently.
  /// Invalid update means deleting an edge that exists in the CFG.
  /// The Eager Strategy flushes this update immediately while the Lazy Strategy
  /// queues the update. It is only recommended to use this method when you
  /// want to discard an invalid update.
  /// CAUTION! It is illegal to submit any update that has already been
  /// submitted. }</doc>
<def f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='388' ll='407' type='void llvm::DomTreeUpdater::deleteEdgeRelaxed(llvm::BasicBlock * From, llvm::BasicBlock * To)'/>
