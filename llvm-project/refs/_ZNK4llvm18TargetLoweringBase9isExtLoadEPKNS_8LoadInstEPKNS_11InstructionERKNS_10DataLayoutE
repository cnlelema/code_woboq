<def f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='2351' ll='2372' type='bool llvm::TargetLoweringBase::isExtLoad(const llvm::LoadInst * Load, const llvm::Instruction * Ext, const llvm::DataLayout &amp; DL) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='2345'>/// Return true if \p Load and \p Ext can form an ExtLoad.
  /// For example, in AArch64
  ///   %L = load i8, i8* %ptr
  ///   %E = zext i8 %L to i32
  /// can be lowered into one load instruction
  ///   ldrb w0, [x0]</doc>
<use f='llvm/llvm/lib/CodeGen/CodeGenPrepare.cpp' l='5437' u='c' c='_ZN12_GLOBAL__N_114CodeGenPrepare12canFormExtLdERKN4llvm15SmallVectorImplIPNS1_11InstructionEEERPNS1_8LoadInstERS4_b'/>
