<dec f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='629' type='void llvm::LoopAccessInfo::collectStridedAccess(llvm::Value * LoadOrStoreInst)'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='625'>/// Collect memory access with loop invariant strides.
  ///
  /// Looks for accesses like &quot;a[i * StrideA]&quot; where &quot;StrideA&quot; is loop
  /// invariant.</doc>
<use f='llvm/llvm/lib/Analysis/LoopAccessAnalysis.cpp' l='1847' u='c' c='_ZN4llvm14LoopAccessInfo11analyzeLoopEPNS_9AAResultsEPNS_8LoopInfoEPKNS_17TargetLibraryInfoEPNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Analysis/LoopAccessAnalysis.cpp' l='1871' u='c' c='_ZN4llvm14LoopAccessInfo11analyzeLoopEPNS_9AAResultsEPNS_8LoopInfoEPKNS_17TargetLibraryInfoEPNS_13DominatorTreeE'/>
<def f='llvm/llvm/lib/Analysis/LoopAccessAnalysis.cpp' l='2260' ll='2321' type='void llvm::LoopAccessInfo::collectStridedAccess(llvm::Value * MemAccess)'/>
