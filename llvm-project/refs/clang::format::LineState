<def f='llvm/clang/lib/Format/ContinuationIndenter.h' l='376' ll='447'/>
<size>72</size>
<doc f='llvm/clang/lib/Format/ContinuationIndenter.h' l='373'>/// The current state when indenting a unwrapped line.
///
/// As the indenting tries different combinations this is copied by value.</doc>
<mbr r='clang::format::LineState::Column' o='0' t='unsigned int'/>
<mbr r='clang::format::LineState::NextToken' o='64' t='clang::format::FormatToken *'/>
<mbr r='clang::format::LineState::LineContainsContinuedForLoopSection' o='128' t='bool'/>
<mbr r='clang::format::LineState::NoContinuation' o='136' t='bool'/>
<mbr r='clang::format::LineState::StartOfLineLevel' o='160' t='unsigned int'/>
<mbr r='clang::format::LineState::LowestLevelOnLine' o='192' t='unsigned int'/>
<mbr r='clang::format::LineState::StartOfStringLiteral' o='224' t='unsigned int'/>
<mbr r='clang::format::LineState::Stack' o='256' t='std::vector&lt;ParenState&gt;'/>
<mbr r='clang::format::LineState::IgnoreStackForComparison' o='448' t='bool'/>
<mbr r='clang::format::LineState::FirstIndent' o='480' t='unsigned int'/>
<mbr r='clang::format::LineState::Line' o='512' t='const clang::format::AnnotatedLine *'/>
<fun r='_ZNK5clang6format9LineStateltERKS1_'/>
