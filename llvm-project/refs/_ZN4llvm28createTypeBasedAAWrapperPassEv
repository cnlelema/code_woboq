<dec f='llvm/llvm/include/llvm/Analysis/TypeBasedAliasAnalysis.h' l='93' type='llvm::ImmutablePass * llvm::createTypeBasedAAWrapperPass()'/>
<use f='llvm/llvm/include/llvm/LinkAllPasses.h' l='78' u='c' c='_ZN12_GLOBAL__N_116ForcePassLinkingC1Ev'/>
<doc f='llvm/llvm/include/llvm/Analysis/TypeBasedAliasAnalysis.h' l='88'>//===--------------------------------------------------------------------===//
//
// createTypeBasedAAWrapperPass - This pass implements metadata-based
// type-based alias analysis.
//</doc>
<def f='llvm/llvm/lib/Analysis/TypeBasedAliasAnalysis.cpp' l='720' ll='722' type='llvm::ImmutablePass * llvm::createTypeBasedAAWrapperPass()'/>
<use f='llvm/llvm/lib/CodeGen/TargetPassConfig.cpp' l='627' u='c' c='_ZN4llvm16TargetPassConfig11addIRPassesEv'/>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='239' u='c' c='_ZNK4llvm18PassManagerBuilder29addInitialAliasAnalysisPassesERNS_6legacy15PassManagerBaseE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='272' u='c' c='LLVMAddTypeBasedAliasAnalysisPass'/>
