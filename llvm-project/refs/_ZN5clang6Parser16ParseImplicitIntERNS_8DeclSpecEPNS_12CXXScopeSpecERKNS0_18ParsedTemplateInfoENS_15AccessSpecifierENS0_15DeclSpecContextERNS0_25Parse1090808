<dec f='llvm/clang/include/clang/Parse/Parser.h' l='2135' type='bool clang::Parser::ParseImplicitInt(clang::DeclSpec &amp; DS, clang::CXXScopeSpec * SS, const clang::Parser::ParsedTemplateInfo &amp; TemplateInfo, clang::AccessSpecifier AS, clang::Parser::DeclSpecContext DSC, clang::Parser::ParsedAttributesWithRange &amp; Attrs)'/>
<def f='llvm/clang/lib/Parse/ParseDecl.cpp' l='2529' ll='2753' type='bool clang::Parser::ParseImplicitInt(clang::DeclSpec &amp; DS, clang::CXXScopeSpec * SS, const clang::Parser::ParsedTemplateInfo &amp; TemplateInfo, clang::AccessSpecifier AS, clang::Parser::DeclSpecContext DSC, clang::Parser::ParsedAttributesWithRange &amp; Attrs)'/>
<use f='llvm/clang/lib/Parse/ParseDecl.cpp' l='3202' u='c' c='_ZN5clang6Parser26ParseDeclarationSpecifiersERNS_8DeclSpecERKNS0_18ParsedTemplateInfoENS_15AccessSpecifierENS0_15DeclSpecContextEPNS0_18LateParsedAttrListE'/>
<use f='llvm/clang/lib/Parse/ParseDecl.cpp' l='3349' u='c' c='_ZN5clang6Parser26ParseDeclarationSpecifiersERNS_8DeclSpecERKNS0_18ParsedTemplateInfoENS_15AccessSpecifierENS0_15DeclSpecContextEPNS0_18LateParsedAttrListE'/>
<doc f='llvm/clang/lib/Parse/ParseDecl.cpp' l='2520'>/// ParseImplicitInt - This method is called when we have an non-typename
/// identifier in a declspec (which normally terminates the decl spec) when
/// the declspec has no type specifier.  In this case, the declspec is either
/// malformed or is &quot;implicit int&quot; (in K&amp;R and C89).
///
/// This method handles diagnosing this prettily and returns false if the
/// declspec is done being processed.  If it recovers and thinks there may be
/// other pieces of declspec after it, it returns true.
///</doc>
