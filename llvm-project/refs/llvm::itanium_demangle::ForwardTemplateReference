<inh f='llvm/llvm/include/llvm/Demangle/ItaniumDemangle.h' l='105' c='llvm::itanium_demangle::Node'/>
<def f='llvm/llvm/include/llvm/Demangle/ItaniumDemangle.h' l='1142' ll='1199'/>
<size>40</size>
<doc f='llvm/llvm/include/llvm/Demangle/ItaniumDemangle.h' l='1124'>/// A forward-reference to a template argument that was not known at the point
/// where the template parameter name was parsed in a mangling.
///
/// This is created when demangling the name of a specialization of a
/// conversion function template:
///
/// \code
/// struct A {
///   template&lt;typename T&gt; operator T*();
/// };
/// \endcode
///
/// When demangling a specialization of the conversion function template, we
/// encounter the name of the template (including the \c T) before we reach
/// the template argument list, so we cannot substitute the parameter name
/// for the corresponding argument while parsing. Instead, we create a
/// \c ForwardTemplateReference node that is resolved after we parse the
/// template arguments.</doc>
<mbr r='llvm::itanium_demangle::ForwardTemplateReference::Index' o='128' t='size_t'/>
<mbr r='llvm::itanium_demangle::ForwardTemplateReference::Ref' o='192' t='llvm::itanium_demangle::Node *'/>
<mbr r='llvm::itanium_demangle::ForwardTemplateReference::Printing' o='256' t='bool'/>
<fun r='_ZN4llvm16itanium_demangle24ForwardTemplateReferenceC1Em'/>
<fun r='_ZNK4llvm16itanium_demangle24ForwardTemplateReference5matchET_'/>
<fun r='_ZNK4llvm16itanium_demangle24ForwardTemplateReference19hasRHSComponentSlowERNS0_12OutputStreamE'/>
<fun r='_ZNK4llvm16itanium_demangle24ForwardTemplateReference12hasArraySlowERNS0_12OutputStreamE'/>
<fun r='_ZNK4llvm16itanium_demangle24ForwardTemplateReference15hasFunctionSlowERNS0_12OutputStreamE'/>
<fun r='_ZNK4llvm16itanium_demangle24ForwardTemplateReference13getSyntaxNodeERNS0_12OutputStreamE'/>
<fun r='_ZNK4llvm16itanium_demangle24ForwardTemplateReference9printLeftERNS0_12OutputStreamE'/>
<fun r='_ZNK4llvm16itanium_demangle24ForwardTemplateReference10printRightERNS0_12OutputStreamE'/>
