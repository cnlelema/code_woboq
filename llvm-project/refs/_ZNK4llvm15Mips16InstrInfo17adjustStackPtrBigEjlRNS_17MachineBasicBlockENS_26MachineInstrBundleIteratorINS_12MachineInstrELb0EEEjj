<dec f='llvm/llvm/lib/Target/Mips/Mips16InstrInfo.h' l='119' type='void llvm::Mips16InstrInfo::adjustStackPtrBig(unsigned int SP, int64_t Amount, llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator I, unsigned int Reg1, unsigned int Reg2) const'/>
<doc f='llvm/llvm/lib/Target/Mips/Mips16InstrInfo.h' l='118'>// Adjust SP by Amount bytes where bytes can be up to 32bit number.</doc>
<def f='llvm/llvm/lib/Target/Mips/Mips16InstrInfo.cpp' l='280' ll='302' type='void llvm::Mips16InstrInfo::adjustStackPtrBig(unsigned int SP, int64_t Amount, llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator I, unsigned int Reg1, unsigned int Reg2) const'/>
<doc f='llvm/llvm/lib/Target/Mips/Mips16InstrInfo.cpp' l='276'>// Adjust SP by Amount bytes where bytes can be up to 32bit number.
// This can only be called at times that we know that there is at least one free
// register.
// This is clearly safe at prologue and epilogue.</doc>
