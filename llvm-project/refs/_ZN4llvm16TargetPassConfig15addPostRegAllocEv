<def f='llvm/llvm/include/llvm/CodeGen/TargetPassConfig.h' l='395' type='void llvm::TargetPassConfig::addPostRegAlloc()'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetPassConfig.h' l='393'>/// This method may be implemented by targets that want to run passes after
  /// register allocation pass pipeline but before prolog-epilog insertion.</doc>
<use f='llvm/llvm/lib/CodeGen/TargetPassConfig.cpp' l='906' u='c' c='_ZN4llvm16TargetPassConfig16addMachinePassesEv'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64TargetMachine.cpp' l='557' c='_ZN12_GLOBAL__N_117AArch64PassConfig15addPostRegAllocEv'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp' l='947' c='_ZN12_GLOBAL__N_113GCNPassConfig15addPostRegAllocEv'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp' l='951' u='c' c='_ZN12_GLOBAL__N_113GCNPassConfig15addPostRegAllocEv'/>
<ovr f='llvm/llvm/lib/Target/Hexagon/HexagonTargetMachine.cpp' l='380' c='_ZN12_GLOBAL__N_117HexagonPassConfig15addPostRegAllocEv'/>
<ovr f='llvm/llvm/lib/Target/Mips/MipsTargetMachine.cpp' l='286' c='_ZN12_GLOBAL__N_114MipsPassConfig15addPostRegAllocEv'/>
<ovr f='llvm/llvm/lib/Target/NVPTX/NVPTXTargetMachine.cpp' l='320' c='_ZN12_GLOBAL__N_115NVPTXPassConfig15addPostRegAllocEv'/>
<ovr f='llvm/llvm/lib/Target/WebAssembly/WebAssemblyTargetMachine.cpp' l='389' c='_ZN12_GLOBAL__N_121WebAssemblyPassConfig15addPostRegAllocEv'/>
<use f='llvm/llvm/lib/Target/WebAssembly/WebAssemblyTargetMachine.cpp' l='408' u='c' c='_ZN12_GLOBAL__N_121WebAssemblyPassConfig15addPostRegAllocEv'/>
<ovr f='llvm/llvm/lib/Target/X86/X86TargetMachine.cpp' l='492' c='_ZN12_GLOBAL__N_113X86PassConfig15addPostRegAllocEv'/>
