<dec f='llvm/llvm/lib/CodeGen/BranchFolding.h' l='185' type='unsigned int llvm::BranchFolder::ComputeSameTails(unsigned int CurHash, unsigned int minCommonTailLength, llvm::MachineBasicBlock * SuccBB, llvm::MachineBasicBlock * PredBB)'/>
<def f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='728' ll='762' type='unsigned int llvm::BranchFolder::ComputeSameTails(unsigned int CurHash, unsigned int MinCommonTailLength, llvm::MachineBasicBlock * SuccBB, llvm::MachineBasicBlock * PredBB)'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='983' u='c' c='_ZN4llvm12BranchFolder18TryTailMergeBlocksEPNS_17MachineBasicBlockES2_j'/>
<doc f='llvm/llvm/lib/CodeGen/BranchFolding.h' l='176'>/// Look through all the blocks in MergePotentials that have hash CurHash
    /// (guaranteed to match the last element).  Build the vector SameTails of
    /// all those that have the (same) largest number of instructions in common
    /// of any pair of these blocks.  SameTails entries contain an iterator into
    /// MergePotentials (from which the MachineBasicBlock can be found) and a
    /// MachineBasicBlock::iterator into that MBB indicating the instruction
    /// where the matching code sequence begins.  Order of elements in SameTails
    /// is the reverse of the order in which those blocks appear in
    /// MergePotentials (where they are not necessarily consecutive).</doc>
