<dec f='llvm/clang/lib/Format/BreakableToken.h' l='251' type='void clang::format::BreakableStringLiteral::BreakableStringLiteral(const clang::format::FormatToken &amp; Tok, unsigned int StartColumn, llvm::StringRef Prefix, llvm::StringRef Postfix, unsigned int UnbreakableTailLength, bool InPPDirective, encoding::Encoding Encoding, const clang::format::FormatStyle &amp; Style)'/>
<def f='llvm/clang/lib/Format/BreakableToken.cpp' l='234' ll='244' type='void clang::format::BreakableStringLiteral::BreakableStringLiteral(const clang::format::FormatToken &amp; Tok, unsigned int StartColumn, llvm::StringRef Prefix, llvm::StringRef Postfix, unsigned int UnbreakableTailLength, bool InPPDirective, encoding::Encoding Encoding, const clang::format::FormatStyle &amp; Style)'/>
<doc f='llvm/clang/lib/Format/BreakableToken.h' l='247'>/// Creates a breakable token for a single line string literal.
  ///
  /// \p StartColumn specifies the column in which the token will start
  /// after formatting.</doc>
