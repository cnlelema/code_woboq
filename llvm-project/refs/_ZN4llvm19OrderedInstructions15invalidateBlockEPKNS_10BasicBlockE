<def f='llvm/llvm/include/llvm/Analysis/OrderedInstructions.h' l='59' type='void llvm::OrderedInstructions::invalidateBlock(const llvm::BasicBlock * BB)'/>
<doc f='llvm/llvm/include/llvm/Analysis/OrderedInstructions.h' l='55'>/// Invalidate the OrderedBasicBlock cache when its basic block changes.
  /// i.e. If an instruction is deleted or added to the basic block, the user
  /// should call this function to invalidate the OrderedBasicBlock cache for
  /// this basic block.</doc>
<use f='llvm/llvm/lib/Analysis/InstructionPrecedenceTracking.cpp' l='106' u='c' c='_ZN4llvm29InstructionPrecedenceTracking19insertInstructionToEPKNS_11InstructionEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/InstructionPrecedenceTracking.cpp' l='112' u='c' c='_ZN4llvm29InstructionPrecedenceTracking17removeInstructionEPKNS_11InstructionE'/>
<use f='llvm/llvm/lib/Analysis/InstructionPrecedenceTracking.cpp' l='117' u='c' c='_ZN4llvm29InstructionPrecedenceTracking5clearEv'/>
