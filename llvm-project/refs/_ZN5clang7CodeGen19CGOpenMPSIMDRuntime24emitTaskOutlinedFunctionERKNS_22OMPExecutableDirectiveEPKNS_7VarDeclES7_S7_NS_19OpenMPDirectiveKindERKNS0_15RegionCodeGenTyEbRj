<dec f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.h' l='1677' type='llvm::Function * clang::CodeGen::CGOpenMPSIMDRuntime::emitTaskOutlinedFunction(const clang::OMPExecutableDirective &amp; D, const clang::VarDecl * ThreadIDVar, const clang::VarDecl * PartIDVar, const clang::VarDecl * TaskTVar, clang::OpenMPDirectiveKind InnermostKind, const clang::CodeGen::RegionCodeGenTy &amp; CodeGen, bool Tied, unsigned int &amp; NumberOfParts)'/>
<doc f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.h' l='1662'>/// Emits outlined function for the OpenMP task directive \a D. This
  /// outlined function has type void(*)(kmp_int32 ThreadID, struct task_t*
  /// TaskT).
  /// \param D OpenMP directive.
  /// \param ThreadIDVar Variable for thread id in the current OpenMP region.
  /// \param PartIDVar Variable for partition id in the current OpenMP untied
  /// task region.
  /// \param TaskTVar Variable for task_t argument.
  /// \param InnermostKind Kind of innermost directive (for simple directives it
  /// is a directive itself, for combined - its innermost directive).
  /// \param CodeGen Code generation sequence for the \a D directive.
  /// \param Tied true if task is generated for tied task, false otherwise.
  /// \param NumberOfParts Number of parts in untied task. Ignored for tied
  /// tasks.
  ///</doc>
<inh f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='1418' c='_ZN5clang7CodeGen15CGOpenMPRuntime24emitTaskOutlinedFunctionERKNS_22OMPExecutableDirectiveEPKNS_7VarDeclES7_S7_NS_19OpenMPDirectiveKindERKNS0_15RegionCodeGenTyEbRj'/>
<def f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='10482' ll='10488' type='llvm::Function * clang::CodeGen::CGOpenMPSIMDRuntime::emitTaskOutlinedFunction(const clang::OMPExecutableDirective &amp; D, const clang::VarDecl * ThreadIDVar, const clang::VarDecl * PartIDVar, const clang::VarDecl * TaskTVar, clang::OpenMPDirectiveKind InnermostKind, const clang::CodeGen::RegionCodeGenTy &amp; CodeGen, bool Tied, unsigned int &amp; NumberOfParts)'/>
