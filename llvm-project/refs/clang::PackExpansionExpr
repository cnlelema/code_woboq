<inh f='llvm/clang/include/clang/AST/Expr.h' l='108' c='clang::Expr'/>
<def f='llvm/clang/include/clang/AST/ExprCXX.h' l='3916' ll='3981'/>
<size>32</size>
<doc f='llvm/clang/include/clang/AST/ExprCXX.h' l='3899'>/// Represents a C++11 pack expansion that produces a sequence of
/// expressions.
///
/// A pack expansion expression contains a pattern (which itself is an
/// expression) followed by an ellipsis. For example:
///
/// \code
/// template&lt;typename F, typename ...Types&gt;
/// void forward(F f, Types &amp;&amp;...args) {
///   f(static_cast&lt;Types&amp;&amp;&gt;(args)...);
/// }
/// \endcode
///
/// Here, the argument to the function object \c f is a pack expansion whose
/// pattern is \c static_cast&lt;Types&amp;&amp;&gt;(args). When the \c forward function
/// template is instantiated, the pack expansion will instantiate to zero or
/// or more function arguments to the function object \c f.</doc>
<mbr r='clang::PackExpansionExpr::EllipsisLoc' o='128' t='clang::SourceLocation'/>
<mbr r='clang::PackExpansionExpr::NumExpansions' o='160' t='unsigned int'/>
<mbr r='clang::PackExpansionExpr::Pattern' o='192' t='clang::Stmt *'/>
<fun r='_ZN5clang17PackExpansionExprC1ENS_8QualTypeEPNS_4ExprENS_14SourceLocationEN4llvm8OptionalIjEE'/>
<fun r='_ZN5clang17PackExpansionExprC1ENS_4Stmt10EmptyShellE'/>
<fun r='_ZN5clang17PackExpansionExpr10getPatternEv'/>
<fun r='_ZNK5clang17PackExpansionExpr10getPatternEv'/>
<fun r='_ZNK5clang17PackExpansionExpr14getEllipsisLocEv'/>
<fun r='_ZNK5clang17PackExpansionExpr16getNumExpansionsEv'/>
<fun r='_ZNK5clang17PackExpansionExpr11getBeginLocEv'/>
<fun r='_ZNK5clang17PackExpansionExpr9getEndLocEv'/>
<fun r='_ZN5clang17PackExpansionExpr7classofEPKNS_4StmtE'/>
<fun r='_ZN5clang17PackExpansionExpr8childrenEv'/>
<fun r='_ZNK5clang17PackExpansionExpr8childrenEv'/>
