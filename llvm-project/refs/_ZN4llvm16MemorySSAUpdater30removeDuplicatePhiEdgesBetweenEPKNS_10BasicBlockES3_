<dec f='llvm/llvm/include/llvm/Analysis/MemorySSAUpdater.h' l='108' type='void llvm::MemorySSAUpdater::removeDuplicatePhiEdgesBetween(const llvm::BasicBlock * From, const llvm::BasicBlock * To)'/>
<doc f='llvm/llvm/include/llvm/Analysis/MemorySSAUpdater.h' l='105'>/// Update the MemoryPhi in `To` to have a single incoming edge from `From`,
  /// following a CFG change that replaced multiple edges (switch) with a direct
  /// branch.</doc>
<def f='llvm/llvm/lib/Analysis/MemorySSAUpdater.cpp' l='466' ll='481' type='void llvm::MemorySSAUpdater::removeDuplicatePhiEdgesBetween(const llvm::BasicBlock * From, const llvm::BasicBlock * To)'/>
<use f='llvm/llvm/lib/Analysis/MemorySSAUpdater.cpp' l='1280' u='c' c='_ZN4llvm16MemorySSAUpdater19changeToUnreachableEPKNS_11InstructionE'/>
<use f='llvm/llvm/lib/Analysis/MemorySSAUpdater.cpp' l='1295' u='c' c='_ZN4llvm16MemorySSAUpdater33changeCondBranchToUnconditionalToEPKNS_10BranchInstEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp' l='508' u='c' c='_ZN12_GLOBAL__N_129ConstantTerminatorFoldingImpl15foldTerminatorsEv'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp' l='2064' u='c' c='_ZL28unswitchNontrivialInvariantsRN4llvm4LoopERNS_11InstructionENS_8ArrayRefIPNS_5ValueEEERNS_15SmallVectorImplIPNS_10BasicBlockEEERNS_13DominatorTree1049984'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp' l='2066' u='c' c='_ZL28unswitchNontrivialInvariantsRN4llvm4LoopERNS_11InstructionENS_8ArrayRefIPNS_5ValueEEERNS_15SmallVectorImplIPNS_10BasicBlockEEERNS_13DominatorTree1049984'/>
