<def f='llvm/clang/include/clang/AST/CharUnits.h' l='136' ll='138' type='bool clang::CharUnits::isMultipleOf(clang::CharUnits N) const'/>
<doc f='llvm/clang/include/clang/AST/CharUnits.h' l='132'>/// Test whether this is a multiple of the other value.
      ///
      /// Among other things, this promises that
      /// self.alignTo(N) will just return self.</doc>
<use f='llvm/clang/lib/CodeGen/CGBlocks.cpp' l='468' u='c' c='_ZL24initializeForBlockHeaderRN5clang7CodeGen13CodeGenModuleERNS0_11CGBlockInfoERN4llvm15SmallVectorImplIPNS5_4TypeEEE'/>
<use f='llvm/clang/lib/CodeGen/CGBlocks.cpp' l='497' u='c' c='_ZL24initializeForBlockHeaderRN5clang7CodeGen13CodeGenModuleERNS0_11CGBlockInfoERN4llvm15SmallVectorImplIPNS5_4TypeEEE'/>
<use f='llvm/clang/lib/CodeGen/SwiftCallingConv.cpp' l='234' u='c' c='_ZN5clang7CodeGen9swiftcall16SwiftAggLowering17addLegalTypedDataEPN4llvm4TypeENS_9CharUnitsES6_'/>
<use f='llvm/clang/lib/CodeGen/SwiftCallingConv.cpp' l='263' u='c' c='_ZN5clang7CodeGen9swiftcall16SwiftAggLowering8addEntryEPN4llvm4TypeENS_9CharUnitsES6_'/>
<use f='llvm/clang/lib/CodeGen/SwiftCallingConv.cpp' l='576' u='c' c='_ZNK5clang7CodeGen9swiftcall16SwiftAggLowering23getCoerceAndExpandTypesEv'/>
<use f='llvm/clang/lib/CodeGen/TargetInfo.cpp' l='1895' u='c' c='_ZNK12_GLOBAL__N_113X86_32ABIInfo19addFieldToArgStructERN4llvm11SmallVectorIPNS1_4TypeELj6EEERN5clang9CharUnitsERNS7_7CodeGen10ABIArgInfoENS7_8QualTypeE'/>
