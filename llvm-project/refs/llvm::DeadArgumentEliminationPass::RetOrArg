<def f='llvm/llvm/include/llvm/Transforms/IPO/DeadArgumentElimination.h' l='44' ll='67'/>
<size>16</size>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/DeadArgumentElimination.h' l='41'>/// Struct that represents (part of) either a return value or a function
  /// argument.  Used so that arguments and return values can be used
  /// interchangeably.</doc>
<mbr r='llvm::DeadArgumentEliminationPass::RetOrArg::F' o='0' t='const llvm::Function *'/>
<mbr r='llvm::DeadArgumentEliminationPass::RetOrArg::Idx' o='64' t='unsigned int'/>
<mbr r='llvm::DeadArgumentEliminationPass::RetOrArg::IsArg' o='96' t='bool'/>
<fun r='_ZN4llvm27DeadArgumentEliminationPass8RetOrArgC1EPKNS_8FunctionEjb'/>
<fun r='_ZNK4llvm27DeadArgumentEliminationPass8RetOrArgltERKS1_'/>
<fun r='_ZNK4llvm27DeadArgumentEliminationPass8RetOrArgeqERKS1_'/>
<fun r='_ZNK4llvm27DeadArgumentEliminationPass8RetOrArg14getDescriptionEv'/>
