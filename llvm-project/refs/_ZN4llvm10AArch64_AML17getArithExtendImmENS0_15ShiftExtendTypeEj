<def f='llvm/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h' l='170' ll='174' type='unsigned int llvm::AArch64_AM::getArithExtendImm(AArch64_AM::ShiftExtendType ET, unsigned int Imm)'/>
<doc f='llvm/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h' l='165'>/// getArithExtendImm - Encode the extend type and shift amount for an
///                     arithmetic instruction:
///   imm:     3-bit extend amount
///   {5-3}  = shifter
///   {2-0}  = imm3</doc>
<use f='llvm/llvm/lib/Target/AArch64/AArch64FastISel.cpp' l='1444' u='c' c='_ZN12_GLOBAL__N_115AArch64FastISel13emitAddSub_rxEbN4llvm3MVTEjbjbNS1_10AArch64_AM15ShiftExtendTypeEmbb'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp' l='663' u='c' c='_ZN12_GLOBAL__N_119AArch64DAGToDAGISel27SelectArithExtendedRegisterEN4llvm7SDValueERS2_S3_'/>
<use f='llvm/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp' l='1751' u='c' c='_ZNK12_GLOBAL__N_114AArch64Operand17addExtendOperandsERN4llvm6MCInstEj'/>
<use f='llvm/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp' l='1759' u='c' c='_ZNK12_GLOBAL__N_114AArch64Operand19addExtend64OperandsERN4llvm6MCInstEj'/>
