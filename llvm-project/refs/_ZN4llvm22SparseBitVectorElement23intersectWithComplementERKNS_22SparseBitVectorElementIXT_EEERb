<def f='llvm/llvm/include/llvm/ADT/SparseBitVector.h' l='217' ll='235' type='bool llvm::SparseBitVectorElement::intersectWithComplement(const SparseBitVectorElement&lt;ElementSize&gt; &amp; RHS, bool &amp; BecameZero)'/>
<doc f='llvm/llvm/include/llvm/ADT/SparseBitVector.h' l='214'>// Intersect this Element with the complement of RHS and return true if this
  // one changed.  BecameZero is set to true if this element became all-zero
  // bits.</doc>
