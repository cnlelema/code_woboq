<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='712' ll='718' type='bool llvm::TargetInstrInfo::isProfitableToIfCvt(llvm::MachineBasicBlock &amp; TMBB, unsigned int NumTCycles, unsigned int ExtraTCycles, llvm::MachineBasicBlock &amp; FMBB, unsigned int NumFCycles, unsigned int ExtraFCycles, llvm::BranchProbability Probability) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='706'>/// Second variant of isProfitableToIfCvt. This one
  /// checks for the case where two basic blocks from true and false path
  /// of a if-then-else (diamond) are predicated on mutally exclusive
  /// predicates, where the probability of the true path being taken is given
  /// by Probability, and Confidence is a measure of our confidence that it
  /// will be properly predicted.</doc>
<use f='llvm/llvm/lib/CodeGen/IfConversion.cpp' l='294' u='c' c='_ZNK12_GLOBAL__N_111IfConverter18MeetIfcvtSizeLimitERN4llvm17MachineBasicBlockEjjS3_jjNS1_17BranchProbabilityE'/>
