<dec f='llvm/llvm/include/llvm/MC/MCCodePadder.h' l='164' type='uint64_t llvm::MCCodePaddingPolicy::getFragmentInstByte(const llvm::MCPaddingFragment * Fragment, llvm::MCAsmLayout &amp; Layout) const'/>
<doc f='llvm/llvm/include/llvm/MC/MCCodePadder.h' l='156'>/// Returns the instruction byte of an instruction pointed by a given
  /// MCPaddingFragment. An instruction byte is the address of the byte of an
  /// instruction which determines its instruction window.
  ///
  /// \param Fragment The fragment pointing to the instruction.
  /// \param Layout Code layout information.
  ///
  /// \returns the instruction byte of an instruction pointed by \p Fragment.</doc>
<def f='llvm/llvm/lib/MC/MCCodePadder.cpp' l='276' ll='283' type='uint64_t llvm::MCCodePaddingPolicy::getFragmentInstByte(const llvm::MCPaddingFragment * Fragment, llvm::MCAsmLayout &amp; Layout) const'/>
<use f='llvm/llvm/lib/MC/MCCodePadder.cpp' l='289' u='c' c='_ZNK4llvm19MCCodePaddingPolicy23computeWindowEndAddressEPKNS_17MCPaddingFragmentEmRNS_11MCAsmLayoutE'/>
