<dec f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='537' type='bool llvm::programUndefinedIfFullPoison(const llvm::Instruction * PoisonI)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='531'>/// Return true if this function can prove that if PoisonI is executed
  /// and yields a full-poison value (all bits poison), then that will
  /// trigger undefined behavior.
  ///
  /// Note that this currently only considers the basic block that is
  /// the parent of I.</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5966' u='c' c='_ZN4llvm15ScalarEvolution21isSCEVExprNeverPoisonEPKNS_11InstructionE'/>
<def f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4539' ll='4590' type='bool llvm::programUndefinedIfFullPoison(const llvm::Instruction * PoisonI)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp' l='1189' u='c' c='_ZN12_GLOBAL__N_126SeparateConstOffsetFromGEP11reuniteExtsEPN4llvm11InstructionE'/>
