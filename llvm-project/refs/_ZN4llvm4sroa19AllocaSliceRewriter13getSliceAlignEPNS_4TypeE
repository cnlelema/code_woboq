<def f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2405' ll='2412' type='unsigned int llvm::sroa::AllocaSliceRewriter::getSliceAlign(llvm::Type * Ty = nullptr)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2525' u='c' c='_ZN4llvm4sroa19AllocaSliceRewriter13visitLoadInstERNS_8LoadInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2675' u='c' c='_ZN4llvm4sroa19AllocaSliceRewriter14visitStoreInstERNS_9StoreInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2738' u='c' c='_ZN4llvm4sroa19AllocaSliceRewriter15visitMemSetInstERNS_10MemSetInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2773' u='c' c='_ZN4llvm4sroa19AllocaSliceRewriter15visitMemSetInstERNS_10MemSetInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2859' u='c' c='_ZN4llvm4sroa19AllocaSliceRewriter20visitMemTransferInstERNS_15MemTransferInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='3110' u='c' c='_ZN4llvm4sroa19AllocaSliceRewriter17fixLoadStoreAlignERNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='3119' u='c' c='_ZN4llvm4sroa19AllocaSliceRewriter17fixLoadStoreAlignERNS_11InstructionE'/>
<doc f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2400'>/// Compute suitable alignment to access this slice of the *new*
  /// alloca.
  ///
  /// You can optionally pass a type to this routine and if that type&apos;s ABI
  /// alignment is itself suitable, this will return zero.</doc>
