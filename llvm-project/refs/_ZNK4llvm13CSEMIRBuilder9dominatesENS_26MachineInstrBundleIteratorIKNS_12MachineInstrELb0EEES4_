<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/CSEMIRBuilder.h' l='43' type='bool llvm::CSEMIRBuilder::dominates(MachineBasicBlock::const_iterator A, MachineBasicBlock::const_iterator B) const'/>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/CSEMIRBuilder.cpp' l='19' ll='31' type='bool llvm::CSEMIRBuilder::dominates(MachineBasicBlock::const_iterator A, MachineBasicBlock::const_iterator B) const'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/CSEMIRBuilder.cpp' l='44' u='c' c='_ZN4llvm13CSEMIRBuilder23getDominatingInstrForIDERNS_16FoldingSetNodeIDERPv'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/CSEMIRBuilder.h' l='34'>/// Returns true if A dominates B (within the same basic block).
  /// Both iterators must be in the same basic block.
  //
  // TODO: Another approach for checking dominance is having two iterators and
  // making them go towards each other until they meet or reach begin/end. Which
  // approach is better? Should this even change dynamically? For G_CONSTANTS
  // most of which will be at the top of the BB, the top down approach would be
  // a better choice. Does IRTranslator placing constants at the beginning still
  // make sense? Should this change based on Opcode?</doc>
