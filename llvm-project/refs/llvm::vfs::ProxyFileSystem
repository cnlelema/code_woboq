<inh f='llvm/llvm/include/llvm/Support/VirtualFileSystem.h' l='244' c='llvm::vfs::FileSystem'/>
<def f='llvm/llvm/include/llvm/Support/VirtualFileSystem.h' l='360' ll='396'/>
<size>24</size>
<doc f='llvm/llvm/include/llvm/Support/VirtualFileSystem.h' l='357'>/// By default, this delegates all calls to the underlying file system. This
/// is useful when derived file systems want to override some calls and still
/// proxy other calls.</doc>
<fun r='_ZN4llvm3vfs15ProxyFileSystemC1ENS_18IntrusiveRefCntPtrINS0_10FileSystemEEE'/>
<fun r='_ZN4llvm3vfs15ProxyFileSystem6statusERKNS_5TwineE'/>
<fun r='_ZN4llvm3vfs15ProxyFileSystem15openFileForReadERKNS_5TwineE'/>
<fun r='_ZN4llvm3vfs15ProxyFileSystem9dir_beginERKNS_5TwineERSt10error_code'/>
<fun r='_ZNK4llvm3vfs15ProxyFileSystem26getCurrentWorkingDirectoryEv'/>
<fun r='_ZN4llvm3vfs15ProxyFileSystem26setCurrentWorkingDirectoryERKNS_5TwineE'/>
<fun r='_ZNK4llvm3vfs15ProxyFileSystem11getRealPathERKNS_5TwineERNS_15SmallVectorImplIcEE'/>
<fun r='_ZN4llvm3vfs15ProxyFileSystem7isLocalERKNS_5TwineERb'/>
<fun r='_ZN4llvm3vfs15ProxyFileSystem15getUnderlyingFSEv'/>
<mbr r='llvm::vfs::ProxyFileSystem::FS' o='128' t='IntrusiveRefCntPtr&lt;llvm::vfs::FileSystem&gt;'/>
<fun r='_ZN4llvm3vfs15ProxyFileSystem6anchorEv'/>
<ovr f='llvm/clang/tools/clang-scan-deps/ClangScanDeps.cpp' l='68' c='(anonymousnamespace)::ProxyFileSystemWithoutChdir'/>
