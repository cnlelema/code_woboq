<dec f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.h' l='194' type='void llvm::HexagonInstrInfo::storeRegToStackSlot(llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator MBBI, unsigned int SrcReg, bool isKill, int FrameIndex, const llvm::TargetRegisterClass * RC, const llvm::TargetRegisterInfo * TRI) const'/>
<doc f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.h' l='190'>/// Store the specified register of the given register class to the specified
  /// stack frame index. The store instruction is to be added to the given
  /// machine basic block before the specified machine instruction. If isKill
  /// is true, the register operand is the last use and must be marked kill.</doc>
<def f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='874' ll='937' type='void llvm::HexagonInstrInfo::storeRegToStackSlot(llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator I, unsigned int SrcReg, bool isKill, int FI, const llvm::TargetRegisterClass * RC, const llvm::TargetRegisterInfo * TRI) const'/>
