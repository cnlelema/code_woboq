<dec f='llvm/llvm/include/llvm/Transforms/IPO.h' l='89' type='llvm::ModulePass * llvm::createGVExtractionPass(std::vector&lt;GlobalValue *&gt; &amp; GVs, bool deleteFn = false)'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO.h' l='84'>//===----------------------------------------------------------------------===//
/// createGVExtractionPass - If deleteFn is true, this pass deletes
/// the specified global values. Otherwise, it deletes as much of the module as
/// possible, except for the global values specified.
///</doc>
<def f='llvm/llvm/lib/Transforms/IPO/ExtractGV.cpp' l='158' ll='161' type='llvm::ModulePass * llvm::createGVExtractionPass(std::vector&lt;GlobalValue *&gt; &amp; GVs, bool deleteFn = false)'/>
<use f='llvm/llvm/tools/llvm-extract/llvm-extract.cpp' l='326' u='c' c='main'/>
