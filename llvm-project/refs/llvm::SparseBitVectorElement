<def f='llvm/llvm/include/llvm/ADT/SparseBitVector.h' l='41' ll='252'/>
<doc f='llvm/llvm/include/llvm/ADT/SparseBitVector.h' l='28'>/// SparseBitVector is an implementation of a bitvector that is sparse by only
/// storing the elements that have non-zero bits set.  In order to make this
/// fast for the most common cases, SparseBitVector is implemented as a linked
/// list of SparseBitVectorElements.  We maintain a pointer to the last
/// SparseBitVectorElement accessed (in the form of a list iterator), in order
/// to make multiple in-order test/set constant time after the first one is
/// executed.  Note that using vectors to store SparseBitVectorElement&apos;s does
/// not work out very well because it causes insertion in the middle to take
/// enormous amounts of time with a large amount of bits.  Other structures that
/// have better worst cases for insertion in the middle (various balanced trees,
/// etc) do not perform as well in practice as a linked list with this iterator
/// kept up to date.  They are also significantly more memory intensive.</doc>
<mbr r='llvm::SparseBitVectorElement::ElementIndex' t='unsigned int'/>
<mbr r='llvm::SparseBitVectorElement::Bits' t='BitWord [BITWORDS_PER_ELEMENT]'/>
<fun r='_ZN4llvm22SparseBitVectorElementC1Ev'/>
<fun r='_ZN4llvm22SparseBitVectorElementC1Ej'/>
<fun r='_ZNK4llvm22SparseBitVectorElementeqERKNS_22SparseBitVectorElementIXT_EEE'/>
<fun r='_ZNK4llvm22SparseBitVectorElementneERKNS_22SparseBitVectorElementIXT_EEE'/>
<fun r='_ZNK4llvm22SparseBitVectorElement4wordEj'/>
<fun r='_ZNK4llvm22SparseBitVectorElement5indexEv'/>
<fun r='_ZNK4llvm22SparseBitVectorElement5emptyEv'/>
<fun r='_ZN4llvm22SparseBitVectorElement3setEj'/>
<fun r='_ZN4llvm22SparseBitVectorElement12test_and_setEj'/>
<fun r='_ZN4llvm22SparseBitVectorElement5resetEj'/>
<fun r='_ZNK4llvm22SparseBitVectorElement4testEj'/>
<fun r='_ZNK4llvm22SparseBitVectorElement5countEv'/>
<fun r='_ZNK4llvm22SparseBitVectorElement10find_firstEv'/>
<fun r='_ZNK4llvm22SparseBitVectorElement9find_lastEv'/>
<fun r='_ZNK4llvm22SparseBitVectorElement9find_nextEj'/>
<fun r='_ZN4llvm22SparseBitVectorElement9unionWithERKNS_22SparseBitVectorElementIXT_EEE'/>
<fun r='_ZNK4llvm22SparseBitVectorElement10intersectsERKNS_22SparseBitVectorElementIXT_EEE'/>
<fun r='_ZN4llvm22SparseBitVectorElement13intersectWithERKNS_22SparseBitVectorElementIXT_EEERb'/>
<fun r='_ZN4llvm22SparseBitVectorElement23intersectWithComplementERKNS_22SparseBitVectorElementIXT_EEERb'/>
<fun r='_ZN4llvm22SparseBitVectorElement23intersectWithComplementERKNS_22SparseBitVectorElementIXT_EEES5_Rb'/>
