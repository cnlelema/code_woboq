<dec f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.h' l='956' type='void llvm::DAGTypeLegalizer::IntegerToVector(llvm::SDValue Op, unsigned int NumElements, SmallVectorImpl&lt;llvm::SDValue&gt; &amp; Ops, llvm::EVT EltVT)'/>
<doc f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.h' l='954'>/// This function will split the integer \p Op into \p NumElements
  /// operations of type \p EltVT and store them in \p Ops.</doc>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp' l='317' ll='334' type='void llvm::DAGTypeLegalizer::IntegerToVector(llvm::SDValue Op, unsigned int NumElements, SmallVectorImpl&lt;llvm::SDValue&gt; &amp; Ops, llvm::EVT EltVT)'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp' l='329' u='c' c='_ZN4llvm16DAGTypeLegalizer15IntegerToVectorENS_7SDValueEjRNS_15SmallVectorImplIS1_EENS_3EVTE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp' l='330' u='c' c='_ZN4llvm16DAGTypeLegalizer15IntegerToVectorENS_7SDValueEjRNS_15SmallVectorImplIS1_EENS_3EVTE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp' l='362' u='c' c='_ZN4llvm16DAGTypeLegalizer16ExpandOp_BITCASTEPNS_6SDNodeE'/>
<doc f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp' l='313'>//===--------------------------------------------------------------------===//
// Generic Operand Expansion.
//===--------------------------------------------------------------------===//</doc>
