<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='275' type='LegalizeMutation llvm::LegalizeMutations::changeElementTo(unsigned int TypeIdx, llvm::LLT Ty)'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='712' u='c' c='_ZN4llvm15LegalizeRuleSet14minScalarOrEltEjRKNS_3LLTE'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='723' u='c' c='_ZN4llvm15LegalizeRuleSet16minScalarOrEltIfESt8functionIFbRKNS_13LegalityQueryEEEjRKNS_3LLTE'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='741' u='c' c='_ZN4llvm15LegalizeRuleSet14maxScalarOrEltEjRKNS_3LLTE'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='765' u='c' c='_ZN4llvm15LegalizeRuleSet11maxScalarIfESt8functionIFbRKNS_13LegalityQueryEEEjRKNS_3LLTE'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='274'>/// Keep the same scalar or element type as the given type.</doc>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizeMutations.cpp' l='38' ll='44' type='LegalizeMutation llvm::LegalizeMutations::changeElementTo(unsigned int TypeIdx, llvm::LLT NewEltTy)'/>
