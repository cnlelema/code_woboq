<dec f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='480' type='void llvm::BlockFrequencyInfoImplBase::distributeMass(const llvm::BlockFrequencyInfoImplBase::BlockNode &amp; Source, llvm::BlockFrequencyInfoImplBase::LoopData * OuterLoop, llvm::BlockFrequencyInfoImplBase::Distribution &amp; Dist)'/>
<use f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='1333' u='c' c='_ZN4llvm22BlockFrequencyInfoImpl25propagateMassToSuccessorsEPNS_26BlockFrequencyInfoImplBase8LoopDataERKNS1_9BlockNodeE'/>
<doc f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='474'>/// Distribute mass according to a distribution.
  ///
  /// Distributes the mass in Source according to Dist.  If LoopHead.isValid(),
  /// backedges and exits are stored in its entry in Loops.
  ///
  /// Mass is distributed in parallel from two copies of the source mass.</doc>
<def f='llvm/llvm/lib/Analysis/BlockFrequencyInfoImpl.cpp' l='425' ll='458' type='void llvm::BlockFrequencyInfoImplBase::distributeMass(const llvm::BlockFrequencyInfoImplBase::BlockNode &amp; Source, llvm::BlockFrequencyInfoImplBase::LoopData * OuterLoop, llvm::BlockFrequencyInfoImplBase::Distribution &amp; Dist)'/>
