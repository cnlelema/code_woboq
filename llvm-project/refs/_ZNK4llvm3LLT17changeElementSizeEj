<def f='llvm/llvm/include/llvm/Support/LowLevelTypeImpl.h' l='133' ll='138' type='llvm::LLT llvm::LLT::changeElementSize(unsigned int NewEltSize) const'/>
<doc f='llvm/llvm/include/llvm/Support/LowLevelTypeImpl.h' l='130'>/// If this type is a vector, return a vector with the same number of elements
  /// but the new element size. Otherwise, return the new element type. Invalid
  /// for pointer types. For pointer types, use changeElementType.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizeMutations.cpp' l='52' u='c' c='_ZN4llvm17LegalizeMutations26widenScalarOrEltToNextPow2Ejj'/>
<use f='llvm/llvm/unittests/CodeGen/LowLevelTypeTest.cpp' l='125' u='c' c='_ZN12_GLOBAL__N_139LowLevelTypeTest_ChangeElementType_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/LowLevelTypeTest.cpp' l='126' u='c' c='_ZN12_GLOBAL__N_139LowLevelTypeTest_ChangeElementType_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/LowLevelTypeTest.cpp' l='131' u='c' c='_ZN12_GLOBAL__N_139LowLevelTypeTest_ChangeElementType_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/LowLevelTypeTest.cpp' l='132' u='c' c='_ZN12_GLOBAL__N_139LowLevelTypeTest_ChangeElementType_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/LowLevelTypeTest.cpp' l='149' u='c' c='_ZN12_GLOBAL__N_144LowLevelTypeTest_ChangeElementTypeDeath_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/LowLevelTypeTest.cpp' l='151' u='c' c='_ZN12_GLOBAL__N_144LowLevelTypeTest_ChangeElementTypeDeath_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/LowLevelTypeTest.cpp' l='155' u='c' c='_ZN12_GLOBAL__N_144LowLevelTypeTest_ChangeElementTypeDeath_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/LowLevelTypeTest.cpp' l='157' u='c' c='_ZN12_GLOBAL__N_144LowLevelTypeTest_ChangeElementTypeDeath_Test8TestBodyEv'/>
