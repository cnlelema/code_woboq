<use f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='504' u='c' c='_ZN4llvm13IRBuilderBase13CreateMemMoveEPNS_5ValueEjS2_jmbPNS_6MDNodeES4_S4_'/>
<dec f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='508' type='llvm::CallInst * llvm::IRBuilderBase::CreateMemMove(llvm::Value * Dst, unsigned int DstAlign, llvm::Value * Src, unsigned int SrcAlign, llvm::Value * Size, bool isVolatile = false, llvm::MDNode * TBAATag = nullptr, llvm::MDNode * ScopeTag = nullptr, llvm::MDNode * NoAliasTag = nullptr)'/>
<use f='llvm/clang/lib/CodeGen/CGBuilder.h' l='290' u='c' c='_ZN5clang7CodeGen11CGBuilderTy13CreateMemMoveENS0_7AddressES2_PN4llvm5ValueEb'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='3451' u='c' c='LLVMBuildMemMove'/>
<def f='llvm/llvm/lib/IR/IRBuilder.cpp' l='255' ll='288' type='llvm::CallInst * llvm::IRBuilderBase::CreateMemMove(llvm::Value * Dst, unsigned int DstAlign, llvm::Value * Src, unsigned int SrcAlign, llvm::Value * Size, bool isVolatile = false, llvm::MDNode * TBAATag = nullptr, llvm::MDNode * ScopeTag = nullptr, llvm::MDNode * NoAliasTag = nullptr)'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp' l='2276' u='c' c='_ZN12_GLOBAL__N_125HexagonLoopIdiomRecognize19processCopyingStoreEPN4llvm4LoopEPNS1_9StoreInstEPKNS1_4SCEVE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp' l='826' u='c' c='_ZL24handleMemIntrinsicPtrUsePN4llvm12MemIntrinsicEPNS_5ValueES3_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp' l='1070' u='c' c='_ZN4llvm13MemCpyOptPass29processMemCpyMemCpyDependenceEPNS_10MemCpyInstES2_'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp' l='973' u='c' c='_ZN4llvm17LibCallSimplifier15optimizeMemMoveEPNS_8CallInstERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp' l='2892' u='c' c='_ZN4llvm26FortifiedLibCallSimplifier18optimizeMemMoveChkEPNS_8CallInstERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEE'/>
