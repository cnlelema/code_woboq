<dec f='llvm/llvm/include/llvm/Analysis/BasicAliasAnalysis.h' l='161' type='SmallPtrSet&lt;const llvm::BasicBlock *, 8&gt;'/>
<offset>512</offset>
<doc f='llvm/llvm/include/llvm/Analysis/BasicAliasAnalysis.h' l='147'>/// Tracks phi nodes we have visited.
  ///
  /// When interpret &quot;Value&quot; pointer equality as value equality we need to make
  /// sure that the &quot;Value&quot; is not part of a cycle. Otherwise, two uses could
  /// come from different &quot;iterations&quot; of a cycle and see different values for
  /// the same &quot;Value&quot; pointer.
  ///
  /// The following example shows the problem:
  ///   %p = phi(%alloca1, %addr2)
  ///   %l = load %ptr
  ///   %addr1 = gep, %alloca2, 0, %l
  ///   %addr2 = gep  %alloca2, 0, (%l + 1)
  ///      alias(%p, %addr1) -&gt; MayAlias !
  ///   store %l, ...</doc>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='839' u='m' c='_ZN4llvm13BasicAAResult5aliasERKNS_14MemoryLocationES3_RNS_11AAQueryInfoE'/>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='1568' u='m' c='_ZN4llvm13BasicAAResult8aliasPHIEPKNS_7PHINodeENS_12LocationSizeERKNS_9AAMDNodesEPKNS_5ValueES4_S7_SA_RNS_11AAQueryInfoE'/>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='1899' u='m' c='_ZN4llvm13BasicAAResult29isValueEqualInPotentialCyclesEPKNS_5ValueES3_'/>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='1902' u='m' c='_ZN4llvm13BasicAAResult29isValueEqualInPotentialCyclesEPKNS_5ValueES3_'/>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='1908' c='_ZN4llvm13BasicAAResult29isValueEqualInPotentialCyclesEPKNS_5ValueES3_'/>
