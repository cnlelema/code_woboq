<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1405' ll='1411' type='bool llvm::TargetInstrInfo::hasHighOperandLatency(const llvm::TargetSchedModel &amp; SchedModel, const llvm::MachineRegisterInfo * MRI, const llvm::MachineInstr &amp; DefMI, unsigned int DefIdx, const llvm::MachineInstr &amp; UseMI, unsigned int UseIdx) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1400'>/// Compute operand latency between a def of &apos;Reg&apos;
  /// and a use in the current loop. Return true if the target considered
  /// it &apos;high&apos;. This is used by optimization passes such as machine LICM to
  /// determine whether it makes sense to hoist an instruction out even in a
  /// high register pressure situation.</doc>
<use f='llvm/llvm/lib/CodeGen/MachineLICM.cpp' l='1111' u='c' c='_ZNK12_GLOBAL__N_115MachineLICMBase21HasHighOperandLatencyERN4llvm12MachineInstrEjj'/>
