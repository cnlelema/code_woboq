<dec f='llvm/clang/include/clang/Frontend/Utils.h' l='179' type='void clang::AttachHeaderIncludeGen(clang::Preprocessor &amp; PP, const clang::DependencyOutputOptions &amp; DepOpts, bool ShowAllHeaders = false, llvm::StringRef OutputPath = {}, bool ShowDepth = true, bool MSStyle = false)'/>
<doc f='llvm/clang/include/clang/Frontend/Utils.h' l='167'>/// AttachHeaderIncludeGen - Create a header include list generator, and attach
/// it to the given preprocessor.
///
/// \param DepOpts - Options controlling the output.
/// \param ShowAllHeaders - If true, show all header information instead of just
/// headers following the predefines buffer. This is useful for making sure
/// includes mentioned on the command line are also reported, but differs from
/// the default behavior used by -H.
/// \param OutputPath - If non-empty, a path to write the header include
/// information to, instead of writing to stderr.
/// \param ShowDepth - Whether to indent to show the nesting of the includes.
/// \param MSStyle - Whether to print in cl.exe /showIncludes style.</doc>
<use f='llvm/clang/lib/Frontend/CompilerInstance.cpp' l='445' u='c' c='_ZN5clang16CompilerInstance18createPreprocessorENS_19TranslationUnitKindE'/>
<use f='llvm/clang/lib/Frontend/CompilerInstance.cpp' l='450' u='c' c='_ZN5clang16CompilerInstance18createPreprocessorENS_19TranslationUnitKindE'/>
<use f='llvm/clang/lib/Frontend/CompilerInstance.cpp' l='456' u='c' c='_ZN5clang16CompilerInstance18createPreprocessorENS_19TranslationUnitKindE'/>
<def f='llvm/clang/lib/Frontend/HeaderIncludeGen.cpp' l='78' ll='125' type='void clang::AttachHeaderIncludeGen(clang::Preprocessor &amp; PP, const clang::DependencyOutputOptions &amp; DepOpts, bool ShowAllHeaders = false, llvm::StringRef OutputPath = {}, bool ShowDepth = true, bool MSStyle = false)'/>
