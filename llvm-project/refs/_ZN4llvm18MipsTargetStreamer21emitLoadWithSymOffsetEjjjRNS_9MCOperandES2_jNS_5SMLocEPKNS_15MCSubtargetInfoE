<dec f='llvm/llvm/lib/Target/Mips/MipsTargetStreamer.h' l='167' type='void llvm::MipsTargetStreamer::emitLoadWithSymOffset(unsigned int Opcode, unsigned int DstReg, unsigned int BaseReg, llvm::MCOperand &amp; HiOperand, llvm::MCOperand &amp; LoOperand, unsigned int ATReg, llvm::SMLoc IDLoc, const llvm::MCSubtargetInfo * STI)'/>
<use f='llvm/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp' l='4001' u='c' c='_ZN12_GLOBAL__N_113MipsAsmParser13expandMemInstERN4llvm6MCInstENS1_5SMLocERNS1_10MCStreamerEPKNS1_15MCSubtargetInfoEb'/>
<def f='llvm/llvm/lib/Target/Mips/MCTargetDesc/MipsTargetStreamer.cpp' l='377' ll='394' type='void llvm::MipsTargetStreamer::emitLoadWithSymOffset(unsigned int Opcode, unsigned int DstReg, unsigned int BaseReg, llvm::MCOperand &amp; HiOperand, llvm::MCOperand &amp; LoOperand, unsigned int TmpReg, llvm::SMLoc IDLoc, const llvm::MCSubtargetInfo * STI)'/>
<doc f='llvm/llvm/lib/Target/Mips/MCTargetDesc/MipsTargetStreamer.cpp' l='372'>/// Emit a load instruction with an symbol offset. Symbols are assumed to be
/// out of range for a simm16 will be expanded to appropriate instructions.
/// DstReg and TmpReg are permitted to be the same register iff DstReg is a
/// GPR. It is the callers responsibility to identify such cases and pass the
/// appropriate register in TmpReg.</doc>
