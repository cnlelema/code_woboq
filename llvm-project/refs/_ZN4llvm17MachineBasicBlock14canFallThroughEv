<dec f='llvm/llvm/include/llvm/CodeGen/MachineBasicBlock.h' l='532' type='bool llvm::MachineBasicBlock::canFallThrough()'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineBasicBlock.h' l='527'>/// Return true if the block can implicitly transfer control to the
  /// block after it by falling off the end of it.  This should return
  /// false if it can reach the block after it, but it uses an
  /// explicit branch to do so (e.g., a table jump).  True is a
  /// conservative answer.</doc>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='693' u='c' c='_ZL17ProfitableToMergePN4llvm17MachineBasicBlockES1_jRjRNS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEES6_S1_S1_RNS_8DenseMapIPKS0_iNS_12Dens11428772'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='697' u='c' c='_ZL17ProfitableToMergePN4llvm17MachineBasicBlockES1_jRjRNS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEES6_S1_S1_RNS_8DenseMapIPKS0_iNS_12Dens11428772'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='1543' u='c' c='_ZN4llvm12BranchFolder13OptimizeBlockEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='1663' u='c' c='_ZN4llvm12BranchFolder13OptimizeBlockEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='1734' u='c' c='_ZN4llvm12BranchFolder13OptimizeBlockEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='1737' u='c' c='_ZN4llvm12BranchFolder13OptimizeBlockEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='1746' u='c' c='_ZN4llvm12BranchFolder13OptimizeBlockEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='1783' u='c' c='_ZN4llvm12BranchFolder13OptimizeBlockEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='596' u='c' c='_ZN4llvm17MachineBasicBlock16updateTerminatorEv'/>
<def f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='869' ll='871' type='bool llvm::MachineBasicBlock::canFallThrough()'/>
<use f='llvm/llvm/lib/CodeGen/MachineBlockPlacement.cpp' l='2387' u='c' c='_ZN12_GLOBAL__N_121MachineBlockPlacement14buildCFGChainsEv'/>
<use f='llvm/llvm/lib/CodeGen/MachineBlockPlacement.cpp' l='2479' u='c' c='_ZN12_GLOBAL__N_121MachineBlockPlacement14buildCFGChainsEv'/>
<use f='llvm/llvm/lib/CodeGen/TailDuplicator.cpp' l='547' u='c' c='_ZN4llvm14TailDuplicator19shouldTailDuplicateEbRNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/TailDuplicator.cpp' l='574' u='c' c='_ZN4llvm14TailDuplicator19shouldTailDuplicateEbRNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/TailDuplicator.cpp' l='827' u='c' c='_ZN4llvm14TailDuplicator13tailDuplicateEbPNS_17MachineBasicBlockES2_RNS_15SmallVectorImplIS2_EERNS3_IPNS_12MachineInstrEEE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonCFGOptimizer.cpp' l='107' u='c' c='_ZN12_GLOBAL__N_119HexagonCFGOptimizer19isOnFallThroughPathEPN4llvm17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonCFGOptimizer.cpp' l='110' u='c' c='_ZN12_GLOBAL__N_119HexagonCFGOptimizer19isOnFallThroughPathEPN4llvm17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp' l='289' u='c' c='_ZN12_GLOBAL__N_119PPCBranchCoalescing17canCoalesceBranchERNS0_23CoalescingCandidateInfoE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCEarlyReturn.cpp' l='135' u='c' c='_ZN12_GLOBAL__N_114PPCEarlyReturn12processBlockERN4llvm17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCEarlyReturn.cpp' l='155' u='c' c='_ZN12_GLOBAL__N_114PPCEarlyReturn12processBlockERN4llvm17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCExpandISEL.cpp' l='338' u='c' c='_ZN12_GLOBAL__N_113PPCExpandISEL21reorganizeBlockLayoutERN4llvm11SmallVectorIPNS1_12MachineInstrELj4EEEPNS1_17MachineBasicBlockE'/>
