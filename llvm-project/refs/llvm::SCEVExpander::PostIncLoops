<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolutionExpander.h' l='67' type='PostIncLoopSet'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolutionExpander.h' l='248' u='w' c='_ZN4llvm12SCEVExpander10setPostIncERKNS_11SmallPtrSetIPKNS_4LoopELj2EEE'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolutionExpander.h' l='253' u='m' c='_ZN4llvm12SCEVExpander12clearPostIncEv'/>
<offset>1216</offset>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolutionExpander.h' l='63'>/// Addrecs referring to any of the given loops are expanded in post-inc
    /// mode. For example, expanding {1,+,1}&lt;L&gt; in post-inc mode returns the add
    /// instruction that adds one to the phi for {0,+,1}&lt;L&gt;, as opposed to a new
    /// phi starting at 1. This is only supported in non-canonical mode.</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolutionExpander.cpp' l='1260' u='r' c='_ZN4llvm12SCEVExpander25getAddRecExprPHILiterallyEPKNS_14SCEVAddRecExprEPKNS_4LoopEPNS_4TypeES8_RS8_Rb'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolutionExpander.cpp' l='1261' u='m' c='_ZN4llvm12SCEVExpander25getAddRecExprPHILiterallyEPKNS_14SCEVAddRecExprEPKNS_4LoopEPNS_4TypeES8_RS8_Rb'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolutionExpander.cpp' l='1330' u='w' c='_ZN4llvm12SCEVExpander25getAddRecExprPHILiterallyEPKNS_14SCEVAddRecExprEPKNS_4LoopEPNS_4TypeES8_RS8_Rb'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolutionExpander.cpp' l='1346' u='m' c='_ZN4llvm12SCEVExpander25expandAddRecExprLiterallyEPKNS_14SCEVAddRecExprE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolutionExpander.cpp' l='1400' u='m' c='_ZN4llvm12SCEVExpander25expandAddRecExprLiterallyEPKNS_14SCEVAddRecExprE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolutionExpander.cpp' l='1841' u='m' c='_ZN4llvm12SCEVExpander6expandEPKNS_4SCEVE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolutionExpander.cpp' l='1904' u='m' c='_ZN4llvm12SCEVExpander19rememberInstructionEPNS_5ValueE'/>
