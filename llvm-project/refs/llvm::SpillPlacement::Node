<def f='llvm/llvm/lib/CodeGen/SpillPlacement.cpp' l='78' ll='194'/>
<size>112</size>
<doc f='llvm/llvm/lib/CodeGen/SpillPlacement.cpp' l='70'>/// Node - Each edge bundle corresponds to a Hopfield node.
///
/// The node contains precomputed frequency data that only depends on the CFG,
/// but Bias and Links are computed each time placeSpills is called.
///
/// The node Value is positive when the variable should be in a register. The
/// value can change when linked nodes change, but convergence is very fast
/// because all weights are positive.</doc>
<mbr r='llvm::SpillPlacement::Node::BiasN' o='0' t='llvm::BlockFrequency'/>
<mbr r='llvm::SpillPlacement::Node::BiasP' o='64' t='llvm::BlockFrequency'/>
<mbr r='llvm::SpillPlacement::Node::Value' o='128' t='int'/>
<mbr r='llvm::SpillPlacement::Node::Links' o='192' t='LinkVector'/>
<mbr r='llvm::SpillPlacement::Node::SumLinkWeights' o='832' t='llvm::BlockFrequency'/>
<fun r='_ZNK4llvm14SpillPlacement4Node9preferRegEv'/>
<fun r='_ZNK4llvm14SpillPlacement4Node9mustSpillEv'/>
<fun r='_ZN4llvm14SpillPlacement4Node5clearERKNS_14BlockFrequencyE'/>
<fun r='_ZN4llvm14SpillPlacement4Node7addLinkEjNS_14BlockFrequencyE'/>
<fun r='_ZN4llvm14SpillPlacement4Node7addBiasENS_14BlockFrequencyENS0_16BorderConstraintE'/>
<fun r='_ZN4llvm14SpillPlacement4Node6updateEPKS1_RKNS_14BlockFrequencyE'/>
<fun r='_ZNK4llvm14SpillPlacement4Node22getDissentingNeighborsERNS_9SparseSetIjNS_8identityIjEEhEEPKS1_'/>
