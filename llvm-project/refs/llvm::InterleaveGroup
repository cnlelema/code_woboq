<def f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='272' ll='408'/>
<doc f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='246'>/// The group of interleaved loads/stores sharing the same stride and
/// close to each other.
///
/// Each member in this group has an index starting from 0, and the largest
/// index should be less than interleaved factor, which is equal to the absolute
/// value of the access&apos;s stride.
///
/// E.g. An interleaved load group of factor 4:
///        for (unsigned i = 0; i &lt; 1024; i+=4) {
///          a = A[i];                           // Member of index 0
///          b = A[i+1];                         // Member of index 1
///          d = A[i+3];                         // Member of index 3
///          ...
///        }
///
///      An interleaved store group of factor 4:
///        for (unsigned i = 0; i &lt; 1024; i+=4) {
///          ...
///          A[i]   = a;                         // Member of index 0
///          A[i+1] = b;                         // Member of index 1
///          A[i+2] = c;                         // Member of index 2
///          A[i+3] = d;                         // Member of index 3
///        }
///
/// Note: the interleaved load group could have gaps (missing members), but
/// the interleaved store group doesn&apos;t allow gaps.</doc>
<fun r='_ZN4llvm15InterleaveGroupC1Ejbj'/>
<fun r='_ZN4llvm15InterleaveGroupC1EPT_ij'/>
<fun r='_ZNK4llvm15InterleaveGroup9isReverseEv'/>
<fun r='_ZNK4llvm15InterleaveGroup9getFactorEv'/>
<fun r='_ZNK4llvm15InterleaveGroup12getAlignmentEv'/>
<fun r='_ZNK4llvm15InterleaveGroup13getNumMembersEv'/>
<fun r='_ZN4llvm15InterleaveGroup12insertMemberEPT_ij'/>
<fun r='_ZNK4llvm15InterleaveGroup9getMemberEj'/>
<fun r='_ZNK4llvm15InterleaveGroup8getIndexEPKT_'/>
<fun r='_ZNK4llvm15InterleaveGroup12getInsertPosEv'/>
<fun r='_ZN4llvm15InterleaveGroup12setInsertPosEPT_'/>
<fun r='_ZNK4llvm15InterleaveGroup11addMetadataEPT_'/>
<fun r='_ZNK4llvm15InterleaveGroup22requiresScalarEpilogueEv'/>
<mbr r='llvm::InterleaveGroup::Factor' t='uint32_t'/>
<mbr r='llvm::InterleaveGroup::Reverse' t='bool'/>
<mbr r='llvm::InterleaveGroup::Align' t='uint32_t'/>
<mbr r='llvm::InterleaveGroup::Members' t='DenseMap&lt;int32_t, InstTy *&gt;'/>
<mbr r='llvm::InterleaveGroup::SmallestKey' t='int32_t'/>
<mbr r='llvm::InterleaveGroup::LargestKey' t='int32_t'/>
<mbr r='llvm::InterleaveGroup::InsertPos' t='InstTy *'/>
