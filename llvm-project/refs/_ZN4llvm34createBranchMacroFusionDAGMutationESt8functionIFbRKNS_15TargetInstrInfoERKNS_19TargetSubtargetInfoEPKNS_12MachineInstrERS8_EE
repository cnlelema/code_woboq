<dec f='llvm/llvm/include/llvm/CodeGen/MacroFusion.h' l='45' type='std::unique_ptr&lt;ScheduleDAGMutation&gt; llvm::createBranchMacroFusionDAGMutation(ShouldSchedulePredTy shouldScheduleAdjacent)'/>
<def f='llvm/llvm/lib/CodeGen/MacroFusion.cpp' l='183' ll='189' type='std::unique_ptr&lt;ScheduleDAGMutation&gt; llvm::createBranchMacroFusionDAGMutation(ShouldSchedulePredTy shouldScheduleAdjacent)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MacroFusion.h' l='41'>/// Create a DAG scheduling mutation to pair branch instructions with one
/// of their predecessors back to back for instructions that benefit according
/// to the target-specific shouldScheduleAdjacent predicate function.</doc>
<use f='llvm/llvm/lib/Target/X86/X86MacroFusion.cpp' l='230' u='c' c='_ZN4llvm31createX86MacroFusionDAGMutationEv'/>
