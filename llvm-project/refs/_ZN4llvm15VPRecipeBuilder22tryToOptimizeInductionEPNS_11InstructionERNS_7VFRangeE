<dec f='llvm/llvm/lib/Transforms/Vectorize/VPRecipeBuilder.h' l='81' type='llvm::VPWidenIntOrFpInductionRecipe * llvm::VPRecipeBuilder::tryToOptimizeInduction(llvm::Instruction * I, llvm::VFRange &amp; Range)'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='6525' ll='6556' type='llvm::VPWidenIntOrFpInductionRecipe * llvm::VPRecipeBuilder::tryToOptimizeInduction(llvm::Instruction * I, llvm::VFRange &amp; Range)'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='6772' u='c' c='_ZN4llvm15VPRecipeBuilder17tryToCreateRecipeEPNS_11InstructionERNS_7VFRangeERSt10unique_ptrINS_5VPlanESt14default_deleteIS6_EEPNS_12VPBasicBlockE'/>
<doc f='llvm/llvm/lib/Transforms/Vectorize/VPRecipeBuilder.h' l='77'>/// Check if an induction recipe should be constructed for \I within the given
  /// VF \p Range. If so build and return it. If not, return null. \p Range.End
  /// may be decreased to ensure same decision from \p Range.Start to
  /// \p Range.End.</doc>
