<dec f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='465' type='void llvm::copyRangeMetadata(const llvm::DataLayout &amp; DL, const llvm::LoadInst &amp; OldLI, llvm::MDNode * N, llvm::LoadInst &amp; NewLI)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='461'>/// Copy a range metadata node to a new load instruction.
///
/// This handles mapping it to nonnull metadata if the new load is a pointer
/// load instead of an integer load and the range doesn&apos;t cover null.</doc>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp' l='508' u='c' c='_ZL20combineLoadToNewTypeRN4llvm12InstCombinerERNS_8LoadInstEPNS_4TypeERKNS_5TwineE'/>
<def f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='2533' ll='2549' type='void llvm::copyRangeMetadata(const llvm::DataLayout &amp; DL, const llvm::LoadInst &amp; OldLI, llvm::MDNode * N, llvm::LoadInst &amp; NewLI)'/>
