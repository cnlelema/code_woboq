<dec f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='634' type='static Instruction::CastOps llvm::CastInst::getCastOpcode(const llvm::Value * Val, bool SrcIsSigned, llvm::Type * Ty, bool DstIsSigned)'/>
<doc f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='631'>/// Returns the opcode necessary to cast Val into Ty using usual casting
  /// rules.
  /// Infer the opcode for cast operand and type</doc>
<use f='llvm/llvm/lib/Analysis/ConstantFolding.cpp' l='765' u='c' c='_ZN12_GLOBAL__N_114CastGEPIndicesEPN4llvm4TypeENS0_8ArrayRefIPNS0_8ConstantEEES2_NS0_8OptionalIjEERKNS0_10DataLayoutEPKNS0_17TargetLibraryInfoE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='8184' u='c' c='_ZN4llvm15ScalarEvolution18computeSCEVAtScopeEPKNS_4SCEVEPKNS_4LoopE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolutionExpander.cpp' l='112' u='c' c='_ZN4llvm12SCEVExpander18InsertNoopCastOfToEPNS_5ValueEPNS_4TypeE'/>
<use f='llvm/llvm/lib/IR/ConstantFold.cpp' l='398' u='c' c='_ZL15getFoldedSizeOfPN4llvm4TypeES1_b'/>
<use f='llvm/llvm/lib/IR/ConstantFold.cpp' l='413' u='c' c='_ZL16getFoldedAlignOfPN4llvm4TypeES1_b'/>
<use f='llvm/llvm/lib/IR/ConstantFold.cpp' l='462' u='c' c='_ZL16getFoldedAlignOfPN4llvm4TypeES1_b'/>
<use f='llvm/llvm/lib/IR/ConstantFold.cpp' l='475' u='c' c='_ZL17getFoldedOffsetOfPN4llvm4TypeEPNS_8ConstantES1_b'/>
<use f='llvm/llvm/lib/IR/ConstantFold.cpp' l='499' u='c' c='_ZL17getFoldedOffsetOfPN4llvm4TypeEPNS_8ConstantES1_b'/>
<use f='llvm/llvm/lib/IR/ConstantFold.cpp' l='515' u='c' c='_ZL17getFoldedOffsetOfPN4llvm4TypeEPNS_8ConstantES1_b'/>
<use f='llvm/llvm/lib/IR/ConstantFold.cpp' l='654' u='c' c='_ZN4llvm27ConstantFoldCastInstructionEjPNS_8ConstantEPNS_4TypeE'/>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='3109' ll='3202' type='static Instruction::CastOps llvm::CastInst::getCastOpcode(const llvm::Value * Src, bool SrcIsSigned, llvm::Type * DestTy, bool DestIsSigned)'/>
<doc f='llvm/llvm/lib/IR/Instructions.cpp' l='3102'>// Provide a way to get a &quot;cast&quot; where the cast opcode is inferred from the
// types and size of the operand. This, basically, is a parallel of the
// logic in the castIsValid function below.  This axiom should hold:
//   castIsValid( getCastOpcode(Val, Ty), Val, Ty)
// should not assert in castIsValid. In other words, this produces a &quot;correct&quot;
// casting opcode for the arguments passed to it.
// This routine must be kept in sync with isCastable.</doc>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp' l='4472' u='c' c='_ZN4llvm12InstCombiner26transformConstExprCastCallERNS_8CallBaseE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp' l='5261' u='c' c='_ZNK12_GLOBAL__N_111LSRInstance6ExpandERKNS_6LSRUseERKNS_8LSRFixupERKNS_7FormulaEN4llvm14ilist_iteratorINSA_12ilist_detail12node_optionsINSA_11Instruc14296814'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp' l='5276' u='c' c='_ZNK12_GLOBAL__N_111LSRInstance6ExpandERKNS_6LSRUseERKNS_8LSRFixupERKNS_7FormulaEN4llvm14ilist_iteratorINSA_12ilist_detail12node_optionsINSA_11Instruc14296814'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp' l='5353' u='c' c='_ZNK12_GLOBAL__N_111LSRInstance13RewriteForPHIEPN4llvm7PHINodeERKNS_6LSRUseERKNS_8LSRFixupERKNS_7FormulaERNS1_12SCEVExpanderERNS1_15SmallVectorImplINS13448949'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp' l='5420' u='c' c='_ZNK12_GLOBAL__N_111LSRInstance7RewriteERKNS_6LSRUseERKNS_8LSRFixupERKNS_7FormulaERN4llvm12SCEVExpanderERNSA_15SmallVectorImplINSA_14WeakTrackingVHEEE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='2874' u='c' c='_ZN4llvm19InnerLoopVectorizer28createVectorizedLoopSkeletonEv'/>
<use f='llvm/llvm/unittests/IR/InstructionsTest.cpp' l='226' u='c' c='_ZN4llvm12_GLOBAL__N_130InstructionsTest_CastInst_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/InstructionsTest.cpp' l='227' u='c' c='_ZN4llvm12_GLOBAL__N_130InstructionsTest_CastInst_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/InstructionsTest.cpp' l='242' u='c' c='_ZN4llvm12_GLOBAL__N_130InstructionsTest_CastInst_Test8TestBodyEv'/>
