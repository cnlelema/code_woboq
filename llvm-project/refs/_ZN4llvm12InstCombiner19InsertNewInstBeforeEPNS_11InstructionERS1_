<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='579' ll='586' type='llvm::Instruction * llvm::InstCombiner::InsertNewInstBefore(llvm::Instruction * New, llvm::Instruction &amp; Old)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='591' u='c' c='_ZN4llvm12InstCombiner17InsertNewInstWithEPNS_11InstructionERS1_'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='575'>/// Inserts an instruction \p New before instruction \p Old
  ///
  /// Also adds the new instruction to the worklist and returns \p New so that
  /// it is suitable for use as the return from the visitation patterns.</doc>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp' l='4530' u='c' c='_ZN4llvm12InstCombiner26transformConstExprCastCallERNS_8CallBaseE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp' l='4533' u='c' c='_ZN4llvm12InstCombiner26transformConstExprCastCallERNS_8CallBaseE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp' l='4536' u='c' c='_ZN4llvm12InstCombiner26transformConstExprCastCallERNS_8CallBaseE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp' l='217' u='c' c='_ZL23simplifyAllocaArraySizeRN4llvm12InstCombinerERNS_10AllocaInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp' l='1617' u='c' c='_ZN4llvm12InstCombiner23mergeStoreIntoSuccessorERNS_9StoreInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp' l='1626' u='c' c='_ZN4llvm12InstCombiner23mergeStoreIntoSuccessorERNS_9StoreInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='232' u='c' c='_ZN4llvm12InstCombiner19FoldIntegerTypedPHIERNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='267' u='c' c='_ZN4llvm12InstCombiner19FoldIntegerTypedPHIERNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='270' u='c' c='_ZN4llvm12InstCombiner19FoldIntegerTypedPHIERNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='329' u='c' c='_ZN4llvm12InstCombiner22FoldPHIArgBinOpIntoPHIERNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='337' u='c' c='_ZN4llvm12InstCombiner22FoldPHIArgBinOpIntoPHIERNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='455' u='c' c='_ZN4llvm12InstCombiner20FoldPHIArgGEPIntoPHIERNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='633' u='c' c='_ZN4llvm12InstCombiner21FoldPHIArgLoadIntoPHIERNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='717' u='c' c='_ZN4llvm12InstCombiner22FoldPHIArgZextsIntoPHIERNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='801' u='c' c='_ZN4llvm12InstCombiner19FoldPHIArgOpIntoPHIERNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='949' u='c' c='_ZN4llvm12InstCombiner13foldOpIntoPhiERNS_11InstructionEPNS_7PHINodeE'/>
