<def f='llvm/clang/include/clang/Sema/ScopeInfo.h' l='244' ll='320'/>
<size>16</size>
<doc f='llvm/clang/include/clang/Sema/ScopeInfo.h' l='222'>/// Represents a simple identification of a weak object.
  ///
  /// Part of the implementation of -Wrepeated-use-of-weak.
  ///
  /// This is used to determine if two weak accesses refer to the same object.
  /// Here are some examples of how various accesses are &quot;profiled&quot;:
  ///
  /// Access Expression |     &quot;Base&quot; Decl     |          &quot;Property&quot; Decl
  /// :---------------: | :-----------------: | :------------------------------:
  /// self.property     | self (VarDecl)      | property (ObjCPropertyDecl)
  /// self.implicitProp | self (VarDecl)      | -implicitProp (ObjCMethodDecl)
  /// self-&gt;ivar.prop   | ivar (ObjCIvarDecl) | prop (ObjCPropertyDecl)
  /// cxxObj.obj.prop   | obj (FieldDecl)     | prop (ObjCPropertyDecl)
  /// [self foo].prop   | 0 (unknown)         | prop (ObjCPropertyDecl)
  /// self.prop1.prop2  | prop1 (ObjCPropertyDecl)    | prop2 (ObjCPropertyDecl)
  /// MyClass.prop      | MyClass (ObjCInterfaceDecl) | -prop (ObjCMethodDecl)
  /// MyClass.foo.prop  | +foo (ObjCMethodDecl)       | -prop (ObjCPropertyDecl)
  /// weakVar           | 0 (known)           | weakVar (VarDecl)
  /// self-&gt;weakIvar    | self (VarDecl)      | weakIvar (ObjCIvarDecl)
  ///
  /// Objects are identified with only two Decls to make it reasonably fast to
  /// compare them.</doc>
<mbr r='clang::sema::FunctionScopeInfo::WeakObjectProfileTy::Base' o='0' t='BaseInfoTy'/>
<mbr r='clang::sema::FunctionScopeInfo::WeakObjectProfileTy::Property' o='64' t='const clang::NamedDecl *'/>
<fun r='_ZN5clang4sema17FunctionScopeInfo19WeakObjectProfileTy11getBaseInfoEPKNS_4ExprE'/>
<fun r='_ZN5clang4sema17FunctionScopeInfo19WeakObjectProfileTyC1Ev'/>
<fun r='_ZN5clang4sema17FunctionScopeInfo19WeakObjectProfileTy11getSentinelEv'/>
<fun r='_ZN5clang4sema17FunctionScopeInfo19WeakObjectProfileTyC1EPKNS_19ObjCPropertyRefExprE'/>
<fun r='_ZN5clang4sema17FunctionScopeInfo19WeakObjectProfileTyC1EPKNS_4ExprEPKNS_16ObjCPropertyDeclE'/>
<fun r='_ZN5clang4sema17FunctionScopeInfo19WeakObjectProfileTyC1EPKNS_11DeclRefExprE'/>
<fun r='_ZN5clang4sema17FunctionScopeInfo19WeakObjectProfileTyC1EPKNS_15ObjCIvarRefExprE'/>
<fun r='_ZNK5clang4sema17FunctionScopeInfo19WeakObjectProfileTy7getBaseEv'/>
<fun r='_ZNK5clang4sema17FunctionScopeInfo19WeakObjectProfileTy11getPropertyEv'/>
<fun r='_ZNK5clang4sema17FunctionScopeInfo19WeakObjectProfileTy14isExactProfileEv'/>
<fun r='_ZNK5clang4sema17FunctionScopeInfo19WeakObjectProfileTyeqERKS2_'/>
<fun r='_ZN5clang4sema17FunctionScopeInfo19WeakObjectProfileTyC1Ev'/>
<fun r='_ZN5clang4sema17FunctionScopeInfo19WeakObjectProfileTy11getSentinelEv'/>
