<use f='llvm/llvm/include/llvm/ADT/EquivalenceClasses.h' l='132' u='c' c='_ZN4llvm18EquivalenceClassesaSERKNS_18EquivalenceClassesIT_EE'/>
<use f='llvm/llvm/include/llvm/ADT/EquivalenceClasses.h' l='134' u='c' c='_ZN4llvm18EquivalenceClassesaSERKNS_18EquivalenceClassesIT_EE'/>
<use f='llvm/llvm/include/llvm/ADT/EquivalenceClasses.h' l='180' u='c' c='_ZN4llvm18EquivalenceClasses22getOrInsertLeaderValueERKT_'/>
<def f='llvm/llvm/include/llvm/ADT/EquivalenceClasses.h' l='199' ll='201' type='iterator llvm::EquivalenceClasses::insert(const ElemTy &amp; Data)'/>
<use f='llvm/llvm/include/llvm/ADT/EquivalenceClasses.h' l='218' u='c' c='_ZN4llvm18EquivalenceClasses9unionSetsERKT_S3_'/>
<use f='llvm/llvm/include/llvm/ADT/EquivalenceClasses.h' l='218' u='c' c='_ZN4llvm18EquivalenceClasses9unionSetsERKT_S3_'/>
<doc f='llvm/llvm/include/llvm/ADT/EquivalenceClasses.h' l='194'>//===--------------------------------------------------------------------===//
  // Mutation methods

  /// insert - Insert a new value into the union/find set, ignoring the request
  /// if the value already exists.</doc>
<use f='llvm/llvm/lib/Analysis/LoopAccessAnalysis.cpp' l='880' u='c' c='_ZN12_GLOBAL__N_114AccessAnalysis18processMemAccessesEv'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCVSXSwapRemoval.cpp' l='541' u='c' c='_ZN12_GLOBAL__N_117PPCVSXSwapRemoval12addSwapEntryEPN4llvm12MachineInstrERNS_15PPCVSXSwapEntryE'/>
