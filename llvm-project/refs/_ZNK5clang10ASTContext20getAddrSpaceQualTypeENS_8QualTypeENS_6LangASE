<dec f='llvm/clang/include/clang/AST/ASTContext.h' l='1154' type='clang::QualType clang::ASTContext::getAddrSpaceQualType(clang::QualType T, clang::LangAS AddressSpace) const'/>
<doc f='llvm/clang/include/clang/AST/ASTContext.h' l='1148'>/// Return the uniqued reference to the type for an address space
  /// qualified type with the specified type and address space.
  ///
  /// The resulting type has a union of the qualifiers from T and the address
  /// space. If T already has an address space specifier, it is silently
  /// replaced.</doc>
<def f='llvm/clang/lib/AST/ASTContext.cpp' l='2720' ll='2738' type='clang::QualType clang::ASTContext::getAddrSpaceQualType(clang::QualType T, clang::LangAS AddressSpace) const'/>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='3912' u='c' c='_ZNK5clang10ASTContext27adjustStringLiteralBaseTypeENS_8QualTypeE'/>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='9766' u='c' c='_ZL17DecodeTypeFromStrRPKcRKN5clang10ASTContextERNS3_19GetBuiltinTypeErrorERbb'/>
<use f='llvm/clang/lib/CodeGen/CGBlocks.cpp' l='1281' u='c' c='_ZN5clang7CodeGen15CodeGenFunction17EmitBlockCallExprEPKNS_8CallExprENS0_15ReturnValueSlotE'/>
<use f='llvm/clang/lib/CodeGen/CGBlocks.cpp' l='1559' u='c' c='_ZN5clang7CodeGen15CodeGenFunction21GenerateBlockFunctionENS_10GlobalDeclERKNS0_11CGBlockInfoERKN4llvm8DenseMapIPKNS_4DeclENS0_7AddressENS6_12DenseMap906112'/>
<use f='llvm/clang/lib/CodeGen/CGCall.cpp' l='86' u='c' c='_ZN5clang7CodeGen12CodeGenTypes14DeriveThisTypeEPKNS_13CXXRecordDeclEPKNS_13CXXMethodDeclE'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeNVPTX.cpp' l='4399' u='c' c='_ZNK5clang7CodeGen20CGOpenMPRuntimeNVPTX18translateParameterEPKNS_9FieldDeclEPKNS_7VarDeclE'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeNVPTX.cpp' l='4403' u='c' c='_ZNK5clang7CodeGen20CGOpenMPRuntimeNVPTX18translateParameterEPKNS_9FieldDeclEPKNS_7VarDeclE'/>
<use f='llvm/clang/lib/Sema/SemaChecking.cpp' l='4878' u='c' c='_ZN5clang4Sema23SemaAtomicOpsOverloadedENS_12ActionResultIPNS_4ExprELb1EEENS_10AtomicExpr8AtomicOpE'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='6613' u='c' c='_ZN5clang4Sema37CheckExplicitlyDefaultedSpecialMemberEPNS_13CXXMethodDeclE'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='11890' u='c' c='_ZN5clang4Sema29DeclareImplicitCopyAssignmentEPNS_13CXXRecordDeclE'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='12214' u='c' c='_ZN5clang4Sema29DeclareImplicitMoveAssignmentEPNS_13CXXRecordDeclE'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='12591' u='c' c='_ZN5clang4Sema30DeclareImplicitCopyConstructorEPNS_13CXXRecordDeclE'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='12722' u='c' c='_ZN5clang4Sema30DeclareImplicitMoveConstructorEPNS_13CXXRecordDeclE'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='2675' u='c' c='_ZN5clang4Sema29PerformObjectMemberConversionEPNS_4ExprEPNS_19NestedNameSpecifierEPNS_9NamedDeclES6_'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='5392' u='c' c='_ZL26rewriteBuiltinFunctionDeclPN5clang4SemaERNS_10ASTContextEPKNS_12FunctionDeclEN4llvm15MutableArrayRefIPNS_4ExprEEE'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='6880' u='c' c='_ZL36checkConditionalPointerCompatibilityRN5clang4SemaERNS_12ActionResultIPNS_4ExprELb1EEES6_NS_14SourceLocationE'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='7685' u='c' c='_ZL39AdjustAddressSpaceForBuiltinOperandTypeRN5clang4SemaENS_8QualTypeEPNS_4ExprE'/>
<use f='llvm/clang/lib/Sema/SemaType.cpp' l='5945' u='c' c='_ZN5clang4Sema21BuildAddressSpaceAttrERNS_8QualTypeENS_6LangASEPNS_4ExprENS_14SourceLocationE'/>
<use f='llvm/clang/lib/Sema/SemaType.cpp' l='6065' u='c' c='_ZL31HandleAddressSpaceTypeAttributeRN5clang8QualTypeERKNS_10ParsedAttrERN12_GLOBAL__N_119TypeProcessingStateE'/>
<use f='llvm/clang/lib/Sema/SemaType.cpp' l='7670' u='c' c='_ZL29deduceOpenCLImplicitAddrSpaceRN12_GLOBAL__N_119TypeProcessingStateERN5clang8QualTypeE16TypeAttrLocation'/>
