<dec f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='692' type='llvm::CallInst * llvm::IRBuilderBase::CreateBinaryIntrinsic(Intrinsic::ID ID, llvm::Value * LHS, llvm::Value * RHS, llvm::Instruction * FMFSource = nullptr, const llvm::Twine &amp; Name = &quot;&quot;)'/>
<doc f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='690'>/// Create a call to intrinsic \p ID with 2 operands which is mangled on the
  /// first type.</doc>
<use f='llvm/clang/lib/CodeGen/CGExprScalar.cpp' l='3901' u='c' c='_ZN12_GLOBAL__N_117ScalarExprEmitter19EmitFixedPointBinOpERKNS_9BinOpInfoE'/>
<use f='llvm/clang/lib/CodeGen/CGExprScalar.cpp' l='3912' u='c' c='_ZN12_GLOBAL__N_117ScalarExprEmitter19EmitFixedPointBinOpERKNS_9BinOpInfoE'/>
<use f='llvm/llvm/lib/CodeGen/CodeGenPrepare.cpp' l='1214' u='c' c='_ZN12_GLOBAL__N_114CodeGenPrepare27replaceMathCmpWithIntrinsicEPN4llvm14BinaryOperatorEPNS1_7CmpInstENS1_9Intrinsic2IDE'/>
<def f='llvm/llvm/lib/IR/IRBuilder.cpp' l='757' ll='764' type='llvm::CallInst * llvm::IRBuilderBase::CreateBinaryIntrinsic(Intrinsic::ID ID, llvm::Value * LHS, llvm::Value * RHS, llvm::Instruction * FMFSource = nullptr, const llvm::Twine &amp; Name = &quot;&quot;)'/>
