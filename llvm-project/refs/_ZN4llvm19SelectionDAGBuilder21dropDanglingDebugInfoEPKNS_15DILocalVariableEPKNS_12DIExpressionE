<dec f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h' l='479' type='void llvm::SelectionDAGBuilder::dropDanglingDebugInfo(const llvm::DILocalVariable * Variable, const llvm::DIExpression * Expr)'/>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='1136' ll='1160' type='void llvm::SelectionDAGBuilder::dropDanglingDebugInfo(const llvm::DILocalVariable * Variable, const llvm::DIExpression * Expr)'/>
<doc f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h' l='476'>/// If we have dangling debug info that describes \p Variable, or an
  /// overlapping part of variable considering the \p Expr, then this method
  /// will drop that debug info as it isn&apos;t valid any longer.</doc>
