<def f='llvm/llvm/include/llvm/ADT/ilist.h' l='40' ll='42'/>
<def f='llvm/llvm/include/llvm/IR/Instruction.h' l='39' ll='41'/>
<size>1</size>
<doc f='llvm/llvm/include/llvm/ADT/ilist.h' l='33'>/// Use delete by default for iplist and ilist.
///
/// Specialize this to get different behaviour for ownership-related API.  (If
/// you really want ownership semantics, consider using std::list or building
/// something like \a BumpPtrList.)
///
/// \see ilist_noalloc_traits</doc>
<fun r='_ZN4llvm18ilist_alloc_traits10deleteNodeEPT_'/>
<fun r='_ZN4llvm18ilist_alloc_traitsINS_11InstructionEE10deleteNodeEPS1_'/>
<fun r='_ZN4llvm18ilist_alloc_traitsINS_11InstructionEE10deleteNodeEPS1_'/>
<def f='llvm/llvm/include/llvm/MC/MCSection.h' l='32' ll='34'/>
<size>1</size>
<fun r='_ZN4llvm18ilist_alloc_traitsINS_10MCFragmentEE10deleteNodeEPS1_'/>
<def f='llvm/llvm/include/llvm/Analysis/MemorySSA.h' l='230' ll='233'/>
<size>1</size>
<fun r='_ZN4llvm18ilist_alloc_traitsINS_12MemoryAccessEE10deleteNodeEPS1_'/>
<def f='llvm/llvm/include/llvm/CodeGen/MachineFunction.h' l='75' ll='77'/>
<size>1</size>
<fun r='_ZN4llvm18ilist_alloc_traitsINS_17MachineBasicBlockEE10deleteNodeEPS1_'/>
<inh f='llvm/llvm/include/llvm/ADT/ilist.h' l='56' c='llvm::ilist_noalloc_traits'/>
<def f='llvm/lld/lib/ReaderWriter/MachO/MachONormalizedFileBinaryWriter.cpp' l='69' ll='70'/>
<size>1</size>
<def f='llvm/llvm/include/llvm/CodeGen/SelectionDAG.h' l='130' ll='134'/>
<size>1</size>
<fun r='_ZN4llvm18ilist_alloc_traitsINS_6SDNodeEE10deleteNodeEPS1_'/>
<inh f='llvm/llvm/include/llvm/ADT/ilist.h' l='56' c='llvm::ilist_noalloc_traits'/>
<def f='llvm/llvm/include/llvm/CodeGen/SlotIndexes.h' l='78' ll='80'/>
<size>1</size>
<ovr f='llvm/llvm/lib/IR/BasicBlock.cpp' l='38' c='llvm::SymbolTableListTraits'/>
<ovr f='llvm/llvm/lib/IR/Function.cpp' l='61' c='llvm::SymbolTableListTraits'/>
<ovr f='llvm/llvm/lib/IR/Module.cpp' l='64' c='llvm::SymbolTableListTraits'/>
<ovr f='llvm/llvm/lib/IR/Module.cpp' l='65' c='llvm::SymbolTableListTraits'/>
<ovr f='llvm/llvm/lib/IR/Module.cpp' l='66' c='llvm::SymbolTableListTraits'/>
<ovr f='llvm/llvm/lib/IR/Module.cpp' l='67' c='llvm::SymbolTableListTraits'/>
