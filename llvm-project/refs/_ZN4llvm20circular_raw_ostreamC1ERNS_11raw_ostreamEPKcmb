<def f='llvm/llvm/include/llvm/Support/circular_raw_ostream.h' l='107' ll='116' type='void llvm::circular_raw_ostream::circular_raw_ostream(llvm::raw_ostream &amp; Stream, const char * Header, size_t BuffSize = 0, bool Owns = REFERENCE_ONLY)'/>
<use f='llvm/llvm/lib/Support/Debug.cpp' l='138' u='c' c='_ZZN4llvm4dbgsEvEN9dbgstreamC1Ev'/>
<doc f='llvm/llvm/include/llvm/Support/circular_raw_ostream.h' l='94'>/// circular_raw_ostream - Construct an optionally
    /// circular-buffered stream, handing it an underlying stream to
    /// do the &quot;real&quot; output.
    ///
    /// As a side effect, if BuffSize is nonzero, the given Stream is
    /// set to be Unbuffered.  This is because circular_raw_ostream
    /// does its own buffering, so it doesn&apos;t want another layer of
    /// buffering to be happening underneath it.
    ///
    /// &quot;Owns&quot; tells the circular_raw_ostream whether it is
    /// responsible for managing the held stream, doing memory
    /// management of it, etc.
    ///</doc>
