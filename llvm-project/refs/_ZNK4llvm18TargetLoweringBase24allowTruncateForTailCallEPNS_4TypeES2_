<def f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='2307' ll='2309' type='bool llvm::TargetLoweringBase::allowTruncateForTailCall(llvm::Type * FromTy, llvm::Type * ToTy) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='2302'>/// Return true if a truncation from FromTy to ToTy is permitted when deciding
  /// whether a call is in tail position. Typically this means that both results
  /// would be assigned to the same register or stack slot, but it could mean
  /// the target performs adequate checks of its own before proceeding with the
  /// tail call.  Targets must return false when FromTy &lt;= ToTy.</doc>
<use f='llvm/llvm/lib/CodeGen/Analysis.cpp' l='311' u='c' c='_ZL12getNoopInputPKN4llvm5ValueERNS_15SmallVectorImplIjEERjRKNS_18TargetLoweringBaseERKNS_10DataLayoutE'/>
<ovr f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='13237' c='_ZNK4llvm17ARMTargetLowering24allowTruncateForTailCallEPNS_4TypeES2_'/>
<ovr f='llvm/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp' l='2574' c='_ZNK4llvm21HexagonTargetLowering24allowTruncateForTailCallEPNS_4TypeES2_'/>
<ovr f='llvm/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp' l='1176' c='_ZNK4llvm21SystemZTargetLowering24allowTruncateForTailCallEPNS_4TypeES2_'/>
<ovr f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='28474' c='_ZNK4llvm17X86TargetLowering24allowTruncateForTailCallEPNS_4TypeES2_'/>
