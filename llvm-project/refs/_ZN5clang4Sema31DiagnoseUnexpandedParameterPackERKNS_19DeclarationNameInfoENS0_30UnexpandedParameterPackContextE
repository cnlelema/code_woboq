<dec f='llvm/clang/include/clang/Sema/Sema.h' l='6931' type='bool clang::Sema::DiagnoseUnexpandedParameterPack(const clang::DeclarationNameInfo &amp; NameInfo, clang::Sema::UnexpandedParameterPackContext UPPC)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='6924'>/// If the given name contains an unexpanded parameter pack,
  /// diagnose the error.
  ///
  /// \param NameInfo The name (with source location information) that
  /// is being checked for unexpanded parameter packs.
  ///
  /// \returns true if an error occurred, false otherwise.</doc>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='5383' u='c' c='_ZN5clang4Sema16HandleDeclaratorEPNS_5ScopeERNS_10DeclaratorEN4llvm15MutableArrayRefIPNS_21TemplateParameterListEEE'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='9568' u='c' c='_ZN5clang4Sema21ActOnUsingDeclarationEPNS_5ScopeENS_15AccessSpecifierENS_14SourceLocationES4_RNS_12CXXScopeSpecERNS_13UnqualifiedIdES4_RKNS_20ParsedAttributesViewE'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='14394' u='c' c='_ZN5clang4Sema23ActOnFriendFunctionDeclEPNS_5ScopeERNS_10DeclaratorEN4llvm15MutableArrayRefIPNS_21TemplateParameterListEEE'/>
<use f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='7950' u='c' c='_ZN5clang4Sema28CheckMicrosoftIfExistsSymbolEPNS_5ScopeENS_14SourceLocationEbRNS_12CXXScopeSpecERNS_13UnqualifiedIdE'/>
<def f='llvm/clang/lib/Sema/SemaTemplateVariadic.cpp' l='414' ll='448' type='bool clang::Sema::DiagnoseUnexpandedParameterPack(const clang::DeclarationNameInfo &amp; NameInfo, clang::Sema::UnexpandedParameterPackContext UPPC)'/>
