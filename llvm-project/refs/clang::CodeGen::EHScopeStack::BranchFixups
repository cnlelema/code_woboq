<dec f='llvm/clang/lib/CodeGen/EHScopeStack.h' l='258' type='SmallVector&lt;clang::CodeGen::BranchFixup, 8&gt;'/>
<use f='llvm/clang/lib/CodeGen/EHScopeStack.h' l='397' u='m' c='_ZN5clang7CodeGen12EHScopeStack14addBranchFixupEv'/>
<use f='llvm/clang/lib/CodeGen/EHScopeStack.h' l='398' u='m' c='_ZN5clang7CodeGen12EHScopeStack14addBranchFixupEv'/>
<use f='llvm/clang/lib/CodeGen/EHScopeStack.h' l='401' u='m' c='_ZNK5clang7CodeGen12EHScopeStack18getNumBranchFixupsEv'/>
<use f='llvm/clang/lib/CodeGen/EHScopeStack.h' l='404' u='m' c='_ZN5clang7CodeGen12EHScopeStack14getBranchFixupEj'/>
<use f='llvm/clang/lib/CodeGen/EHScopeStack.h' l='414' u='m' c='_ZN5clang7CodeGen12EHScopeStack11clearFixupsEv'/>
<offset>320</offset>
<doc f='llvm/clang/lib/CodeGen/EHScopeStack.h' l='241'>/// The current set of branch fixups.  A branch fixup is a jump to
  /// an as-yet unemitted label, i.e. a label for which we don&apos;t yet
  /// know the EH stack depth.  Whenever we pop a cleanup, we have
  /// to thread all the current branch fixups through it.
  ///
  /// Fixups are recorded as the Use of the respective branch or
  /// switch statement.  The use points to the final destination.
  /// When popping out of a cleanup, these uses are threaded through
  /// the cleanup and adjusted to point to the new cleanup.
  ///
  /// Note that branches are allowed to jump into protected scopes
  /// in certain situations;  e.g. the following code is legal:
  ///     struct A { ~A(); }; // trivial ctor, non-trivial dtor
  ///     goto foo;
  ///     A a;
  ///    foo:
  ///     bar();</doc>
<use f='llvm/clang/lib/CodeGen/CGCleanup.cpp' l='189' u='m' c='_ZN5clang7CodeGen12EHScopeStack11pushCleanupENS0_11CleanupKindEm'/>
<use f='llvm/clang/lib/CodeGen/CGCleanup.cpp' l='215' u='m' c='_ZN5clang7CodeGen12EHScopeStack10popCleanupEv'/>
<use f='llvm/clang/lib/CodeGen/CGCleanup.cpp' l='219' u='m' c='_ZN5clang7CodeGen12EHScopeStack10popCleanupEv'/>
<use f='llvm/clang/lib/CodeGen/CGCleanup.cpp' l='270' u='m' c='_ZN5clang7CodeGen12EHScopeStack13popNullFixupsEv'/>
<use f='llvm/clang/lib/CodeGen/CGCleanup.cpp' l='272' u='m' c='_ZN5clang7CodeGen12EHScopeStack13popNullFixupsEv'/>
<use f='llvm/clang/lib/CodeGen/CGCleanup.cpp' l='273' u='m' c='_ZN5clang7CodeGen12EHScopeStack13popNullFixupsEv'/>
<use f='llvm/clang/lib/CodeGen/CGCleanup.cpp' l='274' u='m' c='_ZN5clang7CodeGen12EHScopeStack13popNullFixupsEv'/>
