<dec f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='438' type='llvm::ConstantRange::OverflowResult llvm::ConstantRange::unsignedAddMayOverflow(const llvm::ConstantRange &amp; Other) const'/>
<doc f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='437'>/// Return whether unsigned add of the two ranges always/never overflows.</doc>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4222' u='c' c='_ZN4llvm29computeOverflowForUnsignedAddEPKNS_5ValueES2_RKNS_10DataLayoutEPNS_15AssumptionCacheEPKNS_11InstructionEPKNS_13DominatorTreeEb'/>
<def f='llvm/llvm/lib/IR/ConstantRange.cpp' l='1290' ll='1304' type='ConstantRange::OverflowResult llvm::ConstantRange::unsignedAddMayOverflow(const llvm::ConstantRange &amp; Other) const'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1557' u='c' c='_ZN12_GLOBAL__N_142ConstantRangeTest_UnsignedAddOverflow_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1558' u='c' c='_ZN12_GLOBAL__N_142ConstantRangeTest_UnsignedAddOverflow_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1562' u='c' c='_ZN12_GLOBAL__N_142ConstantRangeTest_UnsignedAddOverflow_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1563' u='c' c='_ZN12_GLOBAL__N_142ConstantRangeTest_UnsignedAddOverflow_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1564' u='c' c='_ZN12_GLOBAL__N_142ConstantRangeTest_UnsignedAddOverflow_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1565' u='c' c='_ZN12_GLOBAL__N_142ConstantRangeTest_UnsignedAddOverflow_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1568' u='c' c='_ZN12_GLOBAL__N_142ConstantRangeTest_UnsignedAddOverflow_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1569' u='c' c='_ZN12_GLOBAL__N_142ConstantRangeTest_UnsignedAddOverflow_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1570' u='c' c='_ZN12_GLOBAL__N_142ConstantRangeTest_UnsignedAddOverflow_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1571' u='c' c='_ZN12_GLOBAL__N_142ConstantRangeTest_UnsignedAddOverflow_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1576' u='c' c='_ZN12_GLOBAL__N_142ConstantRangeTest_UnsignedAddOverflow_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1577' u='c' c='_ZN12_GLOBAL__N_142ConstantRangeTest_UnsignedAddOverflow_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1578' u='c' c='_ZN12_GLOBAL__N_142ConstantRangeTest_UnsignedAddOverflow_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1579' u='c' c='_ZN12_GLOBAL__N_142ConstantRangeTest_UnsignedAddOverflow_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1583' u='c' c='_ZN12_GLOBAL__N_142ConstantRangeTest_UnsignedAddOverflow_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1584' u='c' c='_ZN12_GLOBAL__N_142ConstantRangeTest_UnsignedAddOverflow_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1585' u='c' c='_ZN12_GLOBAL__N_142ConstantRangeTest_UnsignedAddOverflow_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1586' u='c' c='_ZN12_GLOBAL__N_142ConstantRangeTest_UnsignedAddOverflow_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1784' u='c' c='_ZN12_GLOBAL__N_152ConstantRangeTest_UnsignedAddOverflowExhaustive_Test8TestBodyEv'/>
