<dec f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.h' l='332' type='bool llvm::AArch64TargetLowering::shouldSinkOperands(llvm::Instruction * I, SmallVectorImpl&lt;llvm::Use *&gt; &amp; Ops) const'/>
<inh f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='2403' c='_ZNK4llvm18TargetLoweringBase18shouldSinkOperandsEPNS_11InstructionERNS_15SmallVectorImplIPNS_3UseEEE'/>
<def f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='8359' ll='8401' type='bool llvm::AArch64TargetLowering::shouldSinkOperands(llvm::Instruction * I, SmallVectorImpl&lt;llvm::Use *&gt; &amp; Ops) const'/>
<doc f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='8356'>/// Check if sinking \p I&apos;s operands to I&apos;s basic block is profitable, because
/// the operands can be folded into a target instruction, e.g.
/// shufflevectors extracts and/or sext/zext can be folded into (u,s)subl(2).</doc>
