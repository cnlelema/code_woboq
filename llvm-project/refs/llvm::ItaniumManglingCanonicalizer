<def f='llvm/llvm/include/llvm/Support/ItaniumManglingCanonicalizer.h' l='34' ll='89'/>
<size>8</size>
<doc f='llvm/llvm/include/llvm/Support/ItaniumManglingCanonicalizer.h' l='22'>/// Canonicalizer for mangled names.
///
/// This class allows specifying a list of &quot;equivalent&quot; manglings. For example,
/// you can specify that Ss is equivalent to
///   NSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
/// and then manglings that refer to libstdc++&apos;s &apos;std::string&apos; will be
/// considered equivalent to manglings that are the same except that they refer
/// to libc++&apos;s &apos;std::string&apos;.
///
/// This can be used when data (eg, profiling data) is available for a version
/// of a program built in a different configuration, with correspondingly
/// different manglings.</doc>
<fun r='_ZN4llvm28ItaniumManglingCanonicalizerC1Ev'/>
<fun r='_ZN4llvm28ItaniumManglingCanonicalizerC1ERKS0_'/>
<fun r='_ZN4llvm28ItaniumManglingCanonicalizeraSERKS0_'/>
<fun r='_ZN4llvm28ItaniumManglingCanonicalizerD1Ev'/>
<fun r='_ZN4llvm28ItaniumManglingCanonicalizer14addEquivalenceENS0_12FragmentKindENS_9StringRefES2_'/>
<fun r='_ZN4llvm28ItaniumManglingCanonicalizer12canonicalizeENS_9StringRefE'/>
<fun r='_ZN4llvm28ItaniumManglingCanonicalizer6lookupENS_9StringRefE'/>
<mbr r='llvm::ItaniumManglingCanonicalizer::P' o='0' t='llvm::ItaniumManglingCanonicalizer::Impl *'/>
