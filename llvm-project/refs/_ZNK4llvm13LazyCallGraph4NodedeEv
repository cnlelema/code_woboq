<def f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='358' ll='361' type='llvm::LazyCallGraph::EdgeSequence &amp; llvm::LazyCallGraph::Node::operator*() const'/>
<use f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='362' u='c' c='_ZNK4llvm13LazyCallGraph4NodeptEv'/>
<doc f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='356'>// We allow accessing the edges by dereferencing or using the arrow
    // operator, essentially wrapping the internal optional.</doc>
<use f='llvm/llvm/lib/Analysis/CGSCCPassManager.cpp' l='505' u='c' c='_ZN4llvm41updateCGAndAnalysisManagerForFunctionPassERNS_13LazyCallGraphERNS0_3SCCERNS0_4NodeERNS_15AnalysisManagerIS2_JS1_EEERNS_17CGSCCUpdateResultE'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='243' u='c' c='_ZN4llvm13LazyCallGraph3SCC6verifyEv'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='336' u='c' c='_ZN4llvm13LazyCallGraph6RefSCC6verifyEv'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='357' u='c' c='_ZNK4llvm13LazyCallGraph6RefSCC10isParentOfERKS1_'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='379' u='c' c='_ZNK4llvm13LazyCallGraph6RefSCC12isAncestorOfERKS1_'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='531' u='c' c='_ZN4llvm13LazyCallGraph6RefSCC24switchInternalEdgeToCallERNS0_4NodeES3_NS_12function_refIFvNS_8ArrayRefIPNS0_3SCCEEEEEE'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='603' u='c' c='_ZN4llvm13LazyCallGraph6RefSCC24switchInternalEdgeToCallERNS0_4NodeES3_NS_12function_refIFvNS_8ArrayRefIPNS0_3SCCEEEEEE'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='679' u='c' c='_ZN4llvm13LazyCallGraph6RefSCC30switchTrivialInternalEdgeToRefERNS0_4NodeES3_'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='701' u='c' c='_ZN4llvm13LazyCallGraph6RefSCC23switchInternalEdgeToRefERNS0_4NodeES3_'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='888' u='c' c='_ZN4llvm13LazyCallGraph6RefSCC24switchOutgoingEdgeToCallERNS0_4NodeES3_'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='910' u='c' c='_ZN4llvm13LazyCallGraph6RefSCC23switchOutgoingEdgeToRefERNS0_4NodeES3_'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='999' u='c' c='_ZN4llvm13LazyCallGraph6RefSCC21insertIncomingRefEdgeERNS0_4NodeES3_'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='1024' u='c' c='_ZN4llvm13LazyCallGraph6RefSCC21insertIncomingRefEdgeERNS0_4NodeES3_'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='1147' u='c' c='_ZN4llvm13LazyCallGraph6RefSCC21removeInternalRefEdgeERNS0_4NodeENS_8ArrayRefIPS2_EE'/>
<use f='llvm/llvm/lib/Transforms/IPO/Inliner.cpp' l='1151' u='c' c='_ZN4llvm11InlinerPass3runERNS_13LazyCallGraph3SCCERNS_15AnalysisManagerIS2_JRS1_EEES5_RNS_17CGSCCUpdateResultE'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='641' u='c' c='_ZN12_GLOBAL__N_143LazyCallGraphTest_OutgoingEdgeMutation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='796' u='c' c='_ZN12_GLOBAL__N_144LazyCallGraphTest_IncomingEdgeInsertion_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='888' u='c' c='_ZN12_GLOBAL__N_152LazyCallGraphTest_IncomingEdgeInsertionRefGraph_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='2086' u='c' c='_ZN12_GLOBAL__N_142LazyCallGraphTest_ReplaceNodeFunction_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='2087' u='c' c='_ZN12_GLOBAL__N_142LazyCallGraphTest_ReplaceNodeFunction_Test8TestBodyEv'/>
