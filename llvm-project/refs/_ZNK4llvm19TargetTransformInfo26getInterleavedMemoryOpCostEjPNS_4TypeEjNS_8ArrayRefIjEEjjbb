<dec f='llvm/llvm/include/llvm/Analysis/TargetTransformInfo.h' l='882' type='int llvm::TargetTransformInfo::getInterleavedMemoryOpCost(unsigned int Opcode, llvm::Type * VecTy, unsigned int Factor, ArrayRef&lt;unsigned int&gt; Indices, unsigned int Alignment, unsigned int AddressSpace, bool UseMaskForCond = false, bool UseMaskForGaps = false) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/TargetTransformInfo.h' l='872'>/// \return The cost of the interleaved memory operation.
  /// \p Opcode is the memory operation code
  /// \p VecTy is the vector type of the interleaved access.
  /// \p Factor is the interleave factor
  /// \p Indices is the indices for interleaved load members (as interleaved
  ///    load allows gaps)
  /// \p Alignment is the alignment of the memory operation
  /// \p AddressSpace is address space of the pointer.
  /// \p UseMaskForCond indicates if the memory access is predicated.
  /// \p UseMaskForGaps indicates if gaps should be masked.</doc>
<def f='llvm/llvm/lib/Analysis/TargetTransformInfo.cpp' l='546' ll='556' type='int llvm::TargetTransformInfo::getInterleavedMemoryOpCost(unsigned int Opcode, llvm::Type * VecTy, unsigned int Factor, ArrayRef&lt;unsigned int&gt; Indices, unsigned int Alignment, unsigned int AddressSpace, bool UseMaskForCond = false, bool UseMaskForGaps = false) const'/>
<use f='llvm/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp' l='1208' u='c' c='_ZN12_GLOBAL__N_126InterleavedLoadCombineImpl7combineERNSt7__cxx114listINS_10VectorInfoESaIS3_EEERN4llvm25OptimizationRemarkEmitterE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='5603' u='c' c='_ZN4llvm26LoopVectorizationCostModel22getInterleaveGroupCostEPNS_11InstructionEj'/>
