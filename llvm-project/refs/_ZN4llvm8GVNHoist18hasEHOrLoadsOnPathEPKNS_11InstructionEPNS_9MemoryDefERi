<def f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='444' ll='479' type='bool llvm::GVNHoist::hasEHOrLoadsOnPath(const llvm::Instruction * NewPt, llvm::MemoryDef * Def, int &amp; NBBsOnAllPaths)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='542' u='c' c='_ZN4llvm8GVNHoist15safeToHoistLdStEPKNS_11InstructionES3_PNS_14MemoryUseOrDefENS0_7InsKindERi'/>
<doc f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='437'>// Return true when there are exception handling or loads of memory Def
  // between Def and NewPt.  This function is only called for stores: Def is
  // the MemoryDef of the store to be hoisted.

  // Decrement by 1 NBBsOnAllPaths for each block between HoistPt and BB, and
  // return true when the counter NBBsOnAllPaths reaces 0, except when it is
  // initialized to -1 which is unlimited.</doc>
