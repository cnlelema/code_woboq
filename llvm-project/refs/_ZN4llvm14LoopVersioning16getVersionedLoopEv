<def f='llvm/llvm/include/llvm/Transforms/Utils/LoopVersioning.h' l='67' type='llvm::Loop * llvm::LoopVersioning::getVersionedLoop()'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/LoopVersioning.h' l='64'>/// Returns the versioned loop.  Control flows here if pointers in the
  /// loop don&apos;t alias (i.e. all memchecks passed).  (This loop is actually the
  /// same as the original loop that we got constructed with.)</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopVersioningLICM.cpp' l='642' u='c' c='_ZN12_GLOBAL__N_118LoopVersioningLICM9runOnLoopEPN4llvm4LoopERNS1_13LPPassManagerE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopVersioningLICM.cpp' l='646' u='c' c='_ZN12_GLOBAL__N_118LoopVersioningLICM9runOnLoopEPN4llvm4LoopERNS1_13LPPassManagerE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopVersioningLICM.cpp' l='649' u='c' c='_ZN12_GLOBAL__N_118LoopVersioningLICM9runOnLoopEPN4llvm4LoopERNS1_13LPPassManagerE'/>
