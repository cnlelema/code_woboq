<dec f='llvm/llvm/lib/Target/MSP430/MSP430ISelLowering.h' l='123' type='bool llvm::MSP430TargetLowering::isZExtFree(llvm::Type * Ty1, llvm::Type * Ty2) const'/>
<doc f='llvm/llvm/lib/Target/MSP430/MSP430ISelLowering.h' l='115'>/// isZExtFree - Return true if any actual instruction that defines a value
    /// of type Ty1 implicit zero-extends the value to Ty2 in the result
    /// register. This does not necessarily include registers defined in unknown
    /// ways, such as incoming arguments, or copies from unknown virtual
    /// registers. Also, if isTruncateFree(Ty2, Ty1) is true, this does not
    /// necessarily apply to truncate instructions. e.g. on msp430, all
    /// instructions that define 8-bit values implicit zero-extend the result
    /// out to 16 bits.</doc>
<inh f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='2384' c='_ZNK4llvm18TargetLoweringBase10isZExtFreeEPNS_4TypeES2_'/>
<def f='llvm/llvm/lib/Target/MSP430/MSP430ISelLowering.cpp' l='1388' ll='1391' type='bool llvm::MSP430TargetLowering::isZExtFree(llvm::Type * Ty1, llvm::Type * Ty2) const'/>
