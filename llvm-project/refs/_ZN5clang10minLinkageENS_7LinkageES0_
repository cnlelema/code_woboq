<def f='llvm/clang/include/clang/Basic/Linkage.h' l='114' ll='124' type='clang::Linkage clang::minLinkage(clang::Linkage L1, clang::Linkage L2)'/>
<use f='llvm/clang/include/clang/Basic/Visibility.h' l='90' u='c' c='_ZN5clang11LinkageInfo12mergeLinkageENS_7LinkageE'/>
<doc f='llvm/clang/include/clang/Basic/Linkage.h' l='106'>/// Compute the minimum linkage given two linkages.
///
/// The linkage can be interpreted as a pair formed by the formal linkage and
/// a boolean for external visibility. This is just what getFormalLinkage and
/// isExternallyVisible return. We want the minimum of both components. The
/// Linkage enum is defined in an order that makes this simple, we just need
/// special cases for when VisibleNoLinkage would lose the visible bit and
/// become NoLinkage.</doc>
<use f='llvm/clang/lib/AST/Type.cpp' l='3595' u='c' c='_ZN12_GLOBAL__N_15mergeENS_16CachedPropertiesES0_'/>
