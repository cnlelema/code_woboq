<dec f='llvm/llvm/lib/Target/Hexagon/RDFGraph.h' l='395' type='void llvm::rdf::NodeAllocator::startNewBlock()'/>
<def f='llvm/llvm/lib/Target/Hexagon/RDFGraph.cpp' l='344' ll='354' type='void llvm::rdf::NodeAllocator::startNewBlock()'/>
<use f='llvm/llvm/lib/Target/Hexagon/RDFGraph.cpp' l='367' u='c' c='_ZN4llvm3rdf13NodeAllocator3NewEv'/>
<doc f='llvm/llvm/lib/Target/Hexagon/RDFGraph.cpp' l='335'>// Node allocation functions.
//
// Node allocator is like a slab memory allocator: it allocates blocks of
// memory in sizes that are multiples of the size of a node. Each block has
// the same size. Nodes are allocated from the currently active block, and
// when it becomes full, a new one is created.
// There is a mapping scheme between node id and its location in a block,
// and within that block is described in the header file.
//</doc>
