<dec f='llvm/llvm/lib/CodeGen/SpillPlacement.h' l='148' type='bool llvm::SpillPlacement::finish()'/>
<use f='llvm/llvm/lib/CodeGen/RegAllocGreedy.cpp' l='1397' u='c' c='_ZN12_GLOBAL__N_18RAGreedy17calcCompactRegionERNS0_20GlobalSplitCandidateE'/>
<use f='llvm/llvm/lib/CodeGen/RegAllocGreedy.cpp' l='1931' u='c' c='_ZN12_GLOBAL__N_18RAGreedy24calculateRegionSplitCostERN4llvm12LiveIntervalERNS1_15AllocationOrderERNS1_14BlockFrequencyERjbPb'/>
<doc f='llvm/llvm/lib/CodeGen/SpillPlacement.h' l='141'>/// finish - Compute the optimal spill code placement given the
  /// constraints. No MustSpill constraints will be violated, and the smallest
  /// possible number of PrefX constraints will be violated, weighted by
  /// expected execution frequencies.
  /// The selected bundles are returned in the bitvector passed to prepare().
  /// @return True if a perfect solution was found, allowing the variable to be
  ///         in a register through all relevant bundles.</doc>
<def f='llvm/llvm/lib/CodeGen/SpillPlacement.cpp' l='369' ll='382' type='bool llvm::SpillPlacement::finish()'/>
