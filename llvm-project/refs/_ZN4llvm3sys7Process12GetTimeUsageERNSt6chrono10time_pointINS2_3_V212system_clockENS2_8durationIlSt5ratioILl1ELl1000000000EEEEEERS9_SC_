<dec f='llvm/llvm/include/llvm/Support/Process.h' l='80' type='static void llvm::sys::Process::GetTimeUsage(TimePoint&lt;&gt; &amp; elapsed, std::chrono::nanoseconds &amp; user_time, std::chrono::nanoseconds &amp; sys_time)'/>
<doc f='llvm/llvm/include/llvm/Support/Process.h' l='72'>/// This static function will set \p user_time to the amount of CPU time
  /// spent in user (non-kernel) mode and \p sys_time to the amount of CPU
  /// time spent in system (kernel) mode.  If the operating system does not
  /// support collection of these metrics, a zero duration will be for both
  /// values.
  /// \param elapsed Returns the system_clock::now() giving current time
  /// \param user_time Returns the current amount of user time for the process
  /// \param sys_time Returns the current amount of system time for the process</doc>
<def f='llvm/llvm/lib/Support/Unix/Process.inc' l='115' ll='119' type='static void llvm::sys::Process::GetTimeUsage(TimePoint&lt;&gt; &amp; elapsed, std::chrono::nanoseconds &amp; user_time, std::chrono::nanoseconds &amp; sys_time)'/>
<use f='llvm/llvm/lib/Support/Timer.cpp' l='125' u='c' c='_ZN4llvm10TimeRecord14getCurrentTimeEb'/>
<use f='llvm/llvm/lib/Support/Timer.cpp' l='127' u='c' c='_ZN4llvm10TimeRecord14getCurrentTimeEb'/>
