<inh f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h' l='277' c='clang::threadSafety::til::SExpr'/>
<def f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h' l='1499' ll='1681'/>
<size>152</size>
<doc f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h' l='1494'>/// A basic block is part of an SCFG.  It can be treated as a function in
/// continuation passing style.  A block consists of a sequence of phi nodes,
/// which are &quot;arguments&quot; to the function, followed by a sequence of
/// instructions.  It ends with a Terminator, which is a Branch or Goto to
/// another basic block in the same SCFG.</doc>
<fun r='_ZN5clang12threadSafety3til10BasicBlockC1ENS1_12MemRegionRefE'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlockC1ERS2_NS1_12MemRegionRefEONS1_11SimpleArrayIPNS1_5SExprEEES9_PNS1_10TerminatorE'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock7classofEPKNS1_5SExprE'/>
<fun r='_ZNK5clang12threadSafety3til10BasicBlock7blockIDEv'/>
<fun r='_ZNK5clang12threadSafety3til10BasicBlock15numPredecessorsEv'/>
<fun r='_ZNK5clang12threadSafety3til10BasicBlock13numSuccessorsEv'/>
<fun r='_ZNK5clang12threadSafety3til10BasicBlock3cfgEv'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock3cfgEv'/>
<fun r='_ZNK5clang12threadSafety3til10BasicBlock6parentEv'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock6parentEv'/>
<fun r='_ZNK5clang12threadSafety3til10BasicBlock9argumentsEv'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock9argumentsEv'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock12instructionsEv'/>
<fun r='_ZNK5clang12threadSafety3til10BasicBlock12instructionsEv'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock12predecessorsEv'/>
<fun r='_ZNK5clang12threadSafety3til10BasicBlock12predecessorsEv'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock10successorsEv'/>
<fun r='_ZNK5clang12threadSafety3til10BasicBlock10successorsEv'/>
<fun r='_ZNK5clang12threadSafety3til10BasicBlock10terminatorEv'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock10terminatorEv'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock13setTerminatorEPNS1_10TerminatorE'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock9DominatesERKS2_'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock13PostDominatesERKS2_'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock11addArgumentEPNS1_3PhiE'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock14addInstructionEPNS1_5SExprE'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock14addPredecessorEPS2_'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock16reserveArgumentsEj'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock19reserveInstructionsEj'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock19reservePredecessorsEj'/>
<fun r='_ZNK5clang12threadSafety3til10BasicBlock20findPredecessorIndexEPKS2_'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock8traverseERT_NS3_5R_CtxE'/>
<fun r='_ZNK5clang12threadSafety3til10BasicBlock7compareEPKS2_RT_'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock14renumberInstrsEj'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock15topologicalSortERNS1_11SimpleArrayIPS2_EEj'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock20topologicalFinalSortERNS1_11SimpleArrayIPS2_EEj'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock16computeDominatorEv'/>
<fun r='_ZN5clang12threadSafety3til10BasicBlock20computePostDominatorEv'/>
<mbr r='clang::threadSafety::til::BasicBlock::Arena' o='128' t='clang::threadSafety::til::MemRegionRef'/>
<mbr r='clang::threadSafety::til::BasicBlock::CFGPtr' o='192' t='clang::threadSafety::til::SCFG *'/>
<mbr r='clang::threadSafety::til::BasicBlock::BlockID' o='256' t='unsigned int'/>
<mbr r='clang::threadSafety::til::BasicBlock::Visited' o='287' t='bool'/>
<mbr r='clang::threadSafety::til::BasicBlock::Predecessors' o='320' t='BlockArray'/>
<mbr r='clang::threadSafety::til::BasicBlock::Args' o='512' t='InstrArray'/>
<mbr r='clang::threadSafety::til::BasicBlock::Instrs' o='704' t='InstrArray'/>
<mbr r='clang::threadSafety::til::BasicBlock::TermInstr' o='896' t='clang::threadSafety::til::Terminator *'/>
<mbr r='clang::threadSafety::til::BasicBlock::DominatorNode' o='960' t='clang::threadSafety::til::BasicBlock::TopologyNode'/>
<mbr r='clang::threadSafety::til::BasicBlock::PostDominatorNode' o='1088' t='clang::threadSafety::til::BasicBlock::TopologyNode'/>
