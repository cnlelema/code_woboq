<dec f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='294' type='llvm::ConstantRange llvm::ConstantRange::castOp(Instruction::CastOps CastOp, uint32_t BitWidth) const'/>
<doc f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='288'>/// Return a new range representing the possible values resulting
  /// from an application of the specified cast operator to this range. \p
  /// BitWidth is the target bitwidth of the cast.  For casts which don&apos;t
  /// change bitwidth, it must be the same as the source bitwidth.  For casts
  /// which do change bitwidth, the bitwidth must be consistent with the
  /// requested cast and source bitwidth.</doc>
<use f='llvm/llvm/lib/Analysis/LazyValueInfo.cpp' l='1054' u='c' c='_ZN12_GLOBAL__N_117LazyValueInfoImpl19solveBlockValueCastERN4llvm19ValueLatticeElementEPNS1_8CastInstEPNS1_10BasicBlockE'/>
<def f='llvm/llvm/lib/IR/ConstantRange.cpp' l='605' ll='646' type='llvm::ConstantRange llvm::ConstantRange::castOp(Instruction::CastOps CastOp, uint32_t ResultBitWidth) const'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Float2Int.cpp' l='199' u='c' c='_ZN4llvm13Float2IntPass13walkBackwardsERKNS_15SmallPtrSetImplIPNS_11InstructionEEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Float2Int.cpp' l='264' u='c' c='_ZN4llvm13Float2IntPass12walkForwardsEv'/>
