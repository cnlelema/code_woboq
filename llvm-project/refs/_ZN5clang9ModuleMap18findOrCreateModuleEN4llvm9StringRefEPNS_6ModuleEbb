<dec f='llvm/clang/include/clang/Lex/ModuleMap.h' l='519' type='std::pair&lt;Module *, bool&gt; clang::ModuleMap::findOrCreateModule(llvm::StringRef Name, clang::Module * Parent, bool IsFramework, bool IsExplicit)'/>
<doc f='llvm/clang/include/clang/Lex/ModuleMap.h' l='505'>/// Find a new module or submodule, or create it if it does not already
  /// exist.
  ///
  /// \param Name The name of the module to find or create.
  ///
  /// \param Parent The module that will act as the parent of this submodule,
  /// or nullptr to indicate that this is a top-level module.
  ///
  /// \param IsFramework Whether this is a framework module.
  ///
  /// \param IsExplicit Whether this is an explicit submodule.
  ///
  /// \returns The found or newly-created module, along with a boolean value
  /// that will be true if the module is newly-created.</doc>
<use f='llvm/clang/lib/Lex/ModuleMap.cpp' l='615' u='c' c='_ZN5clang9ModuleMap40findOrCreateModuleForHeaderInUmbrellaDirEPKNS_9FileEntryE'/>
<use f='llvm/clang/lib/Lex/ModuleMap.cpp' l='633' u='c' c='_ZN5clang9ModuleMap40findOrCreateModuleForHeaderInUmbrellaDirEPKNS_9FileEntryE'/>
<def f='llvm/clang/lib/Lex/ModuleMap.cpp' l='789' ll='807' type='std::pair&lt;Module *, bool&gt; clang::ModuleMap::findOrCreateModule(llvm::StringRef Name, clang::Module * Parent, bool IsFramework, bool IsExplicit)'/>
<use f='llvm/clang/lib/Lex/ModuleMap.cpp' l='1957' u='c' c='_ZN5clang15ModuleMapParser15parseModuleDeclEv'/>
<use f='llvm/clang/lib/Serialization/ASTReader.cpp' l='5080' u='c' c='_ZN5clang9ASTReader18ReadSubmoduleBlockERNS_13serialization10ModuleFileEj'/>
