<def f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='728' ll='735' type='unsigned int llvm::IntervalMapImpl::BranchNode::safeFind(unsigned int i, KeyT x) const'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='741' u='c' c='_ZNK4llvm15IntervalMapImpl10BranchNode10safeLookupET_'/>
<doc f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='722'>/// safeFind - Find a subtree that is known to exist. This is the same as
  /// findFrom except is it assumed that x is in range.
  /// @param i Starting index for the search.
  /// @param x Key to search for.
  /// @return  First index with !stopLess(key[i], x), never size.
  ///          This is the first subtree that can possibly contain x.</doc>
