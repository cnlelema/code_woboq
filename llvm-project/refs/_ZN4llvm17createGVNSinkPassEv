<dec f='llvm/llvm/include/llvm/Transforms/Scalar.h' l='304' type='llvm::FunctionPass * llvm::createGVNSinkPass()'/>
<doc f='llvm/llvm/include/llvm/Transforms/Scalar.h' l='299'>//===----------------------------------------------------------------------===//
//
// GVNSink - This pass uses an &quot;inverted&quot; value numbering to decide the
// similarity of expressions and sinks similar expressions into successors.
//</doc>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='328' u='c' c='_ZN4llvm18PassManagerBuilder31addFunctionSimplificationPassesERNS_6legacy15PassManagerBaseE'/>
<def f='llvm/llvm/lib/Transforms/Scalar/GVNSink.cpp' l='919' type='llvm::FunctionPass * llvm::createGVNSinkPass()'/>
