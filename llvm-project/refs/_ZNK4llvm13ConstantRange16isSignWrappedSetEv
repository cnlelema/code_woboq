<dec f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='191' type='bool llvm::ConstantRange::isSignWrappedSet() const'/>
<doc f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='187'>/// Return true if this set wraps around the signed domain. Special cases:
  ///  * Empty set: Not wrapped.
  ///  * Full set: Not wrapped.
  ///  * [X, SignedMin) == [X, SignedMax]: Not wrapped.</doc>
<def f='llvm/llvm/lib/IR/ConstantRange.cpp' l='299' ll='301' type='bool llvm::ConstantRange::isSignWrappedSet() const'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='340' u='c' c='_ZNK4llvm13ConstantRange16isAllNonNegativeEv'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='362' u='c' c='_ZNK4llvm13ConstantRange12getSignedMinEv'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='415' u='c' c='_ZL17getPreferredRangeRKN4llvm13ConstantRangeES2_NS0_18PreferredRangeTypeE'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='415' u='c' c='_ZL17getPreferredRangeRKN4llvm13ConstantRangeES2_NS0_18PreferredRangeTypeE'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='417' u='c' c='_ZL17getPreferredRangeRKN4llvm13ConstantRangeES2_NS0_18PreferredRangeTypeE'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='417' u='c' c='_ZL17getPreferredRangeRKN4llvm13ConstantRangeES2_NS0_18PreferredRangeTypeE'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='675' u='c' c='_ZNK4llvm13ConstantRange10signExtendEj'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='1263' u='c' c='_ZNK4llvm13ConstantRange3absEv'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Float2Int.cpp' l='374' u='c' c='_ZN4llvm13Float2IntPass20validateAndTransformEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='260' u='c' c='_ZN12_GLOBAL__N_134ConstantRangeTest_SignWrapped_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='261' u='c' c='_ZN12_GLOBAL__N_134ConstantRangeTest_SignWrapped_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='262' u='c' c='_ZN12_GLOBAL__N_134ConstantRangeTest_SignWrapped_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='263' u='c' c='_ZN12_GLOBAL__N_134ConstantRangeTest_SignWrapped_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='264' u='c' c='_ZN12_GLOBAL__N_134ConstantRangeTest_SignWrapped_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='266' u='c' c='_ZN12_GLOBAL__N_134ConstantRangeTest_SignWrapped_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='267' u='c' c='_ZN12_GLOBAL__N_134ConstantRangeTest_SignWrapped_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='268' u='c' c='_ZN12_GLOBAL__N_134ConstantRangeTest_SignWrapped_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='269' u='c' c='_ZN12_GLOBAL__N_134ConstantRangeTest_SignWrapped_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='270' u='c' c='_ZN12_GLOBAL__N_134ConstantRangeTest_SignWrapped_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='271' u='c' c='_ZN12_GLOBAL__N_134ConstantRangeTest_SignWrapped_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='272' u='c' c='_ZN12_GLOBAL__N_134ConstantRangeTest_SignWrapped_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='294' u='c' c='_ZN12_GLOBAL__N_135ConstantRangeTest_UpperWrapped_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='541' u='c' c='_ZN12_GLOBAL__N_132testBinarySetOperationExhaustiveET_T0_'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='542' u='c' c='_ZN12_GLOBAL__N_132testBinarySetOperationExhaustiveET_T0_'/>
