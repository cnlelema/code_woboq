<dec f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.h' l='300' type='void llvm::emitFrameOffset(llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator MBBI, const llvm::DebugLoc &amp; DL, unsigned int DestReg, unsigned int SrcReg, int Offset, const llvm::TargetInstrInfo * TII, MachineInstr::MIFlag  = MachineInstr::NoFlags, bool SetNZCV = false, bool NeedsWinCFI = false, bool * HasWinCFI = nullptr)'/>
<doc f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.h' l='296'>/// emitFrameOffset - Emit instructions as needed to set DestReg to SrcReg
/// plus Offset.  This is intended to be used from within the prolog/epilog
/// insertion (PEI) pass, where a virtual scratch register may be allocated
/// if necessary, to be replaced by the scavenger at the end of PEI.</doc>
<def f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='2960' ll='3047' type='void llvm::emitFrameOffset(llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator MBBI, const llvm::DebugLoc &amp; DL, unsigned int DestReg, unsigned int SrcReg, int Offset, const llvm::TargetInstrInfo * TII, MachineInstr::MIFlag Flag = MachineInstr::NoFlags, bool SetNZCV = false, bool NeedsWinCFI = false, bool * HasWinCFI = nullptr)'/>
