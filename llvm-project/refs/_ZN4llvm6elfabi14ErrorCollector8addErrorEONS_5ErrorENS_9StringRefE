<dec f='llvm/llvm/tools/llvm-elfabi/ErrorCollector.h' l='47' type='void llvm::elfabi::ErrorCollector::addError(llvm::Error &amp;&amp; E, llvm::StringRef Tag)'/>
<def f='llvm/llvm/tools/llvm-elfabi/ErrorCollector.cpp' l='23' ll='28' type='void llvm::elfabi::ErrorCollector::addError(llvm::Error &amp;&amp; Err, llvm::StringRef Tag)'/>
<doc f='llvm/llvm/tools/llvm-elfabi/ErrorCollector.h' l='45'>/// Adds an error with a descriptive tag that helps with identification.
  /// If the error is an Error::success(), it is checked and discarded.</doc>
<use f='llvm/llvm/tools/llvm-elfabi/llvm-elfabi.cpp' l='93' u='c' c='_ZL13readInputFileN4llvm9StringRefE'/>
<use f='llvm/llvm/tools/llvm-elfabi/llvm-elfabi.cpp' l='104' u='c' c='_ZL13readInputFileN4llvm9StringRefE'/>
<use f='llvm/llvm/tools/llvm-elfabi/llvm-elfabi.cpp' l='108' u='c' c='_ZL13readInputFileN4llvm9StringRefE'/>
