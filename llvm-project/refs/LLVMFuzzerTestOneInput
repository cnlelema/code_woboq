<def f='llvm/clang/tools/clang-fuzzer/ClangFuzzer.cpp' l='21' ll='25' type='int LLVMFuzzerTestOneInput(uint8_t * data, size_t size)'/>
<dec f='llvm/clang/tools/clang-fuzzer/DummyClangFuzzer.cpp' l='14' type='int LLVMFuzzerTestOneInput(const uint8_t * Data, size_t Size)'/>
<use f='llvm/clang/tools/clang-fuzzer/DummyClangFuzzer.cpp' l='18' u='r' c='main'/>
<dec f='llvm/llvm/tools/llvm-isel-fuzzer/DummyISelFuzzer.cpp' l='15' type='int LLVMFuzzerTestOneInput(const uint8_t * Data, size_t Size)'/>
<use f='llvm/llvm/tools/llvm-isel-fuzzer/DummyISelFuzzer.cpp' l='18' u='r' c='main'/>
<def f='llvm/llvm/tools/llvm-isel-fuzzer/llvm-isel-fuzzer.cpp' l='80' ll='105' type='int LLVMFuzzerTestOneInput(const uint8_t * Data, size_t Size)'/>
<dec f='llvm/llvm/tools/llvm-itanium-demangle-fuzzer/DummyDemanglerFuzzer.cpp' l='15' type='int LLVMFuzzerTestOneInput(const uint8_t * Data, size_t Size)'/>
<use f='llvm/llvm/tools/llvm-itanium-demangle-fuzzer/DummyDemanglerFuzzer.cpp' l='17' u='r' c='main'/>
<def f='llvm/llvm/tools/llvm-itanium-demangle-fuzzer/llvm-itanium-demangle-fuzzer.cpp' l='15' ll='23' type='int LLVMFuzzerTestOneInput(const uint8_t * Data, size_t Size)'/>
<dec f='llvm/llvm/tools/llvm-microsoft-demangle-fuzzer/DummyDemanglerFuzzer.cpp' l='15' type='int LLVMFuzzerTestOneInput(const uint8_t * Data, size_t Size)'/>
<use f='llvm/llvm/tools/llvm-microsoft-demangle-fuzzer/DummyDemanglerFuzzer.cpp' l='17' u='r' c='main'/>
<def f='llvm/llvm/tools/llvm-microsoft-demangle-fuzzer/llvm-microsoft-demangle-fuzzer.cpp' l='15' ll='20' type='int LLVMFuzzerTestOneInput(const uint8_t * Data, size_t Size)'/>
<dec f='llvm/llvm/tools/llvm-opt-fuzzer/DummyOptFuzzer.cpp' l='15' type='int LLVMFuzzerTestOneInput(const uint8_t * Data, size_t Size)'/>
<use f='llvm/llvm/tools/llvm-opt-fuzzer/DummyOptFuzzer.cpp' l='18' u='r' c='main'/>
<def f='llvm/llvm/tools/llvm-opt-fuzzer/llvm-opt-fuzzer.cpp' l='104' ll='163' type='int LLVMFuzzerTestOneInput(const uint8_t * Data, size_t Size)'/>
<dec f='llvm/llvm/tools/llvm-special-case-list-fuzzer/DummySpecialCaseListFuzzer.cpp' l='15' type='int LLVMFuzzerTestOneInput(const uint8_t * Data, size_t Size)'/>
<use f='llvm/llvm/tools/llvm-special-case-list-fuzzer/DummySpecialCaseListFuzzer.cpp' l='17' u='r' c='main'/>
<def f='llvm/llvm/tools/llvm-special-case-list-fuzzer/special-case-list-fuzzer.cpp' l='14' ll='25' type='int LLVMFuzzerTestOneInput(const uint8_t * Data, size_t Size)'/>
<dec f='llvm/llvm/tools/llvm-yaml-numeric-parser-fuzzer/DummyYAMLNumericParserFuzzer.cpp' l='15' type='int LLVMFuzzerTestOneInput(const uint8_t * Data, size_t Size)'/>
<use f='llvm/llvm/tools/llvm-yaml-numeric-parser-fuzzer/DummyYAMLNumericParserFuzzer.cpp' l='17' u='r' c='main'/>
<def f='llvm/llvm/tools/llvm-yaml-numeric-parser-fuzzer/yaml-numeric-parser-fuzzer.cpp' l='40' ll='46' type='int LLVMFuzzerTestOneInput(const uint8_t * Data, size_t Size)'/>
