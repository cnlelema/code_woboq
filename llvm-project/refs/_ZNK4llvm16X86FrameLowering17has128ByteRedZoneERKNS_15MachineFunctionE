<dec f='llvm/llvm/lib/Target/X86/X86FrameLowering.h' l='176' type='bool llvm::X86FrameLowering::has128ByteRedZone(const llvm::MachineFunction &amp; MF) const'/>
<doc f='llvm/llvm/lib/Target/X86/X86FrameLowering.h' l='174'>/// Return true if the function has a redzone (accessible bytes past the
  /// frame of the top of stack function) as part of it&apos;s ABI.  </doc>
<def f='llvm/llvm/lib/Target/X86/X86FrameLowering.cpp' l='875' ll='883' type='bool llvm::X86FrameLowering::has128ByteRedZone(const llvm::MachineFunction &amp; MF) const'/>
<use f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='25964' u='c' c='_ZL17emitLockedStackOpRN4llvm12SelectionDAGERKNS_12X86SubtargetENS_7SDValueENS_5SDLocE'/>
<use f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='7575' u='c' c='_ZNK4llvm12X86InstrInfo27isFunctionSafeToOutlineFromERNS_15MachineFunctionEb'/>
<use f='llvm/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp' l='2473' u='c' c='_ZN12_GLOBAL__N_131X86SpeculativeLoadHardeningPass25tracePredStateThroughCallERN4llvm12MachineInstrE'/>
