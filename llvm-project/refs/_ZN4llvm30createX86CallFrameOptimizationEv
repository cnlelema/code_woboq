<dec f='llvm/llvm/lib/Target/X86/X86.h' l='86' type='llvm::FunctionPass * llvm::createX86CallFrameOptimization()'/>
<doc f='llvm/llvm/lib/Target/X86/X86.h' l='84'>/// Return a pass that optimizes the code-size of x86 call sequences. This is
/// done by replacing esp-relative movs with pushes.</doc>
<def f='llvm/llvm/lib/Target/X86/X86CallFrameOptimization.cpp' l='626' ll='628' type='llvm::FunctionPass * llvm::createX86CallFrameOptimization()'/>
<use f='llvm/llvm/lib/Target/X86/X86TargetMachine.cpp' l='479' u='c' c='_ZN12_GLOBAL__N_113X86PassConfig14addPreRegAllocEv'/>
