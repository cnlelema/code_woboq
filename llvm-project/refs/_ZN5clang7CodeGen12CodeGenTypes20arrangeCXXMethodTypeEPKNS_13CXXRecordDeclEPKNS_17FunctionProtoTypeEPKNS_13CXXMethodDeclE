<dec f='llvm/clang/lib/CodeGen/CodeGenTypes.h' l='257' type='const clang::CodeGen::CGFunctionInfo &amp; clang::CodeGen::CodeGenTypes::arrangeCXXMethodType(const clang::CXXRecordDecl * RD, const clang::FunctionProtoType * FTP, const clang::CXXMethodDecl * MD)'/>
<use f='llvm/clang/lib/CodeGen/CGCXXABI.cpp' l='52' u='c' c='_ZN5clang7CodeGen8CGCXXABI31EmitLoadOfMemberFunctionPointerERNS0_15CodeGenFunctionEPKNS_4ExprENS0_7AddressERPN4llvm5ValueESA_PKNS_17MemberPointerTypeE'/>
<def f='llvm/clang/lib/CodeGen/CGCall.cpp' l='259' ll='271' type='const clang::CodeGen::CGFunctionInfo &amp; clang::CodeGen::CodeGenTypes::arrangeCXXMethodType(const clang::CXXRecordDecl * RD, const clang::FunctionProtoType * FTP, const clang::CXXMethodDecl * MD)'/>
<use f='llvm/clang/lib/CodeGen/CGCall.cpp' l='299' u='c' c='_ZN5clang7CodeGen12CodeGenTypes27arrangeCXXMethodDeclarationEPKNS_13CXXMethodDeclE'/>
<doc f='llvm/clang/lib/CodeGen/CGCall.cpp' l='253'>/// Arrange the argument and result information for a call to an
/// unknown C++ non-static member function of the given abstract type.
/// (A null RD means we don&apos;t have any meaningful &quot;this&quot; argument type,
///  so fall back to a generic pointer type).
/// The member function must be an ordinary function, i.e. not a
/// constructor or destructor.</doc>
<use f='llvm/clang/lib/CodeGen/CodeGenABITypes.cpp' l='52' u='c' c='_ZN5clang7CodeGen20arrangeCXXMethodTypeERNS0_13CodeGenModuleEPKNS_13CXXRecordDeclEPKNS_17FunctionProtoTypeEPKNS_13CXXMethodDeclE'/>
<use f='llvm/clang/lib/CodeGen/ItaniumCXXABI.cpp' l='559' u='c' c='_ZN12_GLOBAL__N_113ItaniumCXXABI31EmitLoadOfMemberFunctionPointerERN5clang7CodeGen15CodeGenFunctionEPKNS1_4ExprENS2_7AddressERPN4llvm5ValueESB_PKNS1_17MemberPointerTypeE'/>
<use f='llvm/clang/lib/CodeGen/MicrosoftCXXABI.cpp' l='3347' u='c' c='_ZN12_GLOBAL__N_115MicrosoftCXXABI31EmitLoadOfMemberFunctionPointerERN5clang7CodeGen15CodeGenFunctionEPKNS1_4ExprENS2_7AddressERPN4llvm5ValueESB_PKNS17030457'/>
