<dec f='llvm/clang/include/clang/AST/OpenMPClause.h' l='3486' type='static clang::OMPCopyprivateClause * clang::OMPCopyprivateClause::Create(const clang::ASTContext &amp; C, clang::SourceLocation StartLoc, clang::SourceLocation LParenLoc, clang::SourceLocation EndLoc, ArrayRef&lt;clang::Expr *&gt; VL, ArrayRef&lt;clang::Expr *&gt; SrcExprs, ArrayRef&lt;clang::Expr *&gt; DstExprs, ArrayRef&lt;clang::Expr *&gt; AssignmentOps)'/>
<doc f='llvm/clang/include/clang/AST/OpenMPClause.h' l='3465'>/// Creates clause with a list of variables \a VL.
  ///
  /// \param C AST context.
  /// \param StartLoc Starting location of the clause.
  /// \param LParenLoc Location of &apos;(&apos;.
  /// \param EndLoc Ending location of the clause.
  /// \param VL List of references to the variables.
  /// \param SrcExprs List of helper expressions for proper generation of
  /// assignment operation required for copyprivate clause. This list represents
  /// sources.
  /// \param DstExprs List of helper expressions for proper generation of
  /// assignment operation required for copyprivate clause. This list represents
  /// destinations.
  /// \param AssignmentOps List of helper expressions that represents assignment
  /// operation:
  /// \code
  /// DstExprs = SrcExprs;
  /// \endcode
  /// Required for proper codegen of final assignment performed by the
  /// copyprivate clause.</doc>
<def f='llvm/clang/lib/AST/OpenMPClause.cpp' l='515' ll='527' type='static clang::OMPCopyprivateClause * clang::OMPCopyprivateClause::Create(const clang::ASTContext &amp; C, clang::SourceLocation StartLoc, clang::SourceLocation LParenLoc, clang::SourceLocation EndLoc, ArrayRef&lt;clang::Expr *&gt; VL, ArrayRef&lt;clang::Expr *&gt; SrcExprs, ArrayRef&lt;clang::Expr *&gt; DstExprs, ArrayRef&lt;clang::Expr *&gt; AssignmentOps)'/>
