<dec f='llvm/clang/include/clang/AST/Expr.h' l='455' type='clang::FieldDecl * clang::Expr::getSourceBitField()'/>
<use f='llvm/clang/include/clang/AST/Expr.h' l='458' u='c' c='_ZNK5clang4Expr17getSourceBitFieldEv'/>
<doc f='llvm/clang/include/clang/AST/Expr.h' l='448'>/// If this expression refers to a bit-field, retrieve the
  /// declaration of that bit-field.
  ///
  /// Note that this returns a non-null pointer in subtly different
  /// places than refersToBitField returns true.  In particular, this can
  /// return a non-null pointer even for r-values loaded from
  /// bit-fields, but it will return null for a conditional bit-field.</doc>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='5832' u='c' c='_ZNK5clang10ASTContext20isPromotableBitFieldEPNS_4ExprE'/>
<def f='llvm/clang/lib/AST/Expr.cpp' l='3751' ll='3796' type='clang::FieldDecl * clang::Expr::getSourceBitField()'/>
<use f='llvm/clang/lib/AST/Expr.cpp' l='3780' u='c' c='_ZN5clang4Expr17getSourceBitFieldEv'/>
<use f='llvm/clang/lib/AST/Expr.cpp' l='3785' u='c' c='_ZN5clang4Expr17getSourceBitFieldEv'/>
<use f='llvm/clang/lib/AST/Expr.cpp' l='3788' u='c' c='_ZN5clang4Expr17getSourceBitFieldEv'/>
<use f='llvm/clang/lib/AST/Expr.cpp' l='3793' u='c' c='_ZN5clang4Expr17getSourceBitFieldEv'/>
<use f='llvm/clang/lib/Sema/SemaChecking.cpp' l='10851' u='c' c='_ZL17AnalyzeAssignmentRN5clang4SemaEPNS_14BinaryOperatorE'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='2106' u='c' c='_ZN5clang4Sema19IsIntegralPromotionEPNS_4ExprENS_8QualTypeES3_'/>
