<dec f='llvm/llvm/include/llvm/Transforms/Utils/BuildLibCalls.h' l='164' type='llvm::Value * llvm::emitBinaryFloatFnCall(llvm::Value * Op1, llvm::Value * Op2, llvm::StringRef Name, IRBuilder&lt;&gt; &amp; B, const llvm::AttributeList &amp; Attrs)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/BuildLibCalls.h' l='160'>/// Emit a call to the binary function named &apos;Name&apos; (e.g. &apos;fmin&apos;). This
  /// function is known to take type matching &apos;Op1&apos; and &apos;Op2&apos; and return one
  /// value with the same type. If &apos;Op1/Op2&apos; are long double, &apos;l&apos; is added as
  /// the suffix of name, if &apos;Op1/Op2&apos; are float, we add a &apos;f&apos; suffix.</doc>
<def f='llvm/llvm/lib/Transforms/Utils/BuildLibCalls.cpp' l='1049' ll='1066' type='llvm::Value * llvm::emitBinaryFloatFnCall(llvm::Value * Op1, llvm::Value * Op2, llvm::StringRef Name, IRBuilder&lt;&gt; &amp; B, const llvm::AttributeList &amp; Attrs)'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp' l='1136' u='c' c='_ZL16optimizeDoubleFPPN4llvm8CallInstERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEbb'/>
