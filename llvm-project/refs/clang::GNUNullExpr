<inh f='llvm/clang/include/clang/AST/Expr.h' l='108' c='clang::Expr'/>
<def f='llvm/clang/include/clang/AST/Expr.h' l='4122' ll='4153'/>
<size>24</size>
<doc f='llvm/clang/include/clang/AST/Expr.h' l='4116'>/// GNUNullExpr - Implements the GNU __null extension, which is a name
/// for a null pointer constant that has integral type (e.g., int or
/// long) and is the same size and alignment as a pointer. The __null
/// extension is typically only used by system headers, which define
/// NULL as __null in C++ rather than using 0 (which is an integer
/// that may not match the size of a pointer).</doc>
<mbr r='clang::GNUNullExpr::TokenLoc' o='128' t='clang::SourceLocation'/>
<fun r='_ZN5clang11GNUNullExprC1ENS_8QualTypeENS_14SourceLocationE'/>
<fun r='_ZN5clang11GNUNullExprC1ENS_4Stmt10EmptyShellE'/>
<fun r='_ZNK5clang11GNUNullExpr16getTokenLocationEv'/>
<fun r='_ZN5clang11GNUNullExpr16setTokenLocationENS_14SourceLocationE'/>
<fun r='_ZNK5clang11GNUNullExpr11getBeginLocEv'/>
<fun r='_ZNK5clang11GNUNullExpr9getEndLocEv'/>
<fun r='_ZN5clang11GNUNullExpr7classofEPKNS_4StmtE'/>
<fun r='_ZN5clang11GNUNullExpr8childrenEv'/>
<fun r='_ZNK5clang11GNUNullExpr8childrenEv'/>
