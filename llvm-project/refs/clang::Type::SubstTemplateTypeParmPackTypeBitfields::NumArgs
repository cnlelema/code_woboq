<dec f='llvm/clang/include/clang/AST/Type.h' l='1671' type='unsigned int'/>
<use f='llvm/clang/include/clang/AST/Type.h' l='4764' u='r' c='_ZNK5clang29SubstTemplateTypeParmPackType10getNumArgsEv'/>
<offset>32</offset>
<doc f='llvm/clang/include/clang/AST/Type.h' l='1664'>/// The number of template arguments in \c Arguments, which is
    /// expected to be able to hold at least 1024 according to [implimits].
    /// However as this limit is somewhat easy to hit with template
    /// metaprogramming we&apos;d prefer to keep it as large as possible.
    /// At the moment it has been left as a non-bitfield since this type
    /// safely fits in 64 bits as an unsigned, so there is no reason to
    /// introduce the performance impact of a bitfield.</doc>
<use f='llvm/clang/lib/AST/Type.cpp' l='3431' u='w' c='_ZN5clang29SubstTemplateTypeParmPackTypeC1EPKNS_20TemplateTypeParmTypeENS_8QualTypeERKNS_16TemplateArgumentE'/>
