<def f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='916' ll='921' type='void llvm::IntervalMapImpl::Path::legalizeForInsert(unsigned int Level)'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1761' u='c' c='_ZN4llvm11IntervalMap8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefET_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1811' u='c' c='_ZN4llvm11IntervalMap8iterator10treeInsertET_S2_T0_'/>
<doc f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='911'>/// legalizeForInsert - Prepare the path for an insertion at Level. When the
  /// path is at end(), node(Level) may not be a legal node. legalizeForInsert
  /// ensures that node(Level) is real by moving back to the last node at Level,
  /// and setting offset(Level) to size(Level) if required.
  /// @param Level The level where an insertion is about to take place.</doc>
