<dec f='llvm/clang/include/clang/Lex/Lexer.h' l='704' type='bool clang::Lexer::HandleEndOfConflictMarker(const char * CurPtr)'/>
<def f='llvm/clang/lib/Lex/Lexer.cpp' l='2877' ll='2912' type='bool clang::Lexer::HandleEndOfConflictMarker(const char * CurPtr)'/>
<use f='llvm/clang/lib/Lex/Lexer.cpp' l='3671' u='c' c='_ZN5clang5Lexer16LexTokenInternalERNS_5TokenEb'/>
<use f='llvm/clang/lib/Lex/Lexer.cpp' l='3749' u='c' c='_ZN5clang5Lexer16LexTokenInternalERNS_5TokenEb'/>
<use f='llvm/clang/lib/Lex/Lexer.cpp' l='3783' u='c' c='_ZN5clang5Lexer16LexTokenInternalERNS_5TokenEb'/>
<use f='llvm/clang/lib/Lex/Lexer.cpp' l='3812' u='c' c='_ZN5clang5Lexer16LexTokenInternalERNS_5TokenEb'/>
<doc f='llvm/clang/lib/Lex/Lexer.cpp' l='2873'>/// HandleEndOfConflictMarker - If this is a &apos;====&apos; or &apos;||||&apos; or &apos;&gt;&gt;&gt;&gt;&apos;, or if
/// it is &apos;&lt;&lt;&lt;&lt;&apos; and the conflict marker started with a &apos;&gt;&gt;&gt;&gt;&apos; marker, then it
/// is the end of a conflict marker.  Handle it by ignoring up until the end of
/// the line.  This returns true if it is a conflict marker and false if not.</doc>
