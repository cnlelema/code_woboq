<dec f='llvm/clang/include/clang/Sema/ParsedAttr.h' l='676' type='void clang::AttributeFactory::reclaimPool(clang::AttributePool &amp; head)'/>
<use f='llvm/clang/include/clang/Sema/ParsedAttr.h' l='712' u='c' c='_ZN5clang13AttributePoolD1Ev'/>
<use f='llvm/clang/include/clang/Sema/ParsedAttr.h' l='720' u='c' c='_ZN5clang13AttributePool5clearEv'/>
<doc f='llvm/clang/include/clang/Sema/ParsedAttr.h' l='671'>/// Reclaim all the attributes in the given pool chain, which is
  /// non-empty.  Note that the current implementation is safe
  /// against reclaiming things which were not actually allocated
  /// with the allocator, although of course it&apos;s important to make
  /// sure that their allocator lives at least as long as this one.</doc>
<def f='llvm/clang/lib/Sema/ParsedAttr.cpp' l='93' ll='96' type='void clang::AttributeFactory::reclaimPool(clang::AttributePool &amp; cur)'/>
