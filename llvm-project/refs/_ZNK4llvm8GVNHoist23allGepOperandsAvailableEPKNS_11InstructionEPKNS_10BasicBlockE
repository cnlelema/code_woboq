<def f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='828' ll='845' type='bool llvm::GVNHoist::allGepOperandsAvailable(const llvm::Instruction * I, const llvm::BasicBlock * HoistPt) const'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='835' u='c' c='_ZNK4llvm8GVNHoist23allGepOperandsAvailableEPKNS_11InstructionEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='851' u='c' c='_ZNK4llvm8GVNHoist17makeGepsAvailableEPNS_11InstructionEPNS_10BasicBlockERKNS_11SmallVectorIS2_Lj4EEES2_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='989' u='c' c='_ZNK4llvm8GVNHoist24makeGepOperandsAvailableEPNS_11InstructionEPNS_10BasicBlockERKNS_11SmallVectorIS2_Lj4EEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='997' u='c' c='_ZNK4llvm8GVNHoist24makeGepOperandsAvailableEPNS_11InstructionEPNS_10BasicBlockERKNS_11SmallVectorIS2_Lj4EEE'/>
<doc f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='827'>// Same as allOperandsAvailable with recursive check for GEP operands.</doc>
