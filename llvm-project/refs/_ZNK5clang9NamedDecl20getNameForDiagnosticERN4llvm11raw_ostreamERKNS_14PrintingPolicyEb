<dec f='llvm/clang/include/clang/AST/Decl.h' l='322' type='void clang::NamedDecl::getNameForDiagnostic(llvm::raw_ostream &amp; OS, const clang::PrintingPolicy &amp; Policy, bool Qualified) const'/>
<doc f='llvm/clang/include/clang/AST/Decl.h' l='316'>/// Appends a human-readable name for this declaration into the given stream.
  ///
  /// This is the method invoked by Sema when displaying a NamedDecl
  /// in a diagnostic.  It does not necessarily produce the same
  /// result as printName(); for example, class template
  /// specializations are printed with their template arguments.</doc>
<use f='llvm/clang/lib/AST/ASTDiagnostic.cpp' l='420' u='c' c='_ZN5clang31FormatASTNodeDiagnosticArgumentENS_17DiagnosticsEngine12ArgumentKindElN4llvm9StringRefES3_NS2_8ArrayRefISt4pairIS1_lEEERNS2_15SmallVectorImplIcEEPvNS4_IlEE'/>
<use f='llvm/clang/lib/AST/ASTDiagnostic.cpp' l='459' u='c' c='_ZN5clang31FormatASTNodeDiagnosticArgumentENS_17DiagnosticsEngine12ArgumentKindElN4llvm9StringRefES3_NS2_8ArrayRefISt4pairIS1_lEEERNS2_15SmallVectorImplIcEEPvNS4_IlEE'/>
<use f='llvm/clang/lib/AST/Decl.cpp' l='90' u='c' c='_ZNK5clang25PrettyDeclStackTraceEntry5printERN4llvm11raw_ostreamE'/>
<def f='llvm/clang/lib/AST/Decl.cpp' l='1654' ll='1661' type='void clang::NamedDecl::getNameForDiagnostic(llvm::raw_ostream &amp; OS, const clang::PrintingPolicy &amp; Policy, bool Qualified) const'/>
<ovr f='llvm/clang/lib/AST/Decl.cpp' l='2761' c='_ZNK5clang12FunctionDecl20getNameForDiagnosticERN4llvm11raw_ostreamERKNS_14PrintingPolicyEb'/>
<ovr f='llvm/clang/lib/AST/DeclTemplate.cpp' l='763' c='_ZNK5clang31ClassTemplateSpecializationDecl20getNameForDiagnosticERN4llvm11raw_ostreamERKNS_14PrintingPolicyEb'/>
<ovr f='llvm/clang/lib/AST/DeclTemplate.cpp' l='1079' c='_ZNK5clang29VarTemplateSpecializationDecl20getNameForDiagnosticERN4llvm11raw_ostreamERKNS_14PrintingPolicyEb'/>
<use f='llvm/clang/lib/Frontend/FrontendActions.cpp' l='446' u='c' c='_ZN12_GLOBAL__N_127DefaultTemplateInstCallback17getTemplightEntryERKN5clang4SemaERKNS2_20CodeSynthesisContextE'/>
