<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/RegisterBankInfo.h' l='677' type='const llvm::RegisterBankInfo::InstructionMapping &amp; llvm::RegisterBankInfo::getInstrMapping(const llvm::MachineInstr &amp; MI) const'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/RegBankSelect.cpp' l='630' u='c' c='_ZN4llvm13RegBankSelect11assignInstrERNS_12MachineInstrE'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/RegisterBankInfo.h' l='654'>/// Get the mapping of the different operands of \p MI
  /// on the register bank.
  /// This mapping should be the direct translation of \p MI.
  /// In other words, when \p MI is mapped with the returned mapping,
  /// only the register banks of the operands of \p MI need to be updated.
  /// In particular, neither the opcode nor the type of \p MI needs to be
  /// updated for this direct mapping.
  ///
  /// The target independent implementation gives a mapping based on
  /// the register classes for the target specific opcode.
  /// It uses the ID RegisterBankInfo::DefaultMappingID for that mapping.
  /// Make sure you do not use that ID for the alternative mapping
  /// for MI. See getInstrAlternativeMappings for the alternative
  /// mappings.
  ///
  /// For instance, if \p MI is a vector add, the mapping should
  /// not be a scalarization of the add.
  ///
  /// \post returnedVal.verify(MI).
  ///
  /// \note If returnedVal does not verify MI, this would probably mean
  /// that the target does not support that instruction.</doc>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/RegisterBankInfo.cpp' l='385' ll='391' type='const RegisterBankInfo::InstructionMapping &amp; llvm::RegisterBankInfo::getInstrMapping(const llvm::MachineInstr &amp; MI) const'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/RegisterBankInfo.cpp' l='397' u='c' c='_ZNK4llvm16RegisterBankInfo24getInstrPossibleMappingsERKNS_12MachineInstrE'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64RegisterBankInfo.cpp' l='509' c='_ZNK4llvm23AArch64RegisterBankInfo15getInstrMappingERKNS_12MachineInstrE'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp' l='993' c='_ZNK4llvm22AMDGPURegisterBankInfo15getInstrMappingERKNS_12MachineInstrE'/>
<ovr f='llvm/llvm/lib/Target/ARM/ARMRegisterBankInfo.cpp' l='207' c='_ZNK4llvm19ARMRegisterBankInfo15getInstrMappingERKNS_12MachineInstrE'/>
<ovr f='llvm/llvm/lib/Target/Mips/MipsRegisterBankInfo.cpp' l='95' c='_ZNK4llvm20MipsRegisterBankInfo15getInstrMappingERKNS_12MachineInstrE'/>
<ovr f='llvm/llvm/lib/Target/X86/X86RegisterBankInfo.cpp' l='159' c='_ZNK4llvm19X86RegisterBankInfo15getInstrMappingERKNS_12MachineInstrE'/>
