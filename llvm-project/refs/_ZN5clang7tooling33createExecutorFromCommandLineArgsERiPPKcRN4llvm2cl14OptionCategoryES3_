<dec f='llvm/clang/include/clang/Tooling/Execution.h' l='179' type='llvm::Expected&lt;std::unique_ptr&lt;ToolExecutor&gt; &gt; clang::tooling::createExecutorFromCommandLineArgs(int &amp; argc, const char ** argv, llvm::cl::OptionCategory &amp; Category, const char * Overview = nullptr)'/>
<doc f='llvm/clang/include/clang/Tooling/Execution.h' l='169'>/// This creates a ToolExecutor that is in the global registry based on
/// commandline arguments.
///
/// This picks the right executor based on the `--executor` option. This parses
/// the commandline arguments with `CommonOptionsParser`, so caller does not
/// need to parse again.
///
/// By default, this creates a `StandaloneToolExecutor` (&quot;standalone&quot;) if
/// `--executor` is not provided.</doc>
<def f='llvm/clang/lib/Tooling/Execution.cpp' l='89' ll='95' type='llvm::Expected&lt;std::unique_ptr&lt;ToolExecutor&gt; &gt; clang::tooling::createExecutorFromCommandLineArgs(int &amp; argc, const char ** argv, llvm::cl::OptionCategory &amp; Category, const char * Overview = nullptr)'/>
