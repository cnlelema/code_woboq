<def f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='654' ll='656' type='bool llvm::LazyCallGraph::RefSCC::isDescendantOf(const llvm::LazyCallGraph::RefSCC &amp; RC) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='649'>/// Test if this RefSCC is a descendant of \a RC.
    ///
    /// CAUTION: This method walks the directed graph of edges as far as
    /// necessary to find a possible path from the argument. In the worst case
    /// this may walk the entire graph and can be extremely expensive.</doc>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='334' u='c' c='_ZN12_GLOBAL__N_142LazyCallGraphTest_BasicGraphFormation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='350' u='c' c='_ZN12_GLOBAL__N_142LazyCallGraphTest_BasicGraphFormation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='366' u='c' c='_ZN12_GLOBAL__N_142LazyCallGraphTest_BasicGraphFormation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='631' u='c' c='_ZN12_GLOBAL__N_143LazyCallGraphTest_OutgoingEdgeMutation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='654' u='c' c='_ZN12_GLOBAL__N_143LazyCallGraphTest_OutgoingEdgeMutation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='675' u='c' c='_ZN12_GLOBAL__N_143LazyCallGraphTest_OutgoingEdgeMutation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='696' u='c' c='_ZN12_GLOBAL__N_143LazyCallGraphTest_OutgoingEdgeMutation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='717' u='c' c='_ZN12_GLOBAL__N_143LazyCallGraphTest_OutgoingEdgeMutation_Test8TestBodyEv'/>
