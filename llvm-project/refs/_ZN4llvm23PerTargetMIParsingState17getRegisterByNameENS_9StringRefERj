<dec f='llvm/llvm/include/llvm/CodeGen/MIRParser/MIParser.h' l='103' type='bool llvm::PerTargetMIParsingState::getRegisterByName(llvm::StringRef RegName, unsigned int &amp; Reg)'/>
<def f='llvm/llvm/lib/CodeGen/MIRParser/MIParser.cpp' l='123' ll='131' type='bool llvm::PerTargetMIParsingState::getRegisterByName(llvm::StringRef RegName, unsigned int &amp; Reg)'/>
<use f='llvm/llvm/lib/CodeGen/MIRParser/MIParser.cpp' l='1183' u='c' c='_ZN12_GLOBAL__N_18MIParser18parseNamedRegisterERj'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MIRParser/MIParser.h' l='101'>/// Try to convert a register name to a register number. Return true if the
  /// register name is invalid.</doc>
