<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='822' type='uint32_t llvm::ScalarEvolution::GetMinTrailingZeros(const llvm::SCEV * S)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='818'>/// Determine the minimum number of zero bits that S is guaranteed to end in
  /// (at every loop iteration).  It is, at the same time, the minimum number
  /// of times S is divisible by 2.  For example, given {4,+,8} it returns 2.
  /// If S is guaranteed to be 0, it returns the bitwidth of S.</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='1609' u='c' c='_ZL30extractConstantWithoutWrappingRN4llvm15ScalarEvolutionEPKNS_12SCEVConstantEPKNS_11SCEVAddExprE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='1626' u='c' c='_ZL30extractConstantWithoutWrappingRN4llvm15ScalarEvolutionERKNS_5APIntEPKNS_4SCEVE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5444' u='c' c='_ZN4llvm15ScalarEvolution23GetMinTrailingZerosImplEPKNS_4SCEVE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5448' u='c' c='_ZN4llvm15ScalarEvolution23GetMinTrailingZerosImplEPKNS_4SCEVE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5455' u='c' c='_ZN4llvm15ScalarEvolution23GetMinTrailingZerosImplEPKNS_4SCEVE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5463' u='c' c='_ZN4llvm15ScalarEvolution23GetMinTrailingZerosImplEPKNS_4SCEVE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5465' u='c' c='_ZN4llvm15ScalarEvolution23GetMinTrailingZerosImplEPKNS_4SCEVE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5471' u='c' c='_ZN4llvm15ScalarEvolution23GetMinTrailingZerosImplEPKNS_4SCEVE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5476' u='c' c='_ZN4llvm15ScalarEvolution23GetMinTrailingZerosImplEPKNS_4SCEVE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5482' u='c' c='_ZN4llvm15ScalarEvolution23GetMinTrailingZerosImplEPKNS_4SCEVE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5484' u='c' c='_ZN4llvm15ScalarEvolution23GetMinTrailingZerosImplEPKNS_4SCEVE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5490' u='c' c='_ZN4llvm15ScalarEvolution23GetMinTrailingZerosImplEPKNS_4SCEVE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5492' u='c' c='_ZN4llvm15ScalarEvolution23GetMinTrailingZerosImplEPKNS_4SCEVE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5498' u='c' c='_ZN4llvm15ScalarEvolution23GetMinTrailingZerosImplEPKNS_4SCEVE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5500' u='c' c='_ZN4llvm15ScalarEvolution23GetMinTrailingZerosImplEPKNS_4SCEVE'/>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5514' ll='5523' type='uint32_t llvm::ScalarEvolution::GetMinTrailingZeros(const llvm::SCEV * S)'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5557' u='c' c='_ZN4llvm15ScalarEvolution11getRangeRefEPKNS_4SCEVENS0_13RangeSignHintE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='6280' u='c' c='_ZN4llvm15ScalarEvolution10createSCEVEPNS_5ValueE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='6560' u='c' c='_ZN4llvm15ScalarEvolution28getSmallConstantTripMultipleEPKNS_4LoopEPNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='8357' u='c' c='_ZL28SolveLinEquationWithOverflowRKN4llvm5APIntEPKNS_4SCEVERNS_15ScalarEvolutionE'/>
