<dec f='llvm/llvm/include/llvm/Analysis/AliasAnalysis.h' l='839' type='llvm::AliasResult llvm::AAResults::Concept::alias(const llvm::MemoryLocation &amp; LocA, const llvm::MemoryLocation &amp; LocB, llvm::AAQueryInfo &amp; AAQI)'/>
<ovr f='llvm/llvm/include/llvm/Analysis/AliasAnalysis.h' l='898' c='_ZN4llvm9AAResults5Model5aliasERKNS_14MemoryLocationES4_RNS_11AAQueryInfoE'/>
<doc f='llvm/llvm/include/llvm/Analysis/AliasAnalysis.h' l='831'>//===--------------------------------------------------------------------===//
  /// \name Alias Queries
  /// @{

  /// The main low level interface to the alias analysis implementation.
  /// Returns an AliasResult indicating whether the two pointers are aliased to
  /// each other. This is the interface that must be implemented by specific
  /// alias analysis implementations.</doc>
<use f='llvm/llvm/lib/Analysis/AliasAnalysis.cpp' l='113' u='c' c='_ZN4llvm9AAResults5aliasERKNS_14MemoryLocationES3_RNS_11AAQueryInfoE'/>
