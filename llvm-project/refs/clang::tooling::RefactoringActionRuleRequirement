<def f='llvm/clang/include/clang/Tooling/Refactoring/RefactoringActionRuleRequirements.h' l='36' ll='38'/>
<ovr f='llvm/clang/include/clang/Tooling/Refactoring/RefactoringActionRuleRequirements.h' l='42' c='clang::tooling::SourceSelectionRequirement'/>
<ovr f='llvm/clang/include/clang/Tooling/Refactoring/RefactoringActionRuleRequirements.h' l='81' c='clang::tooling::RefactoringOptionsRequirement'/>
<size>1</size>
<doc f='llvm/clang/include/clang/Tooling/Refactoring/RefactoringActionRuleRequirements.h' l='23'>/// A refactoring action rule requirement determines when a refactoring action
/// rule can be invoked. The rule can be invoked only when all of the
/// requirements are satisfied.
///
/// Subclasses must implement the
/// &apos;Expected&lt;T&gt; evaluate(RefactoringRuleContext &amp;) const&apos; member function.
/// \c T is used to determine the return type that is passed to the
/// refactoring rule&apos;s constructor.
/// For example, the \c SourceRangeSelectionRequirement subclass defines
/// &apos;Expected&lt;SourceRange&gt; evaluate(RefactoringRuleContext &amp;Context) const&apos;
/// function. When this function returns a non-error value, the resulting
/// source range is passed to the specific refactoring action rule
/// constructor (provided all other requirements are satisfied).</doc>
