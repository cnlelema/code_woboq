<dec f='llvm/llvm/include/llvm/FuzzMutate/FuzzerCLI.h' l='50' type='int llvm::runFuzzerOnInputs(int ArgC, char ** ArgV, FuzzerTestFun TestOne, FuzzerInitFun Init = [] (int *, char ***)     {
        return 0;
    }
)'/>
<use f='llvm/clang/tools/clang-fuzzer/DummyClangFuzzer.cpp' l='18' u='c' c='main'/>
<doc f='llvm/llvm/include/llvm/FuzzMutate/FuzzerCLI.h' l='46'>/// Runs a fuzz target on the inputs specified on the command line.
///
/// Useful for testing fuzz targets without linking to libFuzzer. Finds inputs
/// in the argument list in a libFuzzer compatible way.</doc>
<def f='llvm/llvm/lib/FuzzMutate/FuzzerCLI.cpp' l='138' ll='167' type='int llvm::runFuzzerOnInputs(int ArgC, char ** ArgV, FuzzerTestFun TestOne, FuzzerInitFun Init = [] (int *, char ***)     {
        return 0;
    }
)'/>
<use f='llvm/llvm/tools/llvm-isel-fuzzer/DummyISelFuzzer.cpp' l='18' u='c' c='main'/>
<use f='llvm/llvm/tools/llvm-itanium-demangle-fuzzer/DummyDemanglerFuzzer.cpp' l='17' u='c' c='main'/>
<use f='llvm/llvm/tools/llvm-microsoft-demangle-fuzzer/DummyDemanglerFuzzer.cpp' l='17' u='c' c='main'/>
<use f='llvm/llvm/tools/llvm-opt-fuzzer/DummyOptFuzzer.cpp' l='18' u='c' c='main'/>
<use f='llvm/llvm/tools/llvm-special-case-list-fuzzer/DummySpecialCaseListFuzzer.cpp' l='17' u='c' c='main'/>
<use f='llvm/llvm/tools/llvm-yaml-numeric-parser-fuzzer/DummyYAMLNumericParserFuzzer.cpp' l='17' u='c' c='main'/>
