<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1303' type='void llvm::ScalarEvolution::BackedgeTakenInfo::BackedgeTakenInfo(ArrayRef&lt;EdgeExitInfo&gt; ExitCounts, bool Complete, const llvm::SCEV * MaxCount, bool MaxOrZero)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1302'>/// Initialize BackedgeTakenInfo from a list of exact exit counts.</doc>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='6981' ll='7005' type='void llvm::ScalarEvolution::BackedgeTakenInfo::BackedgeTakenInfo(ArrayRef&lt;ScalarEvolution::BackedgeTakenInfo::EdgeExitInfo&gt; ExitCounts, bool Complete, const llvm::SCEV * MaxCount, bool MaxOrZero)'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='7080' u='c' c='_ZN4llvm15ScalarEvolution25computeBackedgeTakenCountEPKNS_4LoopEb'/>
<doc f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='6979'>/// Allocate memory for BackedgeTakenInfo and copy the not-taken count of each
/// computable exit into a persistent ExitNotTakenInfo array.</doc>
