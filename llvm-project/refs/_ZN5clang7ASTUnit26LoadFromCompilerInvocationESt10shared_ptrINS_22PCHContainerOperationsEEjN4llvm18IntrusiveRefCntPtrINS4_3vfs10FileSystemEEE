<dec f='llvm/clang/include/clang/Frontend/ASTUnit.h' l='715' type='bool clang::ASTUnit::LoadFromCompilerInvocation(std::shared_ptr&lt;PCHContainerOperations&gt; PCHContainerOps, unsigned int PrecompilePreambleAfterNParses, IntrusiveRefCntPtr&lt;llvm::vfs::FileSystem&gt; VFS)'/>
<doc f='llvm/clang/include/clang/Frontend/ASTUnit.h' l='701'>/// Helper function for \c LoadFromCompilerInvocation() and
  /// \c LoadFromCommandLine(), which loads an AST from a compiler invocation.
  ///
  /// \param PrecompilePreambleAfterNParses After how many parses the preamble
  /// of this translation unit should be precompiled, to improve the performance
  /// of reparsing. Set to zero to disable preambles.
  ///
  /// \param VFS - A llvm::vfs::FileSystem to be used for all file accesses.
  /// Note that preamble is saved to a temporary directory on a RealFileSystem,
  /// so in order for it to be loaded correctly, VFS should have access to
  /// it(i.e., be an overlay over RealFileSystem).
  ///
  /// \returns \c true if a catastrophic failure occurred (which means that the
  /// \c ASTUnit itself is invalid), or \c false otherwise.</doc>
<def f='llvm/clang/lib/Frontend/ASTUnit.cpp' l='1654' ll='1686' type='bool clang::ASTUnit::LoadFromCompilerInvocation(std::shared_ptr&lt;PCHContainerOperations&gt; PCHContainerOps, unsigned int PrecompilePreambleAfterNParses, IntrusiveRefCntPtr&lt;llvm::vfs::FileSystem&gt; VFS)'/>
<use f='llvm/clang/lib/Frontend/ASTUnit.cpp' l='1718' u='c' c='_ZN5clang7ASTUnit26LoadFromCompilerInvocationESt10shared_ptrINS_18CompilerInvocationEES1_INS_22PCHContainerOperationsEEN4llvm18IntrusiveRefCntPtrINS_110347204'/>
<use f='llvm/clang/lib/Frontend/ASTUnit.cpp' l='1804' u='c' c='_ZN5clang7ASTUnit19LoadFromCommandLineEPPKcS3_St10shared_ptrINS_22PCHContainerOperationsEEN4llvm18IntrusiveRefCntPtrINS_17DiagnosticsEngineEEENS7_9Str13471008'/>
