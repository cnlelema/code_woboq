<use f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='995' u='w' c='_ZN5clang12ast_matchers8internal22matcher_isExpr0MatcherC1ERKNS1_7MatcherINS_4ExprEEE'/>
<dec f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='995' type='const internal::Matcher&lt;Expr&gt;'/>
<use f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='997' u='m' c='_ZNK5clang12ast_matchers8internal22matcher_isExpr0Matcher7matchesERKNS_16TemplateArgumentEPNS1_14ASTMatchFinderEPNS1_21BoundNodesTreeBuilderE'/>
<offset>128</offset>
<doc f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='983'>/// Matches a sugar TemplateArgument that refers to a certain expression.
///
/// Given
/// \code
///   struct B { int next; };
///   template&lt;int(B::*next_ptr)&gt; struct A {};
///   A&lt;&amp;B::next&gt; a;
/// \endcode
/// templateSpecializationType(hasAnyTemplateArgument(
///   isExpr(hasDescendant(declRefExpr(to(fieldDecl(hasName(&quot;next&quot;))))))))
///   matches the specialization \c A&lt;&amp;B::next&gt; with \c fieldDecl(...) matching
///     \c B::next</doc>
