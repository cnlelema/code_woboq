<use f='llvm/llvm/include/llvm/ADT/IntEqClasses.h' l='41' u='c' c='_ZN4llvm12IntEqClassesC1Ej'/>
<dec f='llvm/llvm/include/llvm/ADT/IntEqClasses.h' l='46' type='void llvm::IntEqClasses::grow(unsigned int N)'/>
<doc f='llvm/llvm/include/llvm/ADT/IntEqClasses.h' l='43'>/// grow - Increase capacity to hold 0 .. N-1, putting new integers in unique
  /// equivalence classes.
  /// This requires an uncompressed map.</doc>
<use f='llvm/llvm/lib/CodeGen/EdgeBundles.cpp' l='42' u='c' c='_ZN4llvm11EdgeBundles20runOnMachineFunctionERNS_15MachineFunctionE'/>
<use f='llvm/llvm/lib/CodeGen/LiveInterval.cpp' l='1311' u='c' c='_ZN4llvm24ConnectedVNInfoEqClasses8ClassifyERKNS_9LiveRangeE'/>
<use f='llvm/llvm/lib/CodeGen/RenameIndependentSubregs.cpp' l='176' u='c' c='_ZNK12_GLOBAL__N_124RenameIndependentSubregs14findComponentsERN4llvm12IntEqClassesERNS1_15SmallVectorImplINS0_12SubRangeInfoEEERNS1_12LiveIntervalE'/>
<def f='llvm/llvm/lib/Support/IntEqClasses.cpp' l='24' ll='29' type='void llvm::IntEqClasses::grow(unsigned int N)'/>
