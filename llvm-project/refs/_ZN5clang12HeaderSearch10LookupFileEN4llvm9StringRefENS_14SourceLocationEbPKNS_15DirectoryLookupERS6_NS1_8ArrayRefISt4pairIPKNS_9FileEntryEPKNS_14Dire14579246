<dec f='llvm/clang/include/clang/Lex/HeaderSearch.h' l='398' type='const clang::FileEntry * clang::HeaderSearch::LookupFile(llvm::StringRef Filename, clang::SourceLocation IncludeLoc, bool isAngled, const clang::DirectoryLookup * FromDir, const clang::DirectoryLookup *&amp; CurDir, ArrayRef&lt;std::pair&lt;const FileEntry *, const DirectoryEntry *&gt; &gt; Includers, SmallVectorImpl&lt;char&gt; * SearchPath, SmallVectorImpl&lt;char&gt; * RelativePath, clang::Module * RequestingModule, ModuleMap::KnownHeader * SuggestedModule, bool * IsMapped, bool * IsFrameworkFound, bool SkipCache = false, bool BuildSystemModule = false)'/>
<doc f='llvm/clang/include/clang/Lex/HeaderSearch.h' l='363'>/// Given a &quot;foo&quot; or \&lt;foo&gt; reference, look up the indicated file,
  /// return null on failure.
  ///
  /// \returns If successful, this returns &apos;UsedDir&apos;, the DirectoryLookup member
  /// the file was found in, or null if not applicable.
  ///
  /// \param IncludeLoc Used for diagnostics if valid.
  ///
  /// \param isAngled indicates whether the file reference is a &lt;&gt; reference.
  ///
  /// \param CurDir If non-null, the file was found in the specified directory
  /// search location.  This is used to implement \#include_next.
  ///
  /// \param Includers Indicates where the \#including file(s) are, in case
  /// relative searches are needed. In reverse order of inclusion.
  ///
  /// \param SearchPath If non-null, will be set to the search path relative
  /// to which the file was found. If the include path is absolute, SearchPath
  /// will be set to an empty string.
  ///
  /// \param RelativePath If non-null, will be set to the path relative to
  /// SearchPath at which the file was found. This only differs from the
  /// Filename for framework includes.
  ///
  /// \param SuggestedModule If non-null, and the file found is semantically
  /// part of a known module, this will be set to the module that should
  /// be imported instead of preprocessing/parsing the file found.
  ///
  /// \param IsMapped If non-null, and the search involved header maps, set to
  /// true.
  ///
  /// \param IsFrameworkFound If non-null, will be set to true if a framework is
  /// found in any of searched SearchDirs. Will be set to false if a framework
  /// is found only through header maps. Doesn&apos;t guarantee the requested file is
  /// found.</doc>
<use f='llvm/clang/lib/Frontend/FrontendActions.cpp' l='289' u='c' c='_ZN5clang26GenerateHeaderModuleAction21BeginSourceFileActionERNS_16CompilerInstanceE'/>
<use f='llvm/clang/lib/Frontend/Rewrite/InclusionRewriter.cpp' l='415' u='c' c='_ZN12_GLOBAL__N_117InclusionRewriter16HandleHasIncludeEN5clang6FileIDERNS1_5LexerEPKNS1_15DirectoryLookupERNS1_5TokenERb'/>
<def f='llvm/clang/lib/Lex/HeaderSearch.cpp' l='695' ll='968' type='const clang::FileEntry * clang::HeaderSearch::LookupFile(llvm::StringRef Filename, clang::SourceLocation IncludeLoc, bool isAngled, const clang::DirectoryLookup * FromDir, const clang::DirectoryLookup *&amp; CurDir, ArrayRef&lt;std::pair&lt;const FileEntry *, const DirectoryEntry *&gt; &gt; Includers, SmallVectorImpl&lt;char&gt; * SearchPath, SmallVectorImpl&lt;char&gt; * RelativePath, clang::Module * RequestingModule, ModuleMap::KnownHeader * SuggestedModule, bool * IsMapped, bool * IsFrameworkFound, bool SkipCache = false, bool BuildSystemModule = false)'/>
<use f='llvm/clang/lib/Lex/HeaderSearch.cpp' l='941' u='c' c='_ZN5clang12HeaderSearch10LookupFileEN4llvm9StringRefENS_14SourceLocationEbPKNS_15DirectoryLookupERS6_NS1_8ArrayRefISt4pairIPKNS_9FileEntryEPKNS_14Dire14579246'/>
<doc f='llvm/clang/lib/Lex/HeaderSearch.cpp' l='690'>/// LookupFile - Given a &quot;foo&quot; or \&lt;foo&gt; reference, look up the indicated file,
/// return null on failure.  isAngled indicates whether the file reference is
/// for system \#include&apos;s or not (i.e. using &lt;&gt; instead of &quot;&quot;). Includers, if
/// non-empty, indicates where the \#including file(s) are, in case a relative
/// search is needed. Microsoft mode will pass all \#including files.</doc>
<use f='llvm/clang/lib/Lex/PPDirectives.cpp' l='742' u='c' c='_ZN5clang12Preprocessor10LookupFileENS_14SourceLocationEN4llvm9StringRefEbPKNS_15DirectoryLookupEPKNS_9FileEntryERS6_PNS2_15SmallVectorImplIcEESD_PNS_3223316'/>
<use f='llvm/clang/lib/Lex/PPDirectives.cpp' l='760' u='c' c='_ZN5clang12Preprocessor10LookupFileENS_14SourceLocationEN4llvm9StringRefEbPKNS_15DirectoryLookupEPKNS_9FileEntryERS6_PNS2_15SmallVectorImplIcEESD_PNS_3223316'/>
