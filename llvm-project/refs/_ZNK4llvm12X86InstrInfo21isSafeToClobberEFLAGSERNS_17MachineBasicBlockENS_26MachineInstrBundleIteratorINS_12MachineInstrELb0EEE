<def f='llvm/llvm/lib/Target/X86/X86InstrInfo.h' l='418' ll='422' type='bool llvm::X86InstrInfo::isSafeToClobberEFLAGS(llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator I) const'/>
<doc f='llvm/llvm/lib/Target/X86/X86InstrInfo.h' l='414'>/// isSafeToClobberEFLAGS - Return true if it&apos;s safe insert an instruction tha
  /// would clobber the EFLAGS condition register. Note the result may be
  /// conservative. If it cannot definitely determine the safety after visiting
  /// a few instructions in each direction it assumes it&apos;s not safe.</doc>
<use f='llvm/llvm/lib/Target/X86/X86FixupLEAs.cpp' l='369' u='c' c='_ZNK12_GLOBAL__N_112FixupLEAPass13optTwoAddrLEAERN4llvm26MachineInstrBundleIteratorINS1_12MachineInstrELb0EEERNS1_17MachineBasicBlockEbb'/>
<use f='llvm/llvm/lib/Target/X86/X86FixupLEAs.cpp' l='498' u='c' c='_ZN12_GLOBAL__N_112FixupLEAPass28processInstructionForSlowLEAERN4llvm26MachineInstrBundleIteratorINS1_12MachineInstrELb0EEERNS1_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='597' u='c' c='_ZNK4llvm12X86InstrInfo13reMaterializeERNS_17MachineBasicBlockENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEEjjRKS4_RKNS_18TargetRegisterInfoE'/>
