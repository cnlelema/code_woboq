<dec f='llvm/llvm/include/llvm/IR/LegacyPassManagers.h' l='421' type='void llvm::PMDataManager::emitInstrCountChangedRemark(llvm::Pass * P, llvm::Module &amp; M, int64_t Delta, unsigned int CountBefore, StringMap&lt;std::pair&lt;unsigned int, unsigned int&gt; &gt; &amp; FunctionToInstrCount, llvm::Function * F = nullptr)'/>
<doc f='llvm/llvm/include/llvm/IR/LegacyPassManagers.h' l='412'>/// Emit a remark signifying that the number of IR instructions in the module
  /// changed.
  /// \p F is optionally passed by passes which run on Functions, and thus
  /// always know whether or not a non-empty function is available.
  ///
  /// \p FunctionToInstrCount maps the name of a \p Function to a pair. The
  /// first member of the pair is the IR count of the \p Function before running
  /// \p P, and the second member is the IR count of the \p Function after
  /// running \p P.</doc>
<use f='llvm/llvm/lib/Analysis/CallGraphSCCPass.cpp' l='149' u='c' c='_ZN12_GLOBAL__N_113CGPassManager12RunPassOnSCCEPN4llvm4PassERNS1_12CallGraphSCCERNS1_9CallGraphERbS8_'/>
<use f='llvm/llvm/lib/Analysis/LoopPass.cpp' l='234' u='c' c='_ZN4llvm13LPPassManager13runOnFunctionERNS_8FunctionE'/>
<def f='llvm/llvm/lib/IR/LegacyPassManager.cpp' l='165' ll='285' type='void llvm::PMDataManager::emitInstrCountChangedRemark(llvm::Pass * P, llvm::Module &amp; M, int64_t Delta, unsigned int CountBefore, StringMap&lt;std::pair&lt;unsigned int, unsigned int&gt; &gt; &amp; FunctionToInstrCount, llvm::Function * F = nullptr)'/>
<use f='llvm/llvm/lib/IR/LegacyPassManager.cpp' l='1416' u='c' c='_ZN12_GLOBAL__N_113BBPassManager13runOnFunctionERN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/IR/LegacyPassManager.cpp' l='1659' u='c' c='_ZN4llvm13FPPassManager13runOnFunctionERNS_8FunctionE'/>
<use f='llvm/llvm/lib/IR/LegacyPassManager.cpp' l='1761' u='c' c='_ZN12_GLOBAL__N_113MPPassManager11runOnModuleERN4llvm6ModuleE'/>
