<dec f='llvm/lld/wasm/InputChunks.h' l='158' type='void lld::wasm::InputFunction::calculateSize()'/>
<doc f='llvm/lld/wasm/InputChunks.h' l='154'>// The size of a given input function can depend on the values of the
  // LEB relocations within it.  This finalizeContents method is called after
  // all the symbol values have be calcualted but before getSize() is ever
  // called.</doc>
<def f='llvm/lld/wasm/InputChunks.cpp' l='232' ll='263' type='void lld::wasm::InputFunction::calculateSize()'/>
<doc f='llvm/lld/wasm/InputChunks.cpp' l='222'>// Relocations of type LEB and SLEB in the code section are padded to 5 bytes
// so that a fast linker can blindly overwrite them without needing to worry
// about the number of bytes needed to encode the values.
// However, for optimal output the code section can be compressed to remove
// the padding then outputting non-relocatable files.
// In this case we need to perform a size calculation based on the value at each
// relocation.  At best we end up saving 4 bytes for each relocation entry.
//
// This function only computes the final output size.  It must be called
// before getSize() is used to calculate of layout of the code section.</doc>
<use f='llvm/lld/wasm/OutputSections.cpp' l='90' u='c' c='_ZN3lld4wasm11CodeSection16finalizeContentsEv'/>
