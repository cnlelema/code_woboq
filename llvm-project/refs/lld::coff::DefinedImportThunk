<inh f='llvm/lld/COFF/Symbols.h' l='118' c='lld::coff::Defined'/>
<def f='llvm/lld/COFF/Symbols.h' l='324' ll='339'/>
<size>32</size>
<doc f='llvm/lld/COFF/Symbols.h' l='319'>// This class represents a symbol for a jump table entry which jumps
// to a function in a DLL. Linker are supposed to create such symbols
// without &quot;__imp_&quot; prefix for all function symbols exported from
// DLLs, so that you can call DLL functions as regular functions with
// a regular name. A function pointer is given as a DefinedImportData.</doc>
<fun r='_ZN3lld4coff18DefinedImportThunkC1EN4llvm9StringRefEPNS0_17DefinedImportDataEt'/>
<fun r='_ZN3lld4coff18DefinedImportThunk7classofEPKNS0_6SymbolE'/>
<fun r='_ZN3lld4coff18DefinedImportThunk6getRVAEv'/>
<fun r='_ZN3lld4coff18DefinedImportThunk8getChunkEv'/>
<mbr r='lld::coff::DefinedImportThunk::WrappedSym' o='128' t='lld::coff::DefinedImportData *'/>
<mbr r='lld::coff::DefinedImportThunk::Data' o='192' t='lld::coff::Chunk *'/>
