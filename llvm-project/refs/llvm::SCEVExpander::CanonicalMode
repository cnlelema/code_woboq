<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolutionExpander.h' l='83' type='bool'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolutionExpander.h' l='144' u='w' c='_ZN4llvm12SCEVExpanderC1ERNS_15ScalarEvolutionERKNS_10DataLayoutEPKc'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolutionExpander.h' l='237' u='r' c='_ZN4llvm12SCEVExpander17setIVIncInsertPosEPKNS_4LoopEPNS_11InstructionE'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolutionExpander.h' l='246' u='r' c='_ZN4llvm12SCEVExpander10setPostIncERKNS_11SmallPtrSetIPKNS_4LoopELj2EEE'/>
<use f='llvm/llvm/include/llvm/Analysis/ScalarEvolutionExpander.h' l='263' u='w' c='_ZN4llvm12SCEVExpander20disableCanonicalModeEv'/>
<offset>2048</offset>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolutionExpander.h' l='80'>/// When true, expressions are expanded in &quot;canonical&quot; form. In particular,
    /// addrecs are expanded as arithmetic based on a canonical induction
    /// variable. When false, expression are expanded in a more literal form.</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolutionExpander.cpp' l='1487' u='r' c='_ZN4llvm12SCEVExpander15visitAddRecExprEPKNS_14SCEVAddRecExprE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolutionExpander.cpp' l='1774' u='r' c='_ZN4llvm12SCEVExpander23FindValueInExprValueMapEPKNS_4SCEVEPKNS_11InstructionE'/>
