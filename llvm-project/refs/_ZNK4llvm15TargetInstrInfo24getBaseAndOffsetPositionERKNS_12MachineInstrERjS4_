<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1163' ll='1167' type='bool llvm::TargetInstrInfo::getBaseAndOffsetPosition(const llvm::MachineInstr &amp; MI, unsigned int &amp; BasePos, unsigned int &amp; OffsetPos) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='1160'>/// Return true if the instruction contains a base register and offset. If
  /// true, the function also sets the operand position in the instruction
  /// for the base register and offset.</doc>
<use f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='2942' u='c' c='_ZN4llvm17SwingSchedulerDAG19cloneAndChangeInstrEPNS_12MachineInstrEjjRNS_10SMScheduleE'/>
<use f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='3146' u='c' c='_ZN4llvm17SwingSchedulerDAG21canUseLastOffsetValueEPNS_12MachineInstrERjS3_S3_Rl'/>
<use f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='3169' u='c' c='_ZN4llvm17SwingSchedulerDAG21canUseLastOffsetValueEPNS_12MachineInstrERjS3_S3_Rl'/>
<use f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='3201' u='c' c='_ZN4llvm17SwingSchedulerDAG16applyInstrChangeEPNS_12MachineInstrERNS_10SMScheduleE'/>
<use f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='3505' u='c' c='_ZN4llvm10SMSchedule15orderDependenceEPNS_17SwingSchedulerDAGEPNS_5SUnitERSt5dequeIS4_SaIS4_EE'/>
<use f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='3793' u='c' c='_ZN4llvm17SwingSchedulerDAG21fixupRegisterOverlapsERSt5dequeIPNS_5SUnitESaIS3_EE'/>
