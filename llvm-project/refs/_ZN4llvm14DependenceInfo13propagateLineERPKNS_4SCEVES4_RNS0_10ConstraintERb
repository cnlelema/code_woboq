<dec f='llvm/llvm/include/llvm/Analysis/DependenceAnalysis.h' l='892' type='bool llvm::DependenceInfo::propagateLine(const llvm::SCEV *&amp; Src, const llvm::SCEV *&amp; Dst, llvm::DependenceInfo::Constraint &amp; CurConstraint, bool &amp; Consistent)'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3078' u='c' c='_ZN4llvm14DependenceInfo9propagateERPKNS_4SCEVES4_RNS_14SmallBitVectorERNS_15SmallVectorImplINS0_10ConstraintEEERb'/>
<def f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3117' ll='3186' type='bool llvm::DependenceInfo::propagateLine(const llvm::SCEV *&amp; Src, const llvm::SCEV *&amp; Dst, llvm::DependenceInfo::Constraint &amp; CurConstraint, bool &amp; Consistent)'/>
<doc f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3112'>// Attempt to propagate a line
// constraint into a subscript pair (Src and Dst).
// Return true if some simplification occurs.
// If the simplification isn&apos;t exact (that is, if it is conservative
// in terms of dependence), set consistent to false.</doc>
<doc f='llvm/llvm/include/llvm/Analysis/DependenceAnalysis.h' l='887'>/// propagateLine - Attempt to propagate a line
    /// constraint into a subscript pair (Src and Dst).
    /// Return true if some simplification occurs.
    /// If the simplification isn&apos;t exact (that is, if it is conservative
    /// in terms of dependence), set consistent to false.</doc>
