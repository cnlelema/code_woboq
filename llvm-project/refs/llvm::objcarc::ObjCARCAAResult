<inh f='llvm/llvm/include/llvm/Analysis/AliasAnalysis.h' l='944' c='llvm::AAResultBase'/>
<def f='llvm/llvm/include/llvm/Analysis/ObjCARCAliasAnalysis.h' l='37' ll='66'/>
<size>16</size>
<doc f='llvm/llvm/include/llvm/Analysis/ObjCARCAliasAnalysis.h' l='31'>/// This is a simple alias analysis implementation that uses knowledge
/// of ARC constructs to answer queries.
///
/// TODO: This class could be generalized to know about other ObjC-specific
/// tricks. Such as knowing that ivars in the non-fragile ABI are non-aliasing
/// even though their offsets are dynamic.</doc>
<mbr r='llvm::objcarc::ObjCARCAAResult::DL' o='64' t='const llvm::DataLayout &amp;'/>
<fun r='_ZN4llvm7objcarc15ObjCARCAAResultC1ERKNS_10DataLayoutE'/>
<fun r='_ZN4llvm7objcarc15ObjCARCAAResultC1EOS1_'/>
<fun r='_ZN4llvm7objcarc15ObjCARCAAResult10invalidateERNS_8FunctionERKNS_17PreservedAnalysesERNS_15AnalysisManagerIS2_JEE11InvalidatorE'/>
<fun r='_ZN4llvm7objcarc15ObjCARCAAResult5aliasERKNS_14MemoryLocationES4_RNS_11AAQueryInfoE'/>
<fun r='_ZN4llvm7objcarc15ObjCARCAAResult22pointsToConstantMemoryERKNS_14MemoryLocationERNS_11AAQueryInfoEb'/>
<fun r='_ZN4llvm7objcarc15ObjCARCAAResult17getModRefBehaviorEPKNS_8FunctionE'/>
<fun r='_ZN4llvm7objcarc15ObjCARCAAResult13getModRefInfoEPKNS_8CallBaseERKNS_14MemoryLocationERNS_11AAQueryInfoE'/>
