<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='667' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildLoadInstr(unsigned int Opcode, unsigned int Res, unsigned int Addr, llvm::MachineMemOperand &amp; MMO)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='658'>/// Build and insert `Res = &lt;opcode&gt; Addr, MMO`.
  ///
  /// Loads the value stored at \p Addr. Puts the result in \p Res.
  ///
  /// \pre setBasicBlock or setMI must have been called.
  /// \pre \p Res must be a generic virtual register.
  /// \pre \p Addr must be a generic virtual register with pointer type.
  ///
  /// \return a MachineInstrBuilder for the newly created instruction.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='337' u='c' c='_ZN4llvm16MachineIRBuilder9buildLoadEjjRNS_17MachineMemOperandE'/>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='340' ll='351' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildLoadInstr(unsigned int Opcode, unsigned int Res, unsigned int Addr, llvm::MachineMemOperand &amp; MMO)'/>
