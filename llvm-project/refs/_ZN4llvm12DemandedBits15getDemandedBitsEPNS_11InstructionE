<dec f='llvm/llvm/include/llvm/Analysis/DemandedBits.h' l='54' type='llvm::APInt llvm::DemandedBits::getDemandedBits(llvm::Instruction * I)'/>
<def f='llvm/llvm/lib/Analysis/DemandedBits.cpp' l='419' ll='429' type='llvm::APInt llvm::DemandedBits::getDemandedBits(llvm::Instruction * I)'/>
<doc f='llvm/llvm/include/llvm/Analysis/DemandedBits.h' l='45'>/// Return the bits demanded from instruction I.
  ///
  /// For vector instructions individual vector elements are not distinguished:
  /// A bit is demanded if it is demanded for any of the vector elements. The
  /// size of the return value corresponds to the type size in bits of the
  /// scalar type.
  ///
  /// Instructions that do not have integer or vector of integer type are
  /// accepted, but will always produce a mask with all bits set.</doc>
<use f='llvm/llvm/lib/Analysis/IVDescriptors.cpp' l='126' u='c' c='_ZL21computeRecurrenceTypePN4llvm11InstructionEPNS_12DemandedBitsEPNS_15AssumptionCacheEPNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Analysis/VectorUtils.cpp' l='421' u='c' c='_ZN4llvm24computeMinimumValueSizesENS_8ArrayRefIPNS_10BasicBlockEEERNS_12DemandedBitsEPKNS_19TargetTransformInfoE'/>
<use f='llvm/llvm/lib/Analysis/VectorUtils.cpp' l='424' u='c' c='_ZN4llvm24computeMinimumValueSizesENS_8ArrayRefIPNS_10BasicBlockEEERNS_12DemandedBitsEPKNS_19TargetTransformInfoE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/BDCE.cpp' l='51' u='c' c='_ZL23clearAssumptionsOfUsersPN4llvm11InstructionERNS_12DemandedBitsE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/BDCE.cpp' l='82' u='c' c='_ZL23clearAssumptionsOfUsersPN4llvm11InstructionERNS_12DemandedBitsE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/BDCE.cpp' l='102' u='c' c='_ZL14bitTrackingDCERN4llvm8FunctionERNS_12DemandedBitsE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='4844' u='c' c='_ZN4llvm13slpvectorizer7BoUpSLP24computeMinimumValueSizesEv'/>
