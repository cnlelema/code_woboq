<dec f='llvm/llvm/include/llvm/MC/MCSectionMachO.h' l='71' type='static std::string llvm::MCSectionMachO::ParseSectionSpecifier(llvm::StringRef Spec, llvm::StringRef &amp; Segment, llvm::StringRef &amp; Section, unsigned int &amp; TAA, bool &amp; TAAParsed, unsigned int &amp; StubSize)'/>
<use f='llvm/clang/lib/Basic/Targets/OSTargets.h' l='122' u='c' c='_ZNK5clang7targets16DarwinTargetInfo23isValidSectionSpecifierEN4llvm9StringRefE'/>
<doc f='llvm/llvm/include/llvm/MC/MCSectionMachO.h' l='65'>/// Parse the section specifier indicated by &quot;Spec&quot;. This is a string that can
  /// appear after a .section directive in a mach-o flavored .s file.  If
  /// successful, this fills in the specified Out parameters and returns an
  /// empty string.  When an invalid section specifier is present, this returns
  /// a string indicating the problem. If no TAA was parsed, TAA is not altered,
  /// and TAAWasSet becomes false.</doc>
<doc f='llvm/llvm/include/llvm/MC/MCSectionMachO.h' l='71'>// In.</doc>
<use f='llvm/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp' l='902' u='c' c='_ZNK4llvm29TargetLoweringObjectFileMachO18emitModuleMetadataERNS_10MCStreamerERNS_6ModuleE'/>
<use f='llvm/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp' l='939' u='c' c='_ZNK4llvm29TargetLoweringObjectFileMachO24getExplicitSectionGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE'/>
<use f='llvm/llvm/lib/MC/MCParser/DarwinAsmParser.cpp' l='693' u='c' c='_ZN12_GLOBAL__N_115DarwinAsmParser21parseDirectiveSectionEN4llvm9StringRefENS1_5SMLocE'/>
<def f='llvm/llvm/lib/MC/MCSectionMachO.cpp' l='182' ll='281' type='static std::string llvm::MCSectionMachO::ParseSectionSpecifier(llvm::StringRef Spec, llvm::StringRef &amp; Segment, llvm::StringRef &amp; Section, unsigned int &amp; TAA, bool &amp; TAAParsed, unsigned int &amp; StubSize)'/>
<doc f='llvm/llvm/lib/MC/MCSectionMachO.cpp' l='177'>/// ParseSectionSpecifier - Parse the section specifier indicated by &quot;Spec&quot;.
/// This is a string that can appear after a .section directive in a mach-o
/// flavored .s file.  If successful, this fills in the specified Out
/// parameters and returns an empty string.  When an invalid section
/// specifier is present, this returns a string indicating the problem.</doc>
<doc f='llvm/llvm/lib/MC/MCSectionMachO.cpp' l='182'>// In.</doc>
<use f='llvm/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp' l='1868' u='c' c='_ZN12_GLOBAL__N_122ModuleAddressSanitizer22ShouldInstrumentGlobalEPN4llvm14GlobalVariableE'/>
