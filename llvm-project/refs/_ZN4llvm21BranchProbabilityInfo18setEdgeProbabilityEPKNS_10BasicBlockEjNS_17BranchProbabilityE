<dec f='llvm/llvm/include/llvm/Analysis/BranchProbabilityInfo.h' l='125' type='void llvm::BranchProbabilityInfo::setEdgeProbability(const llvm::BasicBlock * Src, unsigned int IndexInSuccessors, llvm::BranchProbability Prob)'/>
<doc f='llvm/llvm/include/llvm/Analysis/BranchProbabilityInfo.h' l='119'>/// Set the raw edge probability for the given edge.
  ///
  /// This allows a pass to explicitly set the edge probability for an edge. It
  /// can be used when updating the CFG to update and preserve the branch
  /// probability information. Read the implementation of how these edge
  /// probabilities are calculated carefully before using!</doc>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='226' u='c' c='_ZN4llvm21BranchProbabilityInfo25calcUnreachableHeuristicsEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='236' u='c' c='_ZN4llvm21BranchProbabilityInfo25calcUnreachableHeuristicsEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='238' u='c' c='_ZN4llvm21BranchProbabilityInfo25calcUnreachableHeuristicsEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='336' u='c' c='_ZN4llvm21BranchProbabilityInfo19calcMetadataWeightsEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='372' u='c' c='_ZN4llvm21BranchProbabilityInfo22calcColdCallHeuristicsEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='384' u='c' c='_ZN4llvm21BranchProbabilityInfo22calcColdCallHeuristicsEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='386' u='c' c='_ZN4llvm21BranchProbabilityInfo22calcColdCallHeuristicsEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='421' u='c' c='_ZN4llvm21BranchProbabilityInfo21calcPointerHeuristicsEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='422' u='c' c='_ZN4llvm21BranchProbabilityInfo21calcPointerHeuristicsEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='623' u='c' c='_ZN4llvm21BranchProbabilityInfo24calcLoopBranchHeuristicsEPKNS_10BasicBlockERKNS_8LoopInfoERNS0_7SccInfoE'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='630' u='c' c='_ZN4llvm21BranchProbabilityInfo24calcLoopBranchHeuristicsEPKNS_10BasicBlockERKNS_8LoopInfoERNS0_7SccInfoE'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='638' u='c' c='_ZN4llvm21BranchProbabilityInfo24calcLoopBranchHeuristicsEPKNS_10BasicBlockERKNS_8LoopInfoERNS0_7SccInfoE'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='646' u='c' c='_ZN4llvm21BranchProbabilityInfo24calcLoopBranchHeuristicsEPKNS_10BasicBlockERKNS_8LoopInfoERNS0_7SccInfoE'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='766' u='c' c='_ZN4llvm21BranchProbabilityInfo18calcZeroHeuristicsEPKNS_10BasicBlockEPKNS_17TargetLibraryInfoE'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='767' u='c' c='_ZN4llvm21BranchProbabilityInfo18calcZeroHeuristicsEPKNS_10BasicBlockEPKNS_17TargetLibraryInfoE'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='803' u='c' c='_ZN4llvm21BranchProbabilityInfo27calcFloatingPointHeuristicsEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='804' u='c' c='_ZN4llvm21BranchProbabilityInfo27calcFloatingPointHeuristicsEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='815' u='c' c='_ZN4llvm21BranchProbabilityInfo20calcInvokeHeuristicsEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='816' u='c' c='_ZN4llvm21BranchProbabilityInfo20calcInvokeHeuristicsEPKNS_10BasicBlockE'/>
<def f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='907' ll='915' type='void llvm::BranchProbabilityInfo::setEdgeProbability(const llvm::BasicBlock * Src, unsigned int IndexInSuccessors, llvm::BranchProbability Prob)'/>
<doc f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='905'>/// Set the edge probability for a given edge specified by PredBlock and an
/// index to the successors.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2187' u='c' c='_ZN4llvm17JumpThreadingPass28UpdateBlockFreqAndEdgeWeightEPNS_10BasicBlockES2_S2_S2_'/>
<use f='llvm/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp' l='395' u='c' c='_ZN4llvm28SplitIndirectBrCriticalEdgesERNS_8FunctionEPNS_21BranchProbabilityInfoEPNS_18BlockFrequencyInfoE'/>
<use f='llvm/llvm/lib/Transforms/Utils/CodeExtractor.cpp' l='1288' u='c' c='_ZN4llvm13CodeExtractor33calculateNewCallTerminatorWeightsEPNS_10BasicBlockERNS_8DenseMapIS2_NS_14BlockFrequencyENS_12DenseMapInfoIS2_EENS_6detail12De2699329'/>
<use f='llvm/llvm/lib/Transforms/Utils/CodeExtractor.cpp' l='1305' u='c' c='_ZN4llvm13CodeExtractor33calculateNewCallTerminatorWeightsEPNS_10BasicBlockERNS_8DenseMapIS2_NS_14BlockFrequencyENS_12DenseMapInfoIS2_EENS_6detail12De2699329'/>
