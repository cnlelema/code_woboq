<dec f='llvm/llvm/utils/TableGen/X86RecognizableInstr.h' l='257' type='static llvm::X86Disassembler::OperandEncoding llvm::X86Disassembler::RecognizableInstr::rmRegisterEncodingFromString(const std::string &amp; s, uint8_t OpSize)'/>
<doc f='llvm/llvm/utils/TableGen/X86RecognizableInstr.h' l='255'>/// rmRegisterEncodingFromString - Like immediateEncodingFromString, but
  ///   handles operands that are in the REG field of the ModR/M byte.</doc>
<use f='llvm/llvm/utils/TableGen/X86RecognizableInstr.cpp' l='507' macro='1' u='r'/>
<use f='llvm/llvm/utils/TableGen/X86RecognizableInstr.cpp' l='562' macro='1' u='r'/>
<use f='llvm/llvm/utils/TableGen/X86RecognizableInstr.cpp' l='570' macro='1' u='r'/>
<use f='llvm/llvm/utils/TableGen/X86RecognizableInstr.cpp' l='579' macro='1' u='r'/>
<use f='llvm/llvm/utils/TableGen/X86RecognizableInstr.cpp' l='586' macro='1' u='r'/>
<use f='llvm/llvm/utils/TableGen/X86RecognizableInstr.cpp' l='639' macro='1' u='r'/>
<use f='llvm/llvm/utils/TableGen/X86RecognizableInstr.cpp' l='663' macro='1' u='r'/>
<def f='llvm/llvm/utils/TableGen/X86RecognizableInstr.cpp' l='996' ll='1032' type='static llvm::X86Disassembler::OperandEncoding llvm::X86Disassembler::RecognizableInstr::rmRegisterEncodingFromString(const std::string &amp; s, uint8_t OpSize)'/>
