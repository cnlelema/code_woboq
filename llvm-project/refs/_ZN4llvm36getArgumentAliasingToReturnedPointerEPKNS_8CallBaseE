<dec f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='301' type='const llvm::Value * llvm::getArgumentAliasingToReturnedPointer(const llvm::CallBase * Call)'/>
<use f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='303' u='c' c='_ZN4llvm36getArgumentAliasingToReturnedPointerEPNS_8CallBaseE'/>
<doc f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='299'>/// This function returns call pointer argument that is considered the same by
  /// aliasing rules. You CAN&apos;T use it to replace one value with another.</doc>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='484' u='c' c='_ZN4llvm13BasicAAResult22DecomposeGEPExpressionEPKNS_5ValueERNS0_13DecomposedGEPERKNS_10DataLayoutEPNS_15AssumptionCacheEPNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Analysis/Loads.cpp' l='110' u='c' c='_ZL34isDereferenceableAndAlignedPointerPKN4llvm5ValueEjRKNS_5APIntERKNS_10DataLayoutEPKNS_11InstructionEPKNS_13DominatorTreeERNS_15SmallPtrSetImplIS2_EE'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='2185' u='c' c='_ZL14isKnownNonZeroPKN4llvm5ValueEjRKN12_GLOBAL__N_15QueryE'/>
<def f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='3810' ll='3819' type='const llvm::Value * llvm::getArgumentAliasingToReturnedPointer(const llvm::CallBase * Call)'/>
