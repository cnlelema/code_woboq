<dec f='llvm/clang/include/clang/Sema/Sema.h' l='5870' type='void clang::Sema::DefineImplicitLambdaToBlockPointerConversion(clang::SourceLocation CurrentLoc, clang::CXXConversionDecl * Conv)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='5863'>/// Define the &quot;body&quot; of the conversion from a lambda object to a
  /// block pointer.
  ///
  /// This routine doesn&apos;t actually define a sensible body; rather, it fills
  /// in the initialization expression needed to copy the lambda object into
  /// the block, and IR generation actually generates the real body of the
  /// block pointer conversion.</doc>
<def f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='12896' ll='12946' type='void clang::Sema::DefineImplicitLambdaToBlockPointerConversion(clang::SourceLocation CurrentLocation, clang::CXXConversionDecl * Conv)'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='15436' u='c' c='_ZN5clang4Sema22MarkFunctionReferencedENS_14SourceLocationEPNS_12FunctionDeclEb'/>
