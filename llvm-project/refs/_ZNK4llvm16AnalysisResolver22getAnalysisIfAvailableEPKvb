<dec f='llvm/llvm/include/llvm/PassAnalysisSupport.h' l='182' type='llvm::Pass * llvm::AnalysisResolver::getAnalysisIfAvailable(AnalysisID ID, bool Direction) const'/>
<use f='llvm/llvm/include/llvm/PassAnalysisSupport.h' l='206' u='c' c='_ZNK4llvm4Pass22getAnalysisIfAvailableEv'/>
<doc f='llvm/llvm/include/llvm/PassAnalysisSupport.h' l='181'>/// Return analysis result or null if it doesn&apos;t exist.</doc>
<def f='llvm/llvm/lib/IR/LegacyPassManager.cpp' l='1363' ll='1365' type='llvm::Pass * llvm::AnalysisResolver::getAnalysisIfAvailable(AnalysisID ID, bool dir) const'/>
<doc f='llvm/llvm/lib/IR/LegacyPassManager.cpp' l='1360'>//===----------------------------------------------------------------------===//
// NOTE: Is this the right place to define this method ?
// getAnalysisIfAvailable - Return analysis result or null if it doesn&apos;t exist.</doc>
<use f='llvm/llvm/lib/IR/Pass.cpp' l='68' u='c' c='_ZNK4llvm4Pass22mustPreserveAnalysisIDERc'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUMachineFunction.cpp' l='34' u='c' c='_ZN4llvm21AMDGPUMachineFunctionC1ERKNS_15MachineFunctionE'/>
