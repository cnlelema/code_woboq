<dec f='llvm/clang/lib/Format/WhitespaceManager.h' l='108' type='void clang::format::WhitespaceManager::Change::Change(const clang::format::FormatToken &amp; Tok, bool CreateReplacement, clang::SourceRange OriginalWhitespaceRange, int Spaces, unsigned int StartOfTokenColumn, unsigned int NewlinesBefore, llvm::StringRef PreviousLinePostfix, llvm::StringRef CurrentLinePrefix, bool ContinuesPPDirective, bool IsInsideToken)'/>
<doc f='llvm/clang/lib/Format/WhitespaceManager.h' l='99'>/// Creates a \c Change.
    ///
    /// The generated \c Change will replace the characters at
    /// \p OriginalWhitespaceRange with a concatenation of
    /// \p PreviousLinePostfix, \p NewlinesBefore line breaks, \p Spaces spaces
    /// and \p CurrentLinePrefix.
    ///
    /// \p StartOfTokenColumn and \p InPPDirective will be used to lay out
    /// trailing comments and escaped newlines.</doc>
<def f='llvm/clang/lib/Format/WhitespaceManager.cpp' l='27' ll='43' type='void clang::format::WhitespaceManager::Change::Change(const clang::format::FormatToken &amp; Tok, bool CreateReplacement, clang::SourceRange OriginalWhitespaceRange, int Spaces, unsigned int StartOfTokenColumn, unsigned int NewlinesBefore, llvm::StringRef PreviousLinePostfix, llvm::StringRef CurrentLinePrefix, bool ContinuesPPDirective, bool IsInsideToken)'/>
<use f='llvm/clang/lib/Format/WhitespaceManager.cpp' l='52' u='c' c='_ZN5clang6format17WhitespaceManager17replaceWhitespaceERNS0_11FormatTokenEjjjb'/>
<use f='llvm/clang/lib/Format/WhitespaceManager.cpp' l='62' u='c' c='_ZN5clang6format17WhitespaceManager19addUntouchableTokenERKNS0_11FormatTokenEb'/>
<use f='llvm/clang/lib/Format/WhitespaceManager.cpp' l='82' u='c' c='_ZN5clang6format17WhitespaceManager24replaceWhitespaceInTokenERKNS0_11FormatTokenEjjN4llvm9StringRefES6_bji'/>
