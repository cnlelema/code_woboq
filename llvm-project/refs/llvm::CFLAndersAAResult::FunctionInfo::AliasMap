<dec f='llvm/llvm/lib/Analysis/CFLAndersAliasAnalysis.cpp' l='325' type='DenseMap&lt;const llvm::Value *, std::vector&lt;OffsetValue&gt; &gt;'/>
<use f='llvm/llvm/lib/Analysis/CFLAndersAliasAnalysis.cpp' l='503' u='a' c='_ZN4llvm17CFLAndersAAResult12FunctionInfoC1ERKNS_8FunctionERKNS_15SmallVectorImplIPNS_5ValueEEERKN12_GLOBAL__N_115ReachabilitySetERKNSB_12AliasAttrMapE'/>
<use f='llvm/llvm/lib/Analysis/CFLAndersAliasAnalysis.cpp' l='544' u='m' c='_ZNK4llvm17CFLAndersAAResult12FunctionInfo8mayAliasEPKNS_5ValueENS_12LocationSizeES4_S5_'/>
<use f='llvm/llvm/lib/Analysis/CFLAndersAliasAnalysis.cpp' l='545' u='m' c='_ZNK4llvm17CFLAndersAAResult12FunctionInfo8mayAliasEPKNS_5ValueENS_12LocationSizeES4_S5_'/>
<offset>0</offset>
<doc f='llvm/llvm/lib/Analysis/CFLAndersAliasAnalysis.cpp' l='321'>/// Map a value to other values that may alias it
  /// Since the alias relation is symmetric, to save some space we assume values
  /// are properly ordered: if a and b alias each other, and a &lt; b, then b is in
  /// AliasMap[a] but not vice versa.</doc>
