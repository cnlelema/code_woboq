<dec f='llvm/clang/include/clang/Sema/Sema.h' l='7307' type='clang::Sema::DeduceAutoResult clang::Sema::DeduceAutoType(clang::TypeLoc AutoTypeLoc, clang::Expr *&amp; Initializer, clang::QualType &amp; Result, Optional&lt;unsigned int&gt; DependentDeductionDepth = None)'/>
<use f='llvm/clang/lib/Sema/SemaStmt.cpp' l='3437' u='c' c='_ZN5clang4Sema32DeduceFunctionTypeFromReturnExprEPNS_12FunctionDeclENS_14SourceLocationERPNS_4ExprEPNS_8AutoTypeE'/>
<use f='llvm/clang/lib/Sema/SemaTemplateDeduction.cpp' l='4366' u='c' c='_ZN5clang4Sema14DeduceAutoTypeEPNS_14TypeSourceInfoERPNS_4ExprERNS_8QualTypeEN4llvm8OptionalIjEE'/>
<def f='llvm/clang/lib/Sema/SemaTemplateDeduction.cpp' l='4409' ll='4569' type='Sema::DeduceAutoResult clang::Sema::DeduceAutoType(clang::TypeLoc Type, clang::Expr *&amp; Init, clang::QualType &amp; Result, Optional&lt;unsigned int&gt; DependentDeductionDepth = None)'/>
<doc f='llvm/clang/lib/Sema/SemaTemplateDeduction.cpp' l='4395'>/// Deduce the type for an auto type-specifier (C++11 [dcl.spec.auto]p6)
///
/// Note that this is done even if the initializer is dependent. (This is
/// necessary to support partial ordering of templates using &apos;auto&apos;.)
/// A dependent type will be produced when deducing from a dependent type.
///
/// \param Type the type pattern using the auto type-specifier.
/// \param Init the initializer for the variable whose type is to be deduced.
/// \param Result if type deduction was successful, this will be set to the
///        deduced type.
/// \param DependentDeductionDepth Set if we should permit deduction in
///        dependent cases. This is necessary for template partial ordering with
///        &apos;auto&apos; template parameters. The value specified is the template
///        parameter depth at which we should perform &apos;auto&apos; deduction.</doc>
