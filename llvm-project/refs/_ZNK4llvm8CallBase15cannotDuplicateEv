<def f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='1698' type='bool llvm::CallBase::cannotDuplicate() const'/>
<doc f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='1697'>/// Determine if the invoke cannot be duplicated.</doc>
<use f='llvm/llvm/lib/Analysis/CodeMetrics.cpp' l='164' u='c' c='_ZN4llvm11CodeMetrics17analyzeBasicBlockEPKNS_10BasicBlockERKNS_19TargetTransformInfoERKNS_15SmallPtrSetImplIPKNS_5ValueEEE'/>
<use f='llvm/llvm/lib/Analysis/CodeMetrics.cpp' l='171' u='c' c='_ZN4llvm11CodeMetrics17analyzeBasicBlockEPKNS_10BasicBlockERKNS_19TargetTransformInfoERKNS_15SmallPtrSetImplIPKNS_5ValueEEE'/>
<use f='llvm/llvm/lib/Analysis/InlineCost.cpp' l='1245' u='c' c='_ZN12_GLOBAL__N_112CallAnalyzer13visitCallBaseERN4llvm8CallBaseE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='515' u='c' c='_ZL28getJumpThreadDuplicationCostPN4llvm10BasicBlockEPNS_11InstructionEj'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopVersioningLICM.cpp' l='364' u='c' c='_ZN12_GLOBAL__N_118LoopVersioningLICM28instructionSafeForVersioningEPN4llvm11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyCFG.cpp' l='2198' u='c' c='_ZL19FoldCondBranchOnPHIPN4llvm10BranchInstERKNS_10DataLayoutEPNS_15AssumptionCacheE'/>
