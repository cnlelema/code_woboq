<inh f='llvm/llvm/include/llvm/Analysis/MustExecute.h' l='47' c='llvm::LoopSafetyInfo'/>
<def f='llvm/llvm/include/llvm/Analysis/MustExecute.h' l='97' ll='116'/>
<size>48</size>
<doc f='llvm/llvm/include/llvm/Analysis/MustExecute.h' l='94'>/// Simple and conservative implementation of LoopSafetyInfo that can give
/// false-positive answers to its queries in order to avoid complicated
/// analysis.</doc>
<mbr r='llvm::SimpleLoopSafetyInfo::MayThrow' o='320' t='bool'/>
<mbr r='llvm::SimpleLoopSafetyInfo::HeaderMayThrow' o='328' t='bool'/>
<fun r='_ZNK4llvm20SimpleLoopSafetyInfo13blockMayThrowEPKNS_10BasicBlockE'/>
<fun r='_ZNK4llvm20SimpleLoopSafetyInfo16anyBlockMayThrowEv'/>
<fun r='_ZN4llvm20SimpleLoopSafetyInfo21computeLoopSafetyInfoEPKNS_4LoopE'/>
<fun r='_ZNK4llvm20SimpleLoopSafetyInfo21isGuaranteedToExecuteERKNS_11InstructionEPKNS_13DominatorTreeEPKNS_4LoopE'/>
<fun r='_ZN4llvm20SimpleLoopSafetyInfoC1Ev'/>
<fun r='_ZN4llvm20SimpleLoopSafetyInfoD1Ev'/>
