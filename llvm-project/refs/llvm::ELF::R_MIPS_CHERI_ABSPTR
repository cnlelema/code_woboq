<dec f='llvm/llvm/include/llvm/BinaryFormat/ELFRelocs/Mips.def' l='72' type='70'/>
<doc f='llvm/llvm/include/llvm/BinaryFormat/ELFRelocs/Mips.def' l='65'>// XXXAR: We use this to write an absolute value to a given offset. Plain MIPS does
// this by writing the value to GOT slot and using a R_MIPS_REL32 where the r_symndx points
// to the GOT entry that should have been relocated to point to the correct value and then load that to write the value.
// This seems a) unnecessarily complicated and b) not to always work since somehow we were getting
// those relocations emitted where r_symndx pointed to the local part of the GOT so the relocation
// would just add the load address. Furthermore for CheriABI we really don&apos;t want a GOT but still want to be able
// to write absolute 64-bit values</doc>
<use f='llvm/lld/ELF/Arch/Mips.cpp' l='69' u='r' c='_ZN12_GLOBAL__N_14MIPSC1Ev'/>
<use f='llvm/lld/ELF/Arch/Mips.cpp' l='77' u='r' c='_ZN12_GLOBAL__N_14MIPSC1Ev'/>
