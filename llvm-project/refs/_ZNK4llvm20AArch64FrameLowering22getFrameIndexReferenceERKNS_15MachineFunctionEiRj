<dec f='llvm/llvm/lib/Target/AArch64/AArch64FrameLowering.h' l='40' type='int llvm::AArch64FrameLowering::getFrameIndexReference(const llvm::MachineFunction &amp; MF, int FI, unsigned int &amp; FrameReg) const'/>
<inh f='llvm/llvm/include/llvm/CodeGen/TargetFrameLowering.h' l='248' c='_ZNK4llvm19TargetFrameLowering22getFrameIndexReferenceERKNS_15MachineFunctionEiRj'/>
<def f='llvm/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp' l='1497' ll='1501' type='int llvm::AArch64FrameLowering::getFrameIndexReference(const llvm::MachineFunction &amp; MF, int FI, unsigned int &amp; FrameReg) const'/>
<doc f='llvm/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp' l='1493'>/// getFrameIndexReference - Provide a base+offset reference to an FI slot for
/// debug info.  It&apos;s the same as what we use for resolving the code-gen
/// references for now.  FIXME: This can go wrong when references are
/// SP-relative and simple call frames aren&apos;t used.</doc>
<use f='llvm/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp' l='471' u='c' c='_ZNK4llvm19AArch64RegisterInfo19eliminateFrameIndexENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEEijPNS_12RegScavengerE'/>
