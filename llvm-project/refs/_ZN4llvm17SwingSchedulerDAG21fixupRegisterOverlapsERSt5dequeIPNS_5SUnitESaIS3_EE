<dec f='llvm/llvm/include/llvm/CodeGen/MachinePipeliner.h' l='263' type='void llvm::SwingSchedulerDAG::fixupRegisterOverlaps(std::deque&lt;SUnit *&gt; &amp; Instrs)'/>
<def f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='3776' ll='3820' type='void llvm::SwingSchedulerDAG::fixupRegisterOverlaps(std::deque&lt;SUnit *&gt; &amp; Instrs)'/>
<use f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='3904' u='c' c='_ZN4llvm10SMSchedule16finalizeScheduleEPNS_17SwingSchedulerDAGE'/>
<doc f='llvm/llvm/lib/CodeGen/MachinePipeliner.cpp' l='3770'>/// Attempt to fix the degenerate cases when the instruction serialization
/// causes the register lifetimes to overlap. For example,
///   p&apos; = store_pi(p, b)
///      = load p, offset
/// In this case p and p&apos; overlap, which means that two registers are needed.
/// Instead, this function changes the load to use p&apos; and updates the offset.</doc>
