<dec f='llvm/clang/include/clang/Sema/Sema.h' l='4831' type='bool clang::Sema::CheckUsingDeclQualifier(clang::SourceLocation UsingLoc, bool HasTypename, const clang::CXXScopeSpec &amp; SS, const clang::DeclarationNameInfo &amp; NameInfo, clang::SourceLocation NameLoc)'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='10040' u='c' c='_ZN5clang4Sema21BuildUsingDeclarationEPNS_5ScopeENS_15AccessSpecifierENS_14SourceLocationEbS4_RNS_12CXXScopeSpecENS_19DeclarationNameInfoES4_RKNS_20ParsedAttributesViewEb'/>
<def f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='10351' ll='10537' type='bool clang::Sema::CheckUsingDeclQualifier(clang::SourceLocation UsingLoc, bool HasTypename, const clang::CXXScopeSpec &amp; SS, const clang::DeclarationNameInfo &amp; NameInfo, clang::SourceLocation NameLoc)'/>
<doc f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='10348'>/// Checks that the given nested-name qualifier used in a using decl
/// in the current context is appropriately related to the current
/// scope.  If an error is found, diagnoses it and returns true.</doc>
