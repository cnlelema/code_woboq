<def f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='431' ll='438' type='llvm::LegalizeRuleSet &amp; llvm::LegalizeRuleSet::actionForCartesianProduct(llvm::LegalizeActions::LegalizeAction Action, std::initializer_list&lt;LLT&gt; Types0, std::initializer_list&lt;LLT&gt; Types1, std::initializer_list&lt;LLT&gt; Types2)'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='494' u='c' c='_ZN4llvm15LegalizeRuleSet24legalForCartesianProductESt16initializer_listINS_3LLTEES3_S3_'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='566' u='c' c='_ZN4llvm15LegalizeRuleSet24lowerForCartesianProductESt16initializer_listINS_3LLTEES3_S3_'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='427'>/// Use the given action when type indexes 0, 1, and 2 are all in their
  /// respective lists.
  /// That is, the type triple is in the cartesian product of the lists
  /// Action should not be an action that requires mutation.</doc>
