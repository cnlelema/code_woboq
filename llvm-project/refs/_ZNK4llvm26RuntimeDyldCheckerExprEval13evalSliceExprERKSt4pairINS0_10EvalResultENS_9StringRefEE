<use f='llvm/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldChecker.cpp' l='573' u='c' c='_ZNK4llvm26RuntimeDyldCheckerExprEval14evalSimpleExprENS_9StringRefENS0_12ParseContextE'/>
<def f='llvm/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldChecker.cpp' l='585' ll='621' type='std::pair&lt;EvalResult, StringRef&gt; llvm::RuntimeDyldCheckerExprEval::evalSliceExpr(const std::pair&lt;EvalResult, StringRef&gt; &amp; Ctx) const'/>
<doc f='llvm/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldChecker.cpp' l='578'>// Evaluate a bit-slice of an expression.
  // A bit-slice has the form &quot;&lt;expr&gt;[high:low]&quot;. The result of evaluating a
  // slice is the bits between high and low (inclusive) in the original
  // expression, right shifted so that the &quot;low&quot; bit is in position 0 in the
  // result.
  // Returns a pair containing the result of the slice operation, plus the
  // expression remaining to be parsed.</doc>
