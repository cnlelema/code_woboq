<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='539' type='llvm::Instruction * llvm::InstCombiner::narrowBinOp(llvm::TruncInst &amp; Trunc)'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='579' ll='632' type='llvm::Instruction * llvm::InstCombiner::narrowBinOp(llvm::TruncInst &amp; Trunc)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='812' u='c' c='_ZN4llvm12InstCombiner10visitTruncERNS_9TruncInstE'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='576'>/// Try to narrow the width of math or bitwise logic instructions by pulling a
/// truncate ahead of binary operators.
/// TODO: Transforms for truncated shifts should be moved into here.</doc>
