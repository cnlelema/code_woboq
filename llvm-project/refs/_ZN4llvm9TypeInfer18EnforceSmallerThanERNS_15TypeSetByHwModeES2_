<dec f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='305' type='bool llvm::TypeInfer::EnforceSmallerThan(llvm::TypeSetByHwMode &amp; Small, llvm::TypeSetByHwMode &amp; Big)'/>
<def f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='458' ll='549' type='bool llvm::TypeInfer::EnforceSmallerThan(llvm::TypeSetByHwMode &amp; Small, llvm::TypeSetByHwMode &amp; Big)'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='1524' u='c' c='_ZNK4llvm16SDTypeConstraint19ApplyTypeConstraintEPNS_15TreePatternNodeERKNS_10SDNodeInfoERNS_11TreePatternE'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='1531' u='c' c='_ZNK4llvm16SDTypeConstraint19ApplyTypeConstraintEPNS_15TreePatternNodeERKNS_10SDNodeInfoERNS_11TreePatternE'/>
<doc f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='457'>/// Make sure that for each type in Small, there exists a larger type in Big.</doc>
<doc f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='303'>/// Make sure that for each type in \p Small, there exists a larger type
  /// in \p Big.</doc>
