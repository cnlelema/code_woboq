<def f='llvm/llvm/lib/AsmParser/LLLexer.h' l='28' ll='101'/>
<size>168</size>
<mbr r='llvm::LLLexer::CurPtr' o='0' t='const char *'/>
<mbr r='llvm::LLLexer::CurBuf' o='64' t='llvm::StringRef'/>
<mbr r='llvm::LLLexer::ErrorInfo' o='192' t='llvm::SMDiagnostic &amp;'/>
<mbr r='llvm::LLLexer::SM' o='256' t='llvm::SourceMgr &amp;'/>
<mbr r='llvm::LLLexer::Context' o='320' t='llvm::LLVMContext &amp;'/>
<mbr r='llvm::LLLexer::TokStart' o='384' t='const char *'/>
<mbr r='llvm::LLLexer::CurKind' o='448' t='lltok::Kind'/>
<mbr r='llvm::LLLexer::StrVal' o='512' t='std::string'/>
<mbr r='llvm::LLLexer::UIntVal' o='768' t='unsigned int'/>
<mbr r='llvm::LLLexer::TyVal' o='832' t='llvm::Type *'/>
<mbr r='llvm::LLLexer::APFloatVal' o='896' t='llvm::APFloat'/>
<mbr r='llvm::LLLexer::APSIntVal' o='1152' t='llvm::APSInt'/>
<mbr r='llvm::LLLexer::IgnoreColonInIdentifiers' o='1280' t='bool'/>
<fun r='_ZN4llvm7LLLexerC1ENS_9StringRefERNS_9SourceMgrERNS_12SMDiagnosticERNS_11LLVMContextE'/>
<fun r='_ZN4llvm7LLLexer3LexEv'/>
<fun r='_ZNK4llvm7LLLexer6getLocEv'/>
<fun r='_ZNK4llvm7LLLexer7getKindEv'/>
<fun r='_ZNK4llvm7LLLexer9getStrValEv'/>
<fun r='_ZNK4llvm7LLLexer8getTyValEv'/>
<fun r='_ZNK4llvm7LLLexer10getUIntValEv'/>
<fun r='_ZNK4llvm7LLLexer12getAPSIntValEv'/>
<fun r='_ZNK4llvm7LLLexer13getAPFloatValEv'/>
<fun r='_ZN4llvm7LLLexer27setIgnoreColonInIdentifiersEb'/>
<fun r='_ZNK4llvm7LLLexer5ErrorENS_5SMLocERKNS_5TwineE'/>
<fun r='_ZNK4llvm7LLLexer5ErrorERKNS_5TwineE'/>
<fun r='_ZNK4llvm7LLLexer7WarningENS_5SMLocERKNS_5TwineE'/>
<fun r='_ZNK4llvm7LLLexer7WarningERKNS_5TwineE'/>
<fun r='_ZN4llvm7LLLexer8LexTokenEv'/>
<fun r='_ZN4llvm7LLLexer11getNextCharEv'/>
<fun r='_ZN4llvm7LLLexer15SkipLineCommentEv'/>
<fun r='_ZN4llvm7LLLexer10ReadStringENS_5lltok4KindE'/>
<fun r='_ZN4llvm7LLLexer11ReadVarNameEv'/>
<fun r='_ZN4llvm7LLLexer13LexIdentifierEv'/>
<fun r='_ZN4llvm7LLLexer18LexDigitOrNegativeEv'/>
<fun r='_ZN4llvm7LLLexer11LexPositiveEv'/>
<fun r='_ZN4llvm7LLLexer5LexAtEv'/>
<fun r='_ZN4llvm7LLLexer9LexDollarEv'/>
<fun r='_ZN4llvm7LLLexer10LexExclaimEv'/>
<fun r='_ZN4llvm7LLLexer10LexPercentEv'/>
<fun r='_ZN4llvm7LLLexer9LexUIntIDENS_5lltok4KindE'/>
<fun r='_ZN4llvm7LLLexer6LexVarENS_5lltok4KindES2_'/>
<fun r='_ZN4llvm7LLLexer8LexQuoteEv'/>
<fun r='_ZN4llvm7LLLexer5Lex0xEv'/>
<fun r='_ZN4llvm7LLLexer7LexHashEv'/>
<fun r='_ZN4llvm7LLLexer8LexCaretEv'/>
<fun r='_ZN4llvm7LLLexer6atoullEPKcS2_'/>
<fun r='_ZN4llvm7LLLexer11HexIntToValEPKcS2_'/>
<fun r='_ZN4llvm7LLLexer12HexToIntPairEPKcS2_Pm'/>
<fun r='_ZN4llvm7LLLexer16FP80HexToIntPairEPKcS2_Pm'/>
<fun r='_ZNK4llvm7LLLexer5ErrorENS_5SMLocERKNS_5TwineE'/>
<fun r='_ZNK4llvm7LLLexer7WarningENS_5SMLocERKNS_5TwineE'/>
<fun r='_ZN4llvm7LLLexer6atoullEPKcS2_'/>
<fun r='_ZN4llvm7LLLexer11HexIntToValEPKcS2_'/>
<fun r='_ZN4llvm7LLLexer12HexToIntPairEPKcS2_Pm'/>
<fun r='_ZN4llvm7LLLexer16FP80HexToIntPairEPKcS2_Pm'/>
<fun r='_ZN4llvm7LLLexerC1ENS_9StringRefERNS_9SourceMgrERNS_12SMDiagnosticERNS_11LLVMContextE'/>
<fun r='_ZN4llvm7LLLexer11getNextCharEv'/>
<fun r='_ZN4llvm7LLLexer8LexTokenEv'/>
<fun r='_ZN4llvm7LLLexer15SkipLineCommentEv'/>
<fun r='_ZN4llvm7LLLexer5LexAtEv'/>
<fun r='_ZN4llvm7LLLexer9LexDollarEv'/>
<fun r='_ZN4llvm7LLLexer10ReadStringENS_5lltok4KindE'/>
<fun r='_ZN4llvm7LLLexer11ReadVarNameEv'/>
<fun r='_ZN4llvm7LLLexer9LexUIntIDENS_5lltok4KindE'/>
<fun r='_ZN4llvm7LLLexer6LexVarENS_5lltok4KindES2_'/>
<fun r='_ZN4llvm7LLLexer10LexPercentEv'/>
<fun r='_ZN4llvm7LLLexer8LexQuoteEv'/>
<fun r='_ZN4llvm7LLLexer10LexExclaimEv'/>
<fun r='_ZN4llvm7LLLexer8LexCaretEv'/>
<fun r='_ZN4llvm7LLLexer7LexHashEv'/>
<fun r='_ZN4llvm7LLLexer13LexIdentifierEv'/>
<fun r='_ZN4llvm7LLLexer5Lex0xEv'/>
<fun r='_ZN4llvm7LLLexer18LexDigitOrNegativeEv'/>
<fun r='_ZN4llvm7LLLexer11LexPositiveEv'/>
