<dec f='llvm/llvm/include/llvm/Analysis/OrderedBasicBlock.h' l='61' type='bool llvm::OrderedBasicBlock::dominates(const llvm::Instruction * A, const llvm::Instruction * B)'/>
<doc f='llvm/llvm/include/llvm/Analysis/OrderedBasicBlock.h' l='56'>/// Find out whether \p A dominates \p B, meaning whether \p A
  /// comes before \p B in \p BB. This is a simplification that considers
  /// cached instruction positions and ignores other basic blocks, being
  /// only relevant to compare relative instructions positions inside \p BB.
  /// Returns false for A == B.</doc>
<use f='llvm/llvm/lib/Analysis/CaptureTracking.cpp' l='90' u='c' c='_ZN12_GLOBAL__N_114CapturesBefore13isSafeToPruneEPN4llvm11InstructionE'/>
<def f='llvm/llvm/lib/Analysis/OrderedBasicBlock.cpp' l='66' ll='87' type='bool llvm::OrderedBasicBlock::dominates(const llvm::Instruction * A, const llvm::Instruction * B)'/>
<doc f='llvm/llvm/lib/Analysis/OrderedBasicBlock.cpp' l='62'>/// Find out whether \p A dominates \p B, meaning whether \p A
/// comes before \p B in \p BB. This is a simplification that considers
/// cached instruction positions and ignores other basic blocks, being
/// only relevant to compare relative instructions positions inside \p BB.</doc>
<use f='llvm/llvm/lib/Analysis/OrderedInstructions.cpp' l='25' u='c' c='_ZNK4llvm19OrderedInstructions14localDominatesEPKNS_11InstructionES3_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp' l='1159' u='c' c='_ZL19eliminateDeadStoresRN4llvm10BasicBlockEPNS_9AAResultsEPNS_23MemoryDependenceResultsEPNS_13DominatorTreeEPKNS_17TargetLibraryInfoE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoadStoreVectorizer.cpp' l='508' u='c' c='_ZN12_GLOBAL__N_110Vectorizer7reorderEPN4llvm11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoadStoreVectorizer.cpp' l='635' u='c' c='_ZN12_GLOBAL__N_110Vectorizer21getVectorizablePrefixEN4llvm8ArrayRefIPNS1_11InstructionEEE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoadStoreVectorizer.cpp' l='642' u='c' c='_ZN12_GLOBAL__N_110Vectorizer21getVectorizablePrefixEN4llvm8ArrayRefIPNS1_11InstructionEEE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoadStoreVectorizer.cpp' l='661' u='c' c='_ZN12_GLOBAL__N_110Vectorizer21getVectorizablePrefixEN4llvm8ArrayRefIPNS1_11InstructionEEE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoadStoreVectorizer.cpp' l='666' u='c' c='_ZN12_GLOBAL__N_110Vectorizer21getVectorizablePrefixEN4llvm8ArrayRefIPNS1_11InstructionEEE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoadStoreVectorizer.cpp' l='692' u='c' c='_ZN12_GLOBAL__N_110Vectorizer21getVectorizablePrefixEN4llvm8ArrayRefIPNS1_11InstructionEEE'/>
<use f='llvm/llvm/unittests/Analysis/OrderedBasicBlockTest.cpp' l='46' u='c' c='_ZN4llvm12_GLOBAL__N_132OrderedBasicBlockTest_Basic_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/OrderedBasicBlockTest.cpp' l='47' u='c' c='_ZN4llvm12_GLOBAL__N_132OrderedBasicBlockTest_Basic_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/OrderedBasicBlockTest.cpp' l='48' u='c' c='_ZN4llvm12_GLOBAL__N_132OrderedBasicBlockTest_Basic_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/OrderedBasicBlockTest.cpp' l='49' u='c' c='_ZN4llvm12_GLOBAL__N_132OrderedBasicBlockTest_Basic_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/OrderedBasicBlockTest.cpp' l='50' u='c' c='_ZN4llvm12_GLOBAL__N_132OrderedBasicBlockTest_Basic_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/OrderedBasicBlockTest.cpp' l='51' u='c' c='_ZN4llvm12_GLOBAL__N_132OrderedBasicBlockTest_Basic_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/OrderedBasicBlockTest.cpp' l='52' u='c' c='_ZN4llvm12_GLOBAL__N_132OrderedBasicBlockTest_Basic_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/OrderedBasicBlockTest.cpp' l='53' u='c' c='_ZN4llvm12_GLOBAL__N_132OrderedBasicBlockTest_Basic_Test8TestBodyEv'/>
