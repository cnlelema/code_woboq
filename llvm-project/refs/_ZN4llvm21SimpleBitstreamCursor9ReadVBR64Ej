<def f='llvm/llvm/include/llvm/Bitcode/BitstreamReader.h' l='240' ll='256' type='uint64_t llvm::SimpleBitstreamCursor::ReadVBR64(unsigned int NumBits)'/>
<doc f='llvm/llvm/include/llvm/Bitcode/BitstreamReader.h' l='238'>// Read a VBR that may have a value up to 64-bits in size. The chunk size of
  // the VBR must still be &lt;= 32 bits though.</doc>
<use f='llvm/llvm/lib/Bitcode/Reader/BitstreamReader.cpp' l='64' u='c' c='_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE'/>
<use f='llvm/llvm/lib/Bitcode/Reader/BitstreamReader.cpp' l='86' u='c' c='_ZL20skipAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE'/>
<use f='llvm/llvm/lib/Bitcode/Reader/BitstreamReader.cpp' l='101' u='c' c='_ZN4llvm15BitstreamCursor10skipRecordEj'/>
<use f='llvm/llvm/lib/Bitcode/Reader/BitstreamReader.cpp' l='148' u='c' c='_ZN4llvm15BitstreamCursor10skipRecordEj'/>
<use f='llvm/llvm/lib/Bitcode/Reader/BitstreamReader.cpp' l='185' u='c' c='_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE'/>
<use f='llvm/llvm/lib/Bitcode/Reader/BitstreamReader.cpp' l='239' u='c' c='_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE'/>
<use f='llvm/llvm/lib/Bitcode/Reader/BitstreamReader.cpp' l='290' u='c' c='_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv'/>
<use f='llvm/llvm/lib/Bitcode/Reader/BitstreamReader.cpp' l='296' u='c' c='_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv'/>
