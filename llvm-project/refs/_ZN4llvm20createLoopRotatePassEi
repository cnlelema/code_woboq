<dec f='llvm/llvm/include/llvm/Transforms/Scalar.h' l='212' type='llvm::Pass * llvm::createLoopRotatePass(int MaxHeaderSize = -1)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Scalar.h' l='208'>//===----------------------------------------------------------------------===//
//
// LoopRotate - This pass is a simple loop rotating pass.
//</doc>
<use f='llvm/llvm/include/llvm/LinkAllPasses.h' l='142' u='c' c='_ZN12_GLOBAL__N_116ForcePassLinkingC1Ev'/>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='307' u='c' c='_ZN4llvm18PassManagerBuilder17addPGOInstrPassesERNS_6legacy15PassManagerBaseEb'/>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='362' u='c' c='_ZN4llvm18PassManagerBuilder31addFunctionSimplificationPassesERNS_6legacy15PassManagerBaseE'/>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='663' u='c' c='_ZN4llvm18PassManagerBuilder25populateModulePassManagerERNS_6legacy15PassManagerBaseE'/>
<def f='llvm/llvm/lib/Transforms/Scalar/LoopRotation.cpp' l='124' ll='126' type='llvm::Pass * llvm::createLoopRotatePass(int MaxHeaderSize = -1)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='183' u='c' c='LLVMAddLoopRotatePass'/>
