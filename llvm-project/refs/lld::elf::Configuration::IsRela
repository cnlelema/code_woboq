<dec f='llvm/lld/ELF/Config.h' l='321' type='bool'/>
<offset>8800</offset>
<doc f='llvm/lld/ELF/Config.h' l='307'>// The ELF spec defines two types of relocation table entries, RELA and
  // REL. RELA is a triplet of (offset, info, addend) while REL is a
  // tuple of (offset, info). Addends for REL are implicit and read from
  // the location where the relocations are applied. So, REL is more
  // compact than RELA but requires a bit of more work to process.
  //
  // (From the linker writer&apos;s view, this distinction is not necessary.
  // If the ELF had chosen whichever and sticked with it, it would have
  // been easier to write code to process relocations, but it&apos;s too late
  // to change the spec.)
  //
  // Each ABI defines its relocation type. IsRela is true if target
  // uses RELA. As far as we know, all 64-bit ABIs are using RELA. A
  // few 32-bit ABIs are using RELA too.</doc>
<use f='llvm/lld/ELF/Arch/Cheri.cpp' l='356' u='r' c='_ZN3lld3elf21CheriCapRelocsSection11addCapRelocENS0_21CheriCapRelocLocationERKNS0_15SymbolAndOffsetEblPNS0_6SymbolE'/>
<use f='llvm/lld/ELF/Driver.cpp' l='1162' u='w' c='_ZL10setConfigsRN4llvm3opt12InputArgListE'/>
<use f='llvm/lld/ELF/SyntheticSections.cpp' l='1357' u='r' c='_ZN3lld3elf14DynamicSection16finalizeContentsEv'/>
<use f='llvm/lld/ELF/SyntheticSections.cpp' l='1398' u='r' c='_ZN3lld3elf14DynamicSection16finalizeContentsEv'/>
<use f='llvm/lld/ELF/SyntheticSections.cpp' l='1600' u='r' c='_ZN3lld3elf21RelocationBaseSection8addRelocERKNS0_12DynamicRelocE'/>
<use f='llvm/lld/ELF/SyntheticSections.cpp' l='1657' u='r' c='_ZL18encodeDynamicRelocPN3lld3elf22SymbolTableBaseSectionEPNT_4RelaERKNS0_12DynamicRelocE'/>
<use f='llvm/lld/ELF/SyntheticSections.cpp' l='1665' u='r' c='_ZN3lld3elf17RelocationSectionC1EN4llvm9StringRefEb'/>
<use f='llvm/lld/ELF/SyntheticSections.cpp' l='1666' u='r' c='_ZN3lld3elf17RelocationSectionC1EN4llvm9StringRefEb'/>
<use f='llvm/lld/ELF/SyntheticSections.cpp' l='1667' u='r' c='_ZN3lld3elf17RelocationSectionC1EN4llvm9StringRefEb'/>
<use f='llvm/lld/ELF/SyntheticSections.cpp' l='1669' u='r' c='_ZN3lld3elf17RelocationSectionC1EN4llvm9StringRefEb'/>
<use f='llvm/lld/ELF/SyntheticSections.cpp' l='1689' u='r' c='_ZN3lld3elf17RelocationSection7writeToEPh'/>
<use f='llvm/lld/ELF/SyntheticSections.cpp' l='1697' u='r' c='_ZN3lld3elf30AndroidPackedRelocationSectionC1EN4llvm9StringRefE'/>
<use f='llvm/lld/ELF/SyntheticSections.cpp' l='1698' u='r' c='_ZN3lld3elf30AndroidPackedRelocationSectionC1EN4llvm9StringRefE'/>
<use f='llvm/lld/ELF/SyntheticSections.cpp' l='1699' u='r' c='_ZN3lld3elf30AndroidPackedRelocationSectionC1EN4llvm9StringRefE'/>
<use f='llvm/lld/ELF/SyntheticSections.cpp' l='1800' u='r' c='_ZN3lld3elf30AndroidPackedRelocationSection15updateAllocSizeEv'/>
<use f='llvm/lld/ELF/SyntheticSections.cpp' l='1817' u='r' c='_ZN3lld3elf30AndroidPackedRelocationSection15updateAllocSizeEv'/>
<use f='llvm/lld/ELF/SyntheticSections.cpp' l='1828' u='r' c='_ZN3lld3elf30AndroidPackedRelocationSection15updateAllocSizeEv'/>
<use f='llvm/lld/ELF/SyntheticSections.cpp' l='1846' u='r' c='_ZN3lld3elf30AndroidPackedRelocationSection15updateAllocSizeEv'/>
<use f='llvm/lld/ELF/SyntheticSections.cpp' l='1864' u='r' c='_ZN3lld3elf30AndroidPackedRelocationSection15updateAllocSizeEv'/>
<use f='llvm/lld/ELF/Writer.cpp' l='435' u='r' c='_ZL23createSyntheticSectionsv'/>
<use f='llvm/lld/ELF/Writer.cpp' l='438' u='r' c='_ZL23createSyntheticSectionsv'/>
<use f='llvm/lld/ELF/Writer.cpp' l='551' u='r' c='_ZL23createSyntheticSectionsv'/>
<use f='llvm/lld/ELF/Writer.cpp' l='1090' u='r' c='_ZN12_GLOBAL__N_16Writer17addRelIpltSymbolsEv'/>
<use f='llvm/lld/ELF/Writer.cpp' l='1094' u='r' c='_ZN12_GLOBAL__N_16Writer17addRelIpltSymbolsEv'/>
