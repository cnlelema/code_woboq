<dec f='llvm/llvm/include/llvm/Support/Registry.h' l='79' type='static void llvm::Registry::add_node(llvm::Registry::node * N)'/>
<use f='llvm/llvm/include/llvm/Support/Registry.h' l='123' u='c' c='_ZN4llvm8Registry3AddC1ENS_9StringRefES2_'/>
<doc f='llvm/llvm/include/llvm/Support/Registry.h' l='72'>/// Add a node to the Registry: this is the interface between the plugin and
    /// the executable.
    ///
    /// This function is exported by the executable and called by the plugin to
    /// add a node to the executable&apos;s registry. Therefore it&apos;s not defined here
    /// to avoid it being instantiated in the plugin and is instead defined in
    /// the executable (see LLVM_INSTANTIATE_REGISTRY below).</doc>
<def f='llvm/clang/lib/Frontend/FrontendAction.cpp' l='37' macro='1' type='static void llvm::Registry::add_node(typename Registry&lt;T&gt;::node * N)'/>
<def f='llvm/clang/lib/Lex/Preprocessor.cpp' l='74' macro='1' type='static void llvm::Registry::add_node(typename Registry&lt;T&gt;::node * N)'/>
<def f='llvm/clang/lib/Tooling/CompilationDatabase.cpp' l='59' macro='1' type='static void llvm::Registry::add_node(typename Registry&lt;T&gt;::node * N)'/>
<def f='llvm/clang/lib/Tooling/Execution.cpp' l='13' macro='1' type='static void llvm::Registry::add_node(typename Registry&lt;T&gt;::node * N)'/>
<def f='llvm/llvm/lib/CodeGen/GCMetadataPrinter.cpp' l='17' macro='1' type='static void llvm::Registry::add_node(typename Registry&lt;T&gt;::node * N)'/>
<def f='llvm/llvm/lib/CodeGen/GCStrategy.cpp' l='18' macro='1' type='static void llvm::Registry::add_node(typename Registry&lt;T&gt;::node * N)'/>
