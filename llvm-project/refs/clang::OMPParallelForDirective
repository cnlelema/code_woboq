<inh f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='361' c='clang::OMPLoopDirective'/>
<def f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='1575' ll='1643'/>
<size>40</size>
<doc f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='1566'>/// This represents &apos;#pragma omp parallel for&apos; directive.
///
/// \code
/// #pragma omp parallel for private(a,b) reduction(+:c,d)
/// \endcode
/// In this example directive &apos;#pragma omp parallel for&apos; has clauses &apos;private&apos;
/// with the variables &apos;a&apos; and &apos;b&apos; and &apos;reduction&apos; with operator &apos;+&apos; and
/// variables &apos;c&apos; and &apos;d&apos;.
///</doc>
<mbr r='clang::OMPParallelForDirective::HasCancel' o='288' t='bool'/>
<fun r='_ZN5clang23OMPParallelForDirectiveC1ENS_14SourceLocationES1_jj'/>
<fun r='_ZN5clang23OMPParallelForDirectiveC1Ejj'/>
<fun r='_ZN5clang23OMPParallelForDirective12setHasCancelEb'/>
<fun r='_ZN5clang23OMPParallelForDirective6CreateERKNS_10ASTContextENS_14SourceLocationES4_jN4llvm8ArrayRefIPNS_9OMPClauseEEEPNS_4StmtERKNS_16OMPLoopDirective11HelperExprsEb'/>
<fun r='_ZN5clang23OMPParallelForDirective11CreateEmptyERKNS_10ASTContextEjjNS_4Stmt10EmptyShellE'/>
<fun r='_ZNK5clang23OMPParallelForDirective9hasCancelEv'/>
<fun r='_ZN5clang23OMPParallelForDirective7classofEPKNS_4StmtE'/>
