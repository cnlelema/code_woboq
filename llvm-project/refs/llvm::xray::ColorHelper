<def f='llvm/llvm/tools/llvm-xray/xray-color-helper.h' l='43' ll='85'/>
<size>48</size>
<doc f='llvm/llvm/tools/llvm-xray/xray-color-helper.h' l='23'>/// The color helper class it a healper class which allows you to easily get a
/// color in a gradient. This is used to color-code edges in XRay-Graph tools.
///
/// There are two types of color schemes in this class:
///   - Sequential schemes, which are used to represent information from some
///     minimum to some maximum. These take an input in the range [0,1]
///   - Diverging schemes, which are used to represent information representing
///     differenes, or a range that goes from negative to positive. These take
///     an input in the range [-1,1].
/// Usage;
/// ColorHelper S(ColorHelper::SequentialScheme::OrRd); //Chose a color scheme.
/// for (double p = 0.0; p &lt;= 1; p += 0.1){
///   cout() &lt;&lt; S.getColor(p) &lt;&lt; &quot; \n&quot;; // Sample the gradient at 0.1 intervals
/// }
///
/// ColorHelper D(ColorHelper::DivergingScheme::Spectral); // Choose a color
///                                                        // scheme.
/// for (double p= -1; p &lt;= 1 ; p += 0.1){
///   cout() &lt;&lt; D.getColor(p) &lt;&lt; &quot; \n&quot;; // sample the gradient at 0.1 intervals
/// }</doc>
<mbr r='llvm::xray::ColorHelper::MinIn' o='0' t='double'/>
<mbr r='llvm::xray::ColorHelper::MaxIn' o='64' t='double'/>
<mbr r='llvm::xray::ColorHelper::ColorMap' o='128' t='ArrayRef&lt;std::tuple&lt;uint8_t, uint8_t, uint8_t&gt; &gt;'/>
<mbr r='llvm::xray::ColorHelper::BoundMap' o='256' t='ArrayRef&lt;std::tuple&lt;uint8_t, uint8_t, uint8_t&gt; &gt;'/>
<fun r='_ZN4llvm4xray11ColorHelperC1ENS1_16SequentialSchemeE'/>
<fun r='_ZN4llvm4xray11ColorHelperC1ENS1_15DivergingSchemeE'/>
<fun r='_ZNK4llvm4xray11ColorHelper13getColorTupleEd'/>
<fun r='_ZNK4llvm4xray11ColorHelper14getColorStringEd'/>
<fun r='_ZNK4llvm4xray11ColorHelper20getDefaultColorTupleEv'/>
<fun r='_ZNK4llvm4xray11ColorHelper21getDefaultColorStringEv'/>
<fun r='_ZN4llvm4xray11ColorHelper14getColorStringESt5tupleIJhhhEE'/>
<fun r='_ZN4llvm4xray11ColorHelperC1ENS1_16SequentialSchemeE'/>
<fun r='_ZN4llvm4xray11ColorHelperC1ENS1_15DivergingSchemeE'/>
<fun r='_ZNK4llvm4xray11ColorHelper13getColorTupleEd'/>
<fun r='_ZN4llvm4xray11ColorHelper14getColorStringESt5tupleIJhhhEE'/>
<fun r='_ZNK4llvm4xray11ColorHelper14getColorStringEd'/>
