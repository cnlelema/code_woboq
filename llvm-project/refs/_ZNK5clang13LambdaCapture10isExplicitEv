<def f='llvm/clang/include/clang/AST/LambdaCapture.h' l='117' type='bool clang::LambdaCapture::isExplicit() const'/>
<doc f='llvm/clang/include/clang/AST/LambdaCapture.h' l='115'>/// Determine whether this was an explicit capture (written
  /// between the square brackets introducing the lambda).</doc>
<use f='llvm/clang/include/clang/AST/RecursiveASTVisitor.h' l='2419' u='c' c='_ZN5clang19RecursiveASTVisitor18TraverseLambdaExprEPNS_10LambdaExprEPN4llvm15SmallVectorImplINS3_14PointerIntPairIPNS_4StmtELj1EbNS3_21PointerLikeType4863988'/>
<use f='llvm/clang/lib/AST/ExprCXX.cpp' l='1116' u='c' c='_ZN5clang10LambdaExprC1ENS_8QualTypeENS_11SourceRangeENS_20LambdaCaptureDefaultENS_14SourceLocationEN4llvm8ArrayRefINS_13LambdaCaptureEEEbbNS6_IPNS_4ExprEEES4_b'/>
<use f='llvm/clang/lib/Sema/TreeTransform.h' l='11386' u='c' c='_ZN5clang13TreeTransform19TransformLambdaExprEPNS_10LambdaExprE'/>
<use f='llvm/clang/lib/Sema/TreeTransform.h' l='11544' u='c' c='_ZN5clang13TreeTransform14SkipLambdaBodyEPNS_10LambdaExprEPNS_4StmtE'/>
