<dec f='llvm/llvm/include/llvm/IR/Instructions.h' l='3661' type='void llvm::InvokeInst::InvokeInst(llvm::FunctionType * Ty, llvm::Value * Func, llvm::BasicBlock * IfNormal, llvm::BasicBlock * IfException, ArrayRef&lt;llvm::Value *&gt; Args, ArrayRef&lt;OperandBundleDef&gt; Bundles, int NumOperands, const llvm::Twine &amp; NameStr, llvm::BasicBlock * InsertAtEnd)'/>
<use f='llvm/llvm/include/llvm/IR/Instructions.h' l='3713' u='c' c='_ZN4llvm10InvokeInst6CreateEPNS_12FunctionTypeEPNS_5ValueEPNS_10BasicBlockES6_NS_8ArrayRefIS4_EERKNS_5TwineES6_'/>
<use f='llvm/llvm/include/llvm/IR/Instructions.h' l='3726' u='c' c='_ZN4llvm10InvokeInst6CreateEPNS_12FunctionTypeEPNS_5ValueEPNS_10BasicBlockES6_NS_8ArrayRefIS4_EENS7_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineES6_'/>
<def f='llvm/llvm/include/llvm/IR/Instructions.h' l='3883' ll='3891' type='void llvm::InvokeInst::InvokeInst(llvm::FunctionType * Ty, llvm::Value * Func, llvm::BasicBlock * IfNormal, llvm::BasicBlock * IfException, ArrayRef&lt;llvm::Value *&gt; Args, ArrayRef&lt;OperandBundleDef&gt; Bundles, int NumOperands, const llvm::Twine &amp; NameStr, llvm::BasicBlock * InsertAtEnd)'/>
