<dec f='llvm/llvm/include/llvm/IR/Instructions.h' l='4222' type='void llvm::CatchSwitchInst::CatchSwitchInst(llvm::Value * ParentPad, llvm::BasicBlock * UnwindDest, unsigned int NumHandlers, const llvm::Twine &amp; NameStr, llvm::BasicBlock * InsertAtEnd)'/>
<use f='llvm/llvm/include/llvm/IR/Instructions.h' l='4250' u='c' c='_ZN4llvm15CatchSwitchInst6CreateEPNS_5ValueEPNS_10BasicBlockEjRKNS_5TwineES4_'/>
<doc f='llvm/llvm/include/llvm/IR/Instructions.h' l='4218'>/// Create a new switch instruction, specifying a
  /// default destination.  The number of additional handlers can be specified
  /// here to make memory allocation more efficient.
  /// This constructor also autoinserts at the end of the specified BasicBlock.</doc>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='999' ll='1008' type='void llvm::CatchSwitchInst::CatchSwitchInst(llvm::Value * ParentPad, llvm::BasicBlock * UnwindDest, unsigned int NumReservedValues, const llvm::Twine &amp; NameStr, llvm::BasicBlock * InsertAtEnd)'/>
