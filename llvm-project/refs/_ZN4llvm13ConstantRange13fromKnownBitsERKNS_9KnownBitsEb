<dec f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='93' type='static llvm::ConstantRange llvm::ConstantRange::fromKnownBits(const llvm::KnownBits &amp; Known, bool IsSigned)'/>
<doc f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='90'>/// Initialize a range based on a known bits constraint. The IsSigned flag
  /// indicates whether the constant range should not wrap in the signed or
  /// unsigned domain.</doc>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4149' u='c' c='_ZL38computeConstantRangeIncludingKnownBitsPKN4llvm5ValueEbRKNS_10DataLayoutEjPNS_15AssumptionCacheEPKNS_11InstructionEPKNS_13DominatorTreeEPNS_25Opti10733203'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4164' u='c' c='_ZN4llvm29computeOverflowForUnsignedMulEPKNS_5ValueES2_RKNS_10DataLayoutEPNS_15AssumptionCacheEPKNS_11InstructionEPKNS_13DominatorTreeEb'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4165' u='c' c='_ZN4llvm29computeOverflowForUnsignedMulEPKNS_5ValueES2_RKNS_10DataLayoutEPNS_15AssumptionCacheEPKNS_11InstructionEPKNS_13DominatorTreeEb'/>
<def f='llvm/llvm/lib/IR/ConstantRange.cpp' l='57' ll='75' type='static llvm::ConstantRange llvm::ConstantRange::fromKnownBits(const llvm::KnownBits &amp; Known, bool IsSigned)'/>
<use f='llvm/llvm/lib/Transforms/Utils/LowerSwitch.cpp' l='497' u='c' c='_ZN12_GLOBAL__N_111LowerSwitch17processSwitchInstEPN4llvm10SwitchInstERNS1_15SmallPtrSetImplIPNS1_10BasicBlockEEEPNS1_15AssumptionCacheEPNS1_13LazyValueInfoE'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1842' u='c' c='_ZN12_GLOBAL__N_136ConstantRangeTest_FromKnownBits_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1843' u='c' c='_ZN12_GLOBAL__N_136ConstantRangeTest_FromKnownBits_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1852' u='c' c='_ZN12_GLOBAL__N_136ConstantRangeTest_FromKnownBits_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1853' u='c' c='_ZN12_GLOBAL__N_136ConstantRangeTest_FromKnownBits_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1859' u='c' c='_ZN12_GLOBAL__N_136ConstantRangeTest_FromKnownBits_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1860' u='c' c='_ZN12_GLOBAL__N_136ConstantRangeTest_FromKnownBits_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1866' u='c' c='_ZN12_GLOBAL__N_136ConstantRangeTest_FromKnownBits_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1867' u='c' c='_ZN12_GLOBAL__N_136ConstantRangeTest_FromKnownBits_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1898' u='c' c='_ZN12_GLOBAL__N_146ConstantRangeTest_FromKnownBitsExhaustive_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1899' u='c' c='_ZN12_GLOBAL__N_146ConstantRangeTest_FromKnownBitsExhaustive_Test8TestBodyEv'/>
