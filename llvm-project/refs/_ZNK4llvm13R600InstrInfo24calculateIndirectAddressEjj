<dec f='llvm/llvm/lib/Target/AMDGPU/R600InstrInfo.h' l='226' type='unsigned int llvm::R600InstrInfo::calculateIndirectAddress(unsigned int RegIndex, unsigned int Channel) const'/>
<doc f='llvm/llvm/lib/Target/AMDGPU/R600InstrInfo.h' l='219'>/// Calculate the &quot;Indirect Address&quot; for the given \p RegIndex and
  /// \p Channel
  ///
  /// We model indirect addressing using a virtual address space that can be
  /// accesed with loads and stores.  The &quot;Indirect Address&quot; is the memory
  /// address in this virtual address space that maps to the given \p RegIndex
  /// and \p Channel.</doc>
<def f='llvm/llvm/lib/Target/AMDGPU/R600InstrInfo.cpp' l='1018' ll='1022' type='unsigned int llvm::R600InstrInfo::calculateIndirectAddress(unsigned int RegIndex, unsigned int Channel) const'/>
<use f='llvm/llvm/lib/Target/AMDGPU/R600InstrInfo.cpp' l='1040' u='c' c='_ZNK4llvm13R600InstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/R600InstrInfo.cpp' l='1054' u='c' c='_ZNK4llvm13R600InstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/R600InstrInfo.cpp' l='1061' u='c' c='_ZNK4llvm13R600InstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
