<dec f='llvm/llvm/include/llvm/Transforms/IPO/FunctionImport.h' l='200' type='void llvm::gatherImportedSummariesForModule(llvm::StringRef ModulePath, const StringMap&lt;GVSummaryMapTy&gt; &amp; ModuleToDefinedGVSummaries, const FunctionImporter::ImportMapTy &amp; ImportList, std::map&lt;std::string, GVSummaryMapTy&gt; &amp; ModuleToSummariesForIndex)'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/FunctionImport.h' l='190'>/// Compute the set of summaries needed for a ThinLTO backend compilation of
/// \p ModulePath.
//
/// This includes summaries from that module (in case any global summary based
/// optimizations were recorded) and from any definitions in other modules that
/// should be imported.
//
/// \p ModuleToSummariesForIndex will be populated with the needed summaries
/// from each required module path. Use a std::map instead of StringMap to get
/// stable order for bitcode emission.</doc>
<use f='llvm/llvm/lib/LTO/LTO.cpp' l='1199' u='c' c='_ZN12_GLOBAL__N_123WriteIndexesThinBackend5startEjN4llvm13BitcodeModuleERKNS1_9StringMapISt13unordered_setImSt4hashImESt8equal_toImESaImEENS1_15Malloc8350808'/>
<use f='llvm/llvm/lib/LTO/ThinLTOCodeGenerator.cpp' l='708' u='c' c='_ZN4llvm20ThinLTOCodeGenerator32gatherImportedSummariesForModuleERNS_6ModuleERNS_18ModuleSummaryIndexERSt3mapINSt7__cxx1112basic_stringIcSt11char_trai4764768'/>
<use f='llvm/llvm/lib/LTO/ThinLTOCodeGenerator.cpp' l='742' u='c' c='_ZN4llvm20ThinLTOCodeGenerator11emitImportsERNS_6ModuleENS_9StringRefERNS_18ModuleSummaryIndexERKNS_3lto9InputFileE'/>
<def f='llvm/llvm/lib/Transforms/IPO/FunctionImport.cpp' l='866' ll='886' type='void llvm::gatherImportedSummariesForModule(llvm::StringRef ModulePath, const StringMap&lt;GVSummaryMapTy&gt; &amp; ModuleToDefinedGVSummaries, const FunctionImporter::ImportMapTy &amp; ImportList, std::map&lt;std::string, GVSummaryMapTy&gt; &amp; ModuleToSummariesForIndex)'/>
<doc f='llvm/llvm/lib/Transforms/IPO/FunctionImport.cpp' l='864'>/// Compute the set of summaries needed for a ThinLTO backend compilation of
/// \p ModulePath.</doc>
