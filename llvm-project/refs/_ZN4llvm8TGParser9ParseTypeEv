<dec f='llvm/llvm/lib/TableGen/TGParser.h' l='195' type='llvm::RecTy * llvm::TGParser::ParseType()'/>
<def f='llvm/llvm/lib/TableGen/TGParser.cpp' l='797' ll='843' type='llvm::RecTy * llvm::TGParser::ParseType()'/>
<use f='llvm/llvm/lib/TableGen/TGParser.cpp' l='832' u='c' c='_ZN4llvm8TGParser9ParseTypeEv'/>
<use f='llvm/llvm/lib/TableGen/TGParser.cpp' l='1651' u='c' c='_ZN4llvm8TGParser17ParseOperatorTypeEv'/>
<use f='llvm/llvm/lib/TableGen/TGParser.cpp' l='1963' u='c' c='_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE'/>
<use f='llvm/llvm/lib/TableGen/TGParser.cpp' l='2378' u='c' c='_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb'/>
<use f='llvm/llvm/lib/TableGen/TGParser.cpp' l='2726' u='c' c='_ZN4llvm8TGParser11ParseDefsetEv'/>
<doc f='llvm/llvm/lib/TableGen/TGParser.cpp' l='786'>/// ParseType - Parse and return a tblgen type.  This returns null on error.
///
///   Type ::= STRING                       // string type
///   Type ::= CODE                         // code type
///   Type ::= BIT                          // bit type
///   Type ::= BITS &apos;&lt;&apos; INTVAL &apos;&gt;&apos;          // bits&lt;x&gt; type
///   Type ::= INT                          // int type
///   Type ::= LIST &apos;&lt;&apos; Type &apos;&gt;&apos;            // list&lt;x&gt; type
///   Type ::= DAG                          // dag type
///   Type ::= ClassID                      // Record Type
///</doc>
