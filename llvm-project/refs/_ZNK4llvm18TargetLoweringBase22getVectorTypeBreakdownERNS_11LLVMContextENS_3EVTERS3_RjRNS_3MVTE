<dec f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='789' type='unsigned int llvm::TargetLoweringBase::getVectorTypeBreakdown(llvm::LLVMContext &amp; Context, llvm::EVT VT, llvm::EVT &amp; IntermediateVT, unsigned int &amp; NumIntermediates, llvm::MVT &amp; RegisterVT) const'/>
<use f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='800' u='c' c='_ZNK4llvm18TargetLoweringBase36getVectorTypeBreakdownForCallingConvERNS_11LLVMContextEjNS_3EVTERS3_RjRNS_3MVTE'/>
<use f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='1273' u='c' c='_ZNK4llvm18TargetLoweringBase15getRegisterTypeERNS_11LLVMContextENS_3EVTE'/>
<use f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='1301' u='c' c='_ZNK4llvm18TargetLoweringBase15getNumRegistersERNS_11LLVMContextENS_3EVTE'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='781'>/// Vector types are broken down into some number of legal first class types.
  /// For example, EVT::v8f32 maps to 2 EVT::v4f32 with Altivec or SSE1, or 8
  /// promoted EVT::f64 values with the X86 FP stack.  Similarly, EVT::v2i64
  /// turns into 4 EVT::i32 values with both PPC and X86.
  ///
  /// This method returns the number of registers needed, and the VT for each
  /// register.  It also returns the VT and quantity of the intermediate values
  /// before they are promoted/expanded.</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='383' u='c' c='_ZL22getCopyFromPartsVectorRN4llvm12SelectionDAGERKNS_5SDLocEPKNS_7SDValueEjNS_3MVTENS_3EVTEPKNS_5ValueENS_8OptionalIjEE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='718' u='c' c='_ZL20getCopyToPartsVectorRN4llvm12SelectionDAGERKNS_5SDLocENS_7SDValueEPS5_jNS_3MVTEPKNS_5ValueENS_8OptionalIjEE'/>
<def f='llvm/llvm/lib/CodeGen/TargetLoweringBase.cpp' l='1337' ll='1400' type='unsigned int llvm::TargetLoweringBase::getVectorTypeBreakdown(llvm::LLVMContext &amp; Context, llvm::EVT VT, llvm::EVT &amp; IntermediateVT, unsigned int &amp; NumIntermediates, llvm::MVT &amp; RegisterVT) const'/>
<doc f='llvm/llvm/lib/CodeGen/TargetLoweringBase.cpp' l='1329'>/// getVectorTypeBreakdown - Vector types are broken down into some number of
/// legal first class types.  For example, MVT::v8f32 maps to 2 MVT::v4f32
/// with Altivec or SSE1, or 8 promoted MVT::f64 values with the X86 FP stack.
/// Similarly, MVT::v2i64 turns into 4 MVT::i32 values with both PPC and X86.
///
/// This method returns the number of registers needed, and the VT for each
/// register.  It also returns the VT and quantity of the intermediate values
/// before they are promoted/expanded.</doc>
