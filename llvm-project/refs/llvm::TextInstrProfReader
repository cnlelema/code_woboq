<inh f='llvm/llvm/include/llvm/ProfileData/InstrProfReader.h' l='61' c='llvm::InstrProfReader'/>
<def f='llvm/llvm/include/llvm/ProfileData/InstrProfReader.h' l='143' ll='177'/>
<size>72</size>
<doc f='llvm/llvm/include/llvm/ProfileData/InstrProfReader.h' l='135'>/// Reader for the simple text based instrprof format.
///
/// This format is a simple text format that&apos;s suitable for test data. Records
/// are separated by one or more blank lines, and record fields are separated by
/// new lines.
///
/// Each record consists of a function name, a function hash, a number of
/// counters, and then each counter value, in that order.</doc>
<mbr r='llvm::TextInstrProfReader::DataBuffer' o='192' t='std::unique_ptr&lt;MemoryBuffer&gt;'/>
<mbr r='llvm::TextInstrProfReader::Line' o='256' t='llvm::line_iterator'/>
<mbr r='llvm::TextInstrProfReader::IsIRLevelProfile' o='512' t='bool'/>
<mbr r='llvm::TextInstrProfReader::HasCSIRLevelProfile' o='520' t='bool'/>
<fun r='_ZN4llvm19TextInstrProfReader20readValueProfileDataERNS_15InstrProfRecordE'/>
<fun r='_ZN4llvm19TextInstrProfReaderC1ESt10unique_ptrINS_12MemoryBufferESt14default_deleteIS2_EE'/>
<fun r='_ZN4llvm19TextInstrProfReaderC1ERKS0_'/>
<fun r='_ZN4llvm19TextInstrProfReaderaSERKS0_'/>
<fun r='_ZN4llvm19TextInstrProfReader9hasFormatERKNS_12MemoryBufferE'/>
<fun r='_ZNK4llvm19TextInstrProfReader16isIRLevelProfileEv'/>
<fun r='_ZNK4llvm19TextInstrProfReader19hasCSIRLevelProfileEv'/>
<fun r='_ZN4llvm19TextInstrProfReader10readHeaderEv'/>
<fun r='_ZN4llvm19TextInstrProfReader14readNextRecordERNS_20NamedInstrProfRecordE'/>
<fun r='_ZN4llvm19TextInstrProfReader9getSymtabEv'/>
