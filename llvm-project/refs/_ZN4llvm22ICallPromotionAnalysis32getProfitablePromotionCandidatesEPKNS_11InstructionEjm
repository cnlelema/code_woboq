<dec f='llvm/llvm/include/llvm/Analysis/IndirectCallPromotionAnalysis.h' l='38' type='uint32_t llvm::ICallPromotionAnalysis::getProfitablePromotionCandidates(const llvm::Instruction * Inst, uint32_t NumVals, uint64_t TotalCount)'/>
<def f='llvm/llvm/lib/Analysis/IndirectCallPromotionAnalysis.cpp' l='69' ll='91' type='uint32_t llvm::ICallPromotionAnalysis::getProfitablePromotionCandidates(const llvm::Instruction * Inst, uint32_t NumVals, uint64_t TotalCount)'/>
<use f='llvm/llvm/lib/Analysis/IndirectCallPromotionAnalysis.cpp' l='104' u='c' c='_ZN4llvm22ICallPromotionAnalysis36getPromotionCandidatesForInstructionEPKNS_11InstructionERjRmS4_'/>
<doc f='llvm/llvm/lib/Analysis/IndirectCallPromotionAnalysis.cpp' l='66'>// Indirect-call promotion heuristic. The direct targets are sorted based on
// the count. Stop at the first target that is not promoted. Returns the
// number of candidates deemed profitable.</doc>
<doc f='llvm/llvm/include/llvm/Analysis/IndirectCallPromotionAnalysis.h' l='36'>// Returns the number of profitable candidates to promote for the
  // current ValueDataArray and the given \p Inst.</doc>
