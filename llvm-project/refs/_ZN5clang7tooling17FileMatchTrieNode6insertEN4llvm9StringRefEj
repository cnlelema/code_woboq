<def f='llvm/clang/lib/Tooling/FileMatchTrie.cpp' l='59' ll='81' type='void clang::tooling::FileMatchTrieNode::insert(llvm::StringRef NewPath, unsigned int ConsumedLength = 0)'/>
<use f='llvm/clang/lib/Tooling/FileMatchTrie.cpp' l='80' u='c' c='_ZN5clang7tooling17FileMatchTrieNode6insertEN4llvm9StringRefEj'/>
<use f='llvm/clang/lib/Tooling/FileMatchTrie.cpp' l='181' u='c' c='_ZN5clang7tooling13FileMatchTrie6insertEN4llvm9StringRefE'/>
<doc f='llvm/clang/lib/Tooling/FileMatchTrie.cpp' l='45'>/// Inserts &apos;NewPath&apos; into this trie. \c ConsumedLength denotes
  /// the number of \c NewPath&apos;s trailing characters already consumed during
  /// recursion.
  ///
  /// An insert of a path
  /// &apos;p&apos;starts at the root node and does the following:
  /// - If the node is empty, insert &apos;p&apos; into its storage and abort.
  /// - If the node has a path &apos;p2&apos; but no children, take the last path segment
  ///   &apos;s&apos; of &apos;p2&apos;, put a new child into the map at &apos;s&apos; an insert the rest of
  ///   &apos;p2&apos; there.
  /// - Insert a new child for the last segment of &apos;p&apos; and insert the rest of
  ///   &apos;p&apos; there.
  ///
  /// An insert operation is linear in the number of a path&apos;s segments.</doc>
