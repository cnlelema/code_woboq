<def f='llvm/llvm/include/llvm/CodeGen/GlobalISel/RegisterBankInfo.h' l='46' ll='85'/>
<size>16</size>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/RegisterBankInfo.h' l='39'>/// Helper struct that represents how a value is partially mapped
  /// into a register.
  /// The StartIdx and Length represent what region of the orginal
  /// value this partial mapping covers.
  /// This can be represented as a Mask of contiguous bit starting
  /// at StartIdx bit and spanning Length bits.
  /// StartIdx is the number of bits from the less significant bits.</doc>
<mbr r='llvm::RegisterBankInfo::PartialMapping::StartIdx' o='0' t='unsigned int'/>
<mbr r='llvm::RegisterBankInfo::PartialMapping::Length' o='32' t='unsigned int'/>
<mbr r='llvm::RegisterBankInfo::PartialMapping::RegBank' o='64' t='const llvm::RegisterBank *'/>
<fun r='_ZN4llvm16RegisterBankInfo14PartialMappingC1Ev'/>
<fun r='_ZN4llvm16RegisterBankInfo14PartialMappingC1EjjRKNS_12RegisterBankE'/>
<fun r='_ZNK4llvm16RegisterBankInfo14PartialMapping13getHighBitIdxEv'/>
<fun r='_ZNK4llvm16RegisterBankInfo14PartialMapping4dumpEv'/>
<fun r='_ZNK4llvm16RegisterBankInfo14PartialMapping5printERNS_11raw_ostreamE'/>
<fun r='_ZNK4llvm16RegisterBankInfo14PartialMapping6verifyEv'/>
