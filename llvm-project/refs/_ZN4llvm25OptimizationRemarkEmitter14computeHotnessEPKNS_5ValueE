<dec f='llvm/llvm/include/llvm/Analysis/OptimizationRemarkEmitter.h' l='109' type='Optional&lt;uint64_t&gt; llvm::OptimizationRemarkEmitter::computeHotness(const llvm::Value * V)'/>
<doc f='llvm/llvm/include/llvm/Analysis/OptimizationRemarkEmitter.h' l='107'>/// Compute hotness from IR value (currently assumed to be a block) if PGO is
  /// available.</doc>
<def f='llvm/llvm/lib/Analysis/OptimizationRemarkEmitter.cpp' l='58' ll='63' type='Optional&lt;uint64_t&gt; llvm::OptimizationRemarkEmitter::computeHotness(const llvm::Value * V)'/>
<use f='llvm/llvm/lib/Analysis/OptimizationRemarkEmitter.cpp' l='69' u='c' c='_ZN4llvm25OptimizationRemarkEmitter14computeHotnessERNS_28DiagnosticInfoIROptimizationE'/>
