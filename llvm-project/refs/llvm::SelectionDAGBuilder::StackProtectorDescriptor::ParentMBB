<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h' l='290' u='r' c='_ZNK4llvm19SelectionDAGBuilder24StackProtectorDescriptor24shouldEmitStackProtectorEv'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h' l='294' u='r' c='_ZNK4llvm19SelectionDAGBuilder24StackProtectorDescriptor42shouldEmitFunctionBasedCheckStackProtectorEv'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h' l='304' u='w' c='_ZN4llvm19SelectionDAGBuilder24StackProtectorDescriptor10initializeEPKNS_10BasicBlockEPNS_17MachineBasicBlockEb'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h' l='322' u='w' c='_ZN4llvm19SelectionDAGBuilder24StackProtectorDescriptor15resetPerBBStateEv'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h' l='339' u='r' c='_ZN4llvm19SelectionDAGBuilder24StackProtectorDescriptor12getParentMBBEv'/>
<dec f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h' l='351' type='llvm::MachineBasicBlock *'/>
<offset>0</offset>
<doc f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h' l='344'>/// The basic block for which we are generating the stack protector.
    ///
    /// As a result of stack protector generation, we will splice the
    /// terminators of this basic block into the successor mbb SuccessMBB and
    /// replace it with a compare/branch to the successor mbbs
    /// SuccessMBB/FailureMBB depending on whether or not the stack protector
    /// was violated.</doc>
