<def f='llvm/clang/include/clang/Basic/SourceManager.h' l='402' ll='408' type='static clang::SrcMgr::ExpansionInfo clang::SrcMgr::ExpansionInfo::createForMacroArg(clang::SourceLocation SpellingLoc, clang::SourceLocation ExpansionLoc)'/>
<doc f='llvm/clang/include/clang/Basic/SourceManager.h' l='383'>/// Return a special ExpansionInfo for the expansion of
    /// a macro argument into a function-like macro&apos;s body.
    ///
    /// ExpansionLoc specifies the expansion location (where the macro is
    /// expanded). This doesn&apos;t need to be a range because a macro is always
    /// expanded at a macro parameter reference, and macro parameters are
    /// always exactly one token. SpellingLoc specifies the spelling location
    /// (where the characters from the token come from). ExpansionLoc and
    /// SpellingLoc can both refer to normal File SLocs or expansion locations.
    ///
    /// Given the code:
    /// \code
    ///   #define F(x) f(x)
    ///   F(42);
    /// \endcode
    ///
    /// When expanding &apos;\c F(42)&apos;, the &apos;\c x&apos; would call this with an
    /// SpellingLoc pointing at &apos;\c 42&apos; and an ExpansionLoc pointing at its
    /// location in the definition of &apos;\c F&apos;.</doc>
<use f='llvm/clang/lib/Basic/SourceManager.cpp' l='570' u='c' c='_ZN5clang13SourceManager26createMacroArgExpansionLocENS_14SourceLocationES1_j'/>
