<inh f='llvm/llvm/include/llvm/Demangle/ItaniumDemangle.h' l='186' c='_ZNK4llvm16itanium_demangle4Node9printLeftERNS0_12OutputStreamE'/>
<def f='llvm/llvm/include/llvm/Demangle/ItaniumDemangle.h' l='699' ll='702' type='void llvm::itanium_demangle::FunctionType::printLeft(llvm::itanium_demangle::OutputStream &amp; S) const'/>
<doc f='llvm/llvm/include/llvm/Demangle/ItaniumDemangle.h' l='692'>// Handle C++&apos;s ... quirky decl grammar by using the left &amp; right
  // distinction. Consider:
  //   int (*f(float))(char) {}
  // f is a function that takes a float and returns a pointer to a function
  // that takes a char and returns an int. If we&apos;re trying to print f, start
  // by printing out the return types&apos;s left, then print our parameters, then
  // finally print right of the return type.</doc>
