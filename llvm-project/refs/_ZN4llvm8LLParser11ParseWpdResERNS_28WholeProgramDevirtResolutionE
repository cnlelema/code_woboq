<dec f='llvm/llvm/lib/AsmParser/LLParser.h' l='378' type='bool llvm::LLParser::ParseWpdRes(llvm::WholeProgramDevirtResolution &amp; WPDRes)'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='7604' u='c' c='_ZN4llvm8LLParser27ParseOptionalWpdResolutionsERSt3mapImNS_28WholeProgramDevirtResolutionESt4lessImESaISt4pairIKmS2_EEE'/>
<def f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='7624' ll='7670' type='bool llvm::LLParser::ParseWpdRes(llvm::WholeProgramDevirtResolution &amp; WPDRes)'/>
<doc f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='7616'>/// WpdRes
///   ::= &apos;wpdRes&apos; &apos;:&apos; &apos;(&apos; &apos;kind&apos; &apos;:&apos; &apos;indir&apos;
///         [&apos;,&apos; OptionalResByArg]? &apos;)&apos;
///   ::= &apos;wpdRes&apos; &apos;:&apos; &apos;(&apos; &apos;kind&apos; &apos;:&apos; &apos;singleImpl&apos;
///         &apos;,&apos; &apos;singleImplName&apos; &apos;:&apos; STRINGCONSTANT &apos;,&apos;
///         [&apos;,&apos; OptionalResByArg]? &apos;)&apos;
///   ::= &apos;wpdRes&apos; &apos;:&apos; &apos;(&apos; &apos;kind&apos; &apos;:&apos; &apos;branchFunnel&apos;
///         [&apos;,&apos; OptionalResByArg]? &apos;)&apos;</doc>
