<def f='llvm/llvm/include/llvm/CodeGen/TargetPassConfig.h' l='353' ll='355' type='bool llvm::TargetPassConfig::addILPOpts()'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetPassConfig.h' l='347'>/// Add passes that optimize instruction level parallelism for out-of-order
  /// targets. These passes are run while the machine code is still in SSA
  /// form, so they can use MachineTraceMetrics to control their heuristics.
  ///
  /// All passes added here should preserve the MachineDominatorTree,
  /// MachineLoopInfo, and MachineTraceMetrics analyses.</doc>
<use f='llvm/llvm/lib/CodeGen/TargetPassConfig.cpp' l='1012' u='c' c='_ZN4llvm16TargetPassConfig25addMachineSSAOptimizationEv'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64TargetMachine.cpp' l='526' c='_ZN12_GLOBAL__N_117AArch64PassConfig10addILPOptsEv'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp' l='858' c='_ZN12_GLOBAL__N_113GCNPassConfig10addILPOptsEv'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp' l='862' u='c' c='_ZN12_GLOBAL__N_113GCNPassConfig10addILPOptsEv'/>
<use f='llvm/llvm/lib/Target/NVPTX/NVPTXTargetMachine.cpp' l='388' u='c' c='_ZN12_GLOBAL__N_115NVPTXPassConfig25addMachineSSAOptimizationEv'/>
<ovr f='llvm/llvm/lib/Target/PowerPC/PPCTargetMachine.cpp' l='429' c='_ZN12_GLOBAL__N_113PPCPassConfig10addILPOptsEv'/>
<ovr f='llvm/llvm/lib/Target/SystemZ/SystemZTargetMachine.cpp' l='211' c='_ZN12_GLOBAL__N_117SystemZPassConfig10addILPOptsEv'/>
<ovr f='llvm/llvm/lib/Target/X86/X86TargetMachine.cpp' l='456' c='_ZN12_GLOBAL__N_113X86PassConfig10addILPOptsEv'/>
