<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='99' ll='114' type='bool llvm::isCanonicalPredicate(CmpInst::Predicate Pred)'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='95'>/// Predicate canonicalization reduces the number of patterns that need to be
/// matched by other transforms. For example, we may swap the operands of a
/// conditional branch or select to create a compare with a canonical (inverted)
/// predicate which is then more likely to be matched with other values.</doc>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp' l='1754' u='c' c='_ZN4llvm12InstCombiner15visitSelectInstERNS_10SelectInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='2553' u='c' c='_ZN4llvm12InstCombiner15visitBranchInstERNS_10BranchInstE'/>
