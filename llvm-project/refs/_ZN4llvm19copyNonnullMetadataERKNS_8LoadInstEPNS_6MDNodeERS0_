<dec f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='459' type='void llvm::copyNonnullMetadata(const llvm::LoadInst &amp; OldLI, llvm::MDNode * N, llvm::LoadInst &amp; NewLI)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='455'>/// Copy a nonnull metadata node to a new load instruction.
///
/// This handles mapping it to range metadata if the new load is an integer
/// load instead of a pointer load.</doc>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp' l='498' u='c' c='_ZL20combineLoadToNewTypeRN4llvm12InstCombinerERNS_8LoadInstEPNS_4TypeERKNS_5TwineE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2506' u='c' c='_ZN4llvm4sroa19AllocaSliceRewriter13visitLoadInstERNS_8LoadInstE'/>
<def f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='2508' ll='2531' type='void llvm::copyNonnullMetadata(const llvm::LoadInst &amp; OldLI, llvm::MDNode * N, llvm::LoadInst &amp; NewLI)'/>
