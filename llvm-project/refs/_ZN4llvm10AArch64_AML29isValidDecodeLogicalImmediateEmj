<def f='llvm/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h' l='321' ll='338' type='bool llvm::AArch64_AM::isValidDecodeLogicalImmediate(uint64_t val, unsigned int regSize)'/>
<doc f='llvm/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h' l='318'>/// isValidDecodeLogicalImmediate - Check to see if the logical immediate value
/// in the form &quot;N:immr:imms&quot; (where the immr and imms fields are each 6 bits)
/// is a valid encoding for an integer value with regSize bits.</doc>
<use f='llvm/llvm/lib/Target/AArch64/Disassembler/AArch64Disassembler.cpp' l='1577' u='c' c='_ZL27DecodeLogicalImmInstructionRN4llvm6MCInstEjmPKv'/>
<use f='llvm/llvm/lib/Target/AArch64/Disassembler/AArch64Disassembler.cpp' l='1586' u='c' c='_ZL27DecodeLogicalImmInstructionRN4llvm6MCInstEjmPKv'/>
<use f='llvm/llvm/lib/Target/AArch64/Disassembler/AArch64Disassembler.cpp' l='1814' u='c' c='_ZL30DecodeSVELogicalImmInstructionRN4llvm6MCInstEjmPKv'/>
