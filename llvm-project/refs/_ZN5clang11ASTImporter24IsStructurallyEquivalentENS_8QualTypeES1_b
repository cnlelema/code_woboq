<dec f='llvm/clang/include/clang/AST/ASTImporter.h' l='409' type='bool clang::ASTImporter::IsStructurallyEquivalent(clang::QualType From, clang::QualType To, bool Complain = true)'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='2253' u='c' c='_ZN5clang15ASTNodeImporter20VisitTypedefNameDeclEPNS_15TypedefNameDeclEb'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='3804' u='c' c='_ZN5clang15ASTNodeImporter19VisitObjCMethodDeclEPNS_14ObjCMethodDeclE'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='4708' u='c' c='_ZN5clang15ASTNodeImporter21VisitObjCPropertyDeclEPNS_16ObjCPropertyDeclE'/>
<def f='llvm/clang/lib/AST/ASTImporter.cpp' l='8558' ll='8575' type='bool clang::ASTImporter::IsStructurallyEquivalent(clang::QualType From, clang::QualType To, bool Complain = true)'/>
<doc f='llvm/clang/include/clang/AST/ASTImporter.h' l='407'>/// Determine whether the given types are structurally
    /// equivalent.</doc>
