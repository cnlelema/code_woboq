<dec f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationPlanner.h' l='253' type='static bool llvm::LoopVectorizationPlanner::getDecisionAndClampRange(const std::function&lt;bool (unsigned int)&gt; &amp; Predicate, llvm::VFRange &amp; Range)'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='6364' ll='6376' type='static bool llvm::LoopVectorizationPlanner::getDecisionAndClampRange(const std::function&lt;bool (unsigned int)&gt; &amp; Predicate, llvm::VFRange &amp; Range)'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='6478' u='c' c='_ZN4llvm15VPRecipeBuilder21tryToInterleaveMemoryEPNS_11InstructionERNS_7VFRangeERSt10unique_ptrINS_5VPlanESt14default_deleteIS6_EE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='6515' u='c' c='_ZN4llvm15VPRecipeBuilder16tryToWidenMemoryEPNS_11InstructionERNS_7VFRangeERSt10unique_ptrINS_5VPlanESt14default_deleteIS6_EE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='6551' u='c' c='_ZN4llvm15VPRecipeBuilder22tryToOptimizeInductionEPNS_11InstructionERNS_7VFRangeE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='6585' u='c' c='_ZN4llvm15VPRecipeBuilder10tryToWidenEPNS_11InstructionEPNS_12VPBasicBlockERNS_7VFRangeE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='6673' u='c' c='_ZN4llvm15VPRecipeBuilder10tryToWidenEPNS_11InstructionEPNS_12VPBasicBlockERNS_7VFRangeE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='6692' u='c' c='_ZN4llvm15VPRecipeBuilder17handleReplicationEPNS_11InstructionERNS_7VFRangeEPNS_12VPBasicBlockERNS_8DenseMapIS2_PNS_17VPReplicateRecipeENS_12DenseMapI4676306'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='6696' u='c' c='_ZN4llvm15VPRecipeBuilder17handleReplicationEPNS_11InstructionERNS_7VFRangeEPNS_12VPBasicBlockERNS_8DenseMapIS2_PNS_17VPReplicateRecipeENS_12DenseMapI4676306'/>
<doc f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationPlanner.h' l='249'>/// Test a \p Predicate on a \p Range of VF&apos;s. Return the value of applying
  /// \p Predicate on Range.Start, possibly decreasing Range.End such that the
  /// returned value holds for the entire \p Range.</doc>
