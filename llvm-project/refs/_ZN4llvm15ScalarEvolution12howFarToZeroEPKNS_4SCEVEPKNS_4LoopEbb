<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1614' type='llvm::ScalarEvolution::ExitLimit llvm::ScalarEvolution::howFarToZero(const llvm::SCEV * V, const llvm::Loop * L, bool IsSubExpr, bool AllowPredicates = false)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1610'>/// Return the number of times an exit condition comparing the specified
  /// value to zero will execute.  If not computable, return CouldNotCompute.
  /// If AllowPredicates is set, this call will try to use a minimal set of
  /// SCEV predicates in order to return an exact answer.</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='7367' u='c' c='_ZN4llvm15ScalarEvolution24computeExitLimitFromICmpEPKNS_4LoopEPNS_8ICmpInstEbbb'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='7426' u='c' c='_ZN4llvm15ScalarEvolution36computeExitLimitFromSingleExitSwitchEPKNS_4LoopEPNS_10SwitchInstEPNS_10BasicBlockEb'/>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='8648' ll='8775' type='ScalarEvolution::ExitLimit llvm::ScalarEvolution::howFarToZero(const llvm::SCEV * V, const llvm::Loop * L, bool ControlsExit, bool AllowPredicates = false)'/>
