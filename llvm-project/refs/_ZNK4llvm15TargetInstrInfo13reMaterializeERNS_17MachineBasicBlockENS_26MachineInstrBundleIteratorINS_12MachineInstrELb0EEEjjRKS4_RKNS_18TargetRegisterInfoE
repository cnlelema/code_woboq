<dec f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='347' type='void llvm::TargetInstrInfo::reMaterialize(llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator MI, unsigned int DestReg, unsigned int SubIdx, const llvm::MachineInstr &amp; Orig, const llvm::TargetRegisterInfo &amp; TRI) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='342'>/// Re-issue the specified &apos;original&apos; instruction at the
  /// specific location targeting a new destination register.
  /// The register in Orig-&gt;getOperand(0).getReg() will be substituted by
  /// DestReg:SubIdx. Any existing subreg index is preserved or composed with
  /// SubIdx.</doc>
<use f='llvm/llvm/lib/CodeGen/LiveRangeEdit.cpp' l='171' u='c' c='_ZN4llvm13LiveRangeEdit15rematerializeAtERNS_17MachineBasicBlockENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEEjRKNS0_5RematERKNS_18TargetRegisterInfoEb'/>
<use f='llvm/llvm/lib/CodeGen/RegisterCoalescer.cpp' l='1274' u='c' c='_ZN12_GLOBAL__N_117RegisterCoalescer23reMaterializeTrivialDefERKN4llvm13CoalescerPairEPNS1_12MachineInstrERb'/>
<def f='llvm/llvm/lib/CodeGen/TargetInstrInfo.cpp' l='401' ll='409' type='void llvm::TargetInstrInfo::reMaterialize(llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator I, unsigned int DestReg, unsigned int SubIdx, const llvm::MachineInstr &amp; Orig, const llvm::TargetRegisterInfo &amp; TRI) const'/>
