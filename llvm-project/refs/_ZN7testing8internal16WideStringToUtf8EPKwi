<dec f='llvm/llvm/utils/unittest/googletest/src/gtest-internal-inl.h' l='248' type='std::string testing::internal::WideStringToUtf8(const wchar_t * str, int num_chars)'/>
<use f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='910' u='c' c='_ZN7testing8internalL24StreamWideCharsToMessageEPKwmPNS_7MessageE'/>
<def f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='1823' ll='1844' type='std::string testing::internal::WideStringToUtf8(const wchar_t * str, int num_chars)'/>
<use f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='1851' u='c' c='_ZN7testing8internal6String15ShowWideCStringEPKw'/>
<doc f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='1810'>// Converts a wide string to a narrow string in UTF-8 encoding.
// The wide string is assumed to have the following encoding:
//   UTF-16 if sizeof(wchar_t) == 2 (on Windows, Cygwin, Symbian OS)
//   UTF-32 if sizeof(wchar_t) == 4 (on Linux)
// Parameter str points to a null-terminated wide string.
// Parameter num_chars may additionally limit the number
// of wchar_t characters processed. -1 is used when the entire string
// should be processed.
// If the string contains code points that are not valid Unicode code points
// (i.e. outside of Unicode range U+0 to U+10FFFF) they will be output
// as &apos;(Invalid Unicode 0xXXXXXXXX)&apos;. If the string is in UTF16 encoding
// and contains invalid UTF-16 surrogate pairs, values in those pairs
// will be encoded as individual Unicode characters from Basic Normal Plane.</doc>
