<def f='llvm/llvm/include/llvm/ADT/APInt.h' l='658' ll='666' type='static bool llvm::APInt::isSameValue(const llvm::APInt &amp; I1, const llvm::APInt &amp; I2)'/>
<doc f='llvm/llvm/include/llvm/ADT/APInt.h' l='656'>/// Determine if two APInts have the same value, after zero-extending
  /// one of them (if needed!) to ensure that the bit-widths match.</doc>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='9139' u='c' c='_ZN5clang10ASTContext10mergeTypesENS_8QualTypeES1_bbbbbb'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='465' u='c' c='_ZL24IsStructurallyEquivalentRN5clang28StructuralEquivalenceContextENS_8QualTypeES2_'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonConstPropagation.cpp' l='1190' u='c' c='_ZN12_GLOBAL__N_121MachineConstEvaluator13evaluateCMPiiEjRKN4llvm5APIntES4_Rb'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonConstPropagation.cpp' l='1194' u='c' c='_ZN12_GLOBAL__N_121MachineConstEvaluator13evaluateCMPiiEjRKN4llvm5APIntES4_Rb'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonConstPropagation.cpp' l='1198' u='c' c='_ZN12_GLOBAL__N_121MachineConstEvaluator13evaluateCMPiiEjRKN4llvm5APIntES4_Rb'/>
