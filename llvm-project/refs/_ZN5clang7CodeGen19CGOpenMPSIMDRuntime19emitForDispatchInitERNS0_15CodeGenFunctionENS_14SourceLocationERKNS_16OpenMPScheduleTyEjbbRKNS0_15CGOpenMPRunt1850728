<dec f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.h' l='1770' type='void clang::CodeGen::CGOpenMPSIMDRuntime::emitForDispatchInit(clang::CodeGen::CodeGenFunction &amp; CGF, clang::SourceLocation Loc, const clang::OpenMPScheduleTy &amp; ScheduleKind, unsigned int IVSize, bool IVSigned, bool Ordered, const clang::CodeGen::CGOpenMPRuntime::DispatchRTInput &amp; DispatchValues)'/>
<doc f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.h' l='1754'>/// This is used for non static scheduled types and when the ordered
  /// clause is present on the loop construct.
  /// Depending on the loop schedule, it is necessary to call some runtime
  /// routine before start of the OpenMP loop to get the loop upper / lower
  /// bounds \a LB and \a UB and stride \a ST.
  ///
  /// \param CGF Reference to current CodeGenFunction.
  /// \param Loc Clang source location.
  /// \param ScheduleKind Schedule kind, specified by the &apos;schedule&apos; clause.
  /// \param IVSize Size of the iteration variable in bits.
  /// \param IVSigned Sign of the iteration variable.
  /// \param Ordered true if loop is ordered, false otherwise.
  /// \param DispatchValues struct containing llvm values for lower bound, upper
  /// bound, and chunk expression.
  /// For the default (nullptr) value, the chunk 1 will be used.
  ///</doc>
<inh f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='3487' c='_ZN5clang7CodeGen15CGOpenMPRuntime19emitForDispatchInitERNS0_15CodeGenFunctionENS_14SourceLocationERKNS_16OpenMPScheduleTyEjbbRKNS1_15DispatchRTInputE'/>
<def f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='10545' ll='10550' type='void clang::CodeGen::CGOpenMPSIMDRuntime::emitForDispatchInit(clang::CodeGen::CodeGenFunction &amp; CGF, clang::SourceLocation Loc, const clang::OpenMPScheduleTy &amp; ScheduleKind, unsigned int IVSize, bool IVSigned, bool Ordered, const clang::CodeGen::CGOpenMPRuntime::DispatchRTInput &amp; DispatchValues)'/>
