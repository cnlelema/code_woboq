<dec f='llvm/llvm/include/llvm/Transforms/Scalar/SROA.h' l='131' type='bool llvm::SROA::deleteDeadInstructions(SmallPtrSetImpl&lt;llvm::AllocaInst *&gt; &amp; DeletedAllocas)'/>
<def f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='4489' ll='4520' type='bool llvm::SROA::deleteDeadInstructions(SmallPtrSetImpl&lt;llvm::AllocaInst *&gt; &amp; DeletedAllocas)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='4561' u='c' c='_ZN4llvm4SROA7runImplERNS_8FunctionERNS_13DominatorTreeERNS_15AssumptionCacheE'/>
<doc f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='4480'>/// Delete the dead instructions accumulated in this run.
///
/// Recursively deletes the dead instructions we&apos;ve accumulated. This is done
/// at the very end to maximize locality of the recursive delete and to
/// minimize the problems of invalidated instruction pointers as such pointers
/// are used heavily in the intermediate stages of the algorithm.
///
/// We also record the alloca instructions deleted here so that they aren&apos;t
/// subsequently handed to mem2reg to promote.</doc>
