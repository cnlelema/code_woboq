<dec f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.h' l='482' type='unsigned int llvm::HexagonInstrInfo::nonDbgBBSize(const llvm::MachineBasicBlock * BB) const'/>
<doc f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.h' l='480'>/// getInstrTimingClassLatency - Compute the instruction latency of a given
  /// instruction using Timing Class information, if available.</doc>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonBranchRelaxation.cpp' l='160' u='c' c='_ZN12_GLOBAL__N_123HexagonBranchRelaxation16isJumpOutOfRangeERN4llvm12MachineInstrERNS1_8DenseMapIPNS1_17MachineBasicBlockEjNS1_12DenseMapInfoIS6_EENS15141014'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='762' u='c' c='_ZNK4llvm16HexagonInstrInfo19isProfitableToIfCvtERNS_17MachineBasicBlockEjjNS_17BranchProbabilityE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='769' u='c' c='_ZNK4llvm16HexagonInstrInfo19isProfitableToIfCvtERNS_17MachineBasicBlockEjjS2_jjNS_17BranchProbabilityE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='769' u='c' c='_ZNK4llvm16HexagonInstrInfo19isProfitableToIfCvtERNS_17MachineBasicBlockEjjS2_jjNS_17BranchProbabilityE'/>
<def f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='4329' ll='4331' type='unsigned int llvm::HexagonInstrInfo::nonDbgBBSize(const llvm::MachineBasicBlock * BB) const'/>
<doc f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='4328'>// Calculate size of the basic block without debug instructions.</doc>
