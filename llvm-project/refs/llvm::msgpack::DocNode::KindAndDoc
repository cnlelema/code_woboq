<dec f='llvm/llvm/include/llvm/BinaryFormat/MsgPackDocument.h' l='50' type='const llvm::msgpack::KindAndDocument *'/>
<use f='llvm/llvm/include/llvm/BinaryFormat/MsgPackDocument.h' l='65' u='w' c='_ZN4llvm7msgpack7DocNodeC1Ev'/>
<use f='llvm/llvm/include/llvm/BinaryFormat/MsgPackDocument.h' l='74' u='r' c='_ZNK4llvm7msgpack7DocNode7isEmptyEv'/>
<use f='llvm/llvm/include/llvm/BinaryFormat/MsgPackDocument.h' l='75' u='r' c='_ZNK4llvm7msgpack7DocNode7getKindEv'/>
<use f='llvm/llvm/include/llvm/BinaryFormat/MsgPackDocument.h' l='76' u='r' c='_ZNK4llvm7msgpack7DocNode11getDocumentEv'/>
<use f='llvm/llvm/include/llvm/BinaryFormat/MsgPackDocument.h' l='149' u='r' c='_ZN4llvm7msgpackltERKNS0_7DocNodeES3_'/>
<use f='llvm/llvm/include/llvm/BinaryFormat/MsgPackDocument.h' l='149' u='r' c='_ZN4llvm7msgpackltERKNS0_7DocNodeES3_'/>
<use f='llvm/llvm/include/llvm/BinaryFormat/MsgPackDocument.h' l='150' u='r' c='_ZN4llvm7msgpackltERKNS0_7DocNodeES3_'/>
<use f='llvm/llvm/include/llvm/BinaryFormat/MsgPackDocument.h' l='152' u='r' c='_ZN4llvm7msgpackltERKNS0_7DocNodeES3_'/>
<use f='llvm/llvm/include/llvm/BinaryFormat/MsgPackDocument.h' l='190' u='w' c='_ZN4llvm7msgpack7DocNodeC1EPKNS0_15KindAndDocumentE'/>
<offset>0</offset>
<doc f='llvm/llvm/include/llvm/BinaryFormat/MsgPackDocument.h' l='46'>// Using KindAndDocument allows us to squeeze Kind and a pointer to the
  // owning Document into the same word. Having a pointer to the owning
  // Document makes the API of DocNode more convenient, and allows its use in
  // YAMLIO.</doc>
