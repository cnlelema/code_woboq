<inh f='llvm/llvm/include/llvm/Support/BinaryByteStream.h' l='31' c='llvm::BinaryByteStream'/>
<def f='llvm/llvm/include/llvm/Support/BinaryByteStream.h' l='75' ll='83'/>
<size>40</size>
<doc f='llvm/llvm/include/llvm/Support/BinaryByteStream.h' l='71'>/// An implementation of BinaryStream whose data is backed by an llvm
/// MemoryBuffer object.  MemoryBufferByteStream owns the MemoryBuffer in
/// question.  As with BinaryByteStream, reading from a MemoryBufferByteStream
/// will never cause a copy.</doc>
<fun r='_ZN4llvm22MemoryBufferByteStreamC1ESt10unique_ptrINS_12MemoryBufferESt14default_deleteIS2_EENS_7support10endiannessE'/>
<mbr r='llvm::MemoryBufferByteStream::MemBuffer' o='256' t='std::unique_ptr&lt;MemoryBuffer&gt;'/>
