<dec f='llvm/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h' l='61' type='void llvm::DeleteDeadBlocks(ArrayRef&lt;llvm::BasicBlock *&gt; BBs, llvm::DomTreeUpdater * DTU = nullptr, bool KeepOneInputPHIs = false)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h' l='55'>/// Delete the specified blocks from \p BB. The set of deleted blocks must have
/// no predecessors that are not being deleted themselves. \p BBs must have no
/// duplicating blocks. If there are loops among this set of blocks, all
/// relevant loop info updates should be done before this function is called.
/// If \p KeepOneInputPHIs is true, one-input Phis in successors of blocks
/// being deleted will be preserved.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/MergeICmps.cpp' l='752' u='c' c='_ZN12_GLOBAL__N_111BCECmpChain8simplifyERKN4llvm17TargetLibraryInfoERNS1_9AAResultsERNS1_14DomTreeUpdaterE'/>
<use f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='90' u='c' c='_ZN4llvm15DeleteDeadBlockEPNS_10BasicBlockEPNS_14DomTreeUpdaterEb'/>
<def f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='93' ll='115' type='void llvm::DeleteDeadBlocks(ArrayRef&lt;llvm::BasicBlock *&gt; BBs, llvm::DomTreeUpdater * DTU = nullptr, bool KeepOneInputPHIs = false)'/>
<use f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='134' u='c' c='_ZN4llvm26EliminateUnreachableBlocksERNS_8FunctionEPNS_14DomTreeUpdaterEb'/>
