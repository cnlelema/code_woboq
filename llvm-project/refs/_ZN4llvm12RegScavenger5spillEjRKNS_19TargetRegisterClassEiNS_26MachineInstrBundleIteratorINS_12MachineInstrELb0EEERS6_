<dec f='llvm/llvm/include/llvm/CodeGen/RegisterScavenging.h' l='228' type='llvm::RegScavenger::ScavengedInfo &amp; llvm::RegScavenger::spill(unsigned int Reg, const llvm::TargetRegisterClass &amp; RC, int SPAdj, MachineBasicBlock::iterator Before, MachineBasicBlock::iterator &amp; UseMI)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/RegisterScavenging.h' l='226'>/// Spill a register after position \p After and reload it before position
  /// \p UseMI.</doc>
<def f='llvm/llvm/lib/CodeGen/RegisterScavenging.cpp' l='459' ll='532' type='RegScavenger::ScavengedInfo &amp; llvm::RegScavenger::spill(unsigned int Reg, const llvm::TargetRegisterClass &amp; RC, int SPAdj, MachineBasicBlock::iterator Before, MachineBasicBlock::iterator &amp; UseMI)'/>
<use f='llvm/llvm/lib/CodeGen/RegisterScavenging.cpp' l='570' u='c' c='_ZN4llvm12RegScavenger16scavengeRegisterEPKNS_19TargetRegisterClassENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEEib'/>
<use f='llvm/llvm/lib/CodeGen/RegisterScavenging.cpp' l='610' u='c' c='_ZN4llvm12RegScavenger25scavengeRegisterBackwardsERKNS_19TargetRegisterClassENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEEbib'/>
