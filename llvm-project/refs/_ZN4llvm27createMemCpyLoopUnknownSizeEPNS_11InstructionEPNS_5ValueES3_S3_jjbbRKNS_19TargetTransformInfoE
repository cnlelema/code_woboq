<dec f='llvm/llvm/include/llvm/Transforms/Utils/LowerMemIntrinsics.h' l='29' type='void llvm::createMemCpyLoopUnknownSize(llvm::Instruction * InsertBefore, llvm::Value * SrcAddr, llvm::Value * DstAddr, llvm::Value * CopyLen, unsigned int SrcAlign, unsigned int DestAlign, bool SrcIsVolatile, bool DstIsVolatile, const llvm::TargetTransformInfo &amp; TTI)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/LowerMemIntrinsics.h' l='27'>/// Emit a loop implementing the semantics of llvm.memcpy where the size is not
/// a compile-time constant. Loop will be insterted at \p InsertBefore.</doc>
<def f='llvm/llvm/lib/Transforms/Utils/LowerMemIntrinsics.cpp' l='135' ll='263' type='void llvm::createMemCpyLoopUnknownSize(llvm::Instruction * InsertBefore, llvm::Value * SrcAddr, llvm::Value * DstAddr, llvm::Value * CopyLen, unsigned int SrcAlign, unsigned int DestAlign, bool SrcIsVolatile, bool DstIsVolatile, const llvm::TargetTransformInfo &amp; TTI)'/>
<use f='llvm/llvm/lib/Transforms/Utils/LowerMemIntrinsics.cpp' l='421' u='c' c='_ZN4llvm18expandMemCpyAsLoopEPNS_10MemCpyInstERKNS_19TargetTransformInfoE'/>
