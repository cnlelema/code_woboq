<inh f='llvm/llvm/include/llvm/IR/Constant.h' l='41' c='llvm::Constant'/>
<def f='llvm/llvm/include/llvm/IR/Constants.h' l='57' ll='77'/>
<ovr f='llvm/llvm/include/llvm/IR/Constants.h' l='83' c='llvm::ConstantInt'/>
<ovr f='llvm/llvm/include/llvm/IR/Constants.h' l='263' c='llvm::ConstantFP'/>
<ovr f='llvm/llvm/include/llvm/IR/Constants.h' l='340' c='llvm::ConstantAggregateZero'/>
<ovr f='llvm/llvm/include/llvm/IR/Constants.h' l='538' c='llvm::ConstantPointerNull'/>
<ovr f='llvm/llvm/include/llvm/IR/Constants.h' l='573' c='llvm::ConstantDataSequential'/>
<ovr f='llvm/llvm/include/llvm/IR/Constants.h' l='817' c='llvm::ConstantTokenNone'/>
<ovr f='llvm/llvm/include/llvm/IR/Constants.h' l='1285' c='llvm::UndefValue'/>
<size>24</size>
<doc f='llvm/llvm/include/llvm/IR/Constants.h' l='52'>/// Base class for constants with no operands.
///
/// These constants have no operands; they represent their data directly.
/// Since they can be in use by unrelated modules (and are never based on
/// GlobalValues), it never makes sense to RAUW them.</doc>
<fun r='_ZN4llvm12ConstantData23handleOperandChangeImplEPNS_5ValueES2_'/>
<fun r='_ZN4llvm12ConstantDataC1EPNS_4TypeENS_5Value7ValueTyE'/>
<fun r='_ZN4llvm12ConstantDatanwEm'/>
<fun r='_ZN4llvm12ConstantDataC1ERKS0_'/>
<fun r='_ZN4llvm12ConstantData7classofEPKNS_5ValueE'/>
