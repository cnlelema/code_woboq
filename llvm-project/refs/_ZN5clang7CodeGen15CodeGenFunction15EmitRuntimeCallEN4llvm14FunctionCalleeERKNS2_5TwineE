<dec f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='3646' type='llvm::CallInst * clang::CodeGen::CodeGenFunction::EmitRuntimeCall(llvm::FunctionCallee callee, const llvm::Twine &amp; name = &quot;&quot;)'/>
<def f='llvm/clang/lib/CodeGen/CGCall.cpp' l='3736' ll='3739' type='llvm::CallInst * clang::CodeGen::CodeGenFunction::EmitRuntimeCall(llvm::FunctionCallee callee, const llvm::Twine &amp; name = &quot;&quot;)'/>
<doc f='llvm/clang/lib/CodeGen/CGCall.cpp' l='3734'>/// Emits a simple call (never an invoke) to the given no-arguments
/// runtime function.</doc>
<use f='llvm/clang/lib/CodeGen/CGDeclCXX.cpp' l='705' u='c' c='_ZN5clang7CodeGen15CodeGenFunction25GenerateCXXGlobalInitFuncEPN4llvm8FunctionENS2_8ArrayRefIS4_EENS0_15ConstantAddressE'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeNVPTX.cpp' l='1212' u='c' c='_ZN5clang7CodeGen20CGOpenMPRuntimeNVPTX22emitNonSPMDEntryHeaderERNS0_15CodeGenFunctionERNS1_18EntryFunctionStateERNS1_19WorkerFunctionStateE'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeNVPTX.cpp' l='1317' u='c' c='_ZN5clang7CodeGen20CGOpenMPRuntimeNVPTX19emitSPMDEntryHeaderERNS0_15CodeGenFunctionERNS1_18EntryFunctionStateERKNS_22OMPExecutableDirectiveE'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeNVPTX.cpp' l='2545' u='c' c='_ZN5clang7CodeGen20CGOpenMPRuntimeNVPTX23emitNonSPMDParallelCallERNS0_15CodeGenFunctionENS_14SourceLocationEPN4llvm5ValueENS5_8ArrayRefIS7_EEPKNS_4ExprE'/>
