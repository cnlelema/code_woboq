<dec f='llvm/lld/lib/ReaderWriter/MachO/MachONormalizedFile.h' l='279' type='bool lld::mach_o::normalized::sliceFromFatFile(llvm::MemoryBufferRef mb, MachOLinkingContext::Arch arch, uint32_t &amp; offset, uint32_t &amp; size)'/>
<doc f='llvm/lld/lib/ReaderWriter/MachO/MachONormalizedFile.h' l='276'>/// If the buffer is a fat file with the request arch, then this function
/// returns true with &apos;offset&apos; and &apos;size&apos; set to location of the arch slice
/// within the buffer.  Otherwise returns false;</doc>
<use f='llvm/lld/lib/ReaderWriter/MachO/MachOLinkingContext.cpp' l='165' u='c' c='_ZN3lld19MachOLinkingContext16sliceFromFatFileEN4llvm15MemoryBufferRefERjS3_'/>
<def f='llvm/lld/lib/ReaderWriter/MachO/MachONormalizedFileBinaryReader.cpp' l='174' ll='200' type='bool lld::mach_o::normalized::sliceFromFatFile(llvm::MemoryBufferRef mb, MachOLinkingContext::Arch arch, uint32_t &amp; offset, uint32_t &amp; size)'/>
<use f='llvm/lld/lib/ReaderWriter/MachO/MachONormalizedFileBinaryReader.cpp' l='215' u='c' c='_ZN3lld6mach_o10normalized10readBinaryERSt10unique_ptrIN4llvm12MemoryBufferESt14default_deleteIS4_EENS_19MachOLinkingContext4ArchE'/>
