<dec f='llvm/clang/include/clang/Sema/Sema.h' l='2926' type='bool clang::Sema::CheckNonDependentConversions(clang::FunctionTemplateDecl * FunctionTemplate, ArrayRef&lt;clang::QualType&gt; ParamTypes, ArrayRef&lt;clang::Expr *&gt; Args, clang::OverloadCandidateSet &amp; CandidateSet, ConversionSequenceList &amp; Conversions, bool SuppressUserConversions, clang::CXXRecordDecl * ActingContext = nullptr, clang::QualType ObjectType = clang::QualType(), Expr::Classification ObjectClassification = {})'/>
<def f='llvm/clang/lib/Sema/SemaOverload.cpp' l='6847' ll='6899' type='bool clang::Sema::CheckNonDependentConversions(clang::FunctionTemplateDecl * FunctionTemplate, ArrayRef&lt;clang::QualType&gt; ParamTypes, ArrayRef&lt;clang::Expr *&gt; Args, clang::OverloadCandidateSet &amp; CandidateSet, ConversionSequenceList &amp; Conversions, bool SuppressUserConversions, clang::CXXRecordDecl * ActingContext = nullptr, clang::QualType ObjectType = clang::QualType(), Expr::Classification ObjectClassification = {})'/>
<doc f='llvm/clang/lib/Sema/SemaOverload.cpp' l='6844'>/// Check that implicit conversion sequences can be formed for each argument
/// whose corresponding parameter has a non-dependent type, per DR1391&apos;s
/// [temp.deduct.call]p10.</doc>
