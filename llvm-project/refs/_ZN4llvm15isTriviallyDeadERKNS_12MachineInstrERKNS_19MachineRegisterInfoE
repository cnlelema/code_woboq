<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/Utils.h' l='95' type='bool llvm::isTriviallyDead(const llvm::MachineInstr &amp; MI, const llvm::MachineRegisterInfo &amp; MRI)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/Utils.h' l='93'>/// Check whether an instruction \p MI is dead: it only defines dead virtual
/// registers, and doesn&apos;t have other side effects.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/Combiner.cpp' l='127' u='c' c='_ZN4llvm8Combiner20combineMachineInstrsERNS_15MachineFunctionEPNS_12GISelCSEInfoE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/InstructionSelect.cpp' l='123' u='c' c='_ZN4llvm17InstructionSelect20runOnMachineFunctionERNS_15MachineFunctionE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/Legalizer.cpp' l='216' u='c' c='_ZN4llvm9Legalizer20runOnMachineFunctionERNS_15MachineFunctionE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/Legalizer.cpp' l='238' u='c' c='_ZN4llvm9Legalizer20runOnMachineFunctionERNS_15MachineFunctionE'/>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/Utils.cpp' l='160' ll='179' type='bool llvm::isTriviallyDead(const llvm::MachineInstr &amp; MI, const llvm::MachineRegisterInfo &amp; MRI)'/>
