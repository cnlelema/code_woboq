<dec f='llvm/llvm/utils/TableGen/X86DisassemblerTables.h' l='87' type='void llvm::X86Disassembler::DisassemblerTables::emitModRMDecision(llvm::raw_ostream &amp; o1, llvm::raw_ostream &amp; o2, unsigned int &amp; i1, unsigned int &amp; i2, unsigned int &amp; ModRMTableNum, ModRMDecision &amp; decision) const'/>
<doc f='llvm/llvm/utils/TableGen/X86DisassemblerTables.h' l='56'>/// emitModRMDecision - Emits a table of entries corresponding to a single
  ///   ModR/M decision.  Compacts the ModR/M decision if possible.  ModR/M
  ///   decisions are printed as:
  ///
  ///   { /* struct ModRMDecision */
  ///     TYPE,
  ///     modRMTablennnn
  ///   }
  ///
  ///   where nnnn is a unique ID for the corresponding table of IDs.
  ///   TYPE indicates whether the table has one entry that is the same
  ///   regardless of ModR/M byte, two entries - one for bytes 0x00-0xbf and one
  ///   for bytes 0xc0-0xff -, or 256 entries, one for each possible byte.
  ///   nnnn is the number of a table for looking up these values.  The tables
  ///   are written separately so that tables consisting entirely of zeros will
  ///   not be duplicated.  (These all have the name modRMEmptyTable.)  A table
  ///   is printed as:
  ///
  ///   InstrUID modRMTablennnn[k] = {
  ///     nnnn, /* MNEMONIC */
  ///     ...
  ///     nnnn /* MNEMONIC */
  ///   };
  ///
  /// @param o1       - The output stream to print the ID table to.
  /// @param o2       - The output stream to print the decision structure to.
  /// @param i1       - The indentation level to use with stream o1.
  /// @param i2       - The indentation level to use with stream o2.
  /// @param ModRMTableNum - next table number for adding to ModRMTable.
  /// @param decision - The ModR/M decision to emit.  This decision has 256
  ///                   entries - emitModRMDecision decides how to compact it.</doc>
<def f='llvm/llvm/utils/TableGen/X86DisassemblerTables.cpp' l='662' ll='762' type='void llvm::X86Disassembler::DisassemblerTables::emitModRMDecision(llvm::raw_ostream &amp; o1, llvm::raw_ostream &amp; o2, unsigned int &amp; i1, unsigned int &amp; i2, unsigned int &amp; ModRMTableNum, ModRMDecision &amp; decision) const'/>
<use f='llvm/llvm/utils/TableGen/X86DisassemblerTables.cpp' l='778' u='c' c='_ZNK4llvm15X86Disassembler18DisassemblerTables18emitOpcodeDecisionERNS_11raw_ostreamES3_RjS4_S4_R14OpcodeDecision'/>
