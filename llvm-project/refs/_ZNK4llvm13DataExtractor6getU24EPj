<dec f='llvm/llvm/include/llvm/Support/DataExtractor.h' l='277' type='uint32_t llvm::DataExtractor::getU24(uint32_t * offset_ptr) const'/>
<doc f='llvm/llvm/include/llvm/Support/DataExtractor.h' l='262'>/// Extract a 24-bit unsigned value from \a *offset_ptr and return it
  /// in a uint32_t.
  ///
  /// Extract 3 bytes from the binary data at the offset pointed to by
  /// \a offset_ptr, construct a uint32_t from them and update the offset
  /// on success.
  ///
  /// @param[in,out] offset_ptr
  ///     A pointer to an offset within the data that will be advanced
  ///     by the 3 bytes if the value is extracted correctly. If the offset
  ///     is out of bounds or there are not enough bytes to extract this value,
  ///     the offset will be left unmodified.
  ///
  /// @return
  ///     The extracted 24-bit value represented in a uint32_t.</doc>
<use f='llvm/llvm/lib/DebugInfo/DWARF/DWARFFormValue.cpp' l='290' u='c' c='_ZN4llvm14DWARFFormValue12extractValueERKNS_18DWARFDataExtractorEPjNS_5dwarf10FormParamsEPKNS_12DWARFContextEPKNS_9DWARFUnitE'/>
<def f='llvm/llvm/lib/Support/DataExtractor.cpp' l='70' ll='75' type='uint32_t llvm::DataExtractor::getU24(uint32_t * offset_ptr) const'/>
