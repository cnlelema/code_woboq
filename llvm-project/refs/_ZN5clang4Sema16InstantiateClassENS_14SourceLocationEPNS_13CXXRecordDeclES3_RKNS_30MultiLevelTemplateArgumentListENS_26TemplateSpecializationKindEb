<dec f='llvm/clang/include/clang/Sema/Sema.h' l='8054' type='bool clang::Sema::InstantiateClass(clang::SourceLocation PointOfInstantiation, clang::CXXRecordDecl * Instantiation, clang::CXXRecordDecl * Pattern, const clang::MultiLevelTemplateArgumentList &amp; TemplateArgs, clang::TemplateSpecializationKind TSK, bool Complain = true)'/>
<def f='llvm/clang/lib/Sema/SemaTemplateInstantiate.cpp' l='2015' ll='2251' type='bool clang::Sema::InstantiateClass(clang::SourceLocation PointOfInstantiation, clang::CXXRecordDecl * Instantiation, clang::CXXRecordDecl * Pattern, const clang::MultiLevelTemplateArgumentList &amp; TemplateArgs, clang::TemplateSpecializationKind TSK, bool Complain = true)'/>
<doc f='llvm/clang/lib/Sema/SemaTemplateInstantiate.cpp' l='1993'>/// Instantiate the definition of a class from a given pattern.
///
/// \param PointOfInstantiation The point of instantiation within the
/// source code.
///
/// \param Instantiation is the declaration whose definition is being
/// instantiated. This will be either a class template specialization
/// or a member class of a class template specialization.
///
/// \param Pattern is the pattern from which the instantiation
/// occurs. This will be either the declaration of a class template or
/// the declaration of a member class of a class template.
///
/// \param TemplateArgs The template arguments to be substituted into
/// the pattern.
///
/// \param TSK the kind of implicit or explicit instantiation to perform.
///
/// \param Complain whether to complain if the class cannot be instantiated due
/// to the lack of a definition.
///
/// \returns true if an error occurred, false otherwise.</doc>
