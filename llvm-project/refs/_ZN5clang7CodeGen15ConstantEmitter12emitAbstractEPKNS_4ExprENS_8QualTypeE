<dec f='llvm/clang/lib/CodeGen/ConstantEmitter.h' l='102' type='llvm::Constant * clang::CodeGen::ConstantEmitter::emitAbstract(const clang::Expr * E, clang::QualType T)'/>
<doc f='llvm/clang/lib/CodeGen/ConstantEmitter.h' l='98'>/// Emit the result of the given expression as an abstract constant,
  /// asserting that it succeeded.  This is only safe to do when the
  /// expression is known to be a constant expression with either a fairly
  /// simple type or a known simple form.</doc>
<use f='llvm/clang/lib/CodeGen/CGBuiltin.cpp' l='1887' u='c' c='_ZN5clang7CodeGen15CodeGenFunction15EmitBuiltinExprENS_10GlobalDeclEjPKNS_8CallExprENS0_15ReturnValueSlotE'/>
<use f='llvm/clang/lib/CodeGen/CGBuiltin.cpp' l='2675' u='c' c='_ZN5clang7CodeGen15CodeGenFunction15EmitBuiltinExprENS_10GlobalDeclEjPKNS_8CallExprENS0_15ReturnValueSlotE'/>
<use f='llvm/clang/lib/CodeGen/CGBuiltin.cpp' l='2687' u='c' c='_ZN5clang7CodeGen15CodeGenFunction15EmitBuiltinExprENS_10GlobalDeclEjPKNS_8CallExprENS0_15ReturnValueSlotE'/>
<use f='llvm/clang/lib/CodeGen/CGDebugInfo.cpp' l='1821' u='c' c='_ZN5clang7CodeGen11CGDebugInfo21CollectTemplateParamsEPKNS_21TemplateParameterListEN4llvm8ArrayRefINS_16TemplateArgumentEEEPNS5_6DIFileE'/>
<def f='llvm/clang/lib/CodeGen/CGExprConstant.cpp' l='1234' ll='1245' type='llvm::Constant * clang::CodeGen::ConstantEmitter::emitAbstract(const clang::Expr * E, clang::QualType destType)'/>
<use f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='6074' u='c' c='_ZN5clang7CodeGen13CodeGenModule34createOpenCLIntToSamplerConversionEPKNS_4ExprERNS0_15CodeGenFunctionE'/>
