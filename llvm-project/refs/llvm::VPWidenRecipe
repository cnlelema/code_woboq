<inh f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='568' c='llvm::VPRecipeBase'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='705' ll='737'/>
<size>56</size>
<doc f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='701'>/// VPWidenRecipe is a recipe for producing a copy of vector type for each
/// Instruction in its ingredients independently, in order. This recipe covers
/// most of the traditional vectorization cases where each ingredient transforms
/// into a vectorized version of itself.</doc>
<mbr r='llvm::VPWidenRecipe::Begin' o='320' t='BasicBlock::iterator'/>
<mbr r='llvm::VPWidenRecipe::End' o='384' t='BasicBlock::iterator'/>
<fun r='_ZN4llvm13VPWidenRecipeC1EPNS_11InstructionE'/>
<fun r='_ZN4llvm13VPWidenRecipeD1Ev'/>
<fun r='_ZN4llvm13VPWidenRecipe7classofEPKNS_12VPRecipeBaseE'/>
<fun r='_ZN4llvm13VPWidenRecipe7executeERNS_16VPTransformStateE'/>
<fun r='_ZN4llvm13VPWidenRecipe17appendInstructionEPNS_11InstructionE'/>
<fun r='_ZNK4llvm13VPWidenRecipe5printERNS_11raw_ostreamERKNS_5TwineE'/>
<fun r='_ZN4llvm13VPWidenRecipe7executeERNS_16VPTransformStateE'/>
