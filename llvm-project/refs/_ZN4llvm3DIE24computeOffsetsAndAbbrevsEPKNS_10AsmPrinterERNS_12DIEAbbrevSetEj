<dec f='llvm/llvm/include/llvm/CodeGen/DIE.h' l='786' type='unsigned int llvm::DIE::computeOffsetsAndAbbrevs(const llvm::AsmPrinter * AP, llvm::DIEAbbrevSet &amp; AbbrevSet, unsigned int CUOffset)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/DIE.h' l='770'>/// Compute the offset of this DIE and all its children.
  ///
  /// This function gets called just before we are going to generate the debug
  /// information and gives each DIE a chance to figure out its CU relative DIE
  /// offset, unique its abbreviation and fill in the abbreviation code, and
  /// return the unit offset that points to where the next DIE will be emitted
  /// within the debug unit section. After this function has been called for all
  /// DIE objects, the DWARF can be generated since all DIEs will be able to
  /// properly refer to other DIE objects since all DIEs have calculated their
  /// offsets.
  ///
  /// \param AP AsmPrinter to use when calculating sizes.
  /// \param AbbrevSet the abbreviation used to unique DIE abbreviations.
  /// \param CUOffset the compile/type unit relative offset in bytes.
  /// \returns the offset for the DIE that follows this DIE within the
  /// current compile/type unit.</doc>
<def f='llvm/llvm/lib/CodeGen/AsmPrinter/DIE.cpp' l='277' ll='311' type='unsigned int llvm::DIE::computeOffsetsAndAbbrevs(const llvm::AsmPrinter * AP, llvm::DIEAbbrevSet &amp; AbbrevSet, unsigned int CUOffset)'/>
<use f='llvm/llvm/lib/CodeGen/AsmPrinter/DIE.cpp' l='300' u='c' c='_ZN4llvm3DIE24computeOffsetsAndAbbrevsEPKNS_10AsmPrinterERNS_12DIEAbbrevSetEj'/>
<use f='llvm/llvm/lib/CodeGen/AsmPrinter/DwarfFile.cpp' l='93' u='c' c='_ZN4llvm9DwarfFile20computeSizeAndOffsetERNS_3DIEEj'/>
<use f='llvm/llvm/unittests/DebugInfo/DWARF/DwarfGenerator.cpp' l='46' u='c' c='_ZN4llvm8dwarfgen3DIE21computeSizeAndOffsetsEj'/>
