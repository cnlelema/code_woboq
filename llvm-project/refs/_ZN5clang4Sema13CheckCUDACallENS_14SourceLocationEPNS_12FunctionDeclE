<dec f='llvm/clang/include/clang/Sema/Sema.h' l='10601' type='bool clang::Sema::CheckCUDACall(clang::SourceLocation Loc, clang::FunctionDecl * Callee)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='10587'>/// Check whether we&apos;re allowed to call Callee from the current context.
  ///
  /// - If the call is never allowed in a semantically-correct program
  ///   (CFP_Never), emits an error and returns false.
  ///
  /// - If the call is allowed in semantically-correct programs, but only if
  ///   it&apos;s never codegen&apos;ed (CFP_WrongSide), creates a deferred diagnostic to
  ///   be emitted if and when the caller is codegen&apos;ed, and returns true.
  ///
  ///   Will only create deferred diagnostics for a given SourceLocation once,
  ///   so you can safely call this multiple times without generating duplicate
  ///   deferred errors.
  ///
  /// - Otherwise, returns true without emitting any diagnostics.</doc>
<def f='llvm/clang/lib/Sema/SemaCUDA.cpp' l='675' ll='742' type='bool clang::Sema::CheckCUDACall(clang::SourceLocation Loc, clang::FunctionDecl * Callee)'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='272' u='c' c='_ZN5clang4Sema17DiagnoseUseOfDeclEPNS_9NamedDeclEN4llvm8ArrayRefINS_14SourceLocationEEEPKNS_17ObjCInterfaceDeclEbbPS7_'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='15391' u='c' c='_ZN5clang4Sema22MarkFunctionReferencedENS_14SourceLocationEPNS_12FunctionDeclEb'/>
