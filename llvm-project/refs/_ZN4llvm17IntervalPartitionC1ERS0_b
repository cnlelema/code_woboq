<dec f='llvm/llvm/include/llvm/Analysis/IntervalPartition.h' l='63' type='void llvm::IntervalPartition::IntervalPartition(llvm::IntervalPartition &amp; I, bool )'/>
<doc f='llvm/llvm/include/llvm/Analysis/IntervalPartition.h' l='60'>// IntervalPartition ctor - Build a reduced interval partition from an
  // existing interval graph.  This takes an additional boolean parameter to
  // distinguish it from a copy constructor.  Always pass in false for now.</doc>
<def f='llvm/llvm/lib/Analysis/IntervalPartition.cpp' l='93' ll='113' type='void llvm::IntervalPartition::IntervalPartition(llvm::IntervalPartition &amp; IP, bool )'/>
<doc f='llvm/llvm/lib/Analysis/IntervalPartition.cpp' l='90'>// IntervalPartition ctor - Build a reduced interval partition from an
// existing interval graph.  This takes an additional boolean parameter to
// distinguish it from a copy constructor.  Always pass in false for now.</doc>
