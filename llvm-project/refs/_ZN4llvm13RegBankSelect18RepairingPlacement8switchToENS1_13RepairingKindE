<def f='llvm/llvm/include/llvm/CodeGen/GlobalISel/RegBankSelect.h' l='398' ll='406' type='void llvm::RegBankSelect::RepairingPlacement::switchTo(llvm::RegBankSelect::RepairingPlacement::RepairingKind NewKind)'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/RegBankSelect.cpp' l='352' u='c' c='_ZNK4llvm13RegBankSelect16tryAvoidingSplitERNS0_18RepairingPlacementERKNS_14MachineOperandERKNS_16RegisterBankInfo12ValueMappingE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/RegBankSelect.cpp' l='437' u='c' c='_ZNK4llvm13RegBankSelect16tryAvoidingSplitERNS0_18RepairingPlacementERKNS_14MachineOperandERKNS_16RegisterBankInfo12ValueMappingE'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/RegBankSelect.h' l='389'>/// @}

    /// Change the type of this repairing placement to \p NewKind.
    /// It is not possible to switch a repairing placement to the
    /// RepairingKind::Insert. There is no fundamental problem with
    /// that, but no uses as well, so do not support it for now.
    ///
    /// \pre NewKind != RepairingKind::Insert
    /// \post getKind() == NewKind</doc>
