<dec f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3914' type='bool llvm::TargetLowering::expandMUL_LOHI(unsigned int Opcode, llvm::EVT VT, llvm::SDLoc dl, llvm::SDValue LHS, llvm::SDValue RHS, SmallVectorImpl&lt;llvm::SDValue&gt; &amp; Result, llvm::EVT HiLoVT, llvm::SelectionDAG &amp; DAG, llvm::TargetLoweringBase::MulExpansionKind Kind, llvm::SDValue LL = llvm::SDValue(), llvm::SDValue LH = llvm::SDValue(), llvm::SDValue RL = llvm::SDValue(), llvm::SDValue RH = llvm::SDValue()) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3900'>//===--------------------------------------------------------------------===//
  // Legalization utility functions
  //

  /// Expand a MUL or [US]MUL_LOHI of n-bit values into two or four nodes,
  /// respectively, each computing an n/2-bit part of the result.
  /// \param Result A vector that will be filled with the parts of the result
  ///        in little-endian order.
  /// \param LL Low bits of the LHS of the MUL.  You can use this parameter
  ///        if you want to control how low bits are extracted from the LHS.
  /// \param LH High bits of the LHS of the MUL.  See LL for meaning.
  /// \param RL Low bits of the RHS of the MUL.  See LL for meaning
  /// \param RH High bits of the RHS of the MUL.  See LL for meaning.
  /// \returns true if the node has been expanded, false if it has not</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp' l='3303' u='c' c='_ZN12_GLOBAL__N_120SelectionDAGLegalize10ExpandNodeEPN4llvm6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp' l='2833' u='c' c='_ZN4llvm16DAGTypeLegalizer19ExpandIntRes_MULFIXEPNS_6SDNodeERNS_7SDValueES4_'/>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp' l='4427' ll='4608' type='bool llvm::TargetLowering::expandMUL_LOHI(unsigned int Opcode, llvm::EVT VT, llvm::SDLoc dl, llvm::SDValue LHS, llvm::SDValue RHS, SmallVectorImpl&lt;llvm::SDValue&gt; &amp; Result, llvm::EVT HiLoVT, llvm::SelectionDAG &amp; DAG, llvm::TargetLoweringBase::MulExpansionKind Kind, llvm::SDValue LL = llvm::SDValue(), llvm::SDValue LH = llvm::SDValue(), llvm::SDValue RL = llvm::SDValue(), llvm::SDValue RH = llvm::SDValue()) const'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp' l='4615' u='c' c='_ZNK4llvm14TargetLowering9expandMULEPNS_6SDNodeERNS_7SDValueES4_NS_3EVTERNS_12SelectionDAGENS_18TargetLoweringBase16MulExpansionKindES3_S3_S3_S3_'/>
<doc f='llvm/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp' l='4423'>//===----------------------------------------------------------------------===//
// Legalization Utilities
//===----------------------------------------------------------------------===//</doc>
