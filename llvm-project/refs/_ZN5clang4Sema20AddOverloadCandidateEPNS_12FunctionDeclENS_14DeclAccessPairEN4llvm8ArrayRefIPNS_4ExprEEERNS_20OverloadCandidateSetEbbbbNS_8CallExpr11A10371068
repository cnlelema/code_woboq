<dec f='llvm/clang/include/clang/Sema/Sema.h' l='2879' type='void clang::Sema::AddOverloadCandidate(clang::FunctionDecl * Function, clang::DeclAccessPair FoundDecl, ArrayRef&lt;clang::Expr *&gt; Args, clang::OverloadCandidateSet &amp; CandidateSet, bool SuppressUserConversions = false, bool PartialOverloading = false, bool AllowExplicit = true, bool AllowExplicitConversion = false, ADLCallKind IsADLCandidate = ADLCallKind::NotADL, ConversionSequenceList EarlyConversions = None)'/>
<def f='llvm/clang/lib/Sema/SemaOverload.cpp' l='6011' ll='6211' type='void clang::Sema::AddOverloadCandidate(clang::FunctionDecl * Function, clang::DeclAccessPair FoundDecl, ArrayRef&lt;clang::Expr *&gt; Args, clang::OverloadCandidateSet &amp; CandidateSet, bool SuppressUserConversions = false, bool PartialOverloading = false, bool AllowExplicit = true, bool AllowExplicitConversions = false, ADLCallKind IsADLCandidate = ADLCallKind::NotADL, ConversionSequenceList EarlyConversions = None)'/>
<doc f='llvm/clang/lib/Sema/SemaOverload.cpp' l='6003'>/// AddOverloadCandidate - Adds the given function to the set of
/// candidate functions, using the given function call arguments.  If
/// @p SuppressUserConversions, then don&apos;t allow user-defined
/// conversions via constructors or conversion operators.
///
/// \param PartialOverloading true if we are performing &quot;partial&quot; overloading
/// based on an incomplete set of function arguments. This feature is used by
/// code completion.</doc>
