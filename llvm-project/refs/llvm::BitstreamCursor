<inh f='llvm/llvm/include/llvm/Bitcode/BitstreamReader.h' l='80' c='llvm::SimpleBitstreamCursor'/>
<def f='llvm/llvm/include/llvm/Bitcode/BitstreamReader.h' l='310' ll='500'/>
<size>344</size>
<doc f='llvm/llvm/include/llvm/Bitcode/BitstreamReader.h' l='305'>/// This represents a position within a bitcode file, implemented on top of a
/// SimpleBitstreamCursor.
///
/// Unlike iterators, BitstreamCursors are heavy-weight objects that should not
/// be passed by value.</doc>
<mbr r='llvm::BitstreamCursor::CurCodeSize' o='288' t='unsigned int'/>
<mbr r='llvm::BitstreamCursor::CurAbbrevs' o='320' t='std::vector&lt;std::shared_ptr&lt;BitCodeAbbrev&gt; &gt;'/>
<mbr r='llvm::BitstreamCursor::BlockScope' o='512' t='SmallVector&lt;llvm::BitstreamCursor::Block, 8&gt;'/>
<mbr r='llvm::BitstreamCursor::BlockInfo' o='2688' t='llvm::BitstreamBlockInfo *'/>
<smbr r='llvm::BitstreamCursor::MaxChunkSize' t='const size_t'/>
<fun r='_ZN4llvm15BitstreamCursorC1Ev'/>
<fun r='_ZN4llvm15BitstreamCursorC1ENS_8ArrayRefIhEE'/>
<fun r='_ZN4llvm15BitstreamCursorC1ENS_9StringRefE'/>
<fun r='_ZN4llvm15BitstreamCursorC1ENS_15MemoryBufferRefE'/>
<fun r='_ZNK4llvm15BitstreamCursor16getAbbrevIDWidthEv'/>
<fun r='_ZN4llvm15BitstreamCursor7advanceEj'/>
<fun r='_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj'/>
<fun r='_ZN4llvm15BitstreamCursor8ReadCodeEv'/>
<fun r='_ZN4llvm15BitstreamCursor14ReadSubBlockIDEv'/>
<fun r='_ZN4llvm15BitstreamCursor9SkipBlockEv'/>
<fun r='_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj'/>
<fun r='_ZN4llvm15BitstreamCursor12ReadBlockEndEv'/>
<fun r='_ZN4llvm15BitstreamCursor13popBlockScopeEv'/>
<fun r='_ZN4llvm15BitstreamCursor9getAbbrevEj'/>
<fun r='_ZN4llvm15BitstreamCursor10skipRecordEj'/>
<fun r='_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE'/>
<fun r='_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv'/>
<fun r='_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb'/>
<fun r='_ZN4llvm15BitstreamCursor12setBlockInfoEPNS_18BitstreamBlockInfoE'/>
