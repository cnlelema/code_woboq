<dec f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='641' type='bool llvm::LazyCallGraph::RefSCC::isAncestorOf(const llvm::LazyCallGraph::RefSCC &amp; RC) const'/>
<use f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='655' u='c' c='_ZNK4llvm13LazyCallGraph6RefSCC14isDescendantOfERKS1_'/>
<doc f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='636'>/// Test if this RefSCC is an ancestor of \a RC.
    ///
    /// CAUTION: This method walks the directed graph of edges as far as
    /// necessary to find a possible path to the argument. In the worst case
    /// this may walk the entire graph and can be extremely expensive.</doc>
<use f='llvm/llvm/lib/Analysis/CGSCCPassManager.cpp' l='585' u='c' c='_ZN4llvm41updateCGAndAnalysisManagerForFunctionPassERNS_13LazyCallGraphERNS0_3SCCERNS0_4NodeERNS_15AnalysisManagerIS2_JS1_EEERNS_17CGSCCUpdateResultE'/>
<use f='llvm/llvm/lib/Analysis/CGSCCPassManager.cpp' l='614' u='c' c='_ZN4llvm41updateCGAndAnalysisManagerForFunctionPassERNS_13LazyCallGraphERNS0_3SCCERNS0_4NodeERNS_15AnalysisManagerIS2_JS1_EEERNS_17CGSCCUpdateResultE'/>
<def f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='364' ll='390' type='bool llvm::LazyCallGraph::RefSCC::isAncestorOf(const llvm::LazyCallGraph::RefSCC &amp; RC) const'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='333' u='c' c='_ZN12_GLOBAL__N_142LazyCallGraphTest_BasicGraphFormation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='349' u='c' c='_ZN12_GLOBAL__N_142LazyCallGraphTest_BasicGraphFormation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='365' u='c' c='_ZN12_GLOBAL__N_142LazyCallGraphTest_BasicGraphFormation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='367' u='c' c='_ZN12_GLOBAL__N_142LazyCallGraphTest_BasicGraphFormation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='368' u='c' c='_ZN12_GLOBAL__N_142LazyCallGraphTest_BasicGraphFormation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='384' u='c' c='_ZN12_GLOBAL__N_142LazyCallGraphTest_BasicGraphFormation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='385' u='c' c='_ZN12_GLOBAL__N_142LazyCallGraphTest_BasicGraphFormation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='386' u='c' c='_ZN12_GLOBAL__N_142LazyCallGraphTest_BasicGraphFormation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='627' u='c' c='_ZN12_GLOBAL__N_143LazyCallGraphTest_OutgoingEdgeMutation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='650' u='c' c='_ZN12_GLOBAL__N_143LazyCallGraphTest_OutgoingEdgeMutation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='671' u='c' c='_ZN12_GLOBAL__N_143LazyCallGraphTest_OutgoingEdgeMutation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='692' u='c' c='_ZN12_GLOBAL__N_143LazyCallGraphTest_OutgoingEdgeMutation_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/LazyCallGraphTest.cpp' l='713' u='c' c='_ZN12_GLOBAL__N_143LazyCallGraphTest_OutgoingEdgeMutation_Test8TestBodyEv'/>
