<dec f='llvm/llvm/lib/Target/X86/X86InstrInfo.h' l='359' type='llvm::MachineInstr * llvm::X86InstrInfo::foldMemoryOperandImpl(llvm::MachineFunction &amp; MF, llvm::MachineInstr &amp; MI, ArrayRef&lt;unsigned int&gt; Ops, MachineBasicBlock::iterator InsertPt, llvm::MachineInstr &amp; LoadMI, llvm::LiveIntervals * LIS = nullptr) const'/>
<doc f='llvm/llvm/lib/Target/X86/X86InstrInfo.h' l='356'>/// foldMemoryOperand - Same as the previous version except it allows folding
  /// of any load and store from / to any address, not just from a specific
  /// stack slot.</doc>
<def f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='4971' ll='5136' type='llvm::MachineInstr * llvm::X86InstrInfo::foldMemoryOperandImpl(llvm::MachineFunction &amp; MF, llvm::MachineInstr &amp; MI, ArrayRef&lt;unsigned int&gt; Ops, MachineBasicBlock::iterator InsertPt, llvm::MachineInstr &amp; LoadMI, llvm::LiveIntervals * LIS = nullptr) const'/>
