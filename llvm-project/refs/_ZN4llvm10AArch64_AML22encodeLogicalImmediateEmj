<def f='llvm/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h' l='282' ll='288' type='uint64_t llvm::AArch64_AM::encodeLogicalImmediate(uint64_t imm, unsigned int regSize)'/>
<doc f='llvm/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h' l='280'>/// encodeLogicalImmediate - Return the encoded immediate value for a logical
/// immediate instruction of the given register size.</doc>
<use f='llvm/llvm/lib/Target/AArch64/AArch64FastISel.cpp' l='1692' u='c' c='_ZN12_GLOBAL__N_115AArch64FastISel16emitLogicalOp_riEjN4llvm3MVTEjbm'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='959' u='c' c='_ZL18optimizeLogicalImmN4llvm7SDValueEjmRKNS_5APIntERNS_14TargetLowering17TargetLoweringOptEj'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64InstructionSelector.cpp' l='1603' u='c' c='_ZNK12_GLOBAL__N_126AArch64InstructionSelector6selectERN4llvm12MachineInstrERNS1_15CodeGenCoverageE'/>
<use f='llvm/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp' l='1623' u='c' c='_ZNK12_GLOBAL__N_114AArch64Operand21addLogicalImmOperandsERN4llvm6MCInstEj'/>
<use f='llvm/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp' l='1632' u='c' c='_ZNK12_GLOBAL__N_114AArch64Operand24addLogicalImmNotOperandsERN4llvm6MCInstEj'/>
