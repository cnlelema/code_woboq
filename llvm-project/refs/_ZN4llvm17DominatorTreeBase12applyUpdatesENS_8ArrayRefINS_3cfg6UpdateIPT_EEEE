<def f='llvm/llvm/include/llvm/Support/GenericDomTree.h' l='520' ll='522' type='void llvm::DominatorTreeBase::applyUpdates(ArrayRef&lt;UpdateType&gt; Updates)'/>
<doc f='llvm/llvm/include/llvm/Support/GenericDomTree.h' l='486'>//===--------------------------------------------------------------------===//
  // API to update (Post)DominatorTree information based on modifications to
  // the CFG...

  /// Inform the dominator tree about a sequence of CFG edge insertions and
  /// deletions and perform a batch update on the tree.
  ///
  /// This function should be used when there were multiple CFG updates after
  /// the last dominator tree update. It takes care of performing the updates
  /// in sync with the CFG and optimizes away the redundant operations that
  /// cancel each other.
  /// The functions expects the sequence of updates to be balanced. Eg.:
  ///  - {{Insert, A, B}, {Delete, A, B}, {Insert, A, B}} is fine, because
  ///    logically it results in a single insertions.
  ///  - {{Insert, A, B}, {Insert, A, B}} is invalid, because it doesn&apos;t make
  ///    sense to insert the same edge twice.
  ///
  /// What&apos;s more, the functions assumes that it&apos;s safe to ask every node in the
  /// CFG about its children and inverse children. This implies that deletions
  /// of CFG edges must not delete the CFG nodes before calling this function.
  ///
  /// The applyUpdates function can reorder the updates and remove redundant
  /// ones internally. The batch updater is also able to detect sequences of
  /// zero and exactly one update -- it&apos;s optimized to do less work in these
  /// cases.
  ///
  /// Note that for postdominators it automatically takes care of applying
  /// updates on reverse edges internally (so there&apos;s no need to swap the
  /// From and To pointers when constructing DominatorTree::UpdateType).
  /// The type of updates is the same for DomTreeBase&lt;T&gt; and PostDomTreeBase&lt;T&gt;
  /// with the same template parameter T.
  ///
  /// \param Updates An unordered sequence of updates to perform.
  ///</doc>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='68' u='c' c='_ZN4llvm14DomTreeUpdater19applyDomTreeUpdatesEv'/>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='90' u='c' c='_ZN4llvm14DomTreeUpdater23applyPostDomTreeUpdatesEv'/>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='244' u='c' c='_ZN4llvm14DomTreeUpdater12applyUpdatesENS_8ArrayRefINS_3cfg6UpdateIPNS_10BasicBlockEEEEE'/>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='246' u='c' c='_ZN4llvm14DomTreeUpdater12applyUpdatesENS_8ArrayRefINS_3cfg6UpdateIPNS_10BasicBlockEEEEE'/>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='298' u='c' c='_ZN4llvm14DomTreeUpdater22applyUpdatesPermissiveENS_8ArrayRefINS_3cfg6UpdateIPNS_10BasicBlockEEEEE'/>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='300' u='c' c='_ZN4llvm14DomTreeUpdater22applyUpdatesPermissiveENS_8ArrayRefINS_3cfg6UpdateIPNS_10BasicBlockEEEEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopInterchange.cpp' l='1482' u='c' c='_ZN12_GLOBAL__N_124LoopInterchangeTransform18adjustLoopBranchesEv'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopUnswitch.cpp' l='976' u='c' c='_ZN12_GLOBAL__N_112LoopUnswitch30EmitPreheaderBranchOnConditionEPN4llvm5ValueEPNS1_8ConstantEPNS1_10BasicBlockES7_PNS1_10BranchInstEPNS1_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp' l='799' u='c' c='_ZL21unswitchTrivialSwitchRN4llvm4LoopERNS_10SwitchInstERNS_13DominatorTreeERNS_8LoopInfoEPNS_15ScalarEvolutionEPNS_16MemorySSAUpdaterE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp' l='2058' u='c' c='_ZL28unswitchNontrivialInvariantsRN4llvm4LoopERNS_11InstructionENS_8ArrayRefIPNS_5ValueEEERNS_15SmallVectorImplIPNS_10BasicBlockEEERNS_13DominatorTree1049984'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp' l='2130' u='c' c='_ZL28unswitchNontrivialInvariantsRN4llvm4LoopERNS_11InstructionENS_8ArrayRefIPNS_5ValueEEERNS_15SmallVectorImplIPNS_10BasicBlockEEERNS_13DominatorTree1049984'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp' l='2402' u='c' c='_ZL19turnGuardIntoBranchPN4llvm13IntrinsicInstERNS_4LoopERNS_15SmallVectorImplIPNS_10BasicBlockEEERNS_13DominatorTreeERNS_8LoopInfoEPNS_16MemorySSAUpdaterE'/>
<use f='llvm/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp' l='240' u='c' c='_ZN4llvm17SplitCriticalEdgeEPNS_11InstructionEjRKNS_28CriticalEdgeSplittingOptionsE'/>
<use f='llvm/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp' l='242' u='c' c='_ZN4llvm17SplitCriticalEdgeEPNS_11InstructionEjRKNS_28CriticalEdgeSplittingOptionsE'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopRotationUtils.cpp' l='424' u='c' c='_ZN12_GLOBAL__N_110LoopRotate10rotateLoopEPN4llvm4LoopEb'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp' l='533' u='c' c='_ZN4llvm16UnrollAndJamLoopEPNS_4LoopEjjjbPNS_8LoopInfoEPNS_15ScalarEvolutionEPNS_13DominatorTreeEPNS_15AssumptionCacheEPNS_25OptimizationRemarkEmitterEPS1_'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='1445' u='c' c='_ZN52MemorySSATest_TestAddedEdgeToBlockWithPhiNotOpt_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='1507' u='c' c='_ZN49MemorySSATest_TestAddedEdgeToBlockWithPhiOpt_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/MemorySSATest.cpp' l='1576' u='c' c='_ZN58MemorySSATest_TestAddedEdgeToBlockWithNoPhiAddNewPhis_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeBatchUpdatesTest.cpp' l='108' u='c' c='_ZN46DominatorTreeBatchUpdates_SingleInsertion_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeBatchUpdatesTest.cpp' l='110' u='c' c='_ZN46DominatorTreeBatchUpdates_SingleInsertion_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeBatchUpdatesTest.cpp' l='130' u='c' c='_ZN45DominatorTreeBatchUpdates_SingleDeletion_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeBatchUpdatesTest.cpp' l='132' u='c' c='_ZN45DominatorTreeBatchUpdates_SingleDeletion_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeBatchUpdatesTest.cpp' l='161' u='c' c='_ZN43DominatorTreeBatchUpdates_FewInsertion_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeBatchUpdatesTest.cpp' l='163' u='c' c='_ZN43DominatorTreeBatchUpdates_FewInsertion_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeBatchUpdatesTest.cpp' l='188' u='c' c='_ZN43DominatorTreeBatchUpdates_FewDeletions_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeBatchUpdatesTest.cpp' l='190' u='c' c='_ZN43DominatorTreeBatchUpdates_FewDeletions_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeBatchUpdatesTest.cpp' l='218' u='c' c='_ZN43DominatorTreeBatchUpdates_InsertDelete_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeBatchUpdatesTest.cpp' l='220' u='c' c='_ZN43DominatorTreeBatchUpdates_InsertDelete_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeBatchUpdatesTest.cpp' l='251' u='c' c='_ZN53DominatorTreeBatchUpdates_InsertDeleteExhaustive_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeBatchUpdatesTest.cpp' l='253' u='c' c='_ZN53DominatorTreeBatchUpdates_InsertDeleteExhaustive_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeBatchUpdatesTest.cpp' l='284' u='c' c='_ZN43DominatorTreeBatchUpdates_InfiniteLoop_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeBatchUpdatesTest.cpp' l='286' u='c' c='_ZN43DominatorTreeBatchUpdates_InfiniteLoop_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeBatchUpdatesTest.cpp' l='317' u='c' c='_ZN41DominatorTreeBatchUpdates_DeadBlocks_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeBatchUpdatesTest.cpp' l='319' u='c' c='_ZN41DominatorTreeBatchUpdates_DeadBlocks_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeBatchUpdatesTest.cpp' l='347' u='c' c='_ZN44DominatorTreeBatchUpdates_InfiniteLoop2_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/DominatorTreeBatchUpdatesTest.cpp' l='349' u='c' c='_ZN44DominatorTreeBatchUpdates_InfiniteLoop2_Test8TestBodyEv'/>
