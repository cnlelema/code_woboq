<dec f='llvm/llvm/include/llvm/Analysis/LoopAnalysisManager.h' l='127' type='bool llvm::InnerAnalysisManagerProxy&lt;llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults &amp;&gt;, llvm::Function&gt;::Result::invalidate(llvm::Function &amp; F, const llvm::PreservedAnalyses &amp; PA, FunctionAnalysisManager::Invalidator &amp; Inv)'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopAnalysisManager.h' l='118'>/// Handler for invalidation of the proxy for a particular function.
  ///
  /// If the proxy, \c LoopInfo, and associated analyses are preserved, this
  /// will merely forward the invalidation event to any cached loop analysis
  /// results for loops within this function.
  ///
  /// If the necessary loop infrastructure is not preserved, this will forcibly
  /// clear all of the cached analysis results that are keyed on the \c
  /// LoopInfo for this function.</doc>
<def f='llvm/llvm/lib/Analysis/LoopAnalysisManager.cpp' l='29' ll='128' type='bool llvm::InnerAnalysisManagerProxy&lt;llvm::AnalysisManager&lt;llvm::Loop, llvm::LoopStandardAnalysisResults &amp;&gt;, llvm::Function&gt;::Result::invalidate(llvm::Function &amp; F, const llvm::PreservedAnalyses &amp; PA, FunctionAnalysisManager::Invalidator &amp; Inv)'/>
