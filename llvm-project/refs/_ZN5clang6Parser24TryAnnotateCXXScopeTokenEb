<dec f='llvm/clang/include/clang/Parse/Parser.h' l='789' type='bool clang::Parser::TryAnnotateCXXScopeToken(bool EnteringContext = false)'/>
<use f='llvm/clang/lib/Parse/ParseDecl.cpp' l='2863' u='c' c='_ZN5clang6Parser37DiagnoseMissingSemiAfterTagDefinitionERNS_8DeclSpecENS_15AccessSpecifierENS0_15DeclSpecContextEPNS0_18LateParsedAttrListE'/>
<use f='llvm/clang/lib/Parse/ParseDecl.cpp' l='3104' u='c' c='_ZN5clang6Parser26ParseDeclarationSpecifiersERNS_8DeclSpecERKNS0_18ParsedTemplateInfoENS_15AccessSpecifierENS0_15DeclSpecContextEPNS0_18LateParsedAttrListE'/>
<use f='llvm/clang/lib/Parse/ParseDecl.cpp' l='3302' u='c' c='_ZN5clang6Parser26ParseDeclarationSpecifiersERNS_8DeclSpecERKNS0_18ParsedTemplateInfoENS_15AccessSpecifierENS0_15DeclSpecContextEPNS0_18LateParsedAttrListE'/>
<use f='llvm/clang/lib/Parse/ParseDeclCXX.cpp' l='2481' u='c' c='_ZN5clang6Parser30ParseCXXClassMemberDeclarationENS_15AccessSpecifierERNS_16ParsedAttributesERKNS0_18ParsedTemplateInfoEPNS_21ParsingDeclRAIIObjectE'/>
<use f='llvm/clang/lib/Parse/ParseTentative.cpp' l='207' u='c' c='_ZN5clang6Parser30TryConsumeDeclarationSpecifierEv'/>
<use f='llvm/clang/lib/Parse/ParseTentative.cpp' l='789' u='c' c='_ZN5clang6Parser22TryParsePtrOperatorSeqEv'/>
<def f='llvm/clang/lib/Parse/Parser.cpp' l='1978' ll='1994' type='bool clang::Parser::TryAnnotateCXXScopeToken(bool EnteringContext = false)'/>
<doc f='llvm/clang/lib/Parse/Parser.cpp' l='1972'>/// TryAnnotateScopeToken - Like TryAnnotateTypeOrScopeToken but only
/// annotates C++ scope specifiers and template-ids.  This returns
/// true if there was an error that could not be recovered from.
///
/// Note that this routine emits an error if you call it with ::new or ::delete
/// as the current tokens, so only call it in contexts where these are invalid.</doc>
