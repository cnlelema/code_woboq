<dec f='llvm/llvm/include/llvm/Analysis/ScopedNoAliasAA.h' l='87' type='llvm::ImmutablePass * llvm::createScopedNoAliasAAWrapperPass()'/>
<use f='llvm/llvm/include/llvm/LinkAllPasses.h' l='79' u='c' c='_ZN12_GLOBAL__N_116ForcePassLinkingC1Ev'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScopedNoAliasAA.h' l='82'>//===--------------------------------------------------------------------===//
//
// createScopedNoAliasAAWrapperPass - This pass implements metadata-based
// scoped noalias analysis.
//</doc>
<def f='llvm/llvm/lib/Analysis/ScopedNoAliasAA.cpp' l='190' ll='192' type='llvm::ImmutablePass * llvm::createScopedNoAliasAAWrapperPass()'/>
<use f='llvm/llvm/lib/CodeGen/TargetPassConfig.cpp' l='628' u='c' c='_ZN4llvm16TargetPassConfig11addIRPassesEv'/>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='240' u='c' c='_ZNK4llvm18PassManagerBuilder29addInitialAliasAnalysisPassesERNS_6legacy15PassManagerBaseE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='276' u='c' c='LLVMAddScopedNoAliasAAPass'/>
