<def f='llvm/llvm/lib/Transforms/Instrumentation/CFGMST.h' l='61' ll='78' type='bool llvm::CFGMST::unionGroups(const llvm::BasicBlock * BB1, const llvm::BasicBlock * BB2)'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/CFGMST.h' l='215' u='c' c='_ZN4llvm6CFGMST26computeMinimumSpanningTreeEv'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/CFGMST.h' l='228' u='c' c='_ZN4llvm6CFGMST26computeMinimumSpanningTreeEv'/>
<doc f='llvm/llvm/lib/Transforms/Instrumentation/CFGMST.h' l='59'>// Union BB1 and BB2 into the same group and return true.
  // Returns false if BB1 and BB2 are already in the same group.</doc>
