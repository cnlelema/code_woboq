<def f='llvm/clang/include/clang/Lex/Token.h' l='241' ll='243' type='bool clang::Token::getFlag(clang::Token::TokenFlags Flag) const'/>
<use f='llvm/clang/include/clang/Lex/Token.h' l='268' u='c' c='_ZNK5clang5Token15isAtStartOfLineEv'/>
<use f='llvm/clang/include/clang/Lex/Token.h' l='272' u='c' c='_ZNK5clang5Token15hasLeadingSpaceEv'/>
<use f='llvm/clang/include/clang/Lex/Token.h' l='276' u='c' c='_ZNK5clang5Token16isExpandDisabledEv'/>
<use f='llvm/clang/include/clang/Lex/Token.h' l='285' u='c' c='_ZNK5clang5Token13needsCleaningEv'/>
<use f='llvm/clang/include/clang/Lex/Token.h' l='289' u='c' c='_ZNK5clang5Token20hasLeadingEmptyMacroEv'/>
<use f='llvm/clang/include/clang/Lex/Token.h' l='293' u='c' c='_ZNK5clang5Token11hasUDSuffixEv'/>
<use f='llvm/clang/include/clang/Lex/Token.h' l='296' u='c' c='_ZNK5clang5Token6hasUCNEv'/>
<use f='llvm/clang/include/clang/Lex/Token.h' l='300' u='c' c='_ZNK5clang5Token18stringifiedInMacroEv'/>
<use f='llvm/clang/include/clang/Lex/Token.h' l='303' u='c' c='_ZNK5clang5Token16commaAfterElidedEv'/>
<use f='llvm/clang/include/clang/Lex/Token.h' l='310' u='c' c='_ZNK5clang5Token19isEditorPlaceholderEv'/>
<doc f='llvm/clang/include/clang/Lex/Token.h' l='240'>/// Get the specified flag.</doc>
<use f='llvm/clang/lib/Lex/Preprocessor.cpp' l='913' u='c' c='_ZN5clang12Preprocessor3LexERNS_5TokenE'/>
<use f='llvm/clang/lib/Lex/Preprocessor.cpp' l='954' u='c' c='_ZN5clang12Preprocessor3LexERNS_5TokenE'/>
