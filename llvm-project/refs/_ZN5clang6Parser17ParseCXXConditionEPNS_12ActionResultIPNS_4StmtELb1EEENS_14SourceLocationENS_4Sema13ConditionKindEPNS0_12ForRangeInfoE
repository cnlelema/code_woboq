<dec f='llvm/clang/include/clang/Parse/Parser.h' l='1854' type='Sema::ConditionResult clang::Parser::ParseCXXCondition(StmtResult * InitStmt, clang::SourceLocation Loc, Sema::ConditionKind CK, clang::Parser::ForRangeInfo * FRI = nullptr)'/>
<def f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='1848' ll='1994' type='Sema::ConditionResult clang::Parser::ParseCXXCondition(StmtResult * InitStmt, clang::SourceLocation Loc, Sema::ConditionKind CK, clang::Parser::ForRangeInfo * FRI = nullptr)'/>
<use f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='1888' u='c' c='_ZN5clang6Parser17ParseCXXConditionEPNS_12ActionResultIPNS_4StmtELb1EEENS_14SourceLocationENS_4Sema13ConditionKindEPNS0_12ForRangeInfoE'/>
<use f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='1900' u='c' c='_ZN5clang6Parser17ParseCXXConditionEPNS_12ActionResultIPNS_4StmtELb1EEENS_14SourceLocationENS_4Sema13ConditionKindEPNS0_12ForRangeInfoE'/>
<use f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='1913' u='c' c='_ZN5clang6Parser17ParseCXXConditionEPNS_12ActionResultIPNS_4StmtELb1EEENS_14SourceLocationENS_4Sema13ConditionKindEPNS0_12ForRangeInfoE'/>
<doc f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='1823'>/// ParseCXXCondition - if/switch/while condition expression.
///
///       condition:
///         expression
///         type-specifier-seq declarator &apos;=&apos; assignment-expression
/// [C++11] type-specifier-seq declarator &apos;=&apos; initializer-clause
/// [C++11] type-specifier-seq declarator braced-init-list
/// [Clang] type-specifier-seq ref-qualifier[opt] &apos;[&apos; identifier-list &apos;]&apos;
///             brace-or-equal-initializer
/// [GNU]   type-specifier-seq declarator simple-asm-expr[opt] attributes[opt]
///             &apos;=&apos; assignment-expression
///
/// In C++1z, a condition may in some contexts be preceded by an
/// optional init-statement. This function will parse that too.
///
/// \param InitStmt If non-null, an init-statement is permitted, and if present
/// will be parsed and stored here.
///
/// \param Loc The location of the start of the statement that requires this
/// condition, e.g., the &quot;for&quot; in a for loop.
///
/// \param FRI If non-null, a for range declaration is permitted, and if
/// present will be parsed and stored here, and a null result will be returned.
///
/// \returns The parsed condition.</doc>
<use f='llvm/clang/lib/Parse/ParseStmt.cpp' l='1135' u='c' c='_ZN5clang6Parser25ParseParenExprOrConditionEPNS_12ActionResultIPNS_4StmtELb1EEERNS_4Sema15ConditionResultENS_14SourceLocationENS6_13ConditionKindE'/>
<use f='llvm/clang/lib/Parse/ParseStmt.cpp' l='1789' u='c' c='_ZN5clang6Parser17ParseForStatementEPNS_14SourceLocationE'/>
