<dec f='llvm/llvm/include/llvm/Analysis/RegionInfo.h' l='312' type='void llvm::RegionBase::RegionBase&lt;RegionTr&gt;(BlockT * Entry, BlockT * Exit, RegionInfoT * RI, DomTreeT * DT, RegionT * Parent = nullptr)'/>
<doc f='llvm/llvm/include/llvm/Analysis/RegionInfo.h' l='304'>/// Create a new region.
  ///
  /// @param Entry  The entry basic block of the region.
  /// @param Exit   The exit basic block of the region.
  /// @param RI     The region info object that is managing this region.
  /// @param DT     The dominator tree of the current function.
  /// @param Parent The surrounding region or NULL if this is a top level
  ///               region.</doc>
<def f='llvm/llvm/include/llvm/Analysis/RegionInfoImpl.h' l='43' ll='47' type='void llvm::RegionBase::RegionBase&lt;RegionTr&gt;(BlockT * Entry, BlockT * Exit, typename Tr::RegionInfoT * RInfo, DomTreeT * dt, RegionT * Parent = nullptr)'/>
<use f='llvm/llvm/lib/Analysis/RegionInfo.cpp' l='66' u='c' c='_ZN4llvm6RegionC1EPNS_10BasicBlockES2_PNS_10RegionInfoEPNS_13DominatorTreeEPS0_'/>
<doc f='llvm/llvm/include/llvm/Analysis/RegionInfoImpl.h' l='41'>//===----------------------------------------------------------------------===//
/// RegionBase Implementation</doc>
<use f='llvm/llvm/lib/CodeGen/MachineRegionInfo.cpp' l='39' u='c' c='_ZN4llvm13MachineRegionC1EPNS_17MachineBasicBlockES2_PNS_17MachineRegionInfoEPNS_20MachineDominatorTreeEPS0_'/>
