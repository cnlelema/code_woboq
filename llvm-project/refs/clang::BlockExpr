<inh f='llvm/clang/include/clang/AST/Expr.h' l='108' c='clang::Expr'/>
<def f='llvm/clang/include/clang/AST/Expr.h' l='5485' ll='5529'/>
<size>24</size>
<doc f='llvm/clang/include/clang/AST/Expr.h' l='5483'>/// BlockExpr - Adaptor class for mixing a BlockDecl with expressions.
/// ^{ statement-body }   or   ^(int arg1, float arg2){ statement-body }</doc>
<mbr r='clang::BlockExpr::TheBlock' o='128' t='clang::BlockDecl *'/>
<fun r='_ZN5clang9BlockExprC1EPNS_9BlockDeclENS_8QualTypeE'/>
<fun r='_ZN5clang9BlockExprC1ENS_4Stmt10EmptyShellE'/>
<fun r='_ZNK5clang9BlockExpr12getBlockDeclEv'/>
<fun r='_ZN5clang9BlockExpr12getBlockDeclEv'/>
<fun r='_ZN5clang9BlockExpr12setBlockDeclEPNS_9BlockDeclE'/>
<fun r='_ZNK5clang9BlockExpr16getCaretLocationEv'/>
<fun r='_ZNK5clang9BlockExpr7getBodyEv'/>
<fun r='_ZN5clang9BlockExpr7getBodyEv'/>
<fun r='_ZNK5clang9BlockExpr11getBeginLocEv'/>
<fun r='_ZNK5clang9BlockExpr9getEndLocEv'/>
<fun r='_ZNK5clang9BlockExpr15getFunctionTypeEv'/>
<fun r='_ZN5clang9BlockExpr7classofEPKNS_4StmtE'/>
<fun r='_ZN5clang9BlockExpr8childrenEv'/>
<fun r='_ZNK5clang9BlockExpr8childrenEv'/>
