<dec f='llvm/clang/include/clang/Sema/Sema.h' l='3015' type='bool clang::Sema::checkAddressOfFunctionIsAvailable(const clang::FunctionDecl * Function, bool Complain = false, clang::SourceLocation Loc = clang::SourceLocation())'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='3011'>/// Returns whether the given function&apos;s address can be taken or not,
  /// optionally emitting a diagnostic if the address can&apos;t be taken.
  ///
  /// Returns false if taking the address of the function is illegal.</doc>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='454' u='c' c='_ZN5clang4Sema30DefaultFunctionArrayConversionEPNS_4ExprEb'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='5699' u='c' c='_ZN5clang4Sema13BuildCallExprEPNS_5ScopeEPNS_4ExprENS_14SourceLocationEN4llvm15MutableArrayRefIS4_EES5_S4_b'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='12184' u='c' c='_ZN5clang4Sema21CheckAddressOfOperandERNS_12ActionResultIPNS_4ExprELb1EEENS_14SourceLocationE'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='14448' u='c' c='_ZL33maybeDiagnoseAssignmentToFunctionRN5clang4SemaENS_8QualTypeEPKNS_4ExprE'/>
<use f='llvm/clang/lib/Sema/SemaInit.cpp' l='5504' u='c' c='_ZL29isExprAnUnaddressableFunctionRN5clang4SemaEPKNS_4ExprE'/>
<use f='llvm/clang/lib/Sema/SemaInit.cpp' l='7731' u='c' c='_ZN5clang22InitializationSequence7PerformERNS_4SemaERKNS_17InitializedEntityERKNS_18InitializationKindEN4llvm15MutableArrayRefIPNS_4ExprEEEPNS_8QualTypeE'/>
<use f='llvm/clang/lib/Sema/SemaInit.cpp' l='8536' u='c' c='_ZN5clang22InitializationSequence8DiagnoseERNS_4SemaERKNS_17InitializedEntityERKNS_18InitializationKindEN4llvm8ArrayRefIPNS_4ExprEEE'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='1731' u='c' c='_ZL20IsStandardConversionRN5clang4SemaEPNS_4ExprENS_8QualTypeEbRNS_26StandardConversionSequenceEbb'/>
<def f='llvm/clang/lib/Sema/SemaOverload.cpp' l='9654' ll='9660' type='bool clang::Sema::checkAddressOfFunctionIsAvailable(const clang::FunctionDecl * Function, bool Complain = false, clang::SourceLocation Loc = clang::SourceLocation())'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='11246' u='c' c='_ZN12_GLOBAL__N_125AddressOfFunctionResolver27AddMatchingTemplateFunctionEPN5clang20FunctionTemplateDeclERKNS1_14DeclAccessPairE'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='11283' u='c' c='_ZN12_GLOBAL__N_125AddressOfFunctionResolver30AddMatchingNonTemplateFunctionEPN5clang9NamedDeclERKNS1_14DeclAccessPairE'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='11539' u='c' c='_ZN5clang4Sema43resolveAddressOfOnlyViableOverloadCandidateEPNS_4ExprERNS_14DeclAccessPairE'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='12198' u='c' c='_ZL24FinishOverloadedCallExprRN5clang4SemaEPNS_5ScopeEPNS_4ExprEPNS_20UnresolvedLookupExprENS_14SourceLocationEN4llvm15MutableArrayRefIS5_EES8_S5_PNS_2545755'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='12246' u='c' c='_ZL35markUnaddressableCandidatesUnviableRN5clang4SemaERNS_20OverloadCandidateSetE'/>
