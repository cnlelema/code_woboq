<dec f='llvm/clang/include/clang/AST/ExprObjC.h' l='1205' type='static clang::ObjCMessageExpr * clang::ObjCMessageExpr::Create(const clang::ASTContext &amp; Context, clang::QualType T, clang::ExprValueKind VK, clang::SourceLocation LBracLoc, clang::Expr * Receiver, clang::Selector Sel, ArrayRef&lt;clang::SourceLocation&gt; SeLocs, clang::ObjCMethodDecl * Method, ArrayRef&lt;clang::Expr *&gt; Args, clang::SourceLocation RBracLoc, bool isImplicit)'/>
<doc f='llvm/clang/include/clang/AST/ExprObjC.h' l='1182'>/// Create an instance message send.
  ///
  /// \param Context The ASTContext in which this expression will be created.
  ///
  /// \param T The result type of this message.
  ///
  /// \param VK The value kind of this message.  A message returning
  /// a l-value or r-value reference will be an l-value or x-value,
  /// respectively.
  ///
  /// \param LBracLoc The location of the open square bracket &apos;[&apos;.
  ///
  /// \param Receiver The expression used to produce the object that
  /// will receive this message.
  ///
  /// \param Sel The selector used to determine which method gets called.
  ///
  /// \param Method The Objective-C method against which this message
  /// send was type-checked. May be nullptr.
  ///
  /// \param Args The message send arguments.
  ///
  /// \param RBracLoc The location of the closing square bracket &apos;]&apos;.</doc>
<def f='llvm/clang/lib/AST/ExprObjC.cpp' l='244' ll='261' type='static clang::ObjCMessageExpr * clang::ObjCMessageExpr::Create(const clang::ASTContext &amp; Context, clang::QualType T, clang::ExprValueKind VK, clang::SourceLocation LBracLoc, clang::Expr * Receiver, clang::Selector Sel, ArrayRef&lt;clang::SourceLocation&gt; SelLocs, clang::ObjCMethodDecl * Method, ArrayRef&lt;clang::Expr *&gt; Args, clang::SourceLocation RBracLoc, bool isImplicit)'/>
