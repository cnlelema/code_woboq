<dec f='llvm/llvm/lib/TableGen/TGParser.h' l='173' type='llvm::Init * llvm::TGParser::ParseDeclaration(llvm::Record * CurRec, bool ParsingTemplateArgs)'/>
<def f='llvm/llvm/lib/TableGen/TGParser.cpp' l='2372' ll='2424' type='llvm::Init * llvm::TGParser::ParseDeclaration(llvm::Record * CurRec, bool ParsingTemplateArgs)'/>
<use f='llvm/llvm/lib/TableGen/TGParser.cpp' l='2526' u='c' c='_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE'/>
<use f='llvm/llvm/lib/TableGen/TGParser.cpp' l='2537' u='c' c='_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE'/>
<use f='llvm/llvm/lib/TableGen/TGParser.cpp' l='2560' u='c' c='_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE'/>
<doc f='llvm/llvm/lib/TableGen/TGParser.cpp' l='2362'>/// ParseDeclaration - Read a declaration, returning the name of field ID, or an
/// empty string on error.  This can happen in a number of different context&apos;s,
/// including within a def or in the template args for a def (which which case
/// CurRec will be non-null) and within the template args for a multiclass (in
/// which case CurRec will be null, but CurMultiClass will be set).  This can
/// also happen within a def that is within a multiclass, which will set both
/// CurRec and CurMultiClass.
///
///  Declaration ::= FIELD? Type ID (&apos;=&apos; Value)?
///</doc>
