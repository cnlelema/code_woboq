<dec f='llvm/lld/wasm/SymbolTable.h' l='98' type='bool lld::wasm::SymbolTable::getFunctionVariant(lld::wasm::Symbol * Sym, const llvm::wasm::WasmSignature * Sig, const lld::wasm::InputFile * File, lld::wasm::Symbol ** Out)'/>
<use f='llvm/lld/wasm/SymbolTable.cpp' l='315' u='c' c='_ZN3lld4wasm11SymbolTable18addDefinedFunctionEN4llvm9StringRefEjPNS0_9InputFileEPNS0_13InputFunctionE'/>
<use f='llvm/lld/wasm/SymbolTable.cpp' l='441' u='c' c='_ZN3lld4wasm11SymbolTable20addUndefinedFunctionEN4llvm9StringRefES3_S3_jPNS0_9InputFileEPKNS2_4wasm13WasmSignatureEb'/>
<def f='llvm/lld/wasm/SymbolTable.cpp' l='532' ll='564' type='bool lld::wasm::SymbolTable::getFunctionVariant(lld::wasm::Symbol * Sym, const llvm::wasm::WasmSignature * Sig, const lld::wasm::InputFile * File, lld::wasm::Symbol ** Out)'/>
<doc f='llvm/lld/wasm/SymbolTable.cpp' l='529'>// The new signature doesn&apos;t match.  Create a variant to the symbol with the
// signature encoded in the name and return that instead.  These symbols are
// then unified later in handleSymbolVariants.</doc>
