<def f='llvm/clang/include/clang/Lex/VariadicMacroSupport.h' l='30' ll='66'/>
<size>24</size>
<doc f='llvm/clang/include/clang/Lex/VariadicMacroSupport.h' l='24'>/// An RAII class that tracks when the Preprocessor starts and stops lexing
  /// the definition of a (ISO C/C++) variadic macro.  As an example, this is
  /// useful for unpoisoning and repoisoning certain identifiers (such as
  /// __VA_ARGS__) that are only allowed in this context.  Also, being a friend
  /// of the Preprocessor class allows it to access PP&apos;s cached identifiers
  /// directly (as opposed to performing a lookup each time).</doc>
<mbr r='clang::VariadicMacroScopeGuard::PP' o='0' t='const clang::Preprocessor &amp;'/>
<mbr r='clang::VariadicMacroScopeGuard::Ident__VA_ARGS__' o='64' t='clang::IdentifierInfo *const'/>
<mbr r='clang::VariadicMacroScopeGuard::Ident__VA_OPT__' o='128' t='clang::IdentifierInfo *const'/>
<fun r='_ZN5clang23VariadicMacroScopeGuardC1ERKNS_12PreprocessorE'/>
<fun r='_ZN5clang23VariadicMacroScopeGuard10enterScopeEv'/>
<fun r='_ZN5clang23VariadicMacroScopeGuard9exitScopeEv'/>
<fun r='_ZN5clang23VariadicMacroScopeGuardD1Ev'/>
