<use f='llvm/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h' l='313' u='m' c='_ZN4llvm25LoopVectorizationLegality14isMaskRequiredEPKNS_11InstructionE'/>
<dec f='llvm/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h' l='474' type='SmallPtrSet&lt;const llvm::Instruction *, 8&gt;'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp' l='896' u='m' c='_ZN4llvm25LoopVectorizationLegality20blockCanBePredicatedEPNS_10BasicBlockERNS_15SmallPtrSetImplIPNS_5ValueEEE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp' l='910' u='m' c='_ZN4llvm25LoopVectorizationLegality20blockCanBePredicatedEPNS_10BasicBlockERNS_15SmallPtrSetImplIPNS_5ValueEEE'/>
<offset>3904</offset>
<doc f='llvm/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h' l='472'>/// While vectorizing these instructions we have to generate a
  /// call to the appropriate masked intrinsic</doc>
