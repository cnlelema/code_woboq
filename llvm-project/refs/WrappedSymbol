<def f='llvm/lld/ELF/Driver.cpp' l='1630' ll='1634'/>
<size>24</size>
<doc f='llvm/lld/ELF/Driver.cpp' l='1622'>// The --wrap option is a feature to rename symbols so that you can write
// wrappers for existing functions. If you pass `-wrap=foo`, all
// occurrences of symbol `foo` are resolved to `wrap_foo` (so, you are
// expected to write `wrap_foo` function as a wrapper). The original
// symbol becomes accessible as `real_foo`, so you can call that from your
// wrapper.
//
// This data structure is instantiated for each -wrap option.</doc>
<def f='llvm/lld/wasm/Driver.cpp' l='541' ll='545'/>
<size>24</size>
<doc f='llvm/lld/wasm/Driver.cpp' l='533'>// The --wrap option is a feature to rename symbols so that you can write
// wrappers for existing functions. If you pass `-wrap=foo`, all
// occurrences of symbol `foo` are resolved to `wrap_foo` (so, you are
// expected to write `wrap_foo` function as a wrapper). The original
// symbol becomes accessible as `real_foo`, so you can call that from your
// wrapper.
//
// This data structure is instantiated for each -wrap option.</doc>
