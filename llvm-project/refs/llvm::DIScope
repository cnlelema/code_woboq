<inh f='llvm/llvm/include/llvm/IR/DebugInfoMetadata.h' l='118' c='llvm::DINode'/>
<def f='llvm/llvm/include/llvm/IR/DebugInfoMetadata.h' l='399' ll='446'/>
<ovr f='llvm/llvm/include/llvm/IR/DebugInfoMetadata.h' l='452' c='llvm::DIFile'/>
<ovr f='llvm/llvm/include/llvm/IR/DebugInfoMetadata.h' l='583' c='llvm::DIType'/>
<ovr f='llvm/llvm/include/llvm/IR/DebugInfoMetadata.h' l='1115' c='llvm::DICompileUnit'/>
<ovr f='llvm/llvm/include/llvm/IR/DebugInfoMetadata.h' l='1325' c='llvm::DILocalScope'/>
<ovr f='llvm/llvm/include/llvm/IR/DebugInfoMetadata.h' l='2018' c='llvm::DINamespace'/>
<ovr f='llvm/llvm/include/llvm/IR/DebugInfoMetadata.h' l='2070' c='llvm::DIModule'/>
<ovr f='llvm/llvm/include/llvm/IR/DebugInfoMetadata.h' l='2673' c='llvm::DICommonBlock'/>
<size>24</size>
<doc f='llvm/llvm/include/llvm/IR/DebugInfoMetadata.h' l='393'>/// Base class for scope-like contexts.
///
/// Base class for lexical scopes and types (which are also declaration
/// contexts).
///
/// TODO: Separate the concepts of declaration contexts and lexical scopes.</doc>
<fun r='_ZN4llvm7DIScopeC1ERNS_11LLVMContextEjNS_8Metadata11StorageTypeEjNS_8ArrayRefIPS3_EE'/>
<fun r='_ZN4llvm7DIScopeD1Ev'/>
<fun r='_ZNK4llvm7DIScope7getFileEv'/>
<fun r='_ZNK4llvm7DIScope11getFilenameEv'/>
<fun r='_ZNK4llvm7DIScope12getDirectoryEv'/>
<fun r='_ZNK4llvm7DIScope9getSourceEv'/>
<fun r='_ZNK4llvm7DIScope7getNameEv'/>
<fun r='_ZNK4llvm7DIScope8getScopeEv'/>
<fun r='_ZNK4llvm7DIScope10getRawFileEv'/>
<fun r='_ZN4llvm7DIScope7classofEPKNS_8MetadataE'/>
<fun r='_ZNK4llvm7DIScope11getFilenameEv'/>
<fun r='_ZNK4llvm7DIScope12getDirectoryEv'/>
<fun r='_ZNK4llvm7DIScope9getSourceEv'/>
