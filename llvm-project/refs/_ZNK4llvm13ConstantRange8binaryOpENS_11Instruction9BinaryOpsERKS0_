<dec f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='326' type='llvm::ConstantRange llvm::ConstantRange::binaryOp(Instruction::BinaryOps BinOp, const llvm::ConstantRange &amp; Other) const'/>
<doc f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='323'>/// Return a new range representing the possible values resulting
  /// from an application of the specified binary operator to an left hand side
  /// of this range and a right hand side of \p Other.</doc>
<use f='llvm/llvm/lib/Analysis/LazyValueInfo.cpp' l='1095' u='c' c='_ZN12_GLOBAL__N_117LazyValueInfoImpl23solveBlockValueBinaryOpERN4llvm19ValueLatticeElementEPNS1_14BinaryOperatorEPNS1_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/LazyValueInfo.cpp' l='1103' u='c' c='_ZN12_GLOBAL__N_117LazyValueInfoImpl32solveBlockValueOverflowIntrinsicERN4llvm19ValueLatticeElementEPNS1_16WithOverflowInstEPNS1_10BasicBlockE'/>
<def f='llvm/llvm/lib/IR/ConstantRange.cpp' l='755' ll='796' type='llvm::ConstantRange llvm::ConstantRange::binaryOp(Instruction::BinaryOps BinOp, const llvm::ConstantRange &amp; Other) const'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Float2Int.cpp' l='249' u='c' c='_ZN4llvm13Float2IntPass12walkForwardsEv'/>
