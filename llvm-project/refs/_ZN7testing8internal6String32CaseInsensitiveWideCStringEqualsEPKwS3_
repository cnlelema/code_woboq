<dec f='llvm/llvm/utils/unittest/googletest/include/gtest/internal/gtest-string.h' l='139' type='static bool testing::internal::String::CaseInsensitiveWideCStringEquals(const wchar_t * lhs, const wchar_t * rhs)'/>
<use f='llvm/llvm/utils/unittest/googlemock/include/gmock/gmock-matchers.h' l='1096' u='c' c='_ZN7testing8internal28CaseInsensitiveCStringEqualsEPKwS2_'/>
<doc f='llvm/llvm/utils/unittest/googletest/include/gtest/internal/gtest-string.h' l='127'>// Compares two wide C strings, ignoring case.  Returns true iff they
  // have the same content.
  //
  // Unlike wcscasecmp(), this function can handle NULL argument(s).
  // A NULL C string is considered different to any non-NULL wide C string,
  // including the empty string.
  // NB: The implementations on different platforms slightly differ.
  // On windows, this method uses _wcsicmp which compares according to LC_CTYPE
  // environment variable. On GNU platform this method uses wcscasecmp
  // which compares according to LC_CTYPE category of the current locale.
  // On MacOS X, it uses towlower, which also uses LC_CTYPE category of the
  // current locale.</doc>
<def f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='1925' ll='1945' type='static bool testing::internal::String::CaseInsensitiveWideCStringEquals(const wchar_t * lhs, const wchar_t * rhs)'/>
<doc f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='1913'>// Compares two wide C strings, ignoring case.  Returns true iff they
  // have the same content.
  //
  // Unlike wcscasecmp(), this function can handle NULL argument(s).
  // A NULL C string is considered different to any non-NULL wide C string,
  // including the empty string.
  // NB: The implementations on different platforms slightly differ.
  // On windows, this method uses _wcsicmp which compares according to LC_CTYPE
  // environment variable. On GNU platform this method uses wcscasecmp
  // which compares according to LC_CTYPE category of the current locale.
  // On MacOS X, it uses towlower, which also uses LC_CTYPE category of the
  // current locale.</doc>
