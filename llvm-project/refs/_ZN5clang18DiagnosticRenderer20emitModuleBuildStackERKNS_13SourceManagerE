<dec f='llvm/clang/include/clang/Frontend/DiagnosticRenderer.h' l='109' type='void clang::DiagnosticRenderer::emitModuleBuildStack(const clang::SourceManager &amp; SM)'/>
<use f='llvm/clang/lib/Frontend/DiagnosticRenderer.cpp' l='183' u='c' c='_ZN5clang18DiagnosticRenderer16emitIncludeStackENS_13FullSourceLocENS_11PresumedLocENS_17DiagnosticsEngine5LevelE'/>
<use f='llvm/clang/lib/Frontend/DiagnosticRenderer.cpp' l='192' u='c' c='_ZN5clang18DiagnosticRenderer27emitIncludeStackRecursivelyENS_13FullSourceLocE'/>
<use f='llvm/clang/lib/Frontend/DiagnosticRenderer.cpp' l='221' u='c' c='_ZN5clang18DiagnosticRenderer15emitImportStackENS_13FullSourceLocE'/>
<def f='llvm/clang/lib/Frontend/DiagnosticRenderer.cpp' l='249' ll='256' type='void clang::DiagnosticRenderer::emitModuleBuildStack(const clang::SourceManager &amp; SM)'/>
<doc f='llvm/clang/lib/Frontend/DiagnosticRenderer.cpp' l='247'>/// Emit the module build stack, for cases where a module is (re-)built
/// on demand.</doc>
