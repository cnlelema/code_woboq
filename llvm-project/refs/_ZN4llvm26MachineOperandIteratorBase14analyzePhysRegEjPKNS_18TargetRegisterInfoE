<dec f='llvm/llvm/include/llvm/CodeGen/MachineInstrBundle.h' l='217' type='llvm::MachineOperandIteratorBase::PhysRegInfo llvm::MachineOperandIteratorBase::analyzePhysReg(unsigned int Reg, const llvm::TargetRegisterInfo * TRI)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineInstrBundle.h' l='211'>/// analyzePhysReg - Analyze how the current instruction or bundle uses a
  /// physical register.  This function should not be called after operator++(),
  /// it expects a fresh iterator.
  ///
  /// @param Reg The physical register to analyze.
  /// @returns A filled-in PhysRegInfo struct.</doc>
<use f='llvm/llvm/lib/CodeGen/InlineSpiller.cpp' l='867' u='c' c='_ZN12_GLOBAL__N_113InlineSpiller17foldMemoryOperandEN4llvm8ArrayRefISt4pairIPNS1_12MachineInstrEjEEES5_'/>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='1393' u='c' c='_ZNK4llvm17MachineBasicBlock23computeRegisterLivenessEPKNS_18TargetRegisterInfoEjNS_26MachineInstrBundleIteratorIKNS_12MachineInstrELb0EEEj'/>
<use f='llvm/llvm/lib/CodeGen/MachineBasicBlock.cpp' l='1432' u='c' c='_ZNK4llvm17MachineBasicBlock23computeRegisterLivenessEPKNS_18TargetRegisterInfoEjNS_26MachineInstrBundleIteratorIKNS_12MachineInstrELb0EEEj'/>
<def f='llvm/llvm/lib/CodeGen/MachineInstrBundle.cpp' l='313' ll='364' type='MachineOperandIteratorBase::PhysRegInfo llvm::MachineOperandIteratorBase::analyzePhysReg(unsigned int Reg, const llvm::TargetRegisterInfo * TRI)'/>
