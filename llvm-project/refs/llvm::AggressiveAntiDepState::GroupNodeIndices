<dec f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.h' l='66' type='std::vector&lt;unsigned int&gt;'/>
<use f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp' l='62' u='w' c='_ZN4llvm22AggressiveAntiDepStateC1EjPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp' l='68' u='m' c='_ZN4llvm22AggressiveAntiDepStateC1EjPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp' l='76' u='m' c='_ZN4llvm22AggressiveAntiDepState8GetGroupEj'/>
<use f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp' l='96' u='m' c='_ZN4llvm22AggressiveAntiDepState11UnionGroupsEjj'/>
<use f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp' l='115' u='m' c='_ZN4llvm22AggressiveAntiDepState10LeaveGroupEj'/>
<offset>256</offset>
<doc f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.h' l='62'>/// For each register, the index of the GroupNode
    /// currently representing the group that the register belongs to.
    /// Register 0 is always represented by the 0 group, a group
    /// composed of registers that are not eligible for anti-aliasing.</doc>
