<dec f='llvm/clang/include/clang/Parse/Parser.h' l='1907' type='bool clang::Parser::ParseObjCXXMessageReceiver(bool &amp; IsExpr, void *&amp; TypeOrExpr)'/>
<use f='llvm/clang/lib/Parse/ParseInit.cpp' l='233' u='c' c='_ZN5clang6Parser39ParseInitializerWithPotentialDesignatorEv'/>
<def f='llvm/clang/lib/Parse/ParseObjc.cpp' l='2897' ll='2963' type='bool clang::Parser::ParseObjCXXMessageReceiver(bool &amp; IsExpr, void *&amp; TypeOrExpr)'/>
<use f='llvm/clang/lib/Parse/ParseObjc.cpp' l='3041' u='c' c='_ZN5clang6Parser26ParseObjCMessageExpressionEv'/>
<doc f='llvm/clang/lib/Parse/ParseObjc.cpp' l='2875'>/// Parse the receiver of an Objective-C++ message send.
///
/// This routine parses the receiver of a message send in
/// Objective-C++ either as a type or as an expression. Note that this
/// routine must not be called to parse a send to &apos;super&apos;, since it
/// has no way to return such a result.
///
/// \param IsExpr Whether the receiver was parsed as an expression.
///
/// \param TypeOrExpr If the receiver was parsed as an expression (\c
/// IsExpr is true), the parsed expression. If the receiver was parsed
/// as a type (\c IsExpr is false), the parsed type.
///
/// \returns True if an error occurred during parsing or semantic
/// analysis, in which case the arguments do not have valid
/// values. Otherwise, returns false for a successful parse.
///
///   objc-receiver: [C++]
///     &apos;super&apos; [not parsed here]
///     expression
///     simple-type-specifier
///     typename-specifier</doc>
