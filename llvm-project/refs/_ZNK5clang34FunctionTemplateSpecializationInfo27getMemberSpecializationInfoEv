<def f='llvm/clang/include/clang/AST/DeclTemplate.h' l='642' ll='646' type='clang::MemberSpecializationInfo * clang::FunctionTemplateSpecializationInfo::getMemberSpecializationInfo() const'/>
<doc f='llvm/clang/include/clang/AST/DeclTemplate.h' l='612'>/// Get the specialization info if this function template specialization is
  /// also a member specialization:
  ///
  /// \code
  /// template&lt;typename&gt; struct A {
  ///   template&lt;typename&gt; void f();
  ///   template&lt;&gt; void f&lt;int&gt;(); // ClassScopeFunctionSpecializationDecl
  /// };
  /// \endcode
  ///
  /// Here, A&lt;int&gt;::f&lt;int&gt; is a function template specialization that is
  /// an explicit specialization of A&lt;int&gt;::f, but it&apos;s also a member
  /// specialization (an implicit instantiation in this case) of A::f&lt;int&gt;.
  /// Further:
  ///
  /// \code
  /// template&lt;&gt; template&lt;&gt; void A&lt;int&gt;::f&lt;int&gt;() {}
  /// \endcode
  ///
  /// ... declares a function template specialization that is an explicit
  /// specialization of A&lt;int&gt;::f, and is also an explicit member
  /// specialization of A::f&lt;int&gt;.
  ///
  /// Note that the TemplateSpecializationKind of the MemberSpecializationInfo
  /// need not be the same as that returned by getTemplateSpecializationKind(),
  /// and represents the relationship between the function and the class-scope
  /// explicit specialization in the original templated class -- whereas our
  /// TemplateSpecializationKind represents the relationship between the
  /// function and the function template, and should always be
  /// TSK_ExplicitSpecialization whenever we have MemberSpecializationInfo.</doc>
<use f='llvm/clang/lib/AST/Decl.cpp' l='3431' u='c' c='_ZNK5clang12FunctionDecl27getMemberSpecializationInfoEv'/>
<use f='llvm/clang/lib/AST/Decl.cpp' l='3678' u='c' c='_ZNK5clang12FunctionDecl45getTemplateSpecializationKindForInstantiationEv'/>
<use f='llvm/clang/lib/Serialization/ASTWriterDecl.cpp' l='599' u='c' c='_ZN5clang13ASTDeclWriter17VisitFunctionDeclEPNS_12FunctionDeclE'/>
