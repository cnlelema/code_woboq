<def f='llvm/llvm/include/llvm/LTO/LTO.h' l='265' ll='422'/>
<size>1600</size>
<doc f='llvm/llvm/include/llvm/LTO/LTO.h' l='249'>/// This class implements a resolution-based interface to LLVM&apos;s LTO
/// functionality. It supports regular LTO, parallel LTO code generation and
/// ThinLTO. You can use it from a linker in the following way:
/// - Set hooks and code generation options (see lto::Config struct defined in
///   Config.h), and use the lto::Config object to create an lto::LTO object.
/// - Create lto::InputFile objects using lto::InputFile::create(), then use
///   the symbols() function to enumerate its symbols and compute a resolution
///   for each symbol (see SymbolResolution below).
/// - After the linker has visited each input file (and each regular object
///   file) and computed a resolution for each symbol, take each lto::InputFile
///   and pass it and an array of symbol resolutions to the add() function.
/// - Call the getMaxTasks() function to get an upper bound on the number of
///   native object files that LTO may add to the link.
/// - Call the run() function. This function will use the supplied AddStream
///   and Cache functions to add up to getMaxTasks() native object files to
///   the link.</doc>
<fun r='_ZN4llvm3lto3LTOC1ENS0_6ConfigESt8functionIFSt10unique_ptrINS0_15ThinBackendProcESt14default_deleteIS5_EERS2_RNS_18ModuleSummaryIndexERNS_9StringMapIN7308506'/>
<fun r='_ZN4llvm3lto3LTOD1Ev'/>
<fun r='_ZN4llvm3lto3LTO3addESt10unique_ptrINS0_9InputFileESt14default_deleteIS3_EENS_8ArrayRefINS0_16SymbolResolutionEEE'/>
<fun r='_ZNK4llvm3lto3LTO11getMaxTasksEv'/>
<fun r='_ZN4llvm3lto3LTO3runESt8functionIFSt10unique_ptrINS0_18NativeObjectStreamESt14default_deleteIS4_EEjEES2_IFS9_jNS_9StringRefEEE'/>
<mbr r='llvm::lto::LTO::Conf' o='0' t='llvm::lto::Config'/>
<mbr r='llvm::lto::LTO::RegularLTO' o='7296' t='struct RegularLTOState'/>
<mbr r='llvm::lto::LTO::ThinLTO' o='8384' t='struct ThinLTOState'/>
<mbr r='llvm::lto::LTO::GlobalResolutions' o='12480' t='StringMap&lt;llvm::lto::LTO::GlobalResolution&gt;'/>
<fun r='_ZN4llvm3lto3LTO20addModuleToGlobalResENS_8ArrayRefINS0_9InputFile6SymbolEEENS2_INS0_16SymbolResolutionEEEjb'/>
<fun r='_ZN4llvm3lto3LTO9addModuleERNS0_9InputFileEjRPKNS0_16SymbolResolutionES6_'/>
<fun r='_ZN4llvm3lto3LTO13addRegularLTOENS_13BitcodeModuleENS_8ArrayRefINS0_9InputFile6SymbolEEERPKNS0_16SymbolResolutionES9_'/>
<fun r='_ZN4llvm3lto3LTO14linkRegularLTOENS1_15RegularLTOState11AddedModuleEb'/>
<fun r='_ZN4llvm3lto3LTO10addThinLTOENS_13BitcodeModuleENS_8ArrayRefINS0_9InputFile6SymbolEEERPKNS0_16SymbolResolutionES9_'/>
<fun r='_ZN4llvm3lto3LTO13runRegularLTOESt8functionIFSt10unique_ptrINS0_18NativeObjectStreamESt14default_deleteIS4_EEjEE'/>
<fun r='_ZN4llvm3lto3LTO10runThinLTOESt8functionIFSt10unique_ptrINS0_18NativeObjectStreamESt14default_deleteIS4_EEjEES2_IFS9_jNS_9StringRefEEERKNS_8DenseSetIm13847797'/>
<fun r='_ZN4llvm3lto3LTO19checkPartiallySplitEv'/>
<mbr r='llvm::lto::LTO::CalledGetMaxTasks' o='12736' t='bool'/>
<mbr r='llvm::lto::LTO::EnableSplitLTOUnit' o='12744' t='Optional&lt;bool&gt;'/>
