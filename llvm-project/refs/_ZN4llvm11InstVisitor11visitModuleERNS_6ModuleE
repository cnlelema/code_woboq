<def f='llvm/llvm/include/llvm/IR/InstVisitor.h' l='143' type='void llvm::InstVisitor::visitModule(llvm::Module &amp; M)'/>
<doc f='llvm/llvm/include/llvm/IR/InstVisitor.h' l='132'>//===--------------------------------------------------------------------===//
  // Visitation functions... these functions provide default fallbacks in case
  // the user does not specify what to do for a particular instruction type.
  // The default behavior is to generalize the instruction type to its subtype
  // and try visiting the subtype.  All of this should be inlined perfectly,
  // because there are no virtual functions to get in the way.
  //

  // When visiting a module, function or basic block directly, these methods get
  // called to indicate when transitioning into a new unit.
  //</doc>
