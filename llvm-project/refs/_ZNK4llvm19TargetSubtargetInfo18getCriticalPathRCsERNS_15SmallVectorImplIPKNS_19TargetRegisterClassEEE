<def f='llvm/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h' l='236' ll='238' type='void llvm::TargetSubtargetInfo::getCriticalPathRCs(RegClassVector &amp; CriticalPathRCs) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h' l='233'>// For use with PostRAScheduling: in CriticalPathRCs, return any register
  // classes that should only be considered for anti-dependence breaking if they
  // are on the critical path.</doc>
<use f='llvm/llvm/lib/CodeGen/PostRASchedulerList.cpp' l='271' u='c' c='_ZNK12_GLOBAL__N_115PostRAScheduler21enablePostRASchedulerERKN4llvm19TargetSubtargetInfoENS1_10CodeGenOpt5LevelERNS2_16AntiDepBreakModeERNS1_15SmallVe14427044'/>
