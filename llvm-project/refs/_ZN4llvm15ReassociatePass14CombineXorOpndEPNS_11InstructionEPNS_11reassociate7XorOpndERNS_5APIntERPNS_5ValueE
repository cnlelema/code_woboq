<dec f='llvm/llvm/include/llvm/Transforms/Scalar/Reassociate.h' l='112' type='bool llvm::ReassociatePass::CombineXorOpnd(llvm::Instruction * I, reassociate::XorOpnd * Opnd1, llvm::APInt &amp; ConstOpnd, llvm::Value *&amp; Res)'/>
<def f='llvm/llvm/lib/Transforms/Scalar/Reassociate.cpp' l='1196' ll='1220' type='bool llvm::ReassociatePass::CombineXorOpnd(llvm::Instruction * I, llvm::reassociate::XorOpnd * Opnd1, llvm::APInt &amp; ConstOpnd, llvm::Value *&amp; Res)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Reassociate.cpp' l='1367' u='c' c='_ZN4llvm15ReassociatePass11OptimizeXorEPNS_11InstructionERNS_15SmallVectorImplINS_11reassociate10ValueEntryEEE'/>
<doc f='llvm/llvm/lib/Transforms/Scalar/Reassociate.cpp' l='1190'>// Helper function of OptimizeXor(). It tries to simplify &quot;Opnd1 ^ ConstOpnd&quot;
// into &quot;R ^ C&quot;, where C would be 0, and R is a symbolic value.
//
// If it was successful, true is returned, and the &quot;R&quot; and &quot;C&quot; is returned
// via &quot;Res&quot; and &quot;ConstOpnd&quot;, respectively; otherwise, false is returned,
// and both &quot;Res&quot; and &quot;ConstOpnd&quot; remain unchanged.</doc>
