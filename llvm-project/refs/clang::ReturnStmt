<inh f='llvm/clang/include/clang/AST/Stmt.h' l='66' c='clang::Stmt'/>
<def f='llvm/clang/include/clang/AST/Stmt.h' l='2576' ll='2656'/>
<size>1</size>
<doc f='llvm/clang/include/clang/AST/Stmt.h' l='2568'>/// ReturnStmt - This represents a return, optionally of an expression:
///   return;
///   return 4;
///
/// Note that GCC allows return with no argument in a function declared to
/// return a value, and it allows returning a value in functions declared to
/// return void.  We explicitly model this in the AST, which means you can&apos;t
/// depend on the return type of the function and the presence of an argument.</doc>
<mbr r='clang::ReturnStmt::RetExpr' t='clang::Stmt *'/>
<fun r='_ZNK5clang10ReturnStmt16hasNRVOCandidateEv'/>
<fun r='_ZNK5clang10ReturnStmt18numTrailingObjectsEi'/>
<fun r='_ZN5clang10ReturnStmtC1ENS_14SourceLocationEPNS_4ExprEPKNS_7VarDeclE'/>
<fun r='_ZN5clang10ReturnStmtC1ENS_4Stmt10EmptyShellEb'/>
<fun r='_ZN5clang10ReturnStmt6CreateERKNS_10ASTContextENS_14SourceLocationEPNS_4ExprEPKNS_7VarDeclE'/>
<fun r='_ZN5clang10ReturnStmt11CreateEmptyERKNS_10ASTContextEb'/>
<fun r='_ZN5clang10ReturnStmt11getRetValueEv'/>
<fun r='_ZNK5clang10ReturnStmt11getRetValueEv'/>
<fun r='_ZN5clang10ReturnStmt11setRetValueEPNS_4ExprE'/>
<fun r='_ZNK5clang10ReturnStmt16getNRVOCandidateEv'/>
<fun r='_ZN5clang10ReturnStmt16setNRVOCandidateEPKNS_7VarDeclE'/>
<fun r='_ZNK5clang10ReturnStmt12getReturnLocEv'/>
<fun r='_ZN5clang10ReturnStmt12setReturnLocENS_14SourceLocationE'/>
<fun r='_ZNK5clang10ReturnStmt11getBeginLocEv'/>
<fun r='_ZNK5clang10ReturnStmt9getEndLocEv'/>
<fun r='_ZN5clang10ReturnStmt7classofEPKNS_4StmtE'/>
<fun r='_ZN5clang10ReturnStmt8childrenEv'/>
<fun r='_ZNK5clang10ReturnStmt8childrenEv'/>
