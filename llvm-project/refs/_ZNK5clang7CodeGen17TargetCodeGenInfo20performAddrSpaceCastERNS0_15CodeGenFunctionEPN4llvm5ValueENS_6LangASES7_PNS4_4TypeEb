<dec f='llvm/clang/lib/CodeGen/TargetInfo.h' l='308' type='llvm::Value * clang::CodeGen::TargetCodeGenInfo::performAddrSpaceCast(CodeGen::CodeGenFunction &amp; CGF, llvm::Value * V, clang::LangAS SrcAddr, clang::LangAS DestAddr, llvm::Type * DestTy, bool IsNonNull = false) const'/>
<use f='llvm/clang/lib/CodeGen/CGAtomic.cpp' l='1031' u='c' c='_ZN5clang7CodeGen15CodeGenFunction14EmitAtomicExprEPNS_10AtomicExprE'/>
<doc f='llvm/clang/lib/CodeGen/TargetInfo.h' l='302'>/// Perform address space cast of an expression of pointer type.
  /// \param V is the LLVM value to be casted to another address space.
  /// \param SrcAddr is the language address space of \p V.
  /// \param DestAddr is the targeted language address space.
  /// \param DestTy is the destination LLVM pointer type.
  /// \param IsNonNull is the flag indicating \p V is known to be non null.</doc>
<use f='llvm/clang/lib/CodeGen/CGCall.cpp' l='4055' u='c' c='_ZN5clang7CodeGen15CodeGenFunction8EmitCallERKNS0_14CGFunctionInfoERKNS0_8CGCalleeENS0_15ReturnValueSlotERKNS0_11CallArgListEPPN4llvm8CallBaseENS_14SourceLocationE'/>
<use f='llvm/clang/lib/CodeGen/CGClass.cpp' l='2038' u='c' c='_ZN5clang7CodeGen15CodeGenFunction22EmitCXXConstructorCallEPKNS_18CXXConstructorDeclENS_11CXXCtorTypeEbbNS0_12AggValueSlotEPKNS_16CXXConstructExprE'/>
<use f='llvm/clang/lib/CodeGen/CGDecl.cpp' l='2408' u='c' c='_ZN5clang7CodeGen15CodeGenFunction12EmitParmDeclERKNS_7VarDeclENS1_10ParamValueEj'/>
<use f='llvm/clang/lib/CodeGen/CGExpr.cpp' l='96' u='c' c='_ZN5clang7CodeGen15CodeGenFunction16CreateTempAllocaEPN4llvm4TypeENS_9CharUnitsERKNS2_5TwineEPNS2_5ValueEPNS0_7AddressE'/>
<use f='llvm/clang/lib/CodeGen/CGExpr.cpp' l='5239' u='c' c='_ZN5clang7CodeGen15CodeGenFunction14EmitCastLValueEPKNS_8CastExprE'/>
<use f='llvm/clang/lib/CodeGen/CGExprScalar.cpp' l='2368' u='c' c='_ZN12_GLOBAL__N_117ScalarExprEmitter13VisitCastExprEPN5clang8CastExprE'/>
<def f='llvm/clang/lib/CodeGen/TargetInfo.cpp' l='456' ll='464' type='llvm::Value * clang::CodeGen::TargetCodeGenInfo::performAddrSpaceCast(CodeGen::CodeGenFunction &amp; CGF, llvm::Value * Src, clang::LangAS SrcAddr, clang::LangAS DestAddr, llvm::Type * DestTy, bool isNonNull = false) const'/>
