<dec f='llvm/clang/include/clang/AST/Decl.h' l='2422' type='clang::FunctionDecl * clang::FunctionDecl::getInstantiatedFromMemberFunction() const'/>
<doc f='llvm/clang/include/clang/AST/Decl.h' l='2401'>/// If this function is an instantiation of a member function
  /// of a class template specialization, retrieves the function from
  /// which it was instantiated.
  ///
  /// This routine will return non-NULL for (non-templated) member
  /// functions of class templates and for instantiations of function
  /// templates. For example, given:
  ///
  /// \code
  /// template&lt;typename T&gt;
  /// struct X {
  ///   void f(T);
  /// };
  /// \endcode
  ///
  /// The declaration for X&lt;int&gt;::f is a (non-templated) FunctionDecl
  /// whose parent is the class template specialization X&lt;int&gt;. For
  /// this declaration, getInstantiatedFromFunction() will return
  /// the FunctionDecl X&lt;T&gt;::A. When a complete definition of
  /// X&lt;int&gt;::A is required, it will be instantiated from the
  /// declaration returned by getInstantiatedFromMemberFunction().</doc>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='2816' u='c' c='_ZN5clang15ASTNodeImporter25ImportTemplateInformationEPNS_12FunctionDeclES2_'/>
<use f='llvm/clang/lib/AST/Decl.cpp' l='1162' u='c' c='_ZL24getExplicitVisibilityAuxPKN5clang9NamedDeclENS0_22ExplicitVisibilityKindEb'/>
<def f='llvm/clang/lib/AST/Decl.cpp' l='3418' ll='3423' type='clang::FunctionDecl * clang::FunctionDecl::getInstantiatedFromMemberFunction() const'/>
<use f='llvm/clang/lib/AST/Decl.cpp' l='3736' u='c' c='_ZNK5clang12FunctionDecl11isOutOfLineEv'/>
<use f='llvm/clang/lib/AST/Decl.cpp' l='3867' u='c' c='_ZN5clang12FunctionDecl10getODRHashEv'/>
<use f='llvm/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp' l='5044' u='c' c='_ZL17isInstantiationOfPN5clang12FunctionDeclES1_'/>
