<def f='llvm/llvm/include/llvm/ExecutionEngine/Orc/GlobalMappingLayer.h' l='76' ll='81' type='llvm::JITSymbol llvm::orc::GlobalMappingLayer::findSymbol(const std::string &amp; Name, bool ExportedSymbolsOnly)'/>
<use f='llvm/llvm/unittests/ExecutionEngine/Orc/GlobalMappingLayerTest.cpp' l='40' u='c' c='_ZN12_GLOBAL__N_133GlobalMappingLayerTest_Empty_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/ExecutionEngine/Orc/GlobalMappingLayerTest.cpp' l='44' u='c' c='_ZN12_GLOBAL__N_133GlobalMappingLayerTest_Empty_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/ExecutionEngine/Orc/GlobalMappingLayerTest.cpp' l='51' u='c' c='_ZN12_GLOBAL__N_133GlobalMappingLayerTest_Empty_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/ExecutionEngine/Orc/GlobalMappingLayerTest.cpp' l='58' u='c' c='_ZN12_GLOBAL__N_133GlobalMappingLayerTest_Empty_Test8TestBodyEv'/>
<doc f='llvm/llvm/include/llvm/ExecutionEngine/Orc/GlobalMappingLayer.h' l='67'>/// Search for the given named symbol.
  ///
  ///          This method will first search the local symbol table, returning
  ///        any symbol found there. If the symbol is not found in the local
  ///        table then this call will be passed through to the base layer.
  ///
  /// @param Name The name of the symbol to search for.
  /// @param ExportedSymbolsOnly If true, search only for exported symbols.
  /// @return A handle for the given named symbol, if it exists.</doc>
