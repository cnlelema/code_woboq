<def f='llvm/llvm/include/llvm/Support/FileCheck.h' l='93' ll='117'/>
<size>24</size>
<doc f='llvm/llvm/include/llvm/Support/FileCheck.h' l='90'>/// Class representing a numeric expression consisting of either a single
/// numeric variable or a binary operation between a numeric variable and an
/// immediate.</doc>
<mbr r='llvm::FileCheckNumExpr::LeftOp' o='0' t='llvm::FileCheckNumericVariable *'/>
<mbr r='llvm::FileCheckNumExpr::RightOp' o='64' t='uint64_t'/>
<mbr r='llvm::FileCheckNumExpr::EvalBinop' o='128' t='binop_eval_t'/>
<fun r='_ZN4llvm16FileCheckNumExprC1EPFmmmEPNS_24FileCheckNumericVariableEm'/>
<fun r='_ZNK4llvm16FileCheckNumExpr4evalEv'/>
<fun r='_ZNK4llvm16FileCheckNumExpr15getUndefVarNameEv'/>
<fun r='_ZNK4llvm16FileCheckNumExpr4evalEv'/>
<fun r='_ZNK4llvm16FileCheckNumExpr15getUndefVarNameEv'/>
