<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='524' ll='527' type='bool llvm::TargetInstrInfo::isBranchOffsetInRange(unsigned int BranchOpc, int64_t BrOffset) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='522'>/// \returns true if a branch from an instruction with opcode \p BranchOpc
  ///  bytes is capable of jumping to a position \p BrOffset bytes away.</doc>
<use f='llvm/llvm/lib/CodeGen/BranchRelaxation.cpp' l='287' u='c' c='_ZNK12_GLOBAL__N_116BranchRelaxation14isBlockInRangeERKN4llvm12MachineInstrERKNS1_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/BranchRelaxation.cpp' l='449' u='c' c='_ZN12_GLOBAL__N_116BranchRelaxation24fixupUnconditionalBranchERN4llvm12MachineInstrE'/>
