<inh f='llvm/llvm/include/llvm/Support/raw_ostream.h' l='45' c='llvm::raw_ostream'/>
<def f='llvm/llvm/include/llvm/Support/raw_ostream.h' l='340' ll='357'/>
<ovr f='llvm/llvm/include/llvm/Support/raw_ostream.h' l='365' c='llvm::raw_fd_ostream'/>
<ovr f='llvm/llvm/include/llvm/Support/raw_ostream.h' l='509' c='llvm::raw_svector_ostream'/>
<ovr f='llvm/llvm/include/llvm/Support/raw_ostream.h' l='538' c='llvm::raw_null_ostream'/>
<size>40</size>
<doc f='llvm/llvm/include/llvm/Support/raw_ostream.h' l='337'>/// An abstract base class for streams implementations that also support a
/// pwrite operation. This is useful for code that can mostly stream out data,
/// but needs to patch in a header that needs to know the output size.</doc>
<fun r='_ZN4llvm17raw_pwrite_stream11pwrite_implEPKcmm'/>
<fun r='_ZN4llvm17raw_pwrite_stream6anchorEv'/>
<fun r='_ZN4llvm17raw_pwrite_streamC1Eb'/>
<fun r='_ZN4llvm17raw_pwrite_stream6pwriteEPKcmm'/>
