<dec f='llvm/llvm/include/llvm/ExecutionEngine/Orc/Core.h' l='364' type='void llvm::orc::ReExportsMaterializationUnit::ReExportsMaterializationUnit(llvm::orc::JITDylib * SourceJD, bool MatchNonExported, SymbolAliasMap Aliases, VModuleKey K)'/>
<doc f='llvm/llvm/include/llvm/ExecutionEngine/Orc/Core.h' l='356'>/// SourceJD is allowed to be nullptr, in which case the source JITDylib is
  /// taken to be whatever JITDylib these definitions are materialized in (and
  /// MatchNonExported has no effect). This is useful for defining aliases
  /// within a JITDylib.
  ///
  /// Note: Care must be taken that no sets of aliases form a cycle, as such
  ///       a cycle will result in a deadlock when any symbol in the cycle is
  ///       resolved.</doc>
<def f='llvm/llvm/lib/ExecutionEngine/Orc/Core.cpp' l='505' ll='510' type='void llvm::orc::ReExportsMaterializationUnit::ReExportsMaterializationUnit(llvm::orc::JITDylib * SourceJD, bool MatchNonExported, SymbolAliasMap Aliases, VModuleKey K)'/>
