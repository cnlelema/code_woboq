<dec f='llvm/llvm/include/llvm/Passes/PassBuilder.h' l='450' type='llvm::Error llvm::PassBuilder::parsePassPipeline(CGSCCPassManager &amp; CGPM, llvm::StringRef PipelineText, bool VerifyEachPass = true, bool DebugLogging = false)'/>
<doc f='llvm/llvm/include/llvm/Passes/PassBuilder.h' l='443'>/// {{@ Parse a textual pass pipeline description into a specific PassManager
  ///
  /// Automatic deduction of an appropriate pass manager stack is not supported.
  /// For example, to insert a loop pass &apos;lpass&apos; into a FunctionPassManager,
  /// this is the valid pipeline text:
  ///
  ///   function(lpass)</doc>
<def f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='2214' ll='2235' type='llvm::Error llvm::PassBuilder::parsePassPipeline(CGSCCPassManager &amp; CGPM, llvm::StringRef PipelineText, bool VerifyEachPass = true, bool DebugLogging = false)'/>
<doc f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='2213'>// Primary pass pipeline description parsing routine for a \c CGSCCPassManager</doc>
<use f='llvm/llvm/tools/opt/NewPMDriver.cpp' l='177' u='c' c='_ZL19registerEPCallbacksRN4llvm11PassBuilderEbb'/>
