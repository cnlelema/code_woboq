<dec f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='566' type='std::pair&lt;Instruction *, Instruction *&gt; llvm::LoopAccessInfo::addRuntimeChecks(llvm::Instruction * Loc, const SmallVectorImpl&lt;RuntimePointerChecking::PointerCheck&gt; &amp; PointerChecks) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='560'>/// Generete the instructions for the checks in \p PointerChecks.
  ///
  /// Returns a pair of instructions where the first element is the first
  /// instruction generated in possibly a sequence of instructions and the
  /// second value is the final comparator value or NULL if no check is needed.</doc>
<def f='llvm/llvm/lib/Analysis/LoopAccessAnalysis.cpp' l='2182' ll='2250' type='std::pair&lt;Instruction *, Instruction *&gt; llvm::LoopAccessInfo::addRuntimeChecks(llvm::Instruction * Loc, const SmallVectorImpl&lt;RuntimePointerChecking::PointerCheck&gt; &amp; PointerChecks) const'/>
<use f='llvm/llvm/lib/Analysis/LoopAccessAnalysis.cpp' l='2257' u='c' c='_ZNK4llvm14LoopAccessInfo16addRuntimeChecksEPNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopVersioning.cpp' l='64' u='c' c='_ZN4llvm14LoopVersioning11versionLoopERKNS_15SmallVectorImplIPNS_11InstructionEEE'/>
