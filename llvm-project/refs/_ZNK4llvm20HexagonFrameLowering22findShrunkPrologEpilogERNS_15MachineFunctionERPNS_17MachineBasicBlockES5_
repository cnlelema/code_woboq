<dec f='llvm/llvm/lib/Target/Hexagon/HexagonFrameLowering.h' l='165' type='void llvm::HexagonFrameLowering::findShrunkPrologEpilog(llvm::MachineFunction &amp; MF, llvm::MachineBasicBlock *&amp; PrologB, llvm::MachineBasicBlock *&amp; EpilogB) const'/>
<def f='llvm/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp' l='394' ll='496' type='void llvm::HexagonFrameLowering::findShrunkPrologEpilog(llvm::MachineFunction &amp; MF, llvm::MachineBasicBlock *&amp; PrologB, llvm::MachineBasicBlock *&amp; EpilogB) const'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp' l='512' u='c' c='_ZNK4llvm20HexagonFrameLowering12emitPrologueERNS_15MachineFunctionERNS_17MachineBasicBlockE'/>
<doc f='llvm/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp' l='390'>/// Implements shrink-wrapping of the stack frame. By default, stack frame
/// is created in the function entry block, and is cleaned up in every block
/// that returns. This function finds alternate blocks: one for the frame
/// setup (prolog) and one for the cleanup (epilog).</doc>
