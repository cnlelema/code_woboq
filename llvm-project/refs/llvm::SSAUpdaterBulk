<def f='llvm/llvm/include/llvm/Transforms/Utils/SSAUpdaterBulk.h' l='40' ll='87'/>
<size>600</size>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/SSAUpdaterBulk.h' l='31'>/// Helper class for SSA formation on a set of values defined in multiple
/// blocks.
///
/// This is used when code duplication or another unstructured transformation
/// wants to rewrite a set of uses of one value with uses of a set of values.
/// The update is done only when RewriteAllUses is called, all other methods are
/// used for book-keeping. That helps to share some common computations between
/// updates of different uses (which is not the case when traditional SSAUpdater
/// is used).</doc>
<mbr r='llvm::SSAUpdaterBulk::Rewrites' o='0' t='SmallVector&lt;llvm::SSAUpdaterBulk::RewriteInfo, 4&gt;'/>
<mbr r='llvm::SSAUpdaterBulk::PredCache' o='3456' t='llvm::PredIteratorCache'/>
<fun r='_ZN4llvm14SSAUpdaterBulk14computeValueAtEPNS_10BasicBlockERNS0_11RewriteInfoEPNS_13DominatorTreeE'/>
<fun r='_ZN4llvm14SSAUpdaterBulkC1Ev'/>
<fun r='_ZN4llvm14SSAUpdaterBulkC1ERKS0_'/>
<fun r='_ZN4llvm14SSAUpdaterBulkaSERKS0_'/>
<fun r='_ZN4llvm14SSAUpdaterBulkD1Ev'/>
<fun r='_ZN4llvm14SSAUpdaterBulk11AddVariableENS_9StringRefEPNS_4TypeE'/>
<fun r='_ZN4llvm14SSAUpdaterBulk17AddAvailableValueEjPNS_10BasicBlockEPNS_5ValueE'/>
<fun r='_ZN4llvm14SSAUpdaterBulk6AddUseEjPNS_3UseE'/>
<fun r='_ZN4llvm14SSAUpdaterBulk16HasValueForBlockEjPNS_10BasicBlockE'/>
<fun r='_ZN4llvm14SSAUpdaterBulk14RewriteAllUsesEPNS_13DominatorTreeEPNS_15SmallVectorImplIPNS_7PHINodeEEE'/>
<fun r='_ZN4llvm14SSAUpdaterBulk11AddVariableENS_9StringRefEPNS_4TypeE'/>
<fun r='_ZN4llvm14SSAUpdaterBulk17AddAvailableValueEjPNS_10BasicBlockEPNS_5ValueE'/>
<fun r='_ZN4llvm14SSAUpdaterBulk6AddUseEjPNS_3UseE'/>
<fun r='_ZN4llvm14SSAUpdaterBulk16HasValueForBlockEjPNS_10BasicBlockE'/>
<fun r='_ZN4llvm14SSAUpdaterBulk14computeValueAtEPNS_10BasicBlockERNS0_11RewriteInfoEPNS_13DominatorTreeE'/>
<fun r='_ZN4llvm14SSAUpdaterBulk14RewriteAllUsesEPNS_13DominatorTreeEPNS_15SmallVectorImplIPNS_7PHINodeEEE'/>
