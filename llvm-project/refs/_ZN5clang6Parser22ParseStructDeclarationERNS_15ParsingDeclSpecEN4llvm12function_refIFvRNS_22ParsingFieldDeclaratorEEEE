<dec f='llvm/clang/include/clang/Parse/Parser.h' l='2165' type='void clang::Parser::ParseStructDeclaration(clang::ParsingDeclSpec &amp; DS, llvm::function_ref&lt;void (ParsingFieldDeclarator &amp;)&gt; FieldsCallback)'/>
<def f='llvm/clang/lib/Parse/ParseDecl.cpp' l='3999' ll='4070' type='void clang::Parser::ParseStructDeclaration(clang::ParsingDeclSpec &amp; DS, llvm::function_ref&lt;void (ParsingFieldDeclarator &amp;)&gt; FieldsCallback)'/>
<use f='llvm/clang/lib/Parse/ParseDecl.cpp' l='4007' u='c' c='_ZN5clang6Parser22ParseStructDeclarationERNS_15ParsingDeclSpecEN4llvm12function_refIFvRNS_22ParsingFieldDeclaratorEEEE'/>
<use f='llvm/clang/lib/Parse/ParseDecl.cpp' l='4146' u='c' c='_ZN5clang6Parser20ParseStructUnionBodyENS_14SourceLocationEjPNS_4DeclE'/>
<doc f='llvm/clang/lib/Parse/ParseDecl.cpp' l='3978'>/// ParseStructDeclaration - Parse a struct declaration without the terminating
/// semicolon.
///
/// Note that a struct declaration refers to a declaration in a struct,
/// not to the declaration of a struct.
///
///       struct-declaration:
/// [C2x]   attributes-specifier-seq[opt]
///           specifier-qualifier-list struct-declarator-list
/// [GNU]   __extension__ struct-declaration
/// [GNU]   specifier-qualifier-list
///       struct-declarator-list:
///         struct-declarator
///         struct-declarator-list &apos;,&apos; struct-declarator
/// [GNU]   struct-declarator-list &apos;,&apos; attributes[opt] struct-declarator
///       struct-declarator:
///         declarator
/// [GNU]   declarator attributes[opt]
///         declarator[opt] &apos;:&apos; constant-expression
/// [GNU]   declarator[opt] &apos;:&apos; constant-expression attributes[opt]
///</doc>
<use f='llvm/clang/lib/Parse/ParseObjc.cpp' l='774' u='c' c='_ZN5clang6Parser26ParseObjCInterfaceDeclListENS_3tok15ObjCKeywordKindEPNS_4DeclE'/>
<use f='llvm/clang/lib/Parse/ParseObjc.cpp' l='1987' u='c' c='_ZN5clang6Parser31ParseObjCClassInstanceVariablesEPNS_4DeclENS_3tok15ObjCKeywordKindENS_14SourceLocationE'/>
