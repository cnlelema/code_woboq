<use f='llvm/clang/include/clang/Sema/Overload.h' l='586' u='c' c='_ZNK5clang26ImplicitConversionSequence7getKindEv'/>
<def f='llvm/clang/include/clang/Sema/Overload.h' l='626' type='bool clang::ImplicitConversionSequence::isInitialized() const'/>
<use f='llvm/clang/include/clang/Sema/Overload.h' l='827' u='c' c='_ZNK5clang17OverloadCandidate22hasAmbiguousConversionEv'/>
<doc f='llvm/clang/include/clang/Sema/Overload.h' l='623'>/// Determines whether this conversion sequence has been
    /// initialized.  Most operations should never need to query
    /// uninitialized conversions and should assert as above.</doc>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='6163' u='c' c='_ZN5clang4Sema20AddOverloadCandidateEPNS_12FunctionDeclENS_14DeclAccessPairEN4llvm8ArrayRefIPNS_4ExprEEERNS_20OverloadCandidateSetEbbbbNS_8CallExpr11A10371068'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='6672' u='c' c='_ZN5clang4Sema18AddMethodCandidateEPNS_13CXXMethodDeclENS_14DeclAccessPairEPNS_13CXXRecordDeclENS_8QualTypeENS_4Expr14ClassificationEN4llvm8ArrayRefIP2458360'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='10774' u='c' c='_ZL26CompleteNonViableCandidateRN5clang4SemaEPNS_17OverloadCandidateEN4llvm8ArrayRefIPNS_4ExprEEE'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='10812' u='c' c='_ZL26CompleteNonViableCandidateRN5clang4SemaEPNS_17OverloadCandidateEN4llvm8ArrayRefIPNS_4ExprEEE'/>
