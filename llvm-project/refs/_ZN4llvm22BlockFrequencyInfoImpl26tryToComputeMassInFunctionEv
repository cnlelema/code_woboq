<dec f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='918' type='bool llvm::BlockFrequencyInfoImpl::tryToComputeMassInFunction()'/>
<def f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='1227' ll='1245' type='bool llvm::BlockFrequencyInfoImpl::tryToComputeMassInFunction()'/>
<use f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='1248' u='c' c='_ZN4llvm22BlockFrequencyInfoImpl21computeMassInFunctionEv'/>
<use f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='1251' u='c' c='_ZN4llvm22BlockFrequencyInfoImpl21computeMassInFunctionEv'/>
<doc f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='910'>/// Try to compute mass in the top-level function.
  ///
  /// Assign mass to the entry block, and then for each block in reverse
  /// post-order, distribute mass to its successors.  Skips nodes that have
  /// been packaged into loops.
  ///
  /// \pre \a computeMassInLoops() has been called.
  /// \return \c true unless there&apos;s an irreducible backedge.</doc>
