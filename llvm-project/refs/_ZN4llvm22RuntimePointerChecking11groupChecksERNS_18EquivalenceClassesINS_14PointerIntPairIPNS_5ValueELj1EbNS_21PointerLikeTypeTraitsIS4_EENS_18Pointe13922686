<dec f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='480' type='void llvm::RuntimePointerChecking::groupChecks(MemoryDepChecker::DepCandidates &amp; DepCands, bool UseDependencies)'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='476'>/// Groups pointers such that a single memcheck is required
  /// between two different groups. This will clear the CheckingGroups vector
  /// and re-compute it. We will only group dependecies if \p UseDependencies
  /// is true, otherwise we will create a separate group for each pointer.</doc>
<use f='llvm/llvm/lib/Analysis/LoopAccessAnalysis.cpp' l='252' u='c' c='_ZN4llvm22RuntimePointerChecking14generateChecksERNS_18EquivalenceClassesINS_14PointerIntPairIPNS_5ValueELj1EbNS_21PointerLikeTypeTraitsIS4_EENS_18Poi3619387'/>
<def f='llvm/llvm/lib/Analysis/LoopAccessAnalysis.cpp' l='306' ll='424' type='void llvm::RuntimePointerChecking::groupChecks(MemoryDepChecker::DepCandidates &amp; DepCands, bool UseDependencies)'/>
