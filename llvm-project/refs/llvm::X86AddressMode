<def f='llvm/llvm/lib/Target/X86/X86InstrBuilder.h' l='42' ll='88'/>
<size>40</size>
<doc f='llvm/llvm/lib/Target/X86/X86InstrBuilder.h' l='38'>/// X86AddressMode - This struct holds a generalized full x86 address mode.
/// The base register can be a frame index, which will eventually be replaced
/// with BP or SP and Disp being offsetted accordingly.  The displacement may
/// also include the offset of a global value.</doc>
<mbr r='llvm::X86AddressMode::BaseType' o='0' t='enum (anonymous enum at /root/cheri/llvm-project/llvm/lib/Target/X86/X86InstrBuilder.h:43:3)'/>
<mbr r='llvm::X86AddressMode::Base' o='32' t='union (anonymous union at /root/cheri/llvm-project/llvm/lib/Target/X86/X86InstrBuilder.h:48:3)'/>
<mbr r='llvm::X86AddressMode::Scale' o='64' t='unsigned int'/>
<mbr r='llvm::X86AddressMode::IndexReg' o='96' t='unsigned int'/>
<mbr r='llvm::X86AddressMode::Disp' o='128' t='int'/>
<mbr r='llvm::X86AddressMode::GV' o='192' t='const llvm::GlobalValue *'/>
<mbr r='llvm::X86AddressMode::GVOpFlags' o='256' t='unsigned int'/>
<fun r='_ZN4llvm14X86AddressModeC1Ev'/>
<fun r='_ZN4llvm14X86AddressMode14getFullAddressERNS_15SmallVectorImplINS_14MachineOperandEEE'/>
