<def f='llvm/llvm/include/llvm/IR/PassManager.h' l='680' ll='682' type='bool llvm::AnalysisManager::Invalidator::invalidate(llvm::AnalysisKey * ID, IRUnitT &amp; IR, const llvm::PreservedAnalyses &amp; PA)'/>
<doc f='llvm/llvm/include/llvm/IR/PassManager.h' l='674'>/// A type-erased variant of the above invalidate method with the same core
    /// API other than passing an analysis ID rather than an analysis type
    /// parameter.
    ///
    /// This is sadly less efficient than the above routine, which leverages
    /// the type parameter to avoid the type erasure overhead.</doc>
<use f='llvm/llvm/lib/Analysis/AliasAnalysis.cpp' l='93' u='c' c='_ZN4llvm9AAResults10invalidateERNS_8FunctionERKNS_17PreservedAnalysesERNS_15AnalysisManagerIS1_JEE11InvalidatorE'/>
<use f='llvm/llvm/lib/Analysis/CGSCCPassManager.cpp' l='178' u='c' c='_ZN4llvm25InnerAnalysisManagerProxyINS_15AnalysisManagerINS_13LazyCallGraph3SCCEJRS2_EEENS_6ModuleEJEE6Result10invalidateERS6_RKNS_17PreservedAnalyses7690279'/>
<use f='llvm/llvm/lib/Analysis/CGSCCPassManager.cpp' l='282' u='c' c='_ZN4llvm33FunctionAnalysisManagerCGSCCProxy6Result10invalidateERNS_13LazyCallGraph3SCCERKNS_17PreservedAnalysesERNS_15AnalysisManagerIS3_JRS2_EE11InvalidatorE'/>
<use f='llvm/llvm/lib/Analysis/LoopAnalysisManager.cpp' l='105' u='c' c='_ZN4llvm25InnerAnalysisManagerProxyINS_15AnalysisManagerINS_4LoopEJRNS_27LoopStandardAnalysisResultsEEEENS_8FunctionEJEE6Result10invalidateERS6_RKNS_115878726'/>
<use f='llvm/llvm/lib/IR/PassManager.cpp' l='67' u='c' c='_ZN4llvm25InnerAnalysisManagerProxy6Result10invalidateERT0_RKNS_17PreservedAnalysesERNS_15AnalysisManagerIS2_JDpT1_EE11InvalidatorE'/>
