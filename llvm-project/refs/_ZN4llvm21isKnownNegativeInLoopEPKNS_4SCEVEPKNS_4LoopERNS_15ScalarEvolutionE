<dec f='llvm/llvm/include/llvm/Transforms/Utils/LoopUtils.h' l='338' type='bool llvm::isKnownNegativeInLoop(const llvm::SCEV * S, const llvm::Loop * L, llvm::ScalarEvolution &amp; SE)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/LoopUtils.h' l='336'>/// Returns true if we can prove that \p S is defined and always negative in
/// loop \p L.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/InductiveRangeCheckElimination.cpp' l='1669' u='c' c='_ZNK12_GLOBAL__N_119InductiveRangeCheck25computeSafeIterationSpaceERN4llvm15ScalarEvolutionEPKNS1_14SCEVAddRecExprEb'/>
<def f='llvm/llvm/lib/Transforms/Utils/LoopUtils.cpp' l='934' ll='939' type='bool llvm::isKnownNegativeInLoop(const llvm::SCEV * S, const llvm::Loop * L, llvm::ScalarEvolution &amp; SE)'/>
