<dec f='llvm/llvm/include/llvm/Analysis/InstructionSimplify.h' l='168' type='llvm::Value * llvm::SimplifyShlInst(llvm::Value * Op0, llvm::Value * Op1, bool isNSW, bool isNUW, const llvm::SimplifyQuery &amp; Q)'/>
<doc f='llvm/llvm/include/llvm/Analysis/InstructionSimplify.h' l='167'>/// Given operands for a Shl, fold the result or return null.</doc>
<def f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='1319' ll='1322' type='llvm::Value * llvm::SimplifyShlInst(llvm::Value * Op0, llvm::Value * Op1, bool isNSW, bool isNUW, const llvm::SimplifyQuery &amp; Q)'/>
<use f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='5149' u='c' c='_ZN4llvm19SimplifyInstructionEPNS_11InstructionERKNS_13SimplifyQueryEPNS_25OptimizationRemarkEmitterE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp' l='572' u='c' c='_ZN4llvm12InstCombiner8visitShlERNS_14BinaryOperatorE'/>
