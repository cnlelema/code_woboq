<dec f='llvm/clang/include/clang/AST/RecursiveASTVisitor.h' l='233' type='bool clang::RecursiveASTVisitor::TraverseDecl(clang::Decl * D)'/>
<def f='llvm/clang/include/clang/AST/RecursiveASTVisitor.h' l='706' ll='732' type='bool clang::RecursiveASTVisitor::TraverseDecl(clang::Decl * D)'/>
<doc f='llvm/clang/include/clang/AST/RecursiveASTVisitor.h' l='228'>/// Recursively visit a declaration, by dispatching to
  /// Traverse*Decl() based on the argument&apos;s dynamic type.
  ///
  /// \returns false if the visitation was terminated early, true
  /// otherwise (including when the argument is NULL).</doc>
