<inh f='llvm/llvm/include/llvm/IR/User.h' l='44' c='llvm::User'/>
<def f='llvm/llvm/include/llvm/IR/DerivedUser.h' l='27' ll='40'/>
<ovr f='llvm/llvm/include/llvm/Analysis/MemorySSA.h' l='137' c='llvm::MemoryAccess'/>
<size>32</size>
<doc f='llvm/llvm/include/llvm/IR/DerivedUser.h' l='19'>/// Extension point for the Value hierarchy. All classes outside of lib/IR
/// that wish to inherit from User should instead inherit from DerivedUser
/// instead. Inheriting from this class is discouraged.
///
/// Generally speaking, Value is the base of a closed class hierarchy
/// that can&apos;t be extended by code outside of lib/IR. This class creates a
/// loophole that allows classes outside of lib/IR to extend User to leverage
/// its use/def list machinery.</doc>
<mbr r='llvm::DerivedUser::DeleteValue' o='192' t='DeleteValueTy'/>
<fun r='_ZN4llvm11DerivedUserC1EPNS_4TypeEjPNS_3UseEjPFvPS0_E'/>
