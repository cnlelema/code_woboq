<def f='llvm/llvm/include/llvm/Analysis/Interval.h' l='36' ll='97'/>
<size>80</size>
<doc f='llvm/llvm/include/llvm/Analysis/Interval.h' l='30'>//===----------------------------------------------------------------------===//
//
/// Interval Class - An Interval is a set of nodes defined such that every node
/// in the interval has all of its predecessors in the interval (except for the
/// header)
///</doc>
<mbr r='llvm::Interval::HeaderNode' o='0' t='llvm::BasicBlock *'/>
<fun r='_ZN4llvm8IntervalC1EPNS_10BasicBlockE'/>
<fun r='_ZNK4llvm8Interval13getHeaderNodeEv'/>
<mbr r='llvm::Interval::Nodes' o='64' t='std::vector&lt;BasicBlock *&gt;'/>
<mbr r='llvm::Interval::Successors' o='256' t='std::vector&lt;BasicBlock *&gt;'/>
<mbr r='llvm::Interval::Predecessors' o='448' t='std::vector&lt;BasicBlock *&gt;'/>
<fun r='_ZNK4llvm8Interval8containsEPNS_10BasicBlockE'/>
<fun r='_ZNK4llvm8Interval11isSuccessorEPNS_10BasicBlockE'/>
<fun r='_ZNK4llvm8IntervaleqERKS0_'/>
<fun r='_ZNK4llvm8Interval6isLoopEv'/>
<fun r='_ZNK4llvm8Interval5printERNS_11raw_ostreamE'/>
<fun r='_ZNK4llvm8Interval6isLoopEv'/>
<fun r='_ZNK4llvm8Interval5printERNS_11raw_ostreamE'/>
