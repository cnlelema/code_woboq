<dec f='llvm/clang/include/clang/AST/Expr.h' l='602' type='bool clang::Expr::EvaluateAsBooleanCondition(bool &amp; Result, const clang::ASTContext &amp; Ctx) const'/>
<doc f='llvm/clang/include/clang/AST/Expr.h' l='598'>/// EvaluateAsBooleanCondition - Return true if this is a constant
  /// which we can fold and convert to a boolean condition using
  /// any crazy technique that we want to, even if the expression has
  /// side-effects.</doc>
<use f='llvm/clang/lib/AST/Expr.cpp' l='3231' u='c' c='_ZNK5clang8CallExpr20isBuiltinAssumeFalseERKNS_10ASTContextE'/>
<def f='llvm/clang/lib/AST/ExprConstant.cpp' l='12019' ll='12026' type='bool clang::Expr::EvaluateAsBooleanCondition(bool &amp; Result, const clang::ASTContext &amp; Ctx) const'/>
<use f='llvm/clang/lib/Analysis/CFG.cpp' l='1208' u='c' c='_ZN12_GLOBAL__N_110CFGBuilder33evaluateAsBooleanConditionNoCacheEPN5clang4ExprE'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='6717' u='c' c='_ZL13getNumThreadsRN5clang7CodeGen15CodeGenFunctionEPKNS_12CapturedStmtEPN4llvm5ValueE'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='6908' u='c' c='_ZL32emitNumThreadsForTargetDirectiveRN5clang7CodeGen15CodeGenFunctionERKNS_22OMPExecutableDirectiveE'/>
<use f='llvm/clang/lib/Sema/SemaChecking.cpp' l='4174' u='c' c='_ZL16CheckNonNullExprRN5clang4SemaEPKNS_4ExprE'/>
<use f='llvm/clang/lib/Sema/SemaChecking.cpp' l='10091' u='c' c='_ZL12GetExprRangeRN5clang10ASTContextEPKNS_4ExprEj'/>
<use f='llvm/clang/lib/Sema/SemaChecking.cpp' l='12248' u='c' c='_ZN12_GLOBAL__N_115SequenceChecker17EvaluationTracker8evaluateEPKN5clang4ExprERb'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='12963' u='c' c='_ZL15EvaluatesAsTrueRN5clang4SemaEPNS_4ExprE'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='12971' u='c' c='_ZL16EvaluatesAsFalseRN5clang4SemaEPNS_4ExprE'/>
<use f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='3185' u='c' c='_ZN5clang4Sema26findFailedBooleanConditionEPNS_4ExprE'/>
