<def f='llvm/llvm/include/llvm/Analysis/LoopPass.h' l='79' type='void llvm::LoopPass::cloneBasicBlockAnalysis(llvm::BasicBlock * F, llvm::BasicBlock * T, llvm::Loop * L)'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopPass.h' l='69'>//===--------------------------------------------------------------------===//
  /// SimpleAnalysis - Provides simple interface to update analysis info
  /// maintained by various passes. Note, if required this interface can
  /// be extracted into a separate abstract class but it would require
  /// additional use of multiple inheritance in Pass class hierarchy, something
  /// we are trying to avoid.

  /// Each loop pass can override these simple analysis hooks to update
  /// desired analysis information.
  /// cloneBasicBlockAnalysis - Clone analysis info associated with basic block.</doc>
<use f='llvm/llvm/lib/Analysis/LoopPass.cpp' l='101' u='c' c='_ZN4llvm13LPPassManager29cloneBasicBlockSimpleAnalysisEPNS_10BasicBlockES2_PNS_4LoopE'/>
<ovr f='llvm/llvm/lib/Transforms/Scalar/LICM.cpp' l='2182' c='_ZN12_GLOBAL__N_114LegacyLICMPass23cloneBasicBlockAnalysisEPN4llvm10BasicBlockES3_PNS1_4LoopE'/>
