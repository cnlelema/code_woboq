<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='364' type='llvm::Instruction * llvm::InstCombiner::visitCallInst(llvm::CallInst &amp; CI)'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp' l='1779' ll='3985' type='llvm::Instruction * llvm::InstCombiner::visitCallInst(llvm::CallInst &amp; CI)'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp' l='1776'>/// CallInst simplification. This mostly only handles folding of intrinsic
/// instructions. For normal calls, it allows visitCallBase to do the heavy
/// lifting.</doc>
