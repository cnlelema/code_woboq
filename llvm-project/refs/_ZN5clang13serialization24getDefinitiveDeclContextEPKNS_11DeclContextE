<dec f='llvm/clang/lib/Serialization/ASTCommon.h' l='85' type='const clang::DeclContext * clang::serialization::getDefinitiveDeclContext(const clang::DeclContext * DC)'/>
<def f='llvm/clang/lib/Serialization/ASTCommon.cpp' l='263' ll='321' type='const clang::DeclContext * clang::serialization::getDefinitiveDeclContext(const clang::DeclContext * DC)'/>
<doc f='llvm/clang/lib/Serialization/ASTCommon.h' l='75'>/// Retrieve the &quot;definitive&quot; declaration that provides all of the
/// visible entries for the given declaration context, if there is one.
///
/// The &quot;definitive&quot; declaration is the only place where we need to look to
/// find information about the declarations within the given declaration
/// context. For example, C++ and Objective-C classes, C structs/unions, and
/// Objective-C protocols, categories, and extensions are all defined in a
/// single place in the source code, so they have definitive declarations
/// associated with them. C++ namespaces, on the other hand, can have
/// multiple definitions.</doc>
<use f='llvm/clang/lib/Serialization/ASTWriter.cpp' l='6311' u='c' c='_ZN5clang9ASTWriter16AddedVisibleDeclEPKNS_11DeclContextEPKNS_4DeclE'/>
