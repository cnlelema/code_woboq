<dec f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeNVPTX.h' l='423' type='llvm::Function * clang::CodeGen::CGOpenMPRuntimeNVPTX::createParallelDataSharingWrapper(llvm::Function * OutlinedParallelFn, const clang::OMPExecutableDirective &amp; D)'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeNVPTX.cpp' l='1943' u='c' c='_ZN5clang7CodeGen20CGOpenMPRuntimeNVPTX28emitParallelOutlinedFunctionERKNS_22OMPExecutableDirectiveEPKNS_7VarDeclENS_19OpenMPDirectiveKindERKNS0_15RegionCodeGenTyE'/>
<def f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeNVPTX.cpp' l='4485' ll='4602' type='llvm::Function * clang::CodeGen::CGOpenMPRuntimeNVPTX::createParallelDataSharingWrapper(llvm::Function * OutlinedParallelFn, const clang::OMPExecutableDirective &amp; D)'/>
<doc f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeNVPTX.cpp' l='4481'>/// Emit function which wraps the outline parallel region
/// and controls the arguments which are passed to this function.
/// The wrapper ensures that the outlined function is called
/// with the correct arguments when data is shared.</doc>
<doc f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeNVPTX.h' l='419'>/// Emit function which wraps the outline parallel region
  /// and controls the parameters which are passed to this function.
  /// The wrapper ensures that the outlined function is called
  /// with the correct arguments when data is shared.</doc>
