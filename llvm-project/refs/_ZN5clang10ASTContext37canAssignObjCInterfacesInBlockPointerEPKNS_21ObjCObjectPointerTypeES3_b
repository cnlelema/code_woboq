<dec f='llvm/clang/include/clang/AST/ASTContext.h' l='2665' type='bool clang::ASTContext::canAssignObjCInterfacesInBlockPointer(const clang::ObjCObjectPointerType * LHSOPT, const clang::ObjCObjectPointerType * RHSOPT, bool BlockReturnType)'/>
<def f='llvm/clang/lib/AST/ASTContext.cpp' l='8225' ll='8274' type='bool clang::ASTContext::canAssignObjCInterfacesInBlockPointer(const clang::ObjCObjectPointerType * LHSOPT, const clang::ObjCObjectPointerType * RHSOPT, bool BlockReturnType)'/>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='8242' u='c' c='_ZN5clang10ASTContext37canAssignObjCInterfacesInBlockPointerEPKNS_21ObjCObjectPointerTypeES3_b'/>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='9202' u='c' c='_ZN5clang10ASTContext10mergeTypesENS_8QualTypeES1_bbbbbb'/>
<doc f='llvm/clang/lib/AST/ASTContext.cpp' l='8220'>/// canAssignObjCInterfacesInBlockPointer - This routine is specifically written
/// for providing type-safety for objective-c pointers used to pass/return
/// arguments in block literals. When passed as arguments, passing &apos;A*&apos; where
/// &apos;id&apos; is expected is not OK. Passing &apos;Sub *&quot; where &apos;Super *&quot; is expected is
/// not OK. For the return type, the opposite is not OK.</doc>
