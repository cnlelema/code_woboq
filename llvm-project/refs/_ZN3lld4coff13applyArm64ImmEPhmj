<dec f='llvm/lld/COFF/Chunks.h' l='675' type='void lld::coff::applyArm64Imm(uint8_t * Off, uint64_t Imm, uint32_t RangeLimit)'/>
<def f='llvm/lld/COFF/Chunks.cpp' l='222' ll='227' type='void lld::coff::applyArm64Imm(uint8_t * Off, uint64_t Imm, uint32_t RangeLimit)'/>
<use f='llvm/lld/COFF/Chunks.cpp' l='246' u='c' c='_ZN3lld4coffL13applyArm64LdrEPhm'/>
<use f='llvm/lld/COFF/Chunks.cpp' l='252' u='c' c='_ZN3lld4coffL17applySecRelLow12AEPKNS0_12SectionChunkEPhPNS0_13OutputSectionEm'/>
<use f='llvm/lld/COFF/Chunks.cpp' l='265' u='c' c='_ZN3lld4coffL18applySecRelHigh12AEPKNS0_12SectionChunkEPhPNS0_13OutputSectionEm'/>
<use f='llvm/lld/COFF/Chunks.cpp' l='297' u='c' c='_ZNK3lld4coff12SectionChunk13applyRelARM64EPhtPNS0_13OutputSectionEmm'/>
<use f='llvm/lld/COFF/Chunks.cpp' l='731' u='c' c='_ZNK3lld4coff24RangeExtensionThunkARM647writeToEPh'/>
<doc f='llvm/lld/COFF/Chunks.cpp' l='219'>// Update the immediate field in a AARCH64 ldr, str, and add instruction.
// Optionally limit the range of the written immediate by one or more bits
// (RangeLimit).</doc>
<use f='llvm/lld/COFF/DLL.cpp' l='353' u='c' c='_ZNK3lld4coff12_GLOBAL__N_115ThunkChunkARM647writeToEPh'/>
<use f='llvm/lld/COFF/DLL.cpp' l='355' u='c' c='_ZNK3lld4coff12_GLOBAL__N_115ThunkChunkARM647writeToEPh'/>
