<dec f='llvm/llvm/lib/Target/ARM/MCTargetDesc/ARMBaseInfo.h' l='280' type='128'/>
<doc f='llvm/llvm/lib/Target/ARM/MCTargetDesc/ARMBaseInfo.h' l='275'>/// MO_NONLAZY - This is an independent flag, on a symbol operand &quot;FOO&quot; it
    /// represents a symbol which, if indirect, will get special Darwin mangling
    /// as a non-lazy-ptr indirect symbol (i.e. &quot;L_FOO$non_lazy_ptr&quot;). Can be
    /// combined with MO_LO16, MO_HI16 or MO_NO_FLAG (in a constant-pool, for
    /// example).</doc>
<use f='llvm/llvm/lib/Target/ARM/ARMAsmPrinter.cpp' l='806' u='r' c='_ZN4llvm13ARMAsmPrinter14GetARMGVSymbolEPKNS_11GlobalValueEh'/>
<use f='llvm/llvm/lib/Target/ARM/ARMAsmPrinter.cpp' l='898' u='r' c='_ZN4llvm13ARMAsmPrinter28EmitMachineConstantPoolValueEPNS_24MachineConstantPoolValueE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp' l='5209' u='r' c='_ZNK4llvm16ARMBaseInstrInfo47getSerializableBitmaskMachineOperandTargetFlagsEv'/>
<use f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp' l='5209' u='a' c='_ZNK4llvm16ARMBaseInstrInfo47getSerializableBitmaskMachineOperandTargetFlagsEv'/>
<use f='llvm/llvm/lib/Target/ARM/ARMFastISel.cpp' l='563' u='r' c='_ZN12_GLOBAL__N_111ARMFastISel16ARMMaterializeGVEPKN4llvm11GlobalValueENS1_3MVTE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='2092' u='r' c='_ZNK4llvm17ARMTargetLowering9LowerCallERNS_14TargetLowering16CallLoweringInfoERNS_15SmallVectorImplINS_7SDValueEEE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='3279' u='r' c='_ZNK4llvm17ARMTargetLowering24LowerGlobalAddressDarwinENS_7SDValueERNS_12SelectionDAGE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMInstructionSelector.cpp' l='680' u='r' c='_ZNK12_GLOBAL__N_122ARMInstructionSelector12selectGlobalERN4llvm19MachineInstrBuilderERNS1_19MachineRegisterInfoE'/>
