<use f='llvm/llvm/include/llvm/IR/Constants.h' l='1230' u='c' c='_ZNK4llvm12ConstantExpr15getWithOperandsENS_8ArrayRefIPNS_8ConstantEEE'/>
<dec f='llvm/llvm/include/llvm/IR/Constants.h' l='1242' type='llvm::Constant * llvm::ConstantExpr::getWithOperands(ArrayRef&lt;llvm::Constant *&gt; Ops, llvm::Type * Ty, bool OnlyIfReduced = false, llvm::Type * SrcTy = nullptr) const'/>
<doc f='llvm/llvm/include/llvm/IR/Constants.h' l='1233'>/// Get the current expression with the operands replaced.
  ///
  /// Return the current constant expression with the operands replaced with \c
  /// Ops and the type with \c Ty.  The new operands must have the same number
  /// as the current ones.
  ///
  /// If \c OnlyIfReduced is \c true, nullptr will be returned unless something
  /// gets constant-folded, the type changes, or the expression is otherwise
  /// canonicalized.  This parameter should almost always be \c false.</doc>
<def f='llvm/llvm/lib/IR/Constants.cpp' l='1215' ll='1270' type='llvm::Constant * llvm::ConstantExpr::getWithOperands(ArrayRef&lt;llvm::Constant *&gt; Ops, llvm::Type * Ty, bool OnlyIfReduced = false, llvm::Type * SrcTy = nullptr) const'/>
<use f='llvm/llvm/lib/IR/Constants.cpp' l='2984' u='c' c='_ZN4llvm12ConstantExpr23handleOperandChangeImplEPNS_5ValueES2_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp' l='577' u='c' c='_ZL36cloneConstantExprWithNewAddressSpacePN4llvm12ConstantExprEjRKNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp' l='582' u='c' c='_ZL36cloneConstantExprWithNewAddressSpacePN4llvm12ConstantExprEjRKNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEE'/>
<use f='llvm/llvm/lib/Transforms/Utils/ValueMapper.cpp' l='474' u='c' c='_ZN12_GLOBAL__N_16Mapper8mapValueEPKN4llvm5ValueE'/>
