<def f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafety.h' l='135' ll='137' type='void clang::threadSafety::ThreadSafetyHandler::handleDoubleLock(llvm::StringRef Kind, Name LockName, clang::SourceLocation LocLocked, clang::SourceLocation LocDoubleLock)'/>
<use f='llvm/clang/lib/Analysis/ThreadSafety.cpp' l='876' u='c' c='_ZNK12_GLOBAL__N_117LockableFactEntry10handleLockERNS_7FactSetERNS_11FactManagerERKNS_9FactEntryERN5clang12threadSafety19ThreadSafetyHandlerEN4llvm9StringRefE'/>
<use f='llvm/clang/lib/Analysis/ThreadSafety.cpp' l='986' u='c' c='_ZNK12_GLOBAL__N_123ScopedLockableFactEntry4lockERNS_7FactSetERNS_11FactManagerERKN5clang12threadSafety14CapabilityExprENS6_8LockKindENS5_14SourceLoca14688498'/>
<doc f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafety.h' l='129'>/// Warn about lock function calls for locks which are already held.
  /// \param Kind -- the capability&apos;s name parameter (role, mutex, etc).
  /// \param LockName -- A StringRef name for the lock expression, to be printed
  /// in the error message.
  /// \param LocLocked -- The location of the first lock expression.
  /// \param LocDoubleLock -- The location of the second lock expression.</doc>
<ovr f='llvm/clang/lib/Sema/AnalysisBasedWarnings.cpp' l='1702' c='_ZN5clang12threadSafety12_GLOBAL__N_120ThreadSafetyReporter16handleDoubleLockEN4llvm9StringRefES4_NS_14SourceLocationES5_'/>
