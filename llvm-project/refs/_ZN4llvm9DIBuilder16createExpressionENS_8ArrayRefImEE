<dec f='llvm/llvm/include/llvm/IR/DIBuilder.h' l='637' type='llvm::DIExpression * llvm::DIBuilder::createExpression(ArrayRef&lt;uint64_t&gt; Addr = None)'/>
<doc f='llvm/llvm/include/llvm/IR/DIBuilder.h' l='634'>/// Create a new descriptor for the specified
    /// variable which has a complex address expression for its address.
    /// \param Addr        An array of complex address operations.</doc>
<use f='llvm/clang/lib/CodeGen/CGDebugInfo.cpp' l='4254' u='c' c='_ZN5clang7CodeGen11CGDebugInfo36EmitDeclareOfBlockLiteralArgVariableERKNS0_11CGBlockInfoEN4llvm9StringRefEjPNS5_10AllocaInstERNS0_11CGBuilderTyE'/>
<use f='llvm/llvm/lib/CodeGen/LiveDebugValues.cpp' l='646' u='c' c='_ZN12_GLOBAL__N_115LiveDebugValues23insertTransferDebugPairERN4llvm12MachineInstrERNS0_13OpenRangesSetERNS1_11SmallVectorINS0_17TransferDebugPairELj4E5783233'/>
<use f='llvm/llvm/lib/IR/DIBuilder.cpp' l='650' u='c' c='_ZN4llvm9DIBuilder30createGlobalVariableExpressionEPNS_7DIScopeENS_9StringRefES3_PNS_6DIFileEjPNS_6DITypeEbPNS_12DIExpressionEPNS_6MDNodeEPNS_7MDTupleEj'/>
<def f='llvm/llvm/lib/IR/DIBuilder.cpp' l='734' ll='736' type='llvm::DIExpression * llvm::DIBuilder::createExpression(ArrayRef&lt;uint64_t&gt; Addr = None)'/>
<use f='llvm/llvm/lib/IR/DIBuilder.cpp' l='741' u='c' c='_ZN4llvm9DIBuilder16createExpressionENS_8ArrayRefIlEE'/>
<use f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='1603' u='c' c='_ZL27replaceOneDbgValueForAllocaPN4llvm12DbgValueInstEPNS_5ValueERNS_9DIBuilderEi'/>
<use f='llvm/llvm/tools/opt/Debugify.cpp' l='141' u='c' c='_ZN12_GLOBAL__N_121applyDebugifyMetadataERN4llvm6ModuleENS0_14iterator_rangeINS0_14ilist_iteratorINS0_12ilist_detail12node_optionsINS0_8FunctionELb1EL243265'/>
<use f='llvm/llvm/unittests/Transforms/Utils/CloningTest.cpp' l='411' u='c' c='_ZN12_GLOBAL__N_19CloneFunc26CreateOldFunctionBodyAndDIEv'/>
<use f='llvm/llvm/unittests/Transforms/Utils/CloningTest.cpp' l='619' u='c' c='_ZN12_GLOBAL__N_111CloneModule15CreateOldModuleEv'/>
