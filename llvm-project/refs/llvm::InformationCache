<def f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='293' ll='328'/>
<size>64</size>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='281'>/// Data structure to hold cached (LLVM-IR) information.
///
/// All attributes are given an InformationCache object at creation time to
/// avoid inspection of the IR by all of them individually. This default
/// InformationCache will hold information required by &apos;default&apos; attributes,
/// thus the ones deduced when Attributor::identifyDefaultAbstractAttributes(..)
/// is called.
///
/// If custom abstract attributes, registered manually through
/// Attributor::registerAA(...), need more information, especially if it is not
/// reusable, it is advised to inherit from the InformationCache and cast the
/// instance down in the abstract attributes.</doc>
<fun r='_ZN4llvm16InformationCache27getOpcodeInstMapForFunctionERNS_8FunctionE'/>
<fun r='_ZN4llvm16InformationCache30getReadOrWriteInstsForFunctionERNS_8FunctionE'/>
<mbr r='llvm::InformationCache::FuncInstOpcodeMap' o='0' t='FuncInstOpcodeMapTy'/>
<mbr r='llvm::InformationCache::FuncRWInstsMap' o='256' t='FuncRWInstsMapTy'/>
