<def f='llvm/clang/include/clang/AST/DeclTemplate.h' l='936' ll='938' type='bool clang::RedeclarableTemplateDecl::isMemberSpecialization() const'/>
<doc f='llvm/clang/include/clang/AST/DeclTemplate.h' l='918'>/// Determines whether this template was a specialization of a
  /// member template.
  ///
  /// In the following example, the function template \c X&lt;int&gt;::f and the
  /// member template \c X&lt;int&gt;::Inner are member specializations.
  ///
  /// \code
  /// template&lt;typename T&gt;
  /// struct X {
  ///   template&lt;typename U&gt; void f(T, U);
  ///   template&lt;typename U&gt; struct Inner;
  /// };
  ///
  /// template&lt;&gt; template&lt;typename T&gt;
  /// void X&lt;int&gt;::f(int, T);
  /// template&lt;&gt; template&lt;typename T&gt;
  /// struct X&lt;int&gt;::Inner { /* ... */ };
  /// \endcode</doc>
<use f='llvm/clang/lib/AST/Decl.cpp' l='201' u='c' c='_ZL30isExplicitMemberSpecializationPKN5clang24RedeclarableTemplateDeclE'/>
<use f='llvm/clang/lib/AST/ODRHash.cpp' l='414' u='c' c='_ZN12_GLOBAL__N_114ODRDeclVisitor29VisitRedeclarableTemplateDeclEPKN5clang24RedeclarableTemplateDeclE'/>
<use f='llvm/clang/lib/Serialization/ASTWriterDecl.cpp' l='1444' u='c' c='_ZN5clang13ASTDeclWriter29VisitRedeclarableTemplateDeclEPNS_24RedeclarableTemplateDeclE'/>
