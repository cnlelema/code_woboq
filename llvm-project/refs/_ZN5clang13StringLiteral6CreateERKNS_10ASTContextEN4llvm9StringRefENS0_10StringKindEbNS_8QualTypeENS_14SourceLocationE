<def f='llvm/clang/include/clang/AST/Expr.h' l='1697' ll='1701' type='static clang::StringLiteral * clang::StringLiteral::Create(const clang::ASTContext &amp; Ctx, llvm::StringRef Str, clang::StringLiteral::StringKind Kind, bool Pascal, clang::QualType Ty, clang::SourceLocation Loc)'/>
<doc f='llvm/clang/include/clang/AST/Expr.h' l='1696'>/// Simple constructor for string literals made from one token.</doc>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='10498' u='c' c='_ZNK5clang10ASTContext35getPredefinedStringLiteralFromCacheEN4llvm9StringRefE'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='3239' u='c' c='_ZN5clang4Sema19BuildPredefinedExprENS_14SourceLocationENS_14PredefinedExpr9IdentKindE'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='3245' u='c' c='_ZN5clang4Sema19BuildPredefinedExprENS_14SourceLocationENS_14PredefinedExpr9IdentKindE'/>
