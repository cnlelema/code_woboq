<dec f='llvm/llvm/include/llvm/Analysis/MustExecute.h' l='160' type='void llvm::ICFLoopSafetyInfo::removeInstruction(const llvm::Instruction * Inst)'/>
<doc f='llvm/llvm/include/llvm/Analysis/MustExecute.h' l='157'>/// Inform safety info that we are planning to remove the instruction \p Inst
  /// from its block. It will make all cache updates to keep it correct after
  /// this removal.</doc>
<def f='llvm/llvm/lib/Analysis/MustExecute.cpp' l='91' ll='94' type='void llvm::ICFLoopSafetyInfo::removeInstruction(const llvm::Instruction * Inst)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LICM.cpp' l='1413' u='c' c='_ZL16eraseInstructionRN4llvm11InstructionERNS_17ICFLoopSafetyInfoEPNS_15AliasSetTrackerEPNS_16MemorySSAUpdaterE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LICM.cpp' l='1420' u='c' c='_ZL21moveInstructionBeforeRN4llvm11InstructionES1_RNS_17ICFLoopSafetyInfoEPNS_16MemorySSAUpdaterE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LICM.cpp' l='1805' u='c' c='_ZNK12_GLOBAL__N_112LoopPromoter18instructionDeletedEPN4llvm11InstructionE'/>
