<inh f='llvm/clang/include/clang/Lex/Pragma.h' l='65' c='clang::PragmaHandler'/>
<def f='llvm/clang/include/clang/Lex/Pragma.h' l='96' ll='125'/>
<size>72</size>
<doc f='llvm/clang/include/clang/Lex/Pragma.h' l='92'>/// PragmaNamespace - This PragmaHandler subdivides the namespace of pragmas,
/// allowing hierarchical pragmas to be defined.  Common examples of namespaces
/// are &quot;\#pragma GCC&quot;, &quot;\#pragma STDC&quot;, and &quot;\#pragma omp&quot;, but any namespaces
/// may be (potentially recursively) defined.</doc>
<mbr r='clang::PragmaNamespace::Handlers' o='320' t='llvm::StringMap&lt;PragmaHandler *&gt;'/>
<fun r='_ZN5clang15PragmaNamespaceC1EN4llvm9StringRefE'/>
<fun r='_ZN5clang15PragmaNamespaceD1Ev'/>
<fun r='_ZNK5clang15PragmaNamespace11FindHandlerEN4llvm9StringRefEb'/>
<fun r='_ZN5clang15PragmaNamespace9AddPragmaEPNS_13PragmaHandlerE'/>
<fun r='_ZN5clang15PragmaNamespace19RemovePragmaHandlerEPNS_13PragmaHandlerE'/>
<fun r='_ZNK5clang15PragmaNamespace7IsEmptyEv'/>
<fun r='_ZN5clang15PragmaNamespace12HandlePragmaERNS_12PreprocessorENS_16PragmaIntroducerERNS_5TokenE'/>
<fun r='_ZN5clang15PragmaNamespace14getIfNamespaceEv'/>
