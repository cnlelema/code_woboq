<dec f='llvm/llvm/include/llvm/Transforms/IPO.h' l='260' type='llvm::ModulePass * llvm::createWholeProgramDevirtPass(llvm::ModuleSummaryIndex * ExportSummary, const llvm::ModuleSummaryIndex * ImportSummary)'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO.h' l='249'>/// This pass implements whole-program devirtualization using type
/// metadata.
///
/// The behavior depends on the summary arguments:
/// - If ExportSummary is non-null, this pass will export type identifiers to
///   the given summary.
/// - Otherwise, if ImportSummary is non-null, this pass will import type
///   identifiers from the given summary.
/// - Otherwise it does neither.
/// It is invalid for both ExportSummary and ImportSummary to be non-null.</doc>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='843' u='c' c='_ZN4llvm18PassManagerBuilder24addLTOOptimizationPassesERNS_6legacy15PassManagerBaseE'/>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='1001' u='c' c='_ZN4llvm18PassManagerBuilder26populateThinLTOPassManagerERNS_6legacy15PassManagerBaseE'/>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='1025' u='c' c='_ZN4llvm18PassManagerBuilder22populateLTOPassManagerERNS_6legacy15PassManagerBaseE'/>
<def f='llvm/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp' l='610' ll='614' type='llvm::ModulePass * llvm::createWholeProgramDevirtPass(llvm::ModuleSummaryIndex * ExportSummary, const llvm::ModuleSummaryIndex * ImportSummary)'/>
