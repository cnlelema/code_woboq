<dec f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='601' type='llvm::CallInst * llvm::IRBuilderBase::CreateMaskedGather(llvm::Value * Ptrs, unsigned int Align, llvm::Value * Mask = nullptr, llvm::Value * PassThru = nullptr, const llvm::Twine &amp; Name = &quot;&quot;)'/>
<doc f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='600'>/// Create a call to Masked Gather intrinsic</doc>
<def f='llvm/llvm/lib/IR/IRBuilder.cpp' l='538' ll='560' type='llvm::CallInst * llvm::IRBuilderBase::CreateMaskedGather(llvm::Value * Ptrs, unsigned int Align, llvm::Value * Mask = nullptr, llvm::Value * PassThru = nullptr, const llvm::Twine &amp; Name = &quot;&quot;)'/>
<doc f='llvm/llvm/lib/IR/IRBuilder.cpp' l='530'>/// Create a call to a Masked Gather intrinsic.
/// \p Ptrs     - vector of pointers for loading
/// \p Align    - alignment for one element
/// \p Mask     - vector of booleans which indicates what vector lanes should
///               be accessed in memory
/// \p PassThru - pass-through value that is used to fill the masked-off lanes
///               of the result
/// \p Name     - name of the result variable</doc>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='2331' u='c' c='_ZN4llvm19InnerLoopVectorizer26vectorizeMemoryInstructionEPNS_11InstructionEPNS_11SmallVectorIPNS_5ValueELj2EEE'/>
