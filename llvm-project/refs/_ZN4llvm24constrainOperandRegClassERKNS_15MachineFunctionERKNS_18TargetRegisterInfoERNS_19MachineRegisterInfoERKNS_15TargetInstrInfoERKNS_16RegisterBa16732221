<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/Utils.h' l='54' type='unsigned int llvm::constrainOperandRegClass(const llvm::MachineFunction &amp; MF, const llvm::TargetRegisterInfo &amp; TRI, llvm::MachineRegisterInfo &amp; MRI, const llvm::TargetInstrInfo &amp; TII, const llvm::RegisterBankInfo &amp; RBI, llvm::MachineInstr &amp; InsertPt, const llvm::TargetRegisterClass &amp; RegClass, const llvm::MachineOperand &amp; RegMO, unsigned int OpIdx)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/Utils.h' l='47'>/// Constrain the Register operand OpIdx, so that it is now constrained to the
/// TargetRegisterClass passed as an argument (RegClass).
/// If this fails, create a new virtual register in the correct class and
/// insert a COPY before \p InsertPt if it is a use or after if it is a
/// definition. The debug location of \p InsertPt is used for the new copy.
///
/// \return The virtual register constrained to the right register class.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/InstructionSelector.cpp' l='44' u='c' c='_ZNK4llvm19InstructionSelector29constrainOperandRegToRegClassERNS_12MachineInstrEjRKNS_19TargetRegisterClassERKNS_15TargetInstrInfoERKNS_18TargetRegis12307033'/>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/Utils.cpp' l='40' ll='69' type='unsigned int llvm::constrainOperandRegClass(const llvm::MachineFunction &amp; MF, const llvm::TargetRegisterInfo &amp; TRI, llvm::MachineRegisterInfo &amp; MRI, const llvm::TargetInstrInfo &amp; TII, const llvm::RegisterBankInfo &amp; RBI, llvm::MachineInstr &amp; InsertPt, const llvm::TargetRegisterClass &amp; RegClass, const llvm::MachineOperand &amp; RegMO, unsigned int OpIdx)'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/Utils.cpp' l='109' u='c' c='_ZN4llvm24constrainOperandRegClassERKNS_15MachineFunctionERKNS_18TargetRegisterInfoERNS_19MachineRegisterInfoERKNS_15TargetInstrInfoERKNS_16RegisterBa4027223'/>
