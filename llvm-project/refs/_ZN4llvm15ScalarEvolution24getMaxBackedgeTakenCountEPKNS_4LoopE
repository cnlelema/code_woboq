<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='777' type='const llvm::SCEV * llvm::ScalarEvolution::getMaxBackedgeTakenCount(const llvm::Loop * L)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='773'>/// When successful, this returns a SCEVConstant that is greater than or equal
  /// to (i.e. a &quot;conservative over-approximation&quot;) of the value returend by
  /// getBackedgeTakenCount.  If such a value cannot be computed, it returns the
  /// SCEVCouldNotCompute object.</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='1710' u='c' c='_ZN4llvm15ScalarEvolution17getZeroExtendExprEPKNS_4SCEVEPNS_4TypeEj'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='2054' u='c' c='_ZN4llvm15ScalarEvolution17getSignExtendExprEPKNS_4SCEVEPNS_4TypeEj'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5652' u='c' c='_ZN4llvm15ScalarEvolution11getRangeRefEPKNS_4SCEVENS0_13RangeSignHintE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='6518' u='c' c='_ZN4llvm15ScalarEvolution28getSmallConstantMaxTripCountEPKNS_4LoopE'/>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='6594' ll='6596' type='const llvm::SCEV * llvm::ScalarEvolution::getMaxBackedgeTakenCount(const llvm::Loop * L)'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='11420' u='c' c='_ZL13PrintLoopInfoRN4llvm11raw_ostreamEPNS_15ScalarEvolutionEPKNS_4LoopE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='11421' u='c' c='_ZL13PrintLoopInfoRN4llvm11raw_ostreamEPNS_15ScalarEvolutionEPKNS_4LoopE'/>
<doc f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='6592'>/// Similar to getBackedgeTakenCount, except return the least SCEV value that is
/// known never to be less than the actual backedge taken count.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopDeletion.cpp' l='194' u='c' c='_ZL16deleteLoopIfDeadPN4llvm4LoopERNS_13DominatorTreeERNS_15ScalarEvolutionERNS_8LoopInfoE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/PlaceSafepoints.cpp' l='243' u='c' c='_ZL23mustBeFiniteCountedLoopPN4llvm4LoopEPNS_15ScalarEvolutionEPNS_10BasicBlockE'/>
