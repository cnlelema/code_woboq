<dec f='llvm/llvm/include/llvm/IR/Instructions.h' l='1417' type='void llvm::CallInst::init(llvm::FunctionType * FTy, llvm::Value * Func, ArrayRef&lt;llvm::Value *&gt; Args, ArrayRef&lt;OperandBundleDef&gt; Bundles, const llvm::Twine &amp; NameStr)'/>
<use f='llvm/llvm/include/llvm/IR/Instructions.h' l='1687' u='c' c='_ZN4llvm8CallInstC1EPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_10BasicBlockE'/>
<use f='llvm/llvm/include/llvm/IR/Instructions.h' l='1698' u='c' c='_ZN4llvm8CallInstC1EPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE'/>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='391' ll='416' type='void llvm::CallInst::init(llvm::FunctionType * FTy, llvm::Value * Func, ArrayRef&lt;llvm::Value *&gt; Args, ArrayRef&lt;OperandBundleDef&gt; Bundles, const llvm::Twine &amp; NameStr)'/>
<doc f='llvm/llvm/lib/IR/Instructions.cpp' l='387'>//===----------------------------------------------------------------------===//
//                        CallInst Implementation
//===----------------------------------------------------------------------===//</doc>
