<dec f='llvm/clang/tools/clang-refactor/TestSupport.h' l='98' type='Optional&lt;clang::refactor::TestSelectionRangesInFile&gt; clang::refactor::findTestSelectionRanges(llvm::StringRef Filename)'/>
<use f='llvm/clang/tools/clang-refactor/ClangRefactor.cpp' l='151' u='c' c='_ZN12_GLOBAL__N_123SourceSelectionArgument10fromStringEN4llvm9StringRefE'/>
<doc f='llvm/clang/tools/clang-refactor/TestSupport.h' l='69'>/// Extracts the grouped selection ranges from the file that&apos;s specified in
/// the -selection=test:&lt;filename&gt; option.
///
/// The grouped ranges are specified in comments using the following syntax:
/// &quot;range&quot; [ group-name ] &quot;=&quot; [ &quot;+&quot; starting-column-offset ] [ &quot;-&gt;&quot;
///                              &quot;+&quot; ending-line-offset &quot;:&quot;
///                                  ending-column-position ]
///
/// The selection range is then computed from this command by taking the ending
/// location of the comment, and adding &apos;starting-column-offset&apos; to the column
/// for that location. That location in turns becomes the whole selection range,
/// unless &apos;ending-line-offset&apos; and &apos;ending-column-position&apos; are specified. If
/// they are specified, then the ending location of the selection range is
/// the starting location&apos;s line + &apos;ending-line-offset&apos; and the
/// &apos;ending-column-position&apos; column.
///
/// All selection ranges in one group are expected to produce the same
/// refactoring result.
///
/// When testing, zero is returned from clang-refactor even when a group
/// produces an initiation error, which is different from normal invocation
/// that returns a non-zero value. This is done on purpose, to ensure that group
/// consistency checks can return non-zero, but still print the output of
/// the group. So even if a test matches the output of group, it will still fail
/// because clang-refactor should return zero on exit when the group results are
/// consistent.
///
/// \returns None on failure (errors are emitted to stderr), or a set of
/// grouped source ranges in the given file otherwise.</doc>
<def f='llvm/clang/tools/clang-refactor/TestSupport.cpp' l='293' ll='388' type='Optional&lt;clang::refactor::TestSelectionRangesInFile&gt; clang::refactor::findTestSelectionRanges(llvm::StringRef Filename)'/>
