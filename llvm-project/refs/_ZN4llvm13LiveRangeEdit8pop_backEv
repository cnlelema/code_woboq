<def f='llvm/llvm/include/llvm/CodeGen/LiveRangeEdit.h' l='173' type='void llvm::LiveRangeEdit::pop_back()'/>
<doc f='llvm/llvm/include/llvm/CodeGen/LiveRangeEdit.h' l='165'>/// pop_back - It allows LiveRangeEdit users to drop new registers.
  /// The context is when an original def instruction of a register is
  /// dead after rematerialization, we still want to keep it for following
  /// rematerializations. We save the def instruction in DeadRemats,
  /// and replace the original dst register with a new dummy register so
  /// the live range of original dst register can be shrinked normally.
  /// We don&apos;t want to allocate phys register for the dummy register, so
  /// we want to drop it from the NewRegs set.</doc>
<use f='llvm/llvm/lib/CodeGen/LiveRangeEdit.cpp' l='365' u='c' c='_ZN4llvm13LiveRangeEdit16eliminateDeadDefEPNS_12MachineInstrERNS_9SetVectorIPNS_12LiveIntervalENS_11SmallVectorIS5_Lj8EEENS_11SmallPtrSetIS5_Lj8EEEEEPNS_9AAResultsE'/>
