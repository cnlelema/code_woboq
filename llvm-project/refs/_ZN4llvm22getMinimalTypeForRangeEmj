<dec f='llvm/llvm/utils/TableGen/Types.h' l='18' type='const char * llvm::getMinimalTypeForRange(uint64_t Range, unsigned int MaxSize = 64)'/>
<use f='llvm/llvm/utils/TableGen/AsmMatcherEmitter.cpp' l='2841' u='c' c='_ZL24emitCustomOperandParsingRN4llvm11raw_ostreamERNS_13CodeGenTargetERKN12_GLOBAL__N_114AsmMatcherInfoENS_9StringRefERNS_19StringToOffsetTableEjjb'/>
<use f='llvm/llvm/utils/TableGen/AsmMatcherEmitter.cpp' l='2843' u='c' c='_ZL24emitCustomOperandParsingRN4llvm11raw_ostreamERNS_13CodeGenTargetERKN12_GLOBAL__N_114AsmMatcherInfoENS_9StringRefERNS_19StringToOffsetTableEjjb'/>
<use f='llvm/llvm/utils/TableGen/AsmMatcherEmitter.cpp' l='2845' u='c' c='_ZL24emitCustomOperandParsingRN4llvm11raw_ostreamERNS_13CodeGenTargetERKN12_GLOBAL__N_114AsmMatcherInfoENS_9StringRefERNS_19StringToOffsetTableEjjb'/>
<use f='llvm/llvm/utils/TableGen/AsmMatcherEmitter.cpp' l='2847' u='c' c='_ZL24emitCustomOperandParsingRN4llvm11raw_ostreamERNS_13CodeGenTargetERKN12_GLOBAL__N_114AsmMatcherInfoENS_9StringRefERNS_19StringToOffsetTableEjjb'/>
<use f='llvm/llvm/utils/TableGen/AsmMatcherEmitter.cpp' l='3361' u='c' c='_ZN12_GLOBAL__N_117AsmMatcherEmitter3runERN4llvm11raw_ostreamE'/>
<use f='llvm/llvm/utils/TableGen/AsmMatcherEmitter.cpp' l='3396' u='c' c='_ZN12_GLOBAL__N_117AsmMatcherEmitter3runERN4llvm11raw_ostreamE'/>
<use f='llvm/llvm/utils/TableGen/AsmMatcherEmitter.cpp' l='3399' u='c' c='_ZN12_GLOBAL__N_117AsmMatcherEmitter3runERN4llvm11raw_ostreamE'/>
<use f='llvm/llvm/utils/TableGen/AsmMatcherEmitter.cpp' l='3401' u='c' c='_ZN12_GLOBAL__N_117AsmMatcherEmitter3runERN4llvm11raw_ostreamE'/>
<use f='llvm/llvm/utils/TableGen/AsmMatcherEmitter.cpp' l='3403' u='c' c='_ZN12_GLOBAL__N_117AsmMatcherEmitter3runERN4llvm11raw_ostreamE'/>
<doc f='llvm/llvm/utils/TableGen/Types.h' l='15'>/// Returns the smallest unsigned integer type that can hold the given range.
/// MaxSize indicates the largest size of integer to consider (in bits) and only
/// supports values of at least 32.</doc>
<use f='llvm/llvm/utils/TableGen/AsmWriterEmitter.cpp' l='542' u='c' c='_ZL22emitRegisterNameStringRN4llvm11raw_ostreamENS_9StringRefERKSt5dequeINS_15CodeGenRegisterESaIS4_EE'/>
<use f='llvm/llvm/utils/TableGen/CodeEmitterGen.cpp' l='380' u='c' c='_ZN12_GLOBAL__N_114CodeEmitterGen3runERN4llvm11raw_ostreamE'/>
<use f='llvm/llvm/utils/TableGen/CodeEmitterGen.cpp' l='410' u='c' c='_ZN12_GLOBAL__N_114CodeEmitterGen3runERN4llvm11raw_ostreamE'/>
<use f='llvm/llvm/utils/TableGen/RegisterInfoEmitter.cpp' l='273' u='c' c='_ZN12_GLOBAL__N_119RegisterInfoEmitter19EmitRegUnitPressureERN4llvm11raw_ostreamERKNS1_14CodeGenRegBankERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='llvm/llvm/utils/TableGen/RegisterInfoEmitter.cpp' l='314' u='c' c='_ZN12_GLOBAL__N_119RegisterInfoEmitter19EmitRegUnitPressureERN4llvm11raw_ostreamERKNS1_14CodeGenRegBankERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='llvm/llvm/utils/TableGen/RegisterInfoEmitter.cpp' l='330' u='c' c='_ZN12_GLOBAL__N_119RegisterInfoEmitter19EmitRegUnitPressureERN4llvm11raw_ostreamERKNS1_14CodeGenRegBankERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='llvm/llvm/utils/TableGen/RegisterInfoEmitter.cpp' l='731' u='c' c='_ZN12_GLOBAL__N_119RegisterInfoEmitter24emitComposeSubRegIndicesERN4llvm11raw_ostreamERNS1_14CodeGenRegBankERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='llvm/llvm/utils/TableGen/RegisterInfoEmitter.cpp' l='739' u='c' c='_ZN12_GLOBAL__N_119RegisterInfoEmitter24emitComposeSubRegIndicesERN4llvm11raw_ostreamERNS1_14CodeGenRegBankERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='llvm/llvm/utils/TableGen/SubtargetFeatureInfo.cpp' l='52' u='c' c='_ZN4llvm20SubtargetFeatureInfo34emitSubtargetFeatureBitEnumerationERSt3mapIPNS_6RecordES0_NS_14LessRecordByIDESaISt4pairIKS3_S0_EEERNS_11raw_ostreamE'/>
<def f='llvm/llvm/utils/TableGen/Types.cpp' l='18' ll='36' type='const char * llvm::getMinimalTypeForRange(uint64_t Range, unsigned int MaxSize = 64)'/>
<use f='llvm/llvm/utils/TableGen/Types.cpp' l='43' u='c' c='_ZN4llvm29getMinimalTypeForEnumBitfieldEm'/>
