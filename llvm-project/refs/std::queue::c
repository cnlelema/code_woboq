<dec f='include/c++/7/bits/stl_queue.h' l='139' type='_Sequence'/>
<use f='include/c++/7/bits/stl_queue.h' l='153' u='w' c='_ZNSt5queueC1Ev'/>
<use f='include/c++/7/bits/stl_queue.h' l='157' u='w' c='_ZNSt5queueC1ERKT0_'/>
<use f='include/c++/7/bits/stl_queue.h' l='161' u='w' c='_ZNSt5queueC1EOT0_'/>
<use f='include/c++/7/bits/stl_queue.h' l='166' u='w' c='_ZNSt5queueC1ERKT_'/>
<use f='include/c++/7/bits/stl_queue.h' l='170' u='w' c='_ZNSt5queueC1ERKT0_RKT_'/>
<use f='include/c++/7/bits/stl_queue.h' l='174' u='w' c='_ZNSt5queueC1EOT0_RKT_'/>
<use f='include/c++/7/bits/stl_queue.h' l='178' u='w' c='_ZNSt5queueC1ERKSt5queueIT_T0_ERKT_'/>
<use f='include/c++/7/bits/stl_queue.h' l='182' u='w' c='_ZNSt5queueC1EOSt5queueIT_T0_ERKT_'/>
<use f='include/c++/7/bits/stl_queue.h' l='190' u='c' c='_ZNKSt5queue5emptyEv'/>
<use f='include/c++/7/bits/stl_queue.h' l='195' u='c' c='_ZNKSt5queue4sizeEv'/>
<use f='include/c++/7/bits/stl_queue.h' l='205' u='c' c='_ZNSt5queue5frontEv'/>
<use f='include/c++/7/bits/stl_queue.h' l='216' u='c' c='_ZNKSt5queue5frontEv'/>
<use f='include/c++/7/bits/stl_queue.h' l='227' u='c' c='_ZNSt5queue4backEv'/>
<use f='include/c++/7/bits/stl_queue.h' l='238' u='c' c='_ZNKSt5queue4backEv'/>
<use f='include/c++/7/bits/stl_queue.h' l='252' u='c' c='_ZNSt5queue4pushERKNT0_10value_typeE'/>
<use f='include/c++/7/bits/stl_queue.h' l='257' u='c' c='_ZNSt5queue4pushEONT0_10value_typeE'/>
<use f='include/c++/7/bits/stl_queue.h' l='268' u='c' c='_ZNSt5queue7emplaceEDpOT_'/>
<use f='include/c++/7/bits/stl_queue.h' l='287' u='c' c='_ZNSt5queue3popEv'/>
<use f='include/c++/7/bits/stl_queue.h' l='300' c='_ZNSt5queue4swapERSt5queueIT_T0_E'/>
<doc f='include/c++/7/bits/stl_queue.h' l='131'>/*  Maintainers wondering why this isn&apos;t uglified as per style
       *  guidelines should note that this name is specified in the standard,
       *  C++98 [23.2.3.1].
       *  (Why? Presumably for the same reason that it&apos;s protected instead
       *  of private: to allow derivation.  But none of the other
       *  containers allow for derivation.  Odd.)
       */
       ///  @c c is the underlying container.</doc>
