<inh f='llvm/llvm/tools/llvm-objcopy/ELF/Object.h' l='382' c='llvm::objcopy::elf::SectionBase'/>
<def f='llvm/llvm/tools/llvm-objcopy/ELF/Object.h' l='713' ll='724'/>
<ovr f='llvm/llvm/tools/llvm-objcopy/ELF/Object.h' l='729' c='llvm::objcopy::elf::RelocSectionWithSymtabBase'/>
<size>176</size>
<doc f='llvm/llvm/tools/llvm-objcopy/ELF/Object.h' l='704'>// All relocation sections denote relocations to apply to another section.
// However, some relocation sections use a dynamic symbol table and others use
// a regular symbol table. Because the types of the two symbol tables differ in
// our system (because they should behave differently) we can&apos;t uniformly
// represent all relocations with the same base class if we expose an interface
// that mentions the symbol table type. So we split the two base types into two
// different classes, one which handles the section the relocation is applied to
// and another which handles the symbol table type. The symbol table type is
// taken as a type parameter to the class (see RelocSectionWithSymtabBase).</doc>
<mbr r='llvm::objcopy::elf::RelocationSectionBase::SecToApplyRel' o='1344' t='llvm::objcopy::elf::SectionBase *'/>
<fun r='_ZNK4llvm7objcopy3elf21RelocationSectionBase10getSectionEv'/>
<fun r='_ZN4llvm7objcopy3elf21RelocationSectionBase10setSectionEPNS1_11SectionBaseE'/>
<fun r='_ZN4llvm7objcopy3elf21RelocationSectionBase7classofEPKNS1_11SectionBaseE'/>
