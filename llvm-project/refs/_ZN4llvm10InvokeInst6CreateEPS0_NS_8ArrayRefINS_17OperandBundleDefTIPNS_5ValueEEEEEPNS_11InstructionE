<dec f='llvm/llvm/include/llvm/IR/Instructions.h' l='3811' type='static llvm::InvokeInst * llvm::InvokeInst::Create(llvm::InvokeInst * II, ArrayRef&lt;OperandBundleDef&gt; Bundles, llvm::Instruction * InsertPt = nullptr)'/>
<doc f='llvm/llvm/include/llvm/IR/Instructions.h' l='3805'>/// Create a clone of \p II with a different set of operand bundles and
  /// insert it before \p InsertPt.
  ///
  /// The returned invoke instruction is identical to \p II in every way except
  /// that the operand bundles for the new instruction are set to the operand
  /// bundles in \p Bundles.</doc>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='766' ll='778' type='static llvm::InvokeInst * llvm::InvokeInst::Create(llvm::InvokeInst * II, ArrayRef&lt;OperandBundleDef&gt; OpB, llvm::Instruction * InsertPt = nullptr)'/>
<use f='llvm/llvm/lib/Transforms/Utils/InlineFunction.cpp' l='1777' u='c' c='_ZN4llvm14InlineFunctionENS_8CallSiteERNS_18InlineFunctionInfoEPNS_9AAResultsEbPNS_8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/Utils/InlineFunction.cpp' l='2083' u='c' c='_ZN4llvm14InlineFunctionENS_8CallSiteERNS_18InlineFunctionInfoEPNS_9AAResultsEbPNS_8FunctionE'/>
<use f='llvm/llvm/unittests/IR/InstructionsTest.cpp' l='585' u='c' c='_ZN4llvm12_GLOBAL__N_140InstructionsTest_AlterInvokeBundles_Test8TestBodyEv'/>
