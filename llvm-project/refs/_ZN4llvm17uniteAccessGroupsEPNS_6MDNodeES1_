<dec f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='130' type='llvm::MDNode * llvm::uniteAccessGroups(llvm::MDNode * AccGroups1, llvm::MDNode * AccGroups2)'/>
<doc f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='126'>/// Compute the union of two access-group lists.
///
/// If the list contains just one access group, it is returned directly. If the
/// list is empty, returns nullptr.</doc>
<def f='llvm/llvm/lib/Analysis/VectorUtils.cpp' l='522' ll='541' type='llvm::MDNode * llvm::uniteAccessGroups(llvm::MDNode * AccGroups1, llvm::MDNode * AccGroups2)'/>
<use f='llvm/llvm/lib/Transforms/Utils/InlineFunction.cpp' l='799' u='c' c='_ZL35PropagateParallelLoopAccessMetadataN4llvm8CallSiteERNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS4_NS_3sys10SmartMutexILb0EEEEEEE'/>
