<use f='llvm/llvm/include/llvm/Support/ThreadPool.h' l='57' u='c' c='_ZN4llvm10ThreadPool5asyncEOT_DpOT0_'/>
<use f='llvm/llvm/include/llvm/Support/ThreadPool.h' l='64' u='c' c='_ZN4llvm10ThreadPool5asyncEOT_'/>
<dec f='llvm/llvm/include/llvm/Support/ThreadPool.h' l='74' type='std::shared_future&lt;void&gt; llvm::ThreadPool::asyncImpl(TaskTy F)'/>
<doc f='llvm/llvm/include/llvm/Support/ThreadPool.h' l='72'>/// Asynchronous submission of a task to the pool. The returned future can be
  /// used to wait for the task to finish and is *non-blocking* on destruction.</doc>
<def f='llvm/llvm/lib/Support/ThreadPool.cpp' l='81' ll='96' type='std::shared_future&lt;void&gt; llvm::ThreadPool::asyncImpl(TaskTy Task)'/>
