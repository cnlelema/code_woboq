<def f='llvm/llvm/include/llvm/Analysis/CaptureTracking.h' l='68' ll='86'/>
<size>8</size>
<doc f='llvm/llvm/include/llvm/Analysis/CaptureTracking.h' l='65'>/// This callback is used in conjunction with PointerMayBeCaptured. In
  /// addition to the interface here, you&apos;ll need to provide your own getters
  /// to see whether anything was captured.</doc>
<fun r='_ZN4llvm14CaptureTrackerD1Ev'/>
<fun r='_ZN4llvm14CaptureTracker11tooManyUsesEv'/>
<fun r='_ZN4llvm14CaptureTracker13shouldExploreEPKNS_3UseE'/>
<fun r='_ZN4llvm14CaptureTracker8capturedEPKNS_3UseE'/>
<ovr f='llvm/llvm/lib/Analysis/CaptureTracking.cpp' l='38' c='(anonymousnamespace)::SimpleCaptureTracker'/>
<ovr f='llvm/llvm/lib/Analysis/CaptureTracking.cpp' l='61' c='(anonymousnamespace)::CapturesBefore'/>
<fun r='_ZN4llvm14CaptureTrackerD1Ev'/>
<fun r='_ZN4llvm14CaptureTracker13shouldExploreEPKNS_3UseE'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/FunctionAttrs.cpp' l='352' c='(anonymousnamespace)::ArgumentUsesTracker'/>
