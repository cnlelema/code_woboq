<dec f='llvm/clang/lib/CodeGen/CodeGenModule.h' l='1364' type='void clang::CodeGen::CodeGenModule::GenOpenCLArgMetadata(llvm::Function * FN, const clang::FunctionDecl * FD = nullptr, clang::CodeGen::CodeGenFunction * CGF = nullptr)'/>
<doc f='llvm/clang/lib/CodeGen/CodeGenModule.h' l='1354'>/// OpenCL v1.2 s5.6.4.6 allows the compiler to store kernel argument
  /// information in the program executable. The argument information stored
  /// includes the argument name, its type, the address and access qualifiers
  /// used. This helper can be used to generate metadata for source code kernel
  /// function as well as generated implicitly kernels. If a kernel is generated
  /// implicitly null value has to be passed to the last two parameters,
  /// otherwise all parameters must have valid non-null values.
  /// \param FN is a pointer to IR function being generated.
  /// \param FD is a pointer to function declaration if any.
  /// \param CGF is a pointer to CodeGenFunction that generates this function.</doc>
<use f='llvm/clang/lib/CodeGen/CGDeclCXX.cpp' l='603' u='c' c='_ZN5clang7CodeGen13CodeGenModule21EmitCXXGlobalInitFuncEv'/>
<use f='llvm/clang/lib/CodeGen/CodeGenFunction.cpp' l='571' u='c' c='_ZN5clang7CodeGen15CodeGenFunction24EmitOpenCLKernelMetadataEPKNS_12FunctionDeclEPN4llvm8FunctionE'/>
<def f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='1366' ll='1533' type='void clang::CodeGen::CodeGenModule::GenOpenCLArgMetadata(llvm::Function * Fn, const clang::FunctionDecl * FD = nullptr, clang::CodeGen::CodeGenFunction * CGF = nullptr)'/>
