<def f='llvm/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h' l='180' ll='182' type='bool llvm::TargetSubtargetInfo::isOptimizableRegisterMove(const llvm::MachineInstr * MI) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h' l='171'>/// Returns true if MI is a candidate for move elimination.
  ///
  /// A candidate for move elimination may be optimized out at register renaming
  /// stage. Subtargets can specify the set of optimizable moves by
  /// instantiating tablegen class `IsOptimizableRegisterMove` (see
  /// llvm/Target/TargetInstrPredicate.td).
  ///
  /// SubtargetEmitter is responsible for processing all the definitions of class
  /// IsOptimizableRegisterMove, and auto-generate an override for this method.</doc>
