<dec f='llvm/llvm/include/llvm/IR/DIBuilder.h' l='700' type='llvm::DISubprogram * llvm::DIBuilder::createMethod(llvm::DIScope * Scope, llvm::StringRef Name, llvm::StringRef LinkageName, llvm::DIFile * File, unsigned int LineNo, llvm::DISubroutineType * Ty, unsigned int VTableIndex = 0, int ThisAdjustment = 0, llvm::DIType * VTableHolder = nullptr, DINode::DIFlags Flags = DINode::FlagZero, DISubprogram::DISPFlags SPFlags = DISubprogram::SPFlagZero, DITemplateParameterArray TParams = nullptr, DITypeArray ThrownTypes = nullptr)'/>
<doc f='llvm/llvm/include/llvm/IR/DIBuilder.h' l='680'>/// Create a new descriptor for the specified C++ method.
    /// See comments in \a DISubprogram* for descriptions of these fields.
    /// \param Scope         Function scope.
    /// \param Name          Function name.
    /// \param LinkageName   Mangled function name.
    /// \param File          File where this variable is defined.
    /// \param LineNo        Line number.
    /// \param Ty            Function type.
    /// \param VTableIndex   Index no of this method in virtual table, or -1u if
    ///                      unrepresentable.
    /// \param ThisAdjustment
    ///                      MS ABI-specific adjustment of &apos;this&apos; that occurs
    ///                      in the prologue.
    /// \param VTableHolder  Type that holds vtable.
    /// \param Flags         e.g. is this function prototyped or not.
    ///                      This flags are used to emit dwarf attributes.
    /// \param SPFlags       Additional flags specific to subprograms.
    /// \param TParams       Function template parameters.
    /// \param ThrownTypes   Exception types this function may throw.</doc>
<use f='llvm/clang/lib/CodeGen/CGDebugInfo.cpp' l='1618' u='c' c='_ZN5clang7CodeGen11CGDebugInfo23CreateCXXMemberFunctionEPKNS_13CXXMethodDeclEPN4llvm6DIFileEPNS5_6DITypeE'/>
<def f='llvm/llvm/lib/IR/DIBuilder.cpp' l='785' ll='806' type='llvm::DISubprogram * llvm::DIBuilder::createMethod(llvm::DIScope * Context, llvm::StringRef Name, llvm::StringRef LinkageName, llvm::DIFile * F, unsigned int LineNo, llvm::DISubroutineType * Ty, unsigned int VIndex = 0, int ThisAdjustment = 0, llvm::DIType * VTableHolder = nullptr, DINode::DIFlags Flags = DINode::FlagZero, DISubprogram::DISPFlags SPFlags = DISubprogram::SPFlagZero, DITemplateParameterArray TParams = nullptr, DITypeArray ThrownTypes = nullptr)'/>
