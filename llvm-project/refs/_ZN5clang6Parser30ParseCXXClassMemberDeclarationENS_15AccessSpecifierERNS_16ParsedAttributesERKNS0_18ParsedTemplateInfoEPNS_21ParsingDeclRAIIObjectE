<dec f='llvm/clang/include/clang/Parse/Parser.h' l='2797' type='DeclGroupPtrTy clang::Parser::ParseCXXClassMemberDeclaration(clang::AccessSpecifier AS, clang::ParsedAttributes &amp; Attr, const clang::Parser::ParsedTemplateInfo &amp; TemplateInfo = clang::Parser::ParsedTemplateInfo(), clang::ParsingDeclRAIIObject * DiagsFromTParams = nullptr)'/>
<def f='llvm/clang/lib/Parse/ParseDeclCXX.cpp' l='2453' ll='2929' type='Parser::DeclGroupPtrTy clang::Parser::ParseCXXClassMemberDeclaration(clang::AccessSpecifier AS, clang::ParsedAttributes &amp; AccessAttrs, const clang::Parser::ParsedTemplateInfo &amp; TemplateInfo = clang::Parser::ParsedTemplateInfo(), clang::ParsingDeclRAIIObject * TemplateDiags = nullptr)'/>
<use f='llvm/clang/lib/Parse/ParseDeclCXX.cpp' l='2552' u='c' c='_ZN5clang6Parser30ParseCXXClassMemberDeclarationENS_15AccessSpecifierERNS_16ParsedAttributesERKNS0_18ParsedTemplateInfoEPNS_21ParsingDeclRAIIObjectE'/>
<use f='llvm/clang/lib/Parse/ParseDeclCXX.cpp' l='4366' u='c' c='_ZN5clang6Parser38ParseMicrosoftIfExistsClassDeclarationENS_17TypeSpecifierTypeERNS_16ParsedAttributesERNS_15AccessSpecifierE'/>
<doc f='llvm/clang/lib/Parse/ParseDeclCXX.cpp' l='2417'>/// ParseCXXClassMemberDeclaration - Parse a C++ class member declaration.
///
///       member-declaration:
///         decl-specifier-seq[opt] member-declarator-list[opt] &apos;;&apos;
///         function-definition &apos;;&apos;[opt]
///         ::[opt] nested-name-specifier template[opt] unqualified-id &apos;;&apos;[TODO]
///         using-declaration                                            [TODO]
/// [C++0x] static_assert-declaration
///         template-declaration
/// [GNU]   &apos;__extension__&apos; member-declaration
///
///       member-declarator-list:
///         member-declarator
///         member-declarator-list &apos;,&apos; member-declarator
///
///       member-declarator:
///         declarator virt-specifier-seq[opt] pure-specifier[opt]
///         declarator constant-initializer[opt]
/// [C++11] declarator brace-or-equal-initializer[opt]
///         identifier[opt] &apos;:&apos; constant-expression
///
///       virt-specifier-seq:
///         virt-specifier
///         virt-specifier-seq virt-specifier
///
///       virt-specifier:
///         override
///         final
/// [MS]    sealed
///
///       pure-specifier:
///         &apos;= 0&apos;
///
///       constant-initializer:
///         &apos;=&apos; constant-expression
///</doc>
<use f='llvm/clang/lib/Parse/ParseTemplate.cpp' l='178' u='c' c='_ZN5clang6Parser35ParseSingleDeclarationAfterTemplateENS_17DeclaratorContextERKNS0_18ParsedTemplateInfoERNS_21ParsingDeclRAIIObjectERNS_14SourceLocati9492424'/>
