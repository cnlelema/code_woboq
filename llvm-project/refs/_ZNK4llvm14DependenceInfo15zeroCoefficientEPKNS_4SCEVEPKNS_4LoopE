<dec f='llvm/llvm/include/llvm/Analysis/DependenceAnalysis.h' l='910' type='const llvm::SCEV * llvm::DependenceInfo::zeroCoefficient(const llvm::SCEV * Expr, const llvm::Loop * TargetLoop) const'/>
<def f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3011' ll='3022' type='const llvm::SCEV * llvm::DependenceInfo::zeroCoefficient(const llvm::SCEV * Expr, const llvm::Loop * TargetLoop) const'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3018' u='c' c='_ZNK4llvm14DependenceInfo15zeroCoefficientEPKNS_4SCEVEPKNS_4LoopE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3101' u='c' c='_ZN4llvm14DependenceInfo17propagateDistanceERPKNS_4SCEVES4_RNS0_10ConstraintERb'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3139' u='c' c='_ZN4llvm14DependenceInfo13propagateLineERPKNS_4SCEVES4_RNS0_10ConstraintERb'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3153' u='c' c='_ZN4llvm14DependenceInfo13propagateLineERPKNS_4SCEVES4_RNS0_10ConstraintERb'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3167' u='c' c='_ZN4llvm14DependenceInfo13propagateLineERPKNS_4SCEVES4_RNS0_10ConstraintERb'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3178' u='c' c='_ZN4llvm14DependenceInfo13propagateLineERPKNS_4SCEVES4_RNS0_10ConstraintERb'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3201' u='c' c='_ZN4llvm14DependenceInfo14propagatePointERPKNS_4SCEVES4_RNS0_10ConstraintE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3204' u='c' c='_ZN4llvm14DependenceInfo14propagatePointERPKNS_4SCEVES4_RNS0_10ConstraintE'/>
<doc f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3006'>// Given a linear SCEV,
// return the SCEV given by zeroing out the coefficient
// corresponding to the specified loop.
// For example, given a*i + b*j + c*k, zeroing the coefficient
// corresponding to the j loop would yield a*i + c*k.</doc>
<doc f='llvm/llvm/include/llvm/Analysis/DependenceAnalysis.h' l='905'>/// zeroCoefficient - Given a linear SCEV,
    /// return the SCEV given by zeroing out the coefficient
    /// corresponding to the specified loop.
    /// For example, given a*i + b*j + c*k, zeroing the coefficient
    /// corresponding to the j loop would yield a*i + c*k.</doc>
