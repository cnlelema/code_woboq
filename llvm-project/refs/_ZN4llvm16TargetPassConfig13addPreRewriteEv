<def f='llvm/llvm/include/llvm/CodeGen/TargetPassConfig.h' l='385' ll='387' type='bool llvm::TargetPassConfig::addPreRewrite()'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetPassConfig.h' l='373'>/// addPreRewrite - Add passes to the optimized register allocation pipeline
  /// after register allocation is complete, but before virtual registers are
  /// rewritten to physical registers.
  ///
  /// These passes must preserve VirtRegMap and LiveIntervals, and when running
  /// after RABasic or RAGreedy, they should take advantage of LiveRegMatrix.
  /// When these passes run, VirtRegMap contains legal physreg assignments for
  /// all virtual registers.
  ///
  /// Note if the target overloads addRegAssignAndRewriteOptimized, this may not
  /// be honored. This is also not generally used for the the fast variant,
  /// where the allocation and rewriting are done in one pass.</doc>
<use f='llvm/llvm/lib/CodeGen/TargetPassConfig.cpp' l='1107' u='c' c='_ZN4llvm16TargetPassConfig25addRegAssignmentOptimizedEv'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp' l='939' c='_ZN12_GLOBAL__N_113GCNPassConfig13addPreRewriteEv'/>
