<dec f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='4112' type='llvm::SDValue llvm::TargetLowering::lowerCmpEqZeroToCtlzSrl(llvm::SDValue Op, llvm::SelectionDAG &amp; DAG) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='4108'>// seteq(x, 0) -&gt; truncate(srl(ctlz(zext(x)), log2(#bits)))
  // If we&apos;re comparing for equality to zero and isCtlzFast is true, expose the
  // fact that this can be implemented as a ctlz/srl pair, so that the dag
  // combiner can fold the new nodes.</doc>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp' l='5744' ll='5767' type='llvm::SDValue llvm::TargetLowering::lowerCmpEqZeroToCtlzSrl(llvm::SDValue Op, llvm::SelectionDAG &amp; DAG) const'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='2959' u='c' c='_ZNK4llvm17PPCTargetLowering10LowerSETCCENS_7SDValueERNS_12SelectionDAGE'/>
