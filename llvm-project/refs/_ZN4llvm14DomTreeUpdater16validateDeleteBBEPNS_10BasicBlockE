<dec f='llvm/llvm/include/llvm/Analysis/DomTreeUpdater.h' l='276' type='void llvm::DomTreeUpdater::validateDeleteBB(llvm::BasicBlock * DelBB)'/>
<doc f='llvm/llvm/include/llvm/Analysis/DomTreeUpdater.h' l='271'>/// First remove all the instructions of DelBB and then make sure DelBB has a
  /// valid terminator instruction which is necessary to have when DelBB still
  /// has to be inside of its parent Function while awaiting deletion under Lazy
  /// UpdateStrategy to prevent other routines from asserting the state of the
  /// IR is inconsistent. Assert if DelBB is nullptr or has predecessors.</doc>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='179' u='c' c='_ZN4llvm14DomTreeUpdater8deleteBBEPNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='192' u='c' c='_ZN4llvm14DomTreeUpdater16callbackDeleteBBEPNS_10BasicBlockESt8functionIFvS2_EE'/>
<def f='llvm/llvm/lib/Analysis/DomTreeUpdater.cpp' l='215' ll='229' type='void llvm::DomTreeUpdater::validateDeleteBB(llvm::BasicBlock * DelBB)'/>
