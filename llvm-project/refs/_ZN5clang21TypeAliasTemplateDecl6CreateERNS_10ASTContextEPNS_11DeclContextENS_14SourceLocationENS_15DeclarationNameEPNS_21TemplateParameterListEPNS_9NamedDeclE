<dec f='llvm/clang/include/clang/AST/DeclTemplate.h' l='2452' type='static clang::TypeAliasTemplateDecl * clang::TypeAliasTemplateDecl::Create(clang::ASTContext &amp; C, clang::DeclContext * DC, clang::SourceLocation L, clang::DeclarationName Name, clang::TemplateParameterList * Params, clang::NamedDecl * Decl)'/>
<doc f='llvm/clang/include/clang/AST/DeclTemplate.h' l='2451'>/// Create a function template node.</doc>
<def f='llvm/clang/lib/AST/DeclTemplate.cpp' l='903' ll='911' type='static clang::TypeAliasTemplateDecl * clang::TypeAliasTemplateDecl::Create(clang::ASTContext &amp; C, clang::DeclContext * DC, clang::SourceLocation L, clang::DeclarationName Name, clang::TemplateParameterList * Params, clang::NamedDecl * Decl)'/>
<doc f='llvm/clang/lib/AST/DeclTemplate.cpp' l='899'>//===----------------------------------------------------------------------===//
// TypeAliasTemplateDecl Implementation
//===----------------------------------------------------------------------===//</doc>
