<dec f='llvm/clang/include/clang/Parse/Parser.h' l='966' type='bool clang::Parser::ExpectAndConsumeSemi(unsigned int DiagID)'/>
<doc f='llvm/clang/include/clang/Parse/Parser.h' l='961'>/// The parser expects a semicolon and, if present, will consume it.
  ///
  /// If the next token is not a semicolon, this emits the specified diagnostic,
  /// or, if there&apos;s just some closing-delimiter noise (e.g., &apos;)&apos; or &apos;]&apos;) prior
  /// to the semicolon, consumes that extra token.</doc>
<def f='llvm/clang/lib/Parse/Parser.cpp' l='155' ll='175' type='bool clang::Parser::ExpectAndConsumeSemi(unsigned int DiagID)'/>
