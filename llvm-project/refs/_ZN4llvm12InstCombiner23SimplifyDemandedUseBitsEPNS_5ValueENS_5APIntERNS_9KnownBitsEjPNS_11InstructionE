<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='772' type='llvm::Value * llvm::InstCombiner::SimplifyDemandedUseBits(llvm::Value * V, llvm::APInt DemandedMask, llvm::KnownBits &amp; Known, unsigned int Depth, llvm::Instruction * CxtI)'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='770'>/// Attempts to replace V with a simpler value based on the demanded
  /// bits.</doc>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp' l='69' u='c' c='_ZN4llvm12InstCombiner31SimplifyDemandedInstructionBitsERNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp' l='85' u='c' c='_ZN4llvm12InstCombiner20SimplifyDemandedBitsEPNS_11InstructionEjRKNS_5APIntERNS_9KnownBitsEj'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp' l='116' ll='757' type='llvm::Value * llvm::InstCombiner::SimplifyDemandedUseBits(llvm::Value * V, llvm::APInt DemandedMask, llvm::KnownBits &amp; Known, unsigned int Depth, llvm::Instruction * CxtI)'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp' l='93'>/// This function attempts to replace V with a simpler value based on the
/// demanded bits. When this function is called, it is known that only the bits
/// set in DemandedMask of the result of V are ever used downstream.
/// Consequently, depending on the mask and V, it may be possible to replace V
/// with a constant or one of its operands. In such cases, this function does
/// the replacement and returns true. In all other cases, it returns false after
/// analyzing the expression and setting KnownOne and known to be one in the
/// expression. Known.Zero contains all the bits that are known to be zero in
/// the expression. These are provided to potentially allow the caller (which
/// might recursively be SimplifyDemandedBits itself) to simplify the
/// expression.
/// Known.One and Known.Zero always follow the invariant that:
///   Known.One &amp; Known.Zero == 0.
/// That is, a bit can&apos;t be both 1 and 0. Note that the bits in Known.One and
/// Known.Zero may only be accurate for those bits set in DemandedMask. Note
/// also that the bitwidth of V, DemandedMask, Known.Zero and Known.One must all
/// be the same.
///
/// This returns null if it did not change anything and it permits no
/// simplification.  This returns V itself if it did some simplification of V&apos;s
/// operands based on the information about what bits are demanded. This returns
/// some other non-null value if it found out that V is equal to another value
/// in the context where the specified bits are demanded, but not for all users.</doc>
