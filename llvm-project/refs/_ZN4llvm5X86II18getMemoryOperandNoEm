<def f='llvm/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h' l='761' ll='838' type='int llvm::X86II::getMemoryOperandNo(uint64_t TSFlags)'/>
<doc f='llvm/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h' l='753'>/// getMemoryOperandNo - The function returns the MCInst operand # for the
  /// first field of the memory operand.  If the instruction doesn&apos;t have a
  /// memory operand, this returns -1.
  ///
  /// Note that this ignores tied operands.  If there is a tied register which
  /// is duplicated in the MCInst (e.g. &quot;EAX = addl EAX, [mem]&quot;) it is only
  /// counted as one operand.
  ///</doc>
<use f='llvm/llvm/lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp' l='1242' u='c' c='_ZNK12_GLOBAL__N_116X86MCCodeEmitter17encodeInstructionERKN4llvm6MCInstERNS1_11raw_ostreamERNS1_15SmallVectorImplINS1_7MCFixupEEERKNS1_15MCSubtargetInfoE'/>
<use f='llvm/llvm/lib/Target/X86/X86AvoidStoreForwardingBlocks.cpp' l='290' u='c' c='_ZL13getAddrOffsetPN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/X86/X86DiscriminateMemOps.cpp' l='129' u='c' c='_ZN12_GLOBAL__N_121X86DiscriminateMemOps20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<use f='llvm/llvm/lib/Target/X86/X86DomainReassignment.cpp' l='532' u='c' c='_ZL10usedAsAddrRKN4llvm12MachineInstrEjPKNS_15TargetInstrInfoE'/>
<use f='llvm/llvm/lib/Target/X86/X86DomainReassignment.cpp' l='567' u='c' c='_ZN12_GLOBAL__N_121X86DomainReassignment12buildClosureERNS_7ClosureEj'/>
<use f='llvm/llvm/lib/Target/X86/X86FixupLEAs.cpp' l='452' u='c' c='_ZN12_GLOBAL__N_112FixupLEAPass18processInstructionERN4llvm26MachineInstrBundleIteratorINS1_12MachineInstrELb0EEERNS1_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/X86/X86InsertPrefetch.cpp' l='195' u='c' c='_ZN12_GLOBAL__N_117X86InsertPrefetch20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<use f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='2983' u='c' c='_ZNK4llvm12X86InstrInfo23getMemOperandWithOffsetERKNS_12MachineInstrERPKNS_14MachineOperandERlPKNS_18TargetRegisterInfoE'/>
<use f='llvm/llvm/lib/Target/X86/X86OptimizeLEAs.cpp' l='337' u='c' c='_ZN12_GLOBAL__N_115OptimizeLEAPass13chooseBestLEAERKN4llvm15SmallVectorImplIPNS1_12MachineInstrEEERKS3_RS4_RlRi'/>
<use f='llvm/llvm/lib/Target/X86/X86OptimizeLEAs.cpp' l='439' u='c' c='_ZNK12_GLOBAL__N_115OptimizeLEAPass13isReplaceableERKN4llvm12MachineInstrES4_Rl'/>
<use f='llvm/llvm/lib/Target/X86/X86OptimizeLEAs.cpp' l='504' u='c' c='_ZN12_GLOBAL__N_115OptimizeLEAPass23removeRedundantAddrCalcERN4llvm8DenseMapINS_8MemOpKeyENS1_11SmallVectorIPNS1_12MachineInstrELj16EEENS1_12DenseMapI14140423'/>
<use f='llvm/llvm/lib/Target/X86/X86OptimizeLEAs.cpp' l='634' u='c' c='_ZN12_GLOBAL__N_115OptimizeLEAPass19removeRedundantLEAsERN4llvm8DenseMapINS_8MemOpKeyENS1_11SmallVectorIPNS1_12MachineInstrELj16EEENS1_12DenseMapInfoI2563385'/>
<use f='llvm/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp' l='1702' u='c' c='_ZN12_GLOBAL__N_131X86SpeculativeLoadHardeningPass36tracePredStateThroughBlocksAndHardenERN4llvm15MachineFunctionE'/>
<use f='llvm/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp' l='1780' u='c' c='_ZN12_GLOBAL__N_131X86SpeculativeLoadHardeningPass36tracePredStateThroughBlocksAndHardenERN4llvm15MachineFunctionE'/>
<use f='llvm/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp' l='2178' u='c' c='_ZN12_GLOBAL__N_131X86SpeculativeLoadHardeningPass24sinkPostLoadHardenedInstERN4llvm12MachineInstrERNS1_15SmallPtrSetImplIPS2_EE'/>
