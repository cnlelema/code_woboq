<dec f='llvm/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h' l='329' type='bool llvm::LoopVectorizationLegality::canVectorizeLoopNestCFG(llvm::Loop * Lp, bool UseVPlanNativePath)'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp' l='1042' ll='1066' type='bool llvm::LoopVectorizationLegality::canVectorizeLoopNestCFG(llvm::Loop * Lp, bool UseVPlanNativePath)'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp' l='1058' u='c' c='_ZN4llvm25LoopVectorizationLegality23canVectorizeLoopNestCFGEPNS_4LoopEb'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp' l='1076' u='c' c='_ZN4llvm25LoopVectorizationLegality12canVectorizeEb'/>
<doc f='llvm/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h' l='322'>/// Return true if the pre-header, exiting and latch blocks of \p Lp and all
  /// its nested loops are considered legal for vectorization. These legal
  /// checks are common for inner and outer loop vectorization.
  /// Temporarily taking UseVPlanNativePath parameter. If true, take
  /// the new code path being implemented for outer loop vectorization
  /// (should be functional for inner loop vectorization) based on VPlan.
  /// If false, good old LV code.</doc>
