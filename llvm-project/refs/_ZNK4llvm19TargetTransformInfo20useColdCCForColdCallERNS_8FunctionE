<dec f='llvm/llvm/include/llvm/Analysis/TargetTransformInfo.h' l='609' type='bool llvm::TargetTransformInfo::useColdCCForColdCall(llvm::Function &amp; F) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/TargetTransformInfo.h' l='607'>/// Return true if the input function which is cold at all call sites,
  ///  should use coldcc calling convention.</doc>
<def f='llvm/llvm/lib/Analysis/TargetTransformInfo.cpp' l='259' ll='261' type='bool llvm::TargetTransformInfo::useColdCCForColdCall(llvm::Function &amp; F) const'/>
<use f='llvm/llvm/lib/Transforms/IPO/GlobalOpt.cpp' l='2321' u='c' c='_ZL17OptimizeFunctionsRN4llvm6ModuleEPNS_17TargetLibraryInfoENS_12function_refIFRNS_19TargetTransformInfoERNS_8FunctionEEEENS4_IFRNS_18BlockFrequencyI9729831'/>
<use f='llvm/llvm/lib/Transforms/IPO/HotColdSplitting.cpp' l='357' u='c' c='_ZN12_GLOBAL__N_116HotColdSplitting17extractColdRegionERKN4llvm11SmallVectorIPNS1_10BasicBlockELj0EEERNS1_13DominatorTreeEPNS1_18BlockFrequencyInfoERN14963532'/>
