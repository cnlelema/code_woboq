<dec f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='2558' type='void clang::CodeGen::CodeGenFunction::EmitCXXAggrConstructorCall(const clang::CXXConstructorDecl * D, llvm::Value * NumElements, clang::CodeGen::Address ArrayPtr, const clang::CXXConstructExpr * E, bool NewPointerIsChecked, bool ZeroInitialization = false)'/>
<use f='llvm/clang/lib/CodeGen/CGClass.cpp' l='1892' u='c' c='_ZN5clang7CodeGen15CodeGenFunction26EmitCXXAggrConstructorCallEPKNS_18CXXConstructorDeclEPKNS_9ArrayTypeENS0_7AddressEPKNS_16CXXConstructExprEbb'/>
<def f='llvm/clang/lib/CodeGen/CGClass.cpp' l='1905' ll='2008' type='void clang::CodeGen::CodeGenFunction::EmitCXXAggrConstructorCall(const clang::CXXConstructorDecl * ctor, llvm::Value * numElements, clang::CodeGen::Address arrayBase, const clang::CXXConstructExpr * E, bool NewPointerIsChecked, bool zeroInitialize = false)'/>
<doc f='llvm/clang/lib/CodeGen/CGClass.cpp' l='1896'>/// EmitCXXAggrConstructorCall - Emit a loop to call a particular
/// constructor for each of several members of an array.
///
/// \param ctor the constructor to call for each element
/// \param numElements the number of elements in the array;
///   may be zero
/// \param arrayBase a T*, where T is the type constructed by ctor
/// \param zeroInitialize true if each element should be
///   zero-initialized before it is constructed</doc>
<use f='llvm/clang/lib/CodeGen/CGExprCXX.cpp' l='1145' u='c' c='_ZN5clang7CodeGen15CodeGenFunction23EmitNewArrayInitializerEPKNS_10CXXNewExprENS_8QualTypeEPN4llvm4TypeENS0_7AddressEPNS6_5ValueESB_'/>
