<def f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='480' ll='482' type='llvm::LegalizeRuleSet &amp; llvm::LegalizeRuleSet::legalForCartesianProduct(std::initializer_list&lt;LLT&gt; Types)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='478'>/// The instruction is legal when type indexes 0 and 1 are both in the given
  /// list. That is, the type pair is in the cartesian product of the list.</doc>
<use f='llvm/llvm/lib/Target/AArch64/AArch64LegalizerInfo.cpp' l='361' u='c' c='_ZN4llvm20AArch64LegalizerInfoC1ERKNS_16AArch64SubtargetE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64LegalizerInfo.cpp' l='368' u='c' c='_ZN4llvm20AArch64LegalizerInfoC1ERKNS_16AArch64SubtargetE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64LegalizerInfo.cpp' l='408' u='c' c='_ZN4llvm20AArch64LegalizerInfoC1ERKNS_16AArch64SubtargetE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64LegalizerInfo.cpp' l='551' u='c' c='_ZN4llvm20AArch64LegalizerInfoC1ERKNS_16AArch64SubtargetE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp' l='190' u='c' c='_ZN4llvm19AMDGPULegalizerInfoC1ERKNS_12GCNSubtargetERKNS_16GCNTargetMachineE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp' l='189' u='c' c='_ZN4llvm19AMDGPULegalizerInfoC1ERKNS_12GCNSubtargetERKNS_16GCNTargetMachineE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp' l='188' u='c' c='_ZN4llvm19AMDGPULegalizerInfoC1ERKNS_12GCNSubtargetERKNS_16GCNTargetMachineE'/>
<use f='llvm/llvm/lib/Target/X86/X86LegalizerInfo.cpp' l='222' u='c' c='_ZN4llvm16X86LegalizerInfo21setLegalizerInfo64bitEv'/>
<use f='llvm/llvm/lib/Target/X86/X86LegalizerInfo.cpp' l='229' u='c' c='_ZN4llvm16X86LegalizerInfo21setLegalizerInfo64bitEv'/>
