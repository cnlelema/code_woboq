<inh f='llvm/lld/wasm/Symbols.h' l='42' c='lld::wasm::Symbol'/>
<def f='llvm/lld/wasm/Symbols.h' l='355' ll='375'/>
<ovr f='llvm/lld/wasm/Symbols.h' l='377' c='lld::wasm::DefinedEvent'/>
<size>80</size>
<doc f='llvm/lld/wasm/Symbols.h' l='343'>// Wasm events are features that suspend the current execution and transfer the
// control flow to a corresponding handler. Currently the only supported event
// kind is exceptions.
//
// Event tags are values to distinguish different events. For exceptions, they
// can be used to distinguish different language&apos;s exceptions, i.e., all C++
// exceptions have the same tag. Wasm can generate code capable of doing
// different handling actions based on the tag of caught exceptions.
//
// A single EventSymbol object represents a single tag. C++ exception event
// symbol is a weak symbol generated in every object file in which exceptions
// are used, and has name &apos;__cpp_exception&apos; for linking.</doc>
<fun r='_ZN3lld4wasm11EventSymbol7classofEPKNS0_6SymbolE'/>
<fun r='_ZNK3lld4wasm11EventSymbol12getEventTypeEv'/>
<fun r='_ZNK3lld4wasm11EventSymbol13getEventIndexEv'/>
<fun r='_ZN3lld4wasm11EventSymbol13setEventIndexEj'/>
<fun r='_ZNK3lld4wasm11EventSymbol13hasEventIndexEv'/>
<mbr r='lld::wasm::EventSymbol::Signature' o='448' t='const llvm::wasm::WasmSignature *'/>
<fun r='_ZN3lld4wasm11EventSymbolC1EN4llvm9StringRefENS0_6Symbol4KindEjPNS0_9InputFileEPKNS2_4wasm13WasmEventTypeEPKNS8_13WasmSignatureE'/>
<mbr r='lld::wasm::EventSymbol::EventType' o='512' t='const llvm::wasm::WasmEventType *'/>
<mbr r='lld::wasm::EventSymbol::EventIndex' o='576' t='uint32_t'/>
