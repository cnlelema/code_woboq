<def f='llvm/llvm/include/llvm/IR/InstVisitor.h' l='267' type='RetTy llvm::InstVisitor::visitCastInst(llvm::CastInst &amp; I)'/>
<doc f='llvm/llvm/include/llvm/IR/InstVisitor.h' l='263'>// Next level propagators: If the user does not overload a specific
  // instruction type, they can overload one of these to get the whole class
  // of instructions...
  //</doc>
<use f='llvm/llvm/lib/Analysis/LoopUnrollAnalyzer.cpp' l='162' u='c' c='_ZN4llvm20UnrolledInstAnalyzer13visitCastInstERNS_8CastInstE'/>
