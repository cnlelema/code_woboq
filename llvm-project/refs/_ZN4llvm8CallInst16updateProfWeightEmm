<dec f='llvm/llvm/include/llvm/IR/Instructions.h' l='1669' type='void llvm::CallInst::updateProfWeight(uint64_t S, uint64_t T)'/>
<doc f='llvm/llvm/include/llvm/IR/Instructions.h' l='1668'>/// Updates profile metadata by scaling it by \p S / \p T.</doc>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='472' ll='519' type='void llvm::CallInst::updateProfWeight(uint64_t S, uint64_t T)'/>
<doc f='llvm/llvm/lib/IR/Instructions.cpp' l='469'>// Update profile weight for call instruction by scaling it using the ratio
// of S/T. The meaning of &quot;branch_weights&quot; meta data for call instruction is
// transfered to represent call count.</doc>
<use f='llvm/llvm/lib/Transforms/Utils/InlineFunction.cpp' l='1519' u='c' c='_ZN4llvm19updateProfileCalleeEPNS_8FunctionElPKNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEE'/>
<use f='llvm/llvm/lib/Transforms/Utils/InlineFunction.cpp' l='1526' u='c' c='_ZN4llvm19updateProfileCalleeEPNS_8FunctionElPKNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEE'/>
