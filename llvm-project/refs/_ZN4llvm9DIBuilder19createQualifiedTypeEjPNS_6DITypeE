<dec f='llvm/llvm/include/llvm/IR/DIBuilder.h' l='202' type='llvm::DIDerivedType * llvm::DIBuilder::createQualifiedType(unsigned int Tag, llvm::DIType * FromTy)'/>
<doc f='llvm/llvm/include/llvm/IR/DIBuilder.h' l='198'>/// Create debugging information entry for a qualified
    /// type, e.g. &apos;const int&apos;.
    /// \param Tag         Tag identifing type, e.g. dwarf::TAG_volatile_type
    /// \param FromTy      Base Type.</doc>
<use f='llvm/clang/lib/CodeGen/CGDebugInfo.cpp' l='844' u='c' c='_ZN5clang7CodeGen11CGDebugInfo19CreateQualifiedTypeENS_8QualTypeEPN4llvm6DIFileE'/>
<use f='llvm/clang/lib/CodeGen/CGDebugInfo.cpp' l='2729' u='c' c='_ZN5clang7CodeGen11CGDebugInfo10CreateTypeEPKNS_10AtomicTypeEPN4llvm6DIFileE'/>
<def f='llvm/llvm/lib/IR/DIBuilder.cpp' l='267' ll='270' type='llvm::DIDerivedType * llvm::DIBuilder::createQualifiedType(unsigned int Tag, llvm::DIType * FromTy)'/>
<use f='llvm/llvm/lib/IR/DebugInfo.cpp' l='1137' u='c' c='LLVMDIBuilderCreateQualifiedType'/>
