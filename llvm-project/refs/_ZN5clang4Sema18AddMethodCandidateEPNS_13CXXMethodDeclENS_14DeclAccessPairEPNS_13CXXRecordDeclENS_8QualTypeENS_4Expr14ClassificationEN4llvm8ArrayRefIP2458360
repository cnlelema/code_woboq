<dec f='llvm/clang/include/clang/Sema/Sema.h' l='2901' type='void clang::Sema::AddMethodCandidate(clang::CXXMethodDecl * Method, clang::DeclAccessPair FoundDecl, clang::CXXRecordDecl * ActingContext, clang::QualType ObjectType, Expr::Classification ObjectClassification, ArrayRef&lt;clang::Expr *&gt; Args, clang::OverloadCandidateSet &amp; CandidateSet, bool SuppressUserConversions = false, bool PartialOverloading = false, ConversionSequenceList EarlyConversions = None)'/>
<def f='llvm/clang/lib/Sema/SemaOverload.cpp' l='6579' ll='6712' type='void clang::Sema::AddMethodCandidate(clang::CXXMethodDecl * Method, clang::DeclAccessPair FoundDecl, clang::CXXRecordDecl * ActingContext, clang::QualType ObjectType, Expr::Classification ObjectClassification, ArrayRef&lt;clang::Expr *&gt; Args, clang::OverloadCandidateSet &amp; CandidateSet, bool SuppressUserConversions = false, bool PartialOverloading = false, ConversionSequenceList EarlyConversions = None)'/>
<doc f='llvm/clang/lib/Sema/SemaOverload.cpp' l='6572'>/// AddMethodCandidate - Adds the given C++ member function to the set
/// of candidate functions, using the given function call arguments
/// and the object argument (@c Object). For example, in a call
/// @c o.f(a1,a2), @c Object will contain @c o and @c Args will contain
/// both @c a1 and @c a2. If @p SuppressUserConversions, then don&apos;t
/// allow user-defined conversions via constructors or conversion
/// operators.</doc>
