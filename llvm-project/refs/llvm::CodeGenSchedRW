<def f='llvm/llvm/utils/TableGen/CodeGenSchedule.h' l='44' ll='92'/>
<size>104</size>
<doc f='llvm/llvm/utils/TableGen/CodeGenSchedule.h' l='37'>/// We have two kinds of SchedReadWrites. Explicitly defined and inferred
/// sequences.  TheDef is nonnull for explicit SchedWrites, but Sequence may or
/// may not be empty. TheDef is null for inferred sequences, and Sequence must
/// be nonempty.
///
/// IsVariadic controls whether the variants are expanded into multiple operands
/// or a sequence of writes on one operand.</doc>
<mbr r='llvm::CodeGenSchedRW::Index' o='0' t='unsigned int'/>
<mbr r='llvm::CodeGenSchedRW::Name' o='64' t='std::string'/>
<mbr r='llvm::CodeGenSchedRW::TheDef' o='320' t='llvm::Record *'/>
<mbr r='llvm::CodeGenSchedRW::IsRead' o='384' t='bool'/>
<mbr r='llvm::CodeGenSchedRW::IsAlias' o='392' t='bool'/>
<mbr r='llvm::CodeGenSchedRW::HasVariants' o='400' t='bool'/>
<mbr r='llvm::CodeGenSchedRW::IsVariadic' o='408' t='bool'/>
<mbr r='llvm::CodeGenSchedRW::IsSequence' o='416' t='bool'/>
<mbr r='llvm::CodeGenSchedRW::Sequence' o='448' t='IdxVec'/>
<mbr r='llvm::CodeGenSchedRW::Aliases' o='640' t='RecVec'/>
<fun r='_ZN4llvm14CodeGenSchedRWC1Ev'/>
<fun r='_ZN4llvm14CodeGenSchedRWC1EjPNS_6RecordE'/>
<fun r='_ZN4llvm14CodeGenSchedRWC1EjbNS_8ArrayRefIjEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<fun r='_ZNK4llvm14CodeGenSchedRW7isValidEv'/>
<fun r='_ZNK4llvm14CodeGenSchedRW4dumpEv'/>
<fun r='_ZNK4llvm14CodeGenSchedRW4dumpEv'/>
