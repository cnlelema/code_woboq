<def f='llvm/lld/lib/ReaderWriter/MachO/MachONormalizedFile.h' l='138' ll='147'/>
<size>32</size>
<doc f='llvm/lld/lib/ReaderWriter/MachO/MachONormalizedFile.h' l='135'>/// Mach-O has a 32-bit and 64-bit symbol table entry (nlist), and the symbol
/// type and scope and mixed in the same n_type field.  This normalized form
/// works for any pointer size and separates out the type and scope.</doc>
<fun r='_ZN3lld6mach_o10normalized6SymbolC1Ev'/>
<mbr r='lld::mach_o::normalized::Symbol::name' o='0' t='llvm::StringRef'/>
<mbr r='lld::mach_o::normalized::Symbol::type' o='128' t='llvm::MachO::NListType'/>
<mbr r='lld::mach_o::normalized::Symbol::scope' o='136' t='lld::mach_o::normalized::SymbolScope'/>
<mbr r='lld::mach_o::normalized::Symbol::sect' o='144' t='uint8_t'/>
<mbr r='lld::mach_o::normalized::Symbol::desc' o='160' t='lld::mach_o::normalized::SymbolDesc'/>
<mbr r='lld::mach_o::normalized::Symbol::value' o='192' t='llvm::yaml::Hex64'/>
