<dec f='llvm/llvm/include/llvm/IR/DebugInfo.h' l='51' type='bool llvm::stripNonLineTableDebugInfo(llvm::Module &amp; M)'/>
<doc f='llvm/llvm/include/llvm/IR/DebugInfo.h' l='41'>/// Downgrade the debug info in a module to contain only line table information.
///
/// In order to convert debug info to what -gline-tables-only would have
/// created, this does the following:
///   1) Delete all debug intrinsics.
///   2) Delete all non-CU named metadata debug info nodes.
///   3) Create new DebugLocs for each instruction.
///   4) Create a new CU debug info, and similarly for every metadata node
///      that&apos;s reachable from the CU debug info.
///   All debug type metadata nodes are unreachable and garbage collected.</doc>
<def f='llvm/llvm/lib/IR/DebugInfo.cpp' l='589' ll='680' type='bool llvm::stripNonLineTableDebugInfo(llvm::Module &amp; M)'/>
<use f='llvm/llvm/lib/Transforms/Utils/StripNonLineTableDebugInfo.cpp' l='30' u='c' c='_ZN12_GLOBAL__N_126StripNonLineTableDebugInfo11runOnModuleERN4llvm6ModuleE'/>
<use f='llvm/llvm/tools/bugpoint/CrashDebugger.cpp' l='1219' u='r' c='_ZL11DebugACrashRN4llvm9BugDriverEPFbRKS0_PNS_6ModuleEE'/>
