<dec f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='183' type='void llvm::SparseSolver::UpdateState(LatticeKey Key, LatticeVal LV)'/>
<def f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='243' ll='255' type='void llvm::SparseSolver::UpdateState(LatticeKey Key, LatticeVal LV)'/>
<use f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='406' u='c' c='_ZN4llvm12SparseSolver12visitPHINodeERNS_7PHINodeE'/>
<use f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='422' u='c' c='_ZN4llvm12SparseSolver12visitPHINodeERNS_7PHINodeE'/>
<use f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='445' u='c' c='_ZN4llvm12SparseSolver12visitPHINodeERNS_7PHINodeE'/>
<use f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='461' u='c' c='_ZN4llvm12SparseSolver9visitInstERNS_11InstructionE'/>
<doc f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='180'>/// UpdateState - When the state of some LatticeKey is potentially updated to
  /// the given LatticeVal, this function notices and adds the LLVM value
  /// corresponding the key to the work list, if needed.</doc>
