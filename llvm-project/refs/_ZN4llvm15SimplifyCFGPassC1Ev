<def f='llvm/llvm/include/llvm/Transforms/Scalar/SimplifyCFG.h' l='37' ll='42' type='void llvm::SimplifyCFGPass::SimplifyCFGPass()'/>
<use f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='401' u='c' c='_ZN4llvm11PassBuilder35buildFunctionSimplificationPipelineENS0_17OptimizationLevelENS0_12ThinLTOPhaseEb'/>
<use f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='410' u='c' c='_ZN4llvm11PassBuilder35buildFunctionSimplificationPipelineENS0_17OptimizationLevelENS0_12ThinLTOPhaseEb'/>
<use f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='427' u='c' c='_ZN4llvm11PassBuilder35buildFunctionSimplificationPipelineENS0_17OptimizationLevelENS0_12ThinLTOPhaseEb'/>
<use f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='478' u='c' c='_ZN4llvm11PassBuilder35buildFunctionSimplificationPipelineENS0_17OptimizationLevelENS0_12ThinLTOPhaseEb'/>
<use f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='525' u='c' c='_ZN4llvm11PassBuilder35buildFunctionSimplificationPipelineENS0_17OptimizationLevelENS0_12ThinLTOPhaseEb'/>
<use f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='565' u='c' c='_ZN4llvm11PassBuilder17addPGOInstrPassesERNS_11PassManagerINS_6ModuleENS_15AnalysisManagerIS2_JEEEJEEEbNS0_17OptimizationLevelEbbNSt7__cxx1112basic_st4957342'/>
<use f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='649' u='c' c='_ZN4llvm11PassBuilder33buildModuleSimplificationPipelineENS0_17OptimizationLevelENS0_12ThinLTOPhaseEb'/>
<use f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='716' u='c' c='_ZN4llvm11PassBuilder33buildModuleSimplificationPipelineENS0_17OptimizationLevelENS0_12ThinLTOPhaseEb'/>
<use f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='951' u='c' c='_ZN4llvm11PassBuilder31buildModuleOptimizationPipelineENS0_17OptimizationLevelEbb'/>
<use f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='1266' u='c' c='_ZN4llvm11PassBuilder23buildLTODefaultPipelineENS0_17OptimizationLevelEbPNS_18ModuleSummaryIndexE'/>
<use f='llvm/llvm/lib/Passes/PassBuilder.cpp' l='1303' u='c' c='_ZN4llvm11PassBuilder23buildLTODefaultPipelineENS0_17OptimizationLevelEbPNS_18ModuleSummaryIndexE'/>
<doc f='llvm/llvm/include/llvm/Transforms/Scalar/SimplifyCFG.h' l='33'>/// The default constructor sets the pass options to create canonical IR,
  /// rather than optimal IR. That is, by default we bypass transformations that
  /// are likely to improve performance but make analysis for other passes more
  /// difficult.</doc>
