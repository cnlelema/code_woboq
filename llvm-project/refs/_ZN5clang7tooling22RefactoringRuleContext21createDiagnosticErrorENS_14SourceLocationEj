<def f='llvm/clang/include/clang/Tooling/Refactoring/RefactoringRuleContext.h' l='57' ll='59' type='llvm::Error clang::tooling::RefactoringRuleContext::createDiagnosticError(clang::SourceLocation Loc, unsigned int DiagID)'/>
<use f='llvm/clang/include/clang/Tooling/Refactoring/RefactoringRuleContext.h' l='62' u='c' c='_ZN5clang7tooling22RefactoringRuleContext21createDiagnosticErrorEj'/>
<doc f='llvm/clang/include/clang/Tooling/Refactoring/RefactoringRuleContext.h' l='54'>/// Creates an llvm::Error value that contains a diagnostic.
  ///
  /// The errors should not outlive the context.</doc>
