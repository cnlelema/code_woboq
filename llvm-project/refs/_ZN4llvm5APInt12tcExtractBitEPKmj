<dec f='llvm/llvm/include/llvm/ADT/APInt.h' l='1841' type='static int llvm::APInt::tcExtractBit(const WordType * , unsigned int bit)'/>
<doc f='llvm/llvm/include/llvm/ADT/APInt.h' l='1840'>/// Extract the given bit of a bignum; returns 0 or 1.  Zero-based.</doc>
<use f='llvm/llvm/lib/Support/APFloat.cpp' l='435' u='c' c='_ZN4llvmL29lostFractionThroughTruncationEPKmjj'/>
<use f='llvm/llvm/lib/Support/APFloat.cpp' l='764' u='c' c='_ZNK4llvm6detail9IEEEFloat10isDenormalEv'/>
<use f='llvm/llvm/lib/Support/APFloat.cpp' l='1257' u='c' c='_ZNK4llvm6detail9IEEEFloat17roundAwayFromZeroENS_11APFloatBase12roundingModeENS_12lostFractionEj'/>
<use f='llvm/llvm/lib/Support/APFloat.cpp' l='2234' u='c' c='_ZN4llvm6detail9IEEEFloat30convertFromSignExtendedIntegerEPKmjbNS_11APFloatBase12roundingModeE'/>
<use f='llvm/llvm/lib/Support/APFloat.cpp' l='2261' u='c' c='_ZN4llvm6detail9IEEEFloat30convertFromZeroExtendedIntegerEPKmjbNS_11APFloatBase12roundingModeE'/>
<use f='llvm/llvm/lib/Support/APFloat.cpp' l='2408' u='c' c='_ZN4llvm6detail9IEEEFloat28roundSignificandWithExponentEPKmjiNS_11APFloatBase12roundingModeE'/>
<use f='llvm/llvm/lib/Support/APFloat.cpp' l='3649' u='c' c='_ZNK4llvm6detail9IEEEFloat11isSignalingEv'/>
<def f='llvm/llvm/lib/Support/APInt.cpp' l='2249' ll='2251' type='static int llvm::APInt::tcExtractBit(const WordType * parts, unsigned int bit)'/>
<doc f='llvm/llvm/lib/Support/APInt.cpp' l='2248'>/* Extract the given bit of a bignum; returns 0 or 1.  */</doc>
