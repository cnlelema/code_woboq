<inh f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='333' c='llvm::VPBlockBase'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='982' ll='1057'/>
<size>136</size>
<doc f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='979'>/// VPBasicBlock serves as the leaf of the Hierarchical Control-Flow Graph. It
/// holds a sequence of zero or more VPRecipe&apos;s each representing a sequence of
/// output IR instructions.</doc>
<mbr r='llvm::VPBasicBlock::Recipes' o='960' t='RecipeListTy'/>
<fun r='_ZN4llvm12VPBasicBlockC1ERKNS_5TwineEPNS_12VPRecipeBaseE'/>
<fun r='_ZN4llvm12VPBasicBlockD1Ev'/>
<fun r='_ZN4llvm12VPBasicBlock5beginEv'/>
<fun r='_ZNK4llvm12VPBasicBlock5beginEv'/>
<fun r='_ZN4llvm12VPBasicBlock3endEv'/>
<fun r='_ZNK4llvm12VPBasicBlock3endEv'/>
<fun r='_ZN4llvm12VPBasicBlock6rbeginEv'/>
<fun r='_ZNK4llvm12VPBasicBlock6rbeginEv'/>
<fun r='_ZN4llvm12VPBasicBlock4rendEv'/>
<fun r='_ZNK4llvm12VPBasicBlock4rendEv'/>
<fun r='_ZNK4llvm12VPBasicBlock4sizeEv'/>
<fun r='_ZNK4llvm12VPBasicBlock5emptyEv'/>
<fun r='_ZNK4llvm12VPBasicBlock5frontEv'/>
<fun r='_ZN4llvm12VPBasicBlock5frontEv'/>
<fun r='_ZNK4llvm12VPBasicBlock4backEv'/>
<fun r='_ZN4llvm12VPBasicBlock4backEv'/>
<fun r='_ZN4llvm12VPBasicBlock13getRecipeListEv'/>
<fun r='_ZN4llvm12VPBasicBlock16getSublistAccessEPNS_12VPRecipeBaseE'/>
<fun r='_ZN4llvm12VPBasicBlock7classofEPKNS_11VPBlockBaseE'/>
<fun r='_ZN4llvm12VPBasicBlock6insertEPNS_12VPRecipeBaseENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE'/>
<fun r='_ZN4llvm12VPBasicBlock12appendRecipeEPNS_12VPRecipeBaseE'/>
<fun r='_ZN4llvm12VPBasicBlock7executeEPNS_16VPTransformStateE'/>
<fun r='_ZN4llvm12VPBasicBlock21createEmptyBasicBlockERNS_16VPTransformState8CFGStateE'/>
