<dec f='llvm/llvm/include/llvm/Bitcode/BitcodeReader.h' l='139' type='Expected&lt;std::unique_ptr&lt;Module&gt; &gt; llvm::getLazyBitcodeModule(llvm::MemoryBufferRef Buffer, llvm::LLVMContext &amp; Context, bool ShouldLazyLoadMetadata = false, bool IsImporting = false)'/>
<doc f='llvm/llvm/include/llvm/Bitcode/BitcodeReader.h' l='134'>/// Read the header of the specified bitcode buffer and prepare for lazy
  /// deserialization of function bodies. If ShouldLazyLoadMetadata is true,
  /// lazily load metadata as well. If IsImporting is true, this module is
  /// being parsed for ThinLTO importing into another module.</doc>
<def f='llvm/llvm/lib/Bitcode/Reader/BitcodeReader.cpp' l='6183' ll='6191' type='Expected&lt;std::unique_ptr&lt;Module&gt; &gt; llvm::getLazyBitcodeModule(llvm::MemoryBufferRef Buffer, llvm::LLVMContext &amp; Context, bool ShouldLazyLoadMetadata = false, bool IsImporting = false)'/>
<use f='llvm/llvm/lib/Bitcode/Reader/BitcodeReader.cpp' l='6196' u='c' c='_ZN4llvm26getOwningLazyBitcodeModuleEOSt10unique_ptrINS_12MemoryBufferESt14default_deleteIS1_EERNS_11LLVMContextEbb'/>
<use f='llvm/llvm/lib/LTO/LTOModule.cpp' l='188' u='c' c='_ZL20parseBitcodeFileImplN4llvm15MemoryBufferRefERNS_11LLVMContextEb'/>
<use f='llvm/llvm/tools/llvm-dis/llvm-dis.cpp' l='161' u='c' c='main'/>
<use f='llvm/llvm/unittests/Bitcode/BitReaderTest.cpp' l='54' u='c' c='_ZN12_GLOBAL__N_1L25getLazyModuleFromAssemblyERN4llvm11LLVMContextERNS0_11SmallStringILj1024EEEPKc'/>
