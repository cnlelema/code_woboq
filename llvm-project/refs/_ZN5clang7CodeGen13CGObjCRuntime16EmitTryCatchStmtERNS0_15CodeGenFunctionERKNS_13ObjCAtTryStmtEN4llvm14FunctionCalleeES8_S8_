<dec f='llvm/clang/lib/CodeGen/CGObjCRuntime.h' l='98' type='void clang::CodeGen::CGObjCRuntime::EmitTryCatchStmt(clang::CodeGen::CodeGenFunction &amp; CGF, const clang::ObjCAtTryStmt &amp; S, llvm::FunctionCallee beginCatchFn, llvm::FunctionCallee endCatchFn, llvm::FunctionCallee exceptionRethrowFn)'/>
<doc f='llvm/clang/lib/CodeGen/CGObjCRuntime.h' l='91'>/// Emits a try / catch statement.  This function is intended to be called by
  /// subclasses, and provides a generic mechanism for generating these, which
  /// should be usable by all runtimes.  The caller must provide the functions
  /// to call when entering and exiting a \@catch() block, and the function
  /// used to rethrow exceptions.  If the begin and end catch functions are
  /// NULL, then the function assumes that the EH personality function provides
  /// the thrown object directly.</doc>
<use f='llvm/clang/lib/CodeGen/CGObjCGNU.cpp' l='3966' u='c' c='_ZN12_GLOBAL__N_19CGObjCGNU11EmitTryStmtERN5clang7CodeGen15CodeGenFunctionERKNS1_13ObjCAtTryStmtE'/>
<use f='llvm/clang/lib/CodeGen/CGObjCMac.cpp' l='7664' u='c' c='_ZN12_GLOBAL__N_122CGObjCNonFragileABIMac11EmitTryStmtERN5clang7CodeGen15CodeGenFunctionERKNS1_13ObjCAtTryStmtE'/>
<def f='llvm/clang/lib/CodeGen/CGObjCRuntime.cpp' l='143' ll='298' type='void clang::CodeGen::CGObjCRuntime::EmitTryCatchStmt(clang::CodeGen::CodeGenFunction &amp; CGF, const clang::ObjCAtTryStmt &amp; S, llvm::FunctionCallee beginCatchFn, llvm::FunctionCallee endCatchFn, llvm::FunctionCallee exceptionRethrowFn)'/>
