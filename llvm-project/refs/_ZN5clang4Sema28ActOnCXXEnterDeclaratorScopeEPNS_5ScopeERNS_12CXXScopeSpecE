<dec f='llvm/clang/include/clang/Sema/Sema.h' l='5718' type='bool clang::Sema::ActOnCXXEnterDeclaratorScope(clang::Scope * S, clang::CXXScopeSpec &amp; SS)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='5712'>/// ActOnCXXEnterDeclaratorScope - Called when a C++ scope specifier (global
  /// scope or nested-name-specifier) is parsed, part of a declarator-id.
  /// After this method is called, according to [C++ 3.4.3p3], names should be
  /// looked up in the declarator-id&apos;s scope, until the declarator is parsed and
  /// ActOnCXXExitDeclaratorScope is called.
  /// The &apos;SS&apos; should be a non-empty valid CXXScopeSpec.</doc>
<use f='llvm/clang/include/clang/Parse/Parser.h' l='2638' u='c' c='_ZN5clang6Parser18DeclaratorScopeObj20EnterDeclaratorScopeEv'/>
<def f='llvm/clang/lib/Sema/SemaCXXScopeSpec.cpp' l='1069' ll='1089' type='bool clang::Sema::ActOnCXXEnterDeclaratorScope(clang::Scope * S, clang::CXXScopeSpec &amp; SS)'/>
<doc f='llvm/clang/lib/Sema/SemaCXXScopeSpec.cpp' l='1063'>/// ActOnCXXEnterDeclaratorScope - Called when a C++ scope specifier (global
/// scope or nested-name-specifier) is parsed, part of a declarator-id.
/// After this method is called, according to [C++ 3.4.3p3], names should be
/// looked up in the declarator-id&apos;s scope, until the declarator is parsed and
/// ActOnCXXExitDeclaratorScope is called.
/// The &apos;SS&apos; should be a non-empty valid CXXScopeSpec.</doc>
