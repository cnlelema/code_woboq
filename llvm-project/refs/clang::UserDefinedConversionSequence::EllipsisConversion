<dec f='llvm/clang/include/clang/Sema/Overload.h' l='374' type='bool'/>
<offset>448</offset>
<doc f='llvm/clang/include/clang/Sema/Overload.h' l='368'>/// EllipsisConversion - When this is true, it means user-defined
    /// conversion sequence starts with a ... (ellipsis) conversion, instead of
    /// a standard conversion. In this case, &apos;Before&apos; field must be ignored.
    // FIXME. I much rather put this as the first field. But there seems to be
    // a gcc code gen. bug which causes a crash in a test. Putting it here seems
    // to work around the crash.</doc>
<use f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='3813' u='r' c='_ZN5clang4Sema25PerformImplicitConversionEPNS_4ExprENS_8QualTypeERKNS_26ImplicitConversionSequenceENS0_16AssignmentActionENS0_21CheckedConversionKindE'/>
<use f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='3821' u='r' c='_ZN5clang4Sema25PerformImplicitConversionEPNS_4ExprENS_8QualTypeERKNS_26ImplicitConversionSequenceENS0_16AssignmentActionENS0_21CheckedConversionKindE'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='3475' u='w' c='_ZL23IsUserDefinedConversionRN5clang4SemaEPNS_4ExprENS_8QualTypeERNS_29UserDefinedConversionSequenceERNS_20OverloadCandidateSetEbb'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='3478' u='w' c='_ZL23IsUserDefinedConversionRN5clang4SemaEPNS_4ExprENS_8QualTypeERNS_29UserDefinedConversionSequenceERNS_20OverloadCandidateSetEbb'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='3501' u='w' c='_ZL23IsUserDefinedConversionRN5clang4SemaEPNS_4ExprENS_8QualTypeERNS_29UserDefinedConversionSequenceERNS_20OverloadCandidateSetEbb'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='4508' u='w' c='_ZL24FindConversionForRefInitRN5clang4SemaERNS_26ImplicitConversionSequenceENS_8QualTypeENS_14SourceLocationEPNS_4ExprES4_bb'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='7217' u='w' c='_ZN5clang4Sema21AddSurrogateCandidateEPNS_17CXXConversionDeclENS_14DeclAccessPairEPNS_13CXXRecordDeclEPKNS_17FunctionProtoTypeEPNS_4ExprEN4llvm8ArrayR9624276'/>
