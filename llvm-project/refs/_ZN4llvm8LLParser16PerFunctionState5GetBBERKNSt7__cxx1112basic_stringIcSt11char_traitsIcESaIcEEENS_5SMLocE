<dec f='llvm/llvm/lib/AsmParser/LLParser.h' l='443' type='llvm::BasicBlock * llvm::LLParser::PerFunctionState::GetBB(const std::string &amp; Name, LocTy Loc)'/>
<def f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='2977' ll='2981' type='llvm::BasicBlock * llvm::LLParser::PerFunctionState::GetBB(const std::string &amp; Name, LocTy Loc)'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='3007' u='c' c='_ZN4llvm8LLParser16PerFunctionState8DefineBBERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiNS_5SMLocE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='3259' u='c' c='_ZN4llvm8LLParser10ParseValIDERNS_5ValIDEPNS0_16PerFunctionStateE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='5534' u='c' c='_ZN4llvm8LLParser16PerFunctionState31resolveForwardRefBlockAddressesEv'/>
<doc f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='2975'>/// GetBB - Get a basic block with the specified name or ID, creating a
/// forward reference record if needed.</doc>
<doc f='llvm/llvm/lib/AsmParser/LLParser.h' l='440'>/// GetBB - Get a basic block with the specified name or ID, creating a
      /// forward reference record if needed.  This can return null if the value
      /// is not a BasicBlock.</doc>
