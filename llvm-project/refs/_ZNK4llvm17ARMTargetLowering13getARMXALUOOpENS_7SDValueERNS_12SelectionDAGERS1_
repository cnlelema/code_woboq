<dec f='llvm/llvm/lib/Target/ARM/ARMISelLowering.h' l='631' type='std::pair&lt;SDValue, SDValue&gt; llvm::ARMTargetLowering::getARMXALUOOp(llvm::SDValue Op, llvm::SelectionDAG &amp; DAG, llvm::SDValue &amp; ARMcc) const'/>
<def f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='3950' ll='4018' type='std::pair&lt;SDValue, SDValue&gt; llvm::ARMTargetLowering::getARMXALUOOp(llvm::SDValue Op, llvm::SelectionDAG &amp; DAG, llvm::SDValue &amp; ARMcc) const'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='4028' u='c' c='_ZNK4llvm17ARMTargetLowering15LowerSignedALUOENS_7SDValueERNS_12SelectionDAGE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='4119' u='c' c='_ZNK4llvm17ARMTargetLowering11LowerSELECTENS_7SDValueERNS_12SelectionDAGE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='4692' u='c' c='_ZNK4llvm17ARMTargetLowering11LowerBRCONDENS_7SDValueERNS_12SelectionDAGE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='4744' u='c' c='_ZNK4llvm17ARMTargetLowering10LowerBR_CCENS_7SDValueERNS_12SelectionDAGE'/>
<doc f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='3946'>// This function returns three things: the arithmetic computation itself
// (Value), a comparison (OverflowCmp), and a condition code (ARMcc).  The
// comparison and the condition code define the case in which the arithmetic
// computation *does not* overflow.</doc>
