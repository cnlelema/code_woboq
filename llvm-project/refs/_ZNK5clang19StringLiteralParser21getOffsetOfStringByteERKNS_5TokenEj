<dec f='llvm/clang/include/clang/Lex/LiteralSupport.h' l='251' type='unsigned int clang::StringLiteralParser::getOffsetOfStringByte(const clang::Token &amp; TheTok, unsigned int ByteNo) const'/>
<use f='llvm/clang/lib/AST/Expr.cpp' l='1173' u='c' c='_ZNK5clang13StringLiteral17getLocationOfByteEjRKNS_13SourceManagerERKNS_11LangOptionsERKNS_10TargetInfoEPjSA_'/>
<doc f='llvm/clang/include/clang/Lex/LiteralSupport.h' l='245'>/// getOffsetOfStringByte - This function returns the offset of the
  /// specified byte of the string data represented by Token.  This handles
  /// advancing over escape sequences in the string.
  ///
  /// If the Diagnostics pointer is non-null, then this will do semantic
  /// checking of the string literal and emit errors and warnings.</doc>
<def f='llvm/clang/lib/Lex/LiteralSupport.cpp' l='1813' ll='1887' type='unsigned int clang::StringLiteralParser::getOffsetOfStringByte(const clang::Token &amp; Tok, unsigned int ByteNo) const'/>
<doc f='llvm/clang/lib/Lex/LiteralSupport.cpp' l='1810'>/// getOffsetOfStringByte - This function returns the offset of the
/// specified byte of the string data represented by Token.  This handles
/// advancing over escape sequences in the string.</doc>
