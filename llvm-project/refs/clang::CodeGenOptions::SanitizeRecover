<dec f='llvm/clang/include/clang/Basic/CodeGenOptions.h' l='283' type='clang::SanitizerSet'/>
<offset>9408</offset>
<doc f='llvm/clang/include/clang/Basic/CodeGenOptions.h' l='281'>/// Set of sanitizer checks that are non-fatal (i.e. execution should be
  /// continued when possible).</doc>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='257' u='m' c='_ZL25addAddressSanitizerPassesRKN4llvm18PassManagerBuilderERNS_6legacy15PassManagerBaseE'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='281' u='m' c='_ZL27addHWAddressSanitizerPassesRKN4llvm18PassManagerBuilderERNS_6legacy15PassManagerBaseE'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='299' u='m' c='_ZL32addGeneralOptsForMemorySanitizerRKN4llvm18PassManagerBuilderERNS_6legacy15PassManagerBaseEb'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='971' u='m' c='_ZL17addSanitizersAtO0RN4llvm11PassManagerINS_6ModuleENS_15AnalysisManagerIS1_JEEEJEEERKNS_6TripleERKN5clang11LangOptionsERKNS9_14CodeGenOptionsE'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='1002' u='m' c='_ZL17addSanitizersAtO0RN4llvm11PassManagerINS_6ModuleENS_15AnalysisManagerIS1_JEEEJEEERKNS_6TripleERKN5clang11LangOptionsERKNS9_14CodeGenOptionsE'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='1184' u='m' c='_ZN12_GLOBAL__N_118EmitAssemblyHelper30EmitAssemblyWithNewPassManagerEN5clang13BackendActionESt10unique_ptrIN4llvm17raw_pwrite_streamESt14default_deleteIS5_EE'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='1204' u='m' c='_ZN12_GLOBAL__N_118EmitAssemblyHelper30EmitAssemblyWithNewPassManagerEN5clang13BackendActionESt10unique_ptrIN4llvm17raw_pwrite_streamESt14default_deleteIS5_EE'/>
<use f='llvm/clang/lib/CodeGen/CGExpr.cpp' l='3879' u='m' c='_ZN5clang7CodeGen15CodeGenFunction9EmitCheckEN4llvm8ArrayRefISt4pairIPNS2_5ValueENS_13SanitizerMaskEEEENS0_16SanitizerHandlerENS3_IPNS2_8ConstantEEENS3_IS6_EE'/>
