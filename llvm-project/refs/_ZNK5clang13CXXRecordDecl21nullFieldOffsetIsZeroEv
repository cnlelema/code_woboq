<def f='llvm/clang/include/clang/AST/DeclCXX.h' l='1958' ll='1962' type='bool clang::CXXRecordDecl::nullFieldOffsetIsZero() const'/>
<doc f='llvm/clang/include/clang/AST/DeclCXX.h' l='1952'>/// In the Microsoft C++ ABI, use zero for the field offset of a null data
  /// member pointer if we can guarantee that zero is not a valid field offset,
  /// or if the member pointer has multiple fields.  Polymorphic classes have a
  /// vfptr at offset zero, so we can use zero for null.  If there are multiple
  /// fields, we can use zero even if it is a valid field offset because
  /// null-ness testing will check the other fields.</doc>
<use f='llvm/clang/lib/AST/MicrosoftMangle.cpp' l='607' u='c' c='_ZN12_GLOBAL__N_123MicrosoftCXXNameMangler23mangleMemberDataPointerEPKN5clang13CXXRecordDeclEPKNS1_9ValueDeclE'/>
<use f='llvm/clang/lib/AST/MicrosoftMangle.cpp' l='1503' u='c' c='_ZN12_GLOBAL__N_123MicrosoftCXXNameMangler17mangleTemplateArgEPKN5clang12TemplateDeclERKNS1_16TemplateArgumentEPKNS1_9NamedDeclE'/>
<use f='llvm/clang/lib/CodeGen/MicrosoftCXXABI.cpp' l='2649' u='c' c='_ZN12_GLOBAL__N_115MicrosoftCXXABI26GetNullMemberPointerFieldsEPKN5clang17MemberPointerTypeERN4llvm15SmallVectorImplIPNS5_8ConstantEEE'/>
<use f='llvm/clang/lib/CodeGen/MicrosoftCXXABI.cpp' l='3120' u='c' c='_ZN12_GLOBAL__N_115MicrosoftCXXABI27EmitMemberPointerConversionERN5clang7CodeGen15CodeGenFunctionEPKNS1_8CastExprEPN4llvm5ValueE'/>
<use f='llvm/clang/lib/CodeGen/MicrosoftCXXABI.cpp' l='3120' u='c' c='_ZN12_GLOBAL__N_115MicrosoftCXXABI27EmitMemberPointerConversionERN5clang7CodeGen15CodeGenFunctionEPKNS1_8CastExprEPN4llvm5ValueE'/>
