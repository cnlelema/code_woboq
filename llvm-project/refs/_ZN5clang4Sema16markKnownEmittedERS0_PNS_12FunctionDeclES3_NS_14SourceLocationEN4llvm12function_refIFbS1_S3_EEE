<dec f='llvm/clang/include/clang/Sema/Sema.h' l='10478' type='void clang::Sema::markKnownEmitted(clang::Sema &amp; S, clang::FunctionDecl * OrigCaller, clang::FunctionDecl * OrigCallee, clang::SourceLocation OrigLoc, const llvm::function_ref&lt;bool (Sema &amp;, FunctionDecl *)&gt; IsKnownEmitted)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='10475'>/// Indicate that this function (and thus everything it transtively calls)
  /// will be codegen&apos;ed, and emit any deferred diagnostics on this function and
  /// its (transitive) callees.</doc>
<def f='llvm/clang/lib/Sema/Sema.cpp' l='1579' ll='1639' type='void clang::Sema::markKnownEmitted(clang::Sema &amp; S, clang::FunctionDecl * OrigCaller, clang::FunctionDecl * OrigCallee, clang::SourceLocation OrigLoc, const llvm::function_ref&lt;bool (Sema &amp;, FunctionDecl *)&gt; IsKnownEmitted)'/>
<doc f='llvm/clang/lib/Sema/Sema.cpp' l='1576'>// Indicate that this function (and thus everything it transtively calls) will
// be codegen&apos;ed, and emit any deferred diagnostics on this function and its
// (transitive) callees.</doc>
<use f='llvm/clang/lib/Sema/SemaCUDA.cpp' l='696' u='c' c='_ZN5clang4Sema13CheckCUDACallENS_14SourceLocationEPNS_12FunctionDeclE'/>
<use f='llvm/clang/lib/Sema/SemaOpenMP.cpp' l='1569' u='c' c='_ZN5clang4Sema25checkOpenMPDeviceFunctionENS_14SourceLocationEPNS_12FunctionDeclE'/>
