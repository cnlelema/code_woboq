<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='381' type='llvm::Instruction * llvm::InstCombiner::visitInsertValueInst(llvm::InsertValueInst &amp; IV)'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp' l='618' ll='644' type='llvm::Instruction * llvm::InstCombiner::visitInsertValueInst(llvm::InsertValueInst &amp; I)'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp' l='611'>/// Try to find redundant insertvalue instructions, like the following ones:
///  %0 = insertvalue { i8, i32 } undef, i8 %x, 0
///  %1 = insertvalue { i8, i32 } %0,    i8 %y, 0
/// Here the second instruction inserts values at the same indices, as the
/// first one, making the first one redundant.
/// It should be transformed to:
///  %0 = insertvalue { i8, i32 } undef, i8 %y, 0</doc>
