<dec f='llvm/clang/lib/CodeGen/CGLoopInfo.h' l='142' type='llvm::MDNode * clang::CodeGen::LoopInfo::createPipeliningMetadata(const clang::CodeGen::LoopAttributes &amp; Attrs, llvm::ArrayRef&lt;llvm::Metadata *&gt; LoopProperties, bool &amp; HasUserTransforms)'/>
<doc f='llvm/clang/lib/CodeGen/CGLoopInfo.h' l='124'>/// Create a LoopID for transformations.
  ///
  /// The methods call each other in case multiple transformations are applied
  /// to a loop. The transformation first to be applied will use LoopID of the
  /// next transformation in its followup attribute.
  ///
  /// @param Attrs             The loop&apos;s transformations.
  /// @param LoopProperties    Non-transformation properties such as debug
  ///                          location, parallel accesses and disabled
  ///                          transformations. These are added to the returned
  ///                          LoopID.
  /// @param HasUserTransforms [out] Set to true if the returned MDNode encodes
  ///                          at least one transformation.
  ///
  /// @return A LoopID (metadata node) that can be used for the llvm.loop
  ///         annotation or followup-attribute.
  /// @{</doc>
<def f='llvm/clang/lib/CodeGen/CGLoopInfo.cpp' l='34' ll='77' type='llvm::MDNode * clang::CodeGen::LoopInfo::createPipeliningMetadata(const clang::CodeGen::LoopAttributes &amp; Attrs, ArrayRef&lt;llvm::Metadata *&gt; LoopProperties, bool &amp; HasUserTransforms)'/>
<use f='llvm/clang/lib/CodeGen/CGLoopInfo.cpp' l='97' u='c' c='_ZN5clang7CodeGen8LoopInfo27createPartialUnrollMetadataERKNS0_14LoopAttributesEN4llvm8ArrayRefIPNS5_8MetadataEEERb'/>
<use f='llvm/clang/lib/CodeGen/CGLoopInfo.cpp' l='110' u='c' c='_ZN5clang7CodeGen8LoopInfo27createPartialUnrollMetadataERKNS0_14LoopAttributesEN4llvm8ArrayRefIPNS5_8MetadataEEERb'/>
