<def f='llvm/llvm/include/llvm/ExecutionEngine/Orc/ObjectLinkingLayer.h' l='116' ll='120' type='llvm::orc::ObjectLinkingLayer &amp; llvm::orc::ObjectLinkingLayer::setAutoClaimResponsibilityForObjectSymbols(bool AutoClaimObjectSymbols)'/>
<doc f='llvm/llvm/include/llvm/ExecutionEngine/Orc/ObjectLinkingLayer.h' l='105'>/// If set, this ObjectLinkingLayer instance will claim responsibility
  /// for any symbols provided by a given object file that were not already in
  /// the MaterializationResponsibility instance. Setting this flag allows
  /// higher-level program representations (e.g. LLVM IR) to be added based on
  /// only a subset of the symbols they provide, without having to write
  /// intervening layers to scan and add the additional symbols. This trades
  /// diagnostic quality for convenience however: If all symbols are enumerated
  /// up-front then clashes can be detected and reported early (and usually
  /// deterministically). If this option is set, clashes for the additional
  /// symbols may not be detected until late, and detection may depend on
  /// the flow of control through JIT&apos;d code. Use with care.</doc>
