<dec f='llvm/llvm/lib/ExecutionEngine/MCJIT/MCJIT.h' l='273' type='void * llvm::MCJIT::getPointerToNamedFunction(llvm::StringRef Name, bool AbortOnFailure = true)'/>
<use f='llvm/llvm/lib/ExecutionEngine/MCJIT/MCJIT.cpp' l='416' u='c' c='_ZN4llvm5MCJIT20getPointerToFunctionEPNS_8FunctionE'/>
<inh f='llvm/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h' l='240' c='_ZN4llvm15ExecutionEngine25getPointerToNamedFunctionENS_9StringRefEb'/>
<def f='llvm/llvm/lib/ExecutionEngine/MCJIT/MCJIT.cpp' l='610' ll='630' type='void * llvm::MCJIT::getPointerToNamedFunction(llvm::StringRef Name, bool AbortOnFailure = true)'/>
<doc f='llvm/llvm/lib/ExecutionEngine/MCJIT/MCJIT.h' l='265'>/// getPointerToNamedFunction - This method returns the address of the
  /// specified function by using the dlsym function call.  As such it is only
  /// useful for resolving library symbols, not code generated symbols.
  ///
  /// If AbortOnFailure is false and no function with the given name is
  /// found, this function silently returns a null pointer. Otherwise,
  /// it prints a message to stderr and aborts.
  ///</doc>
