<def f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='601' type='unsigned int llvm::VPRecipeBase::getVPRecipeID() const'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='676' u='c' c='_ZN4llvm13VPInstruction7classofEPKNS_12VPRecipeBaseE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='721' u='c' c='_ZN4llvm13VPWidenRecipe7classofEPKNS_12VPRecipeBaseE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='753' u='c' c='_ZN4llvm29VPWidenIntOrFpInductionRecipe7classofEPKNS_12VPRecipeBaseE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='775' u='c' c='_ZN4llvm16VPWidenPHIRecipe7classofEPKNS_12VPRecipeBaseE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='806' u='c' c='_ZN4llvm13VPBlendRecipe7classofEPKNS_12VPRecipeBaseE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='833' u='c' c='_ZN4llvm18VPInterleaveRecipe7classofEPKNS_12VPRecipeBaseE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='879' u='c' c='_ZN4llvm17VPReplicateRecipe7classofEPKNS_12VPRecipeBaseE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='906' u='c' c='_ZN4llvm20VPBranchOnMaskRecipe7classofEPKNS_12VPRecipeBaseE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='942' u='c' c='_ZN4llvm19VPPredInstPHIRecipe7classofEPKNS_12VPRecipeBaseE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='969' u='c' c='_ZN4llvm30VPWidenMemoryInstructionRecipe7classofEPKNS_12VPRecipeBaseE'/>
<doc f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='598'>/// \return an ID for the concrete type of this object.
  /// This is used to implement the classof checks. This should not be used
  /// for any other purpose, as the values may change as LLVM evolves.</doc>
