<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='824' type='llvm::Instruction * llvm::InstCombiner::FoldPHIArgOpIntoPHI(llvm::PHINode &amp; PN)'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='822'>/// Try to rotate an operation below a PHI node, using PHI nodes for
  /// its operands.</doc>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='724' ll='829' type='llvm::Instruction * llvm::InstCombiner::FoldPHIArgOpIntoPHI(llvm::PHINode &amp; PN)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='1138' u='c' c='_ZN4llvm12InstCombiner12visitPHINodeERNS_7PHINodeE'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='721'>/// If all operands to a PHI node are the same &quot;unary&quot; operator and they all are
/// only used by the PHI, PHI together their inputs, and do the operation once,
/// to the result of the PHI.</doc>
