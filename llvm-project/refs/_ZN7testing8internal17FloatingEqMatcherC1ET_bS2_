<def f='llvm/llvm/utils/unittest/googlemock/include/gmock/gmock-matchers.h' l='1903' ll='1910' type='void testing::internal::FloatingEqMatcher::FloatingEqMatcher&lt;FloatType&gt;(FloatType expected, bool nan_eq_nan, FloatType max_abs_error)'/>
<use f='llvm/llvm/utils/unittest/googlemock/include/gmock/gmock-matchers.h' l='3846' u='c' c='_ZN7testing10DoubleNearEdd'/>
<use f='llvm/llvm/utils/unittest/googlemock/include/gmock/gmock-matchers.h' l='3854' u='c' c='_ZN7testing22NanSensitiveDoubleNearEdd'/>
<use f='llvm/llvm/utils/unittest/googlemock/include/gmock/gmock-matchers.h' l='3874' u='c' c='_ZN7testing9FloatNearEff'/>
<use f='llvm/llvm/utils/unittest/googlemock/include/gmock/gmock-matchers.h' l='3882' u='c' c='_ZN7testing21NanSensitiveFloatNearEff'/>
<doc f='llvm/llvm/utils/unittest/googlemock/include/gmock/gmock-matchers.h' l='1900'>// Constructor that supports a user-specified max_abs_error that will be used
  // for comparison instead of ULP-based approximation.  The max absolute
  // should be non-negative.</doc>
