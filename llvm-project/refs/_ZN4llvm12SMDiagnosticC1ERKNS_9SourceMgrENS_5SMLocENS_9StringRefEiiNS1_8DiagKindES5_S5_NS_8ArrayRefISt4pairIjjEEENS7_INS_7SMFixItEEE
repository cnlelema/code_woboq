<dec f='llvm/llvm/include/llvm/Support/SourceMgr.h' l='278' type='void llvm::SMDiagnostic::SMDiagnostic(const llvm::SourceMgr &amp; sm, llvm::SMLoc L, llvm::StringRef FN, int Line, int Col, SourceMgr::DiagKind Kind, llvm::StringRef Msg, llvm::StringRef LineStr, ArrayRef&lt;std::pair&lt;unsigned int, unsigned int&gt; &gt; Ranges, ArrayRef&lt;llvm::SMFixIt&gt; FixIts = None)'/>
<doc f='llvm/llvm/include/llvm/Support/SourceMgr.h' l='277'>// Diagnostic with a location.</doc>
<use f='llvm/llvm/lib/CodeGen/MIRParser/MIParser.cpp' l='546' u='c' c='_ZN12_GLOBAL__N_18MIParser5errorEPKcRKN4llvm5TwineE'/>
<use f='llvm/llvm/lib/CodeGen/MIRParser/MIRParser.cpp' l='854' u='c' c='_ZN4llvm13MIRParserImpl23diagFromBlockStringDiagERKNS_12SMDiagnosticENS_7SMRangeE'/>
<use f='llvm/llvm/lib/MC/MCParser/AsmParser.cpp' l='2375' u='c' c='_ZN12_GLOBAL__N_19AsmParser11DiagHandlerERKN4llvm12SMDiagnosticEPv'/>
<use f='llvm/llvm/lib/Support/SourceMgr.cpp' l='225' u='c' c='_ZNK4llvm9SourceMgr10GetMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEE'/>
<def f='llvm/llvm/lib/Support/SourceMgr.cpp' l='264' ll='273' type='void llvm::SMDiagnostic::SMDiagnostic(const llvm::SourceMgr &amp; sm, llvm::SMLoc L, llvm::StringRef FN, int Line, int Col, SourceMgr::DiagKind Kind, llvm::StringRef Msg, llvm::StringRef LineStr, ArrayRef&lt;std::pair&lt;unsigned int, unsigned int&gt; &gt; Ranges, ArrayRef&lt;llvm::SMFixIt&gt; Hints = None)'/>
<doc f='llvm/llvm/lib/Support/SourceMgr.cpp' l='260'>//===----------------------------------------------------------------------===//
// SMDiagnostic Implementation
//===----------------------------------------------------------------------===//</doc>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp' l='1018' u='c' c='_ZNK4llvm16GCNTargetMachine24parseMachineFunctionInfoERKNS_4yaml19MachineFunctionInfoERNS_25PerFunctionMIParsingStateERNS_12SMDiagnosticERNS_7SMRangeE'/>
<use f='llvm/llvm/lib/TextAPI/MachO/TextStub.cpp' l='616' u='c' c='_ZN4llvm5MachOL11DiagHandlerERKNS_12SMDiagnosticEPv'/>
