<dec f='llvm/clang/lib/CodeGen/CodeGenModule.h' l='1406' type='void clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition(const clang::VarDecl * D, bool IsTentative = false)'/>
<use f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='2862' u='c' c='_ZN5clang7CodeGen13CodeGenModule20EmitGlobalDefinitionENS_10GlobalDeclEPN4llvm11GlobalValueE'/>
<use f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='3517' u='c' c='_ZN5clang7CodeGen13CodeGenModule21GetOrCreateLLVMGlobalEN4llvm9StringRefEPNS2_11PointerTypeEPKNS_7VarDeclENS0_15ForDefinition_tE'/>
<use f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='3720' u='c' c='_ZN5clang7CodeGen13CodeGenModule23EmitTentativeDefinitionEPKNS_7VarDeclE'/>
<def f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='3878' ll='4127' type='void clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition(const clang::VarDecl * D, bool IsTentative = false)'/>
<doc f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='3877'>/// Pass IsTentative as true if you want to create a tentative definition.</doc>
