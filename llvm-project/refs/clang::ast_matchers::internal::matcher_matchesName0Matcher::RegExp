<use f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='2568' u='w' c='_ZN5clang12ast_matchers8internal27matcher_matchesName0MatcherC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<dec f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='2568' type='const std::string'/>
<use f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='2569' u='m' c='_ZNK5clang12ast_matchers8internal27matcher_matchesName0Matcher7matchesERKNS_9NamedDeclEPNS1_14ASTMatchFinderEPNS1_21BoundNodesTreeBuilderE'/>
<use f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='2571' u='r' c='_ZNK5clang12ast_matchers8internal27matcher_matchesName0Matcher7matchesERKNS_9NamedDeclEPNS1_14ASTMatchFinderEPNS1_21BoundNodesTreeBuilderE'/>
<offset>128</offset>
<doc f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='2552'>/// Matches NamedDecl nodes whose fully qualified names contain
/// a substring matched by the given RegExp.
///
/// Supports specifying enclosing namespaces or classes by
/// prefixing the name with &apos;&lt;enclosing&gt;::&apos;.  Does not match typedefs
/// of an underlying type with the given name.
///
/// Example matches X (regexp == &quot;::X&quot;)
/// \code
///   class X;
/// \endcode
///
/// Example matches X (regexp is one of &quot;::X&quot;, &quot;^foo::.*X&quot;, among others)
/// \code
///   namespace foo { namespace bar { class X; } }
/// \endcode</doc>
