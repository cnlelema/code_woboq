<dec f='llvm/llvm/lib/IR/AsmWriter.cpp' l='803' type='void llvm::SlotTracker::processModule()'/>
<use f='llvm/llvm/lib/IR/AsmWriter.cpp' l='910' u='c' c='_ZN4llvm11SlotTracker18initializeIfNeededEv'/>
<def f='llvm/llvm/lib/IR/AsmWriter.cpp' l='927' ll='972' type='void llvm::SlotTracker::processModule()'/>
<doc f='llvm/llvm/lib/IR/AsmWriter.cpp' l='801'>/// Add all of the module level global variables (and their initializers)
  /// and function declarations, but not the contents of those functions.</doc>
<doc f='llvm/llvm/lib/IR/AsmWriter.cpp' l='925'>// Iterate through all the global variables, functions, and global
// variable initializers and create slots for them.</doc>
