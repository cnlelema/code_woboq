<dec f='llvm/clang/include/clang/Sema/Sema.h' l='1954' type='clang::Sema::NameClassification clang::Sema::ClassifyName(clang::Scope * S, clang::CXXScopeSpec &amp; SS, clang::IdentifierInfo *&amp; Name, clang::SourceLocation NameLoc, const clang::Token &amp; NextToken, bool IsAddressOfOperand, clang::CorrectionCandidateCallback * CCC = nullptr)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='1930'>/// Perform name lookup on the given name, classifying it based on
  /// the results of name lookup and the following token.
  ///
  /// This routine is used by the parser to resolve identifiers and help direct
  /// parsing. When the identifier cannot be found, this routine will attempt
  /// to correct the typo and classify based on the resulting name.
  ///
  /// \param S The scope in which we&apos;re performing name lookup.
  ///
  /// \param SS The nested-name-specifier that precedes the name.
  ///
  /// \param Name The identifier. If typo correction finds an alternative name,
  /// this pointer parameter will be updated accordingly.
  ///
  /// \param NameLoc The location of the identifier.
  ///
  /// \param NextToken The token following the identifier. Used to help
  /// disambiguate the name.
  ///
  /// \param IsAddressOfOperand True if this name is the operand of a unary
  ///        address of (&apos;&amp;&apos;) expression, assuming it is classified as an
  ///        expression.
  ///
  /// \param CCC The correction callback, if typo correction is desired.</doc>
<use f='llvm/clang/lib/Parse/ParseDecl.cpp' l='2902' u='c' c='_ZN5clang6Parser37DiagnoseMissingSemiAfterTagDefinitionERNS_8DeclSpecENS_15AccessSpecifierENS0_15DeclSpecContextEPNS0_18LateParsedAttrListE'/>
<use f='llvm/clang/lib/Parse/Parser.cpp' l='1608' u='c' c='_ZN5clang6Parser15TryAnnotateNameEbPNS_27CorrectionCandidateCallbackE'/>
<use f='llvm/clang/lib/Parse/Parser.cpp' l='1621' u='c' c='_ZN5clang6Parser15TryAnnotateNameEbPNS_27CorrectionCandidateCallbackE'/>
<def f='llvm/clang/lib/Sema/SemaDecl.cpp' l='848' ll='1176' type='Sema::NameClassification clang::Sema::ClassifyName(clang::Scope * S, clang::CXXScopeSpec &amp; SS, clang::IdentifierInfo *&amp; Name, clang::SourceLocation NameLoc, const clang::Token &amp; NextToken, bool IsAddressOfOperand, clang::CorrectionCandidateCallback * CCC = nullptr)'/>
