<dec f='llvm/clang/include/clang/Lex/HeaderSearch.h' l='623' type='clang::Module * clang::HeaderSearch::loadFrameworkModule(llvm::StringRef Name, const clang::DirectoryEntry * Dir, bool IsSystem)'/>
<doc f='llvm/clang/include/clang/Lex/HeaderSearch.h' l='612'>/// Retrieve a module with the given name, which may be part of the
  /// given framework.
  ///
  /// \param Name The name of the module to retrieve.
  ///
  /// \param Dir The framework directory (e.g., ModuleName.framework).
  ///
  /// \param IsSystem Whether the framework directory is part of the system
  /// frameworks.
  ///
  /// \returns The module, if found; otherwise, null.</doc>
<use f='llvm/clang/lib/Lex/HeaderSearch.cpp' l='237' u='c' c='_ZN5clang12HeaderSearch12lookupModuleEN4llvm9StringRefES2_b'/>
<use f='llvm/clang/lib/Lex/HeaderSearch.cpp' l='1399' u='c' c='_ZN5clang12HeaderSearch34findUsableModuleForFrameworkHeaderEPKNS_9FileEntryEN4llvm9StringRefEPNS_6ModuleEPNS_9ModuleMap11KnownHeaderEb'/>
<def f='llvm/clang/lib/Lex/HeaderSearch.cpp' l='1515' ll='1538' type='clang::Module * clang::HeaderSearch::loadFrameworkModule(llvm::StringRef Name, const clang::DirectoryEntry * Dir, bool IsSystem)'/>
<use f='llvm/clang/lib/Lex/HeaderSearch.cpp' l='1598' u='c' c='_ZN5clang12HeaderSearch17collectAllModulesERN4llvm15SmallVectorImplIPNS_6ModuleEEE'/>
