<def f='llvm/llvm/include/llvm/CodeGen/MachineLoopInfo.h' l='166' ll='168' type='void llvm::MachineLoopInfo::removeBlock(llvm::MachineBasicBlock * BB)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineLoopInfo.h' l='163'>/// This method completely removes BB from all data structures, including all
  /// of the Loop objects it is nested in and our mapping from
  /// MachineBasicBlocks to loops.</doc>
<use f='llvm/llvm/lib/CodeGen/BranchFolding.cpp' l='168' u='c' c='_ZN4llvm12BranchFolder15RemoveDeadBlockEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/EarlyIfConversion.cpp' l='669' u='c' c='_ZN12_GLOBAL__N_116EarlyIfConverter11updateLoopsEN4llvm8ArrayRefIPNS1_17MachineBasicBlockEEE'/>
<use f='llvm/llvm/lib/CodeGen/MachineBlockPlacement.cpp' l='2755' u='c' c='_ZN12_GLOBAL__N_121MachineBlockPlacement23maybeTailDuplicateBlockEPN4llvm17MachineBasicBlockES3_RNS_10BlockChainEPNS1_14SmallSetVectorIPKS2_Lj16EEERNS352128'/>
<use f='llvm/llvm/lib/CodeGen/UnreachableBlockElim.cpp' l='125' u='c' c='_ZN12_GLOBAL__N_127UnreachableMachineBlockElim20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ConditionalCompares.cpp' l='842' u='c' c='_ZN12_GLOBAL__N_126AArch64ConditionalCompares11updateLoopsEN4llvm8ArrayRefIPNS1_17MachineBasicBlockEEE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDILCFGStructurizer.cpp' l='1074' u='c' c='_ZN12_GLOBAL__N_121AMDGPUCFGStructurizer9mergeLoopEPN4llvm11MachineLoopE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDILCFGStructurizer.cpp' l='1373' u='c' c='_ZN12_GLOBAL__N_121AMDGPUCFGStructurizer16mergeSerialBlockEPN4llvm17MachineBasicBlockES3_'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDILCFGStructurizer.cpp' l='1412' u='c' c='_ZN12_GLOBAL__N_121AMDGPUCFGStructurizer20mergeIfthenelseBlockEPN4llvm12MachineInstrEPNS1_17MachineBasicBlockES5_S5_S5_'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDILCFGStructurizer.cpp' l='1423' u='c' c='_ZN12_GLOBAL__N_121AMDGPUCFGStructurizer20mergeIfthenelseBlockEPN4llvm12MachineInstrEPNS1_17MachineBasicBlockES5_S5_S5_'/>
