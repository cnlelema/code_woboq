<dec f='llvm/llvm/include/llvm/ADT/APFloat.h' l='308' type='unsigned int llvm::detail::IEEEFloat::convertToHexString(char * dst, unsigned int hexDigits, bool upperCase, llvm::APFloatBase::roundingMode ) const'/>
<use f='llvm/llvm/include/llvm/ADT/APFloat.h' l='1139' u='c' c='_ZNK4llvm7APFloat18convertToHexStringEPcjbNS_11APFloatBase12roundingModeE'/>
<doc f='llvm/llvm/include/llvm/ADT/APFloat.h' l='305'>/// Write out a hexadecimal representation of the floating point value to DST,
  /// which must be of sufficient size, in the C99 form [-]0xh.hhhhp[+-]d.
  /// Return the number of characters written, excluding the terminating NUL.</doc>
<def f='llvm/llvm/lib/Support/APFloat.cpp' l='2626' ll='2667' type='unsigned int llvm::detail::IEEEFloat::convertToHexString(char * dst, unsigned int hexDigits, bool upperCase, llvm::APFloatBase::roundingMode rounding_mode) const'/>
<doc f='llvm/llvm/lib/Support/APFloat.cpp' l='2602'>/* Write out a hexadecimal representation of the floating point value
   to DST, which must be of sufficient size, in the C99 form
   [-]0xh.hhhhp[+-]d.  Return the number of characters written,
   excluding the terminating NUL.

   If UPPERCASE, the output is in upper case, otherwise in lower case.

   HEXDIGITS digits appear altogether, rounding the value if
   necessary.  If HEXDIGITS is 0, the minimal precision to display the
   number precisely is used instead.  If nothing would appear after
   the decimal point it is suppressed.

   The decimal exponent is always printed and has at least one digit.
   Zero values display an exponent of zero.  Infinities and NaNs
   appear as &quot;infinity&quot; or &quot;nan&quot; respectively.

   The above rules are as specified by C99.  There is ambiguity about
   what the leading hexadecimal digit should be.  This implementation
   uses whatever is necessary so that the exponent is displayed as
   stored.  This implies the exponent will fall within the IEEE format
   range, and the leading hexadecimal digit will be 0 (for denormals),
   1 (normal numbers) or 2 (normal numbers rounded-away-from-zero with
   any other digits zero).
*/</doc>
