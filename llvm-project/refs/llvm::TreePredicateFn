<def f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='493' ll='609'/>
<size>8</size>
<doc f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='490'>/// TreePredicateFn - This is an abstraction that represents the predicates on
/// a PatFrag node.  This is a simple one-word wrapper around a pointer to
/// provide nice accessors.</doc>
<mbr r='llvm::TreePredicateFn::PatFragRec' o='0' t='llvm::TreePattern *'/>
<fun r='_ZN4llvm15TreePredicateFnC1EPNS_11TreePatternE'/>
<fun r='_ZNK4llvm15TreePredicateFn20getOrigPatFragRecordEv'/>
<fun r='_ZNK4llvm15TreePredicateFn12isAlwaysTrueEv'/>
<fun r='_ZNK4llvm15TreePredicateFn18isImmediatePatternEv'/>
<fun r='_ZNK4llvm15TreePredicateFn25getImmediatePredicateCodeEv'/>
<fun r='_ZNK4llvm15TreePredicateFneqERKS0_'/>
<fun r='_ZNK4llvm15TreePredicateFnneERKS0_'/>
<fun r='_ZNK4llvm15TreePredicateFn9getFnNameEv'/>
<fun r='_ZNK4llvm15TreePredicateFn20getCodeToRunOnSDNodeEv'/>
<fun r='_ZNK4llvm15TreePredicateFn10getImmTypeEv'/>
<fun r='_ZNK4llvm15TreePredicateFn20getImmTypeIdentifierEv'/>
<fun r='_ZNK4llvm15TreePredicateFn12usesOperandsEv'/>
<fun r='_ZNK4llvm15TreePredicateFn6isLoadEv'/>
<fun r='_ZNK4llvm15TreePredicateFn7isStoreEv'/>
<fun r='_ZNK4llvm15TreePredicateFn8isAtomicEv'/>
<fun r='_ZNK4llvm15TreePredicateFn11isUnindexedEv'/>
<fun r='_ZNK4llvm15TreePredicateFn12isNonExtLoadEv'/>
<fun r='_ZNK4llvm15TreePredicateFn12isAnyExtLoadEv'/>
<fun r='_ZNK4llvm15TreePredicateFn13isSignExtLoadEv'/>
<fun r='_ZNK4llvm15TreePredicateFn13isZeroExtLoadEv'/>
<fun r='_ZNK4llvm15TreePredicateFn15isNonTruncStoreEv'/>
<fun r='_ZNK4llvm15TreePredicateFn12isTruncStoreEv'/>
<fun r='_ZNK4llvm15TreePredicateFn25isAtomicOrderingMonotonicEv'/>
<fun r='_ZNK4llvm15TreePredicateFn23isAtomicOrderingAcquireEv'/>
<fun r='_ZNK4llvm15TreePredicateFn23isAtomicOrderingReleaseEv'/>
<fun r='_ZNK4llvm15TreePredicateFn30isAtomicOrderingAcquireReleaseEv'/>
<fun r='_ZNK4llvm15TreePredicateFn38isAtomicOrderingSequentiallyConsistentEv'/>
<fun r='_ZNK4llvm15TreePredicateFn33isAtomicOrderingAcquireOrStrongerEv'/>
<fun r='_ZNK4llvm15TreePredicateFn33isAtomicOrderingWeakerThanAcquireEv'/>
<fun r='_ZNK4llvm15TreePredicateFn33isAtomicOrderingReleaseOrStrongerEv'/>
<fun r='_ZNK4llvm15TreePredicateFn33isAtomicOrderingWeakerThanReleaseEv'/>
<fun r='_ZNK4llvm15TreePredicateFn11getMemoryVTEv'/>
<fun r='_ZNK4llvm15TreePredicateFn17getScalarMemoryVTEv'/>
<fun r='_ZNK4llvm15TreePredicateFn21hasGISelPredicateCodeEv'/>
<fun r='_ZNK4llvm15TreePredicateFn21getGISelPredicateCodeEv'/>
<fun r='_ZNK4llvm15TreePredicateFn11hasPredCodeEv'/>
<fun r='_ZNK4llvm15TreePredicateFn10hasImmCodeEv'/>
<fun r='_ZNK4llvm15TreePredicateFn11getPredCodeEv'/>
<fun r='_ZNK4llvm15TreePredicateFn10getImmCodeEv'/>
<fun r='_ZNK4llvm15TreePredicateFn16immCodeUsesAPIntEv'/>
<fun r='_ZNK4llvm15TreePredicateFn18immCodeUsesAPFloatEv'/>
<fun r='_ZNK4llvm15TreePredicateFn28isPredefinedPredicateEqualToENS_9StringRefEb'/>
<fun r='_ZN4llvm15TreePredicateFnC1EPNS_11TreePatternE'/>
<fun r='_ZNK4llvm15TreePredicateFn11hasPredCodeEv'/>
<fun r='_ZNK4llvm15TreePredicateFn11getPredCodeEv'/>
<fun r='_ZNK4llvm15TreePredicateFn10hasImmCodeEv'/>
<fun r='_ZNK4llvm15TreePredicateFn10getImmCodeEv'/>
<fun r='_ZNK4llvm15TreePredicateFn16immCodeUsesAPIntEv'/>
<fun r='_ZNK4llvm15TreePredicateFn18immCodeUsesAPFloatEv'/>
<fun r='_ZNK4llvm15TreePredicateFn28isPredefinedPredicateEqualToENS_9StringRefEb'/>
<fun r='_ZNK4llvm15TreePredicateFn12usesOperandsEv'/>
<fun r='_ZNK4llvm15TreePredicateFn6isLoadEv'/>
<fun r='_ZNK4llvm15TreePredicateFn7isStoreEv'/>
<fun r='_ZNK4llvm15TreePredicateFn8isAtomicEv'/>
<fun r='_ZNK4llvm15TreePredicateFn11isUnindexedEv'/>
<fun r='_ZNK4llvm15TreePredicateFn12isNonExtLoadEv'/>
<fun r='_ZNK4llvm15TreePredicateFn12isAnyExtLoadEv'/>
<fun r='_ZNK4llvm15TreePredicateFn13isSignExtLoadEv'/>
<fun r='_ZNK4llvm15TreePredicateFn13isZeroExtLoadEv'/>
<fun r='_ZNK4llvm15TreePredicateFn15isNonTruncStoreEv'/>
<fun r='_ZNK4llvm15TreePredicateFn12isTruncStoreEv'/>
<fun r='_ZNK4llvm15TreePredicateFn25isAtomicOrderingMonotonicEv'/>
<fun r='_ZNK4llvm15TreePredicateFn23isAtomicOrderingAcquireEv'/>
<fun r='_ZNK4llvm15TreePredicateFn23isAtomicOrderingReleaseEv'/>
<fun r='_ZNK4llvm15TreePredicateFn30isAtomicOrderingAcquireReleaseEv'/>
<fun r='_ZNK4llvm15TreePredicateFn38isAtomicOrderingSequentiallyConsistentEv'/>
<fun r='_ZNK4llvm15TreePredicateFn33isAtomicOrderingAcquireOrStrongerEv'/>
<fun r='_ZNK4llvm15TreePredicateFn33isAtomicOrderingWeakerThanAcquireEv'/>
<fun r='_ZNK4llvm15TreePredicateFn33isAtomicOrderingReleaseOrStrongerEv'/>
<fun r='_ZNK4llvm15TreePredicateFn33isAtomicOrderingWeakerThanReleaseEv'/>
<fun r='_ZNK4llvm15TreePredicateFn11getMemoryVTEv'/>
<fun r='_ZNK4llvm15TreePredicateFn17getScalarMemoryVTEv'/>
<fun r='_ZNK4llvm15TreePredicateFn21hasGISelPredicateCodeEv'/>
<fun r='_ZNK4llvm15TreePredicateFn21getGISelPredicateCodeEv'/>
<fun r='_ZNK4llvm15TreePredicateFn10getImmTypeEv'/>
<fun r='_ZNK4llvm15TreePredicateFn20getImmTypeIdentifierEv'/>
<fun r='_ZNK4llvm15TreePredicateFn12isAlwaysTrueEv'/>
<fun r='_ZNK4llvm15TreePredicateFn9getFnNameEv'/>
<fun r='_ZNK4llvm15TreePredicateFn20getCodeToRunOnSDNodeEv'/>
