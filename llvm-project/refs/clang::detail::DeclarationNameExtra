<def f='llvm/clang/include/clang/Basic/IdentifierTable.h' l='866' ll='914'/>
<ovr f='llvm/clang/include/clang/AST/DeclarationName.h' l='75' c='clang::detail::CXXDeductionGuideNameExtra'/>
<ovr f='llvm/clang/include/clang/AST/DeclarationName.h' l='116' c='clang::detail::CXXLiteralOperatorIdName'/>
<size>8</size>
<doc f='llvm/clang/include/clang/Basic/IdentifierTable.h' l='858'>/// DeclarationNameExtra is used as a base of various uncommon special names.
/// This class is needed since DeclarationName has not enough space to store
/// the kind of every possible names. Therefore the kind of common names is
/// stored directly in DeclarationName, and the kind of uncommon names is
/// stored in DeclarationNameExtra. It is aligned to 8 bytes because
/// DeclarationName needs the lower 3 bits to store the kind of common names.
/// DeclarationNameExtra is tightly coupled to DeclarationName and any change
/// here is very likely to require changes in DeclarationName(Table).</doc>
<mbr r='clang::detail::DeclarationNameExtra::ExtraKindOrNumArgs' o='0' t='unsigned int'/>
<fun r='_ZN5clang6detail20DeclarationNameExtraC1ENS1_9ExtraKindE'/>
<fun r='_ZN5clang6detail20DeclarationNameExtraC1Ej'/>
<fun r='_ZNK5clang6detail20DeclarationNameExtra7getKindEv'/>
<fun r='_ZNK5clang6detail20DeclarationNameExtra10getNumArgsEv'/>
<ovr f='llvm/clang/lib/Basic/IdentifierTable.cpp' l='364' c='clang::MultiKeywordSelector'/>
