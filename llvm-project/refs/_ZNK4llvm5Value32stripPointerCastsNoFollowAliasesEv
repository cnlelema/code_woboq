<dec f='llvm/llvm/include/llvm/IR/Value.h' l='533' type='const llvm::Value * llvm::Value::stripPointerCastsNoFollowAliases() const'/>
<use f='llvm/llvm/include/llvm/IR/Value.h' l='536' u='c' c='_ZN4llvm5Value32stripPointerCastsNoFollowAliasesEv'/>
<doc f='llvm/llvm/include/llvm/IR/Value.h' l='529'>/// Strip off pointer casts and all-zero GEPs.
  ///
  /// Returns the original uncasted value.  If this is called on a non-pointer
  /// value, it returns &apos;this&apos;.</doc>
<use f='llvm/llvm/lib/Analysis/ModuleSummaryAnalysis.cpp' l='292' u='c' c='_ZL22computeFunctionSummaryRN4llvm18ModuleSummaryIndexERKNS_6ModuleERKNS_8FunctionEPNS_18BlockFrequencyInfoEPNS_18ProfileSummaryInfoERNS_13DominatorTr12499115'/>
<use f='llvm/llvm/lib/Analysis/StackSafetyAnalysis.cpp' l='337' u='c' c='_ZN12_GLOBAL__N_124StackSafetyLocalAnalysis14analyzeAllUsesEPKN4llvm5ValueERNS_7UseInfoE'/>
<use f='llvm/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp' l='1636' u='c' c='_ZN4llvm10AsmPrinter14doFinalizationERNS_6ModuleE'/>
<def f='llvm/llvm/lib/IR/Value.cpp' l='544' ll='546' type='const llvm::Value * llvm::Value::stripPointerCastsNoFollowAliases() const'/>
