<def f='llvm/llvm/utils/unittest/googletest/src/gtest-death-test.cc' l='1020' ll='1112' type='pid_t testing::internal::ExecDeathTestSpawnChild(char *const * argv, int close_fd)'/>
<use f='llvm/llvm/utils/unittest/googletest/src/gtest-death-test.cc' l='1156' u='c' c='_ZN7testing8internal13ExecDeathTest10AssumeRoleEv'/>
<doc f='llvm/llvm/utils/unittest/googletest/src/gtest-death-test.cc' l='1013'>// Spawns a child process with the same executable as the current process in
// a thread-safe manner and instructs it to run the death test.  The
// implementation uses fork(2) + exec.  On systems where clone(2) is
// available, it is used instead, being slightly more thread-safe.  On QNX,
// fork supports only single-threaded environments, so this function uses
// spawn(2) there instead.  The function dies with an error message if
// anything goes wrong.</doc>
