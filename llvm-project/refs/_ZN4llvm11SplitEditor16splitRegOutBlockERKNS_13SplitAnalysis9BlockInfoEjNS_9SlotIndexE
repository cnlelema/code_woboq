<dec f='llvm/llvm/lib/CodeGen/SplitKit.h' l='558' type='void llvm::SplitEditor::splitRegOutBlock(const SplitAnalysis::BlockInfo &amp; BI, unsigned int IntvOut, llvm::SlotIndex EnterAfter)'/>
<doc f='llvm/llvm/lib/CodeGen/SplitKit.h' l='549'>/// splitRegOutBlock - Split CurLI in the given block such that it enters the
  /// block on the stack (or isn&apos;t live-in at all) and leaves it in IntvOut.
  /// Split points are placed to avoid interference and such that the uses are
  /// not in the stack interval. This may require creating a local interval
  /// when there is interference.
  ///
  /// @param BI          Block descriptor.
  /// @param IntvOut     Interval index leaving the block.
  /// @param EnterAfter  When set, enter IntvOut after this point.</doc>
<use f='llvm/llvm/lib/CodeGen/RegAllocGreedy.cpp' l='1731' u='c' c='_ZN12_GLOBAL__N_18RAGreedy17splitAroundRegionERN4llvm13LiveRangeEditENS1_8ArrayRefIjEE'/>
<def f='llvm/llvm/lib/CodeGen/SplitKit.cpp' l='1796' ll='1856' type='void llvm::SplitEditor::splitRegOutBlock(const SplitAnalysis::BlockInfo &amp; BI, unsigned int IntvOut, llvm::SlotIndex EnterAfter)'/>
