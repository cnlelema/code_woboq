<dec f='llvm/clang/include/clang/AST/Redeclarable.h' l='185' type='clang::Redeclarable::DeclLink'/>
<use f='llvm/clang/include/clang/AST/Redeclarable.h' l='190' u='c' c='_ZNK5clang12Redeclarable20getNextRedeclarationEv'/>
<use f='llvm/clang/include/clang/AST/Redeclarable.h' l='198' u='w' c='_ZN5clang12RedeclarableC1ERKNS_10ASTContextE'/>
<use f='llvm/clang/include/clang/AST/Redeclarable.h' l='204' u='c' c='_ZN5clang12Redeclarable15getPreviousDeclEv'/>
<use f='llvm/clang/include/clang/AST/Redeclarable.h' l='222' u='c' c='_ZNK5clang12Redeclarable11isFirstDeclEv'/>
<use f='llvm/clang/include/clang/AST/Decl.h' l='4331' u='c' c='_ZN5clang12Redeclarable15setPreviousDeclEPT_'/>
<use f='llvm/clang/include/clang/AST/Decl.h' l='4341' u='w' c='_ZN5clang12Redeclarable15setPreviousDeclEPT_'/>
<doc f='llvm/clang/include/clang/AST/Redeclarable.h' l='174'>/// Points to the next redeclaration in the chain.
  ///
  /// If isFirst() is false, this is a link to the previous declaration
  /// of this same Decl. If isFirst() is true, this is the first
  /// declaration and Link points to the latest declaration. For example:
  ///
  ///  #1 int f(int x, int y = 1); // &lt;pointer to #3, true&gt;
  ///  #2 int f(int x = 0, int y); // &lt;pointer to #1, false&gt;
  ///  #3 int f(int x, int y) { return x + y; } // &lt;pointer to #2, false&gt;
  ///
  /// If there is only one declaration, it is &lt;pointer to self, true&gt;</doc>
<use f='llvm/clang/lib/Serialization/ASTReaderDecl.cpp' l='3481' u='m' c='_ZN5clang13ASTDeclReader22attachPreviousDeclImplERNS_9ASTReaderEPNS_12RedeclarableIT_EEPNS_4DeclES8_'/>
<use f='llvm/clang/lib/Serialization/ASTReaderDecl.cpp' l='3510' u='m' c='_ZN5clang13ASTDeclReader22attachPreviousDeclImplERNS_9ASTReaderEPNS_12RedeclarableIT_EEPNS_4DeclES8_'/>
