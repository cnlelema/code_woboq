<dec f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.h' l='1790' type='void clang::CodeGen::CGOpenMPSIMDRuntime::emitForStaticInit(clang::CodeGen::CodeGenFunction &amp; CGF, clang::SourceLocation Loc, clang::OpenMPDirectiveKind DKind, const clang::OpenMPScheduleTy &amp; ScheduleKind, const clang::CodeGen::CGOpenMPRuntime::StaticRTInput &amp; Values)'/>
<doc f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.h' l='1775'>/// Call the appropriate runtime routine to initialize it before start
  /// of loop.
  ///
  /// This is used only in case of static schedule, when the user did not
  /// specify a ordered clause on the loop construct.
  /// Depending on the loop schedule, it is necessary to call some runtime
  /// routine before start of the OpenMP loop to get the loop upper / lower
  /// bounds LB and UB and stride ST.
  ///
  /// \param CGF Reference to current CodeGenFunction.
  /// \param Loc Clang source location.
  /// \param DKind Kind of the directive.
  /// \param ScheduleKind Schedule kind, specified by the &apos;schedule&apos; clause.
  /// \param Values Input arguments for the construct.
  ///</doc>
<inh f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='3568' c='_ZN5clang7CodeGen15CGOpenMPRuntime17emitForStaticInitERNS0_15CodeGenFunctionENS_14SourceLocationENS_19OpenMPDirectiveKindERKNS_16OpenMPScheduleTyERKNS1_13StaticRTInputE'/>
<def f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='10552' ll='10556' type='void clang::CodeGen::CGOpenMPSIMDRuntime::emitForStaticInit(clang::CodeGen::CodeGenFunction &amp; CGF, clang::SourceLocation Loc, clang::OpenMPDirectiveKind DKind, const clang::OpenMPScheduleTy &amp; ScheduleKind, const clang::CodeGen::CGOpenMPRuntime::StaticRTInput &amp; Values)'/>
