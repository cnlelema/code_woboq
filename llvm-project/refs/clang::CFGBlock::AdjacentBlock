<def f='llvm/clang/include/clang/Analysis/CFG.h' l='639' ll='685'/>
<size>16</size>
<doc f='llvm/clang/include/clang/Analysis/CFG.h' l='634'>/// This class represents a potential adjacent block in the CFG.  It encodes
  /// whether or not the block is actually reachable, or can be proved to be
  /// trivially unreachable.  For some cases it allows one to encode scenarios
  /// where a block was substituted because the original (now alternate) block
  /// is unreachable.</doc>
<mbr r='clang::CFGBlock::AdjacentBlock::ReachableBlock' o='0' t='clang::CFGBlock *'/>
<mbr r='clang::CFGBlock::AdjacentBlock::UnreachableBlock' o='64' t='llvm::PointerIntPair&lt;CFGBlock *, 2&gt;'/>
<fun r='_ZN5clang8CFGBlock13AdjacentBlockC1EPS0_b'/>
<fun r='_ZN5clang8CFGBlock13AdjacentBlockC1EPS0_S2_'/>
<fun r='_ZNK5clang8CFGBlock13AdjacentBlock17getReachableBlockEv'/>
<fun r='_ZNK5clang8CFGBlock13AdjacentBlock27getPossiblyUnreachableBlockEv'/>
<fun r='_ZNK5clang8CFGBlock13AdjacentBlockcvPS0_Ev'/>
<fun r='_ZNK5clang8CFGBlock13AdjacentBlockdeEv'/>
<fun r='_ZNK5clang8CFGBlock13AdjacentBlockptEv'/>
<fun r='_ZNK5clang8CFGBlock13AdjacentBlock11isReachableEv'/>
