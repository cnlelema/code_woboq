<def f='llvm/clang/include/clang/AST/Redeclarable.h' l='347' ll='375'/>
<doc f='llvm/clang/include/clang/AST/Redeclarable.h' l='338'>/// A wrapper class around a pointer that always points to its canonical
/// declaration.
///
/// CanonicalDeclPtr&lt;decl_type&gt; behaves just like decl_type*, except we call
/// decl_type::getCanonicalDecl() on construction.
///
/// This is useful for hashtables that you want to be keyed on a declaration&apos;s
/// canonical decl -- if you use CanonicalDeclPtr as the key, you don&apos;t need to
/// remember to call getCanonicalDecl() everywhere.</doc>
<fun r='_ZN5clang16CanonicalDeclPtrC1Ev'/>
<fun r='_ZN5clang16CanonicalDeclPtrC1EPT_'/>
<fun r='_ZN5clang16CanonicalDeclPtrC1ERKNS_16CanonicalDeclPtrIT_EE'/>
<fun r='_ZN5clang16CanonicalDeclPtraSERKNS_16CanonicalDeclPtrIT_EE'/>
<fun r='_ZN5clang16CanonicalDeclPtrcvPT_Ev'/>
<fun r='_ZNK5clang16CanonicalDeclPtrcvPKT_Ev'/>
<fun r='_ZN5clang16CanonicalDeclPtrptEv'/>
<fun r='_ZNK5clang16CanonicalDeclPtrptEv'/>
<fun r='_ZN5clang16CanonicalDeclPtrdeEv'/>
<fun r='_ZNK5clang16CanonicalDeclPtrdeEv'/>
<mbr r='clang::CanonicalDeclPtr::Ptr' t='decl_type *'/>
