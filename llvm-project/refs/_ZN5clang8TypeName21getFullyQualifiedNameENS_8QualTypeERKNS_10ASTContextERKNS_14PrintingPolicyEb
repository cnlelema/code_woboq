<dec f='llvm/clang/include/clang/AST/QualTypeNames.h' l='75' type='std::string clang::TypeName::getFullyQualifiedName(clang::QualType QT, const clang::ASTContext &amp; Ctx, const clang::PrintingPolicy &amp; Policy, bool WithGlobalNsPrefix = false)'/>
<def f='llvm/clang/lib/AST/QualTypeNames.cpp' l='465' ll='471' type='std::string clang::TypeName::getFullyQualifiedName(clang::QualType QT, const clang::ASTContext &amp; Ctx, const clang::PrintingPolicy &amp; Policy, bool WithGlobalNsPrefix = false)'/>
<doc f='llvm/clang/include/clang/AST/QualTypeNames.h' l='67'>/// Get the fully qualified name for a type. This includes full
/// qualification of all template parameters etc.
///
/// \param[in] QT - the type for which the fully qualified name will be
/// returned.
/// \param[in] Ctx - the ASTContext to be used.
/// \param[in] WithGlobalNsPrefix - If true, then the global namespace
/// specifier &quot;::&quot; will be prepended to the fully qualified name.</doc>
