<inh f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='57' c='llvm::UnaryInstruction'/>
<def f='llvm/llvm/include/llvm/IR/Instructions.h' l='167' ll='313'/>
<size>64</size>
<doc f='llvm/llvm/include/llvm/IR/Instructions.h' l='161'>//===----------------------------------------------------------------------===//
//                                LoadInst Class
//===----------------------------------------------------------------------===//

/// An instruction for reading from memory. This uses the SubclassData field in
/// Value to store whether or not the load is volatile.</doc>
<fun r='_ZN4llvm8LoadInst8AssertOKEv'/>
<fun r='_ZNK4llvm8LoadInst9cloneImplEv'/>
<fun r='_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE'/>
<fun r='_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEbPNS_11InstructionE'/>
<fun r='_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEbPNS_10BasicBlockE'/>
<fun r='_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEbjPNS_11InstructionE'/>
<fun r='_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEbjPNS_10BasicBlockE'/>
<fun r='_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEbjNS_14AtomicOrderingEhPNS_11InstructionE'/>
<fun r='_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEbjNS_14AtomicOrderingEhPNS_10BasicBlockE'/>
<fun r='_ZN4llvm8LoadInstC1EPNS_5ValueERKNS_5TwineEPNS_11InstructionE'/>
<fun r='_ZN4llvm8LoadInstC1EPNS_5ValueERKNS_5TwineEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm8LoadInstC1EPNS_5ValueERKNS_5TwineEbPNS_11InstructionE'/>
<fun r='_ZN4llvm8LoadInstC1EPNS_5ValueERKNS_5TwineEbPNS_10BasicBlockE'/>
<fun r='_ZN4llvm8LoadInstC1EPNS_5ValueERKNS_5TwineEbjPNS_11InstructionE'/>
<fun r='_ZN4llvm8LoadInstC1EPNS_5ValueERKNS_5TwineEbjPNS_10BasicBlockE'/>
<fun r='_ZN4llvm8LoadInstC1EPNS_5ValueERKNS_5TwineEbjNS_14AtomicOrderingEhPNS_11InstructionE'/>
<fun r='_ZN4llvm8LoadInstC1EPNS_5ValueERKNS_5TwineEbjNS_14AtomicOrderingEhPNS_10BasicBlockE'/>
<fun r='_ZNK4llvm8LoadInst10isVolatileEv'/>
<fun r='_ZN4llvm8LoadInst11setVolatileEb'/>
<fun r='_ZNK4llvm8LoadInst12getAlignmentEv'/>
<fun r='_ZN4llvm8LoadInst12setAlignmentEj'/>
<fun r='_ZNK4llvm8LoadInst11getOrderingEv'/>
<fun r='_ZN4llvm8LoadInst11setOrderingENS_14AtomicOrderingE'/>
<fun r='_ZNK4llvm8LoadInst14getSyncScopeIDEv'/>
<fun r='_ZN4llvm8LoadInst14setSyncScopeIDEh'/>
<fun r='_ZN4llvm8LoadInst9setAtomicENS_14AtomicOrderingEh'/>
<fun r='_ZNK4llvm8LoadInst8isSimpleEv'/>
<fun r='_ZNK4llvm8LoadInst11isUnorderedEv'/>
<fun r='_ZN4llvm8LoadInst17getPointerOperandEv'/>
<fun r='_ZNK4llvm8LoadInst17getPointerOperandEv'/>
<fun r='_ZN4llvm8LoadInst22getPointerOperandIndexEv'/>
<fun r='_ZNK4llvm8LoadInst21getPointerOperandTypeEv'/>
<fun r='_ZNK4llvm8LoadInst22getPointerAddressSpaceEv'/>
<fun r='_ZN4llvm8LoadInst7classofEPKNS_11InstructionE'/>
<fun r='_ZN4llvm8LoadInst7classofEPKNS_5ValueE'/>
<fun r='_ZN4llvm8LoadInst26setInstructionSubclassDataEt'/>
<mbr r='llvm::LoadInst::SSID' o='448' t='SyncScope::ID'/>
