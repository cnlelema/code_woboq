<dec f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='3371' type='static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const std::string &amp; str, bool is_attribute)'/>
<use f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='3378' u='c' c='_ZN7testing8internal24XmlUnitTestResultPrinter18EscapeXmlAttributeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='3383' u='c' c='_ZN7testing8internal24XmlUnitTestResultPrinter13EscapeXmlTextEPKc'/>
<def f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='3476' ll='3517' type='static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const std::string &amp; str, bool is_attribute)'/>
<doc f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='3367'>// Returns an XML-escaped copy of the input string str.  If
  // is_attribute is true, the text is meant to appear as an attribute
  // value, and normalizable whitespace is preserved by replacing it
  // with character references.</doc>
<doc f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='3464'>// Returns an XML-escaped copy of the input string str.  If is_attribute
// is true, the text is meant to appear as an attribute value, and
// normalizable whitespace is preserved by replacing it with character
// references.
//
// Invalid XML characters in str, if any, are stripped from the output.
// It is expected that most, if not all, of the text processed by this
// module will consist of ordinary English text.
// If this module is ever modified to produce version 1.1 XML output,
// most invalid characters can be retained using character references.
// TODO(wan): It might be nice to have a minimally invasive, human-readable
// escaping scheme for invalid characters, rather than dropping them.</doc>
