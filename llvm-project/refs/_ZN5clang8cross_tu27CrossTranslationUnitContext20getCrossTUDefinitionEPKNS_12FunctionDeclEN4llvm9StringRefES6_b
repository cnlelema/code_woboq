<dec f='llvm/clang/include/clang/CrossTU/CrossTranslationUnit.h' l='126' type='llvm::Expected&lt;const FunctionDecl *&gt; clang::cross_tu::CrossTranslationUnitContext::getCrossTUDefinition(const clang::FunctionDecl * FD, llvm::StringRef CrossTUDir, llvm::StringRef IndexName, bool DisplayCTUProgress = false)'/>
<def f='llvm/clang/lib/CrossTU/CrossTranslationUnit.cpp' l='293' ll='300' type='llvm::Expected&lt;const FunctionDecl *&gt; clang::cross_tu::CrossTranslationUnitContext::getCrossTUDefinition(const clang::FunctionDecl * FD, llvm::StringRef CrossTUDir, llvm::StringRef IndexName, bool DisplayCTUProgress = false)'/>
<doc f='llvm/clang/include/clang/CrossTU/CrossTranslationUnit.h' l='109'>/// This function loads a function or variable definition from an
  ///        external AST file and merges it into the original AST.
  ///
  /// This method should only be used on functions that have no definitions or
  /// variables that have no initializer in
  /// the current translation unit. A function definition with the same
  /// declaration will be looked up in the index file which should be in the
  /// \p CrossTUDir directory, called \p IndexName. In case the declaration is
  /// found in the index the corresponding AST file will be loaded and the
  /// definition will be merged into the original AST using the AST Importer.
  ///
  /// \return The declaration with the definition will be returned.
  /// If no suitable definition is found in the index file or multiple
  /// definitions found error will be returned.
  ///
  /// Note that the AST files should also be in the \p CrossTUDir.</doc>
<use f='llvm/clang/unittests/CrossTU/CrossTranslationUnitTest.cpp' l='74' u='c' c='_ZN5clang8cross_tu12_GLOBAL__N_114CTUASTConsumer21HandleTranslationUnitERNS_10ASTContextE'/>
