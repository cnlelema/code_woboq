<def f='llvm/llvm/include/llvm/MC/MCParser/MCTargetAsmParser.h' l='189' ll='315'/>
<size>32</size>
<doc f='llvm/llvm/include/llvm/MC/MCParser/MCTargetAsmParser.h' l='184'>// When matching of an assembly instruction fails, there may be multiple
// encodings that are close to being a match. It&apos;s often ambiguous which one
// the programmer intended to use, so we want to report an error which mentions
// each of these &quot;near-miss&quot; encodings. This struct contains information about
// one such encoding, and why it did not match the parsed instruction.</doc>
<fun r='_ZN4llvm12NearMissInfo10getSuccessEv'/>
<fun r='_ZN4llvm12NearMissInfo16getMissedFeatureERKNS_13FeatureBitsetE'/>
<fun r='_ZN4llvm12NearMissInfo18getMissedPredicateEj'/>
<fun r='_ZN4llvm12NearMissInfo16getMissedOperandEjjjj'/>
<fun r='_ZN4llvm12NearMissInfo17getTooFewOperandsEjj'/>
<fun r='_ZNK4llvm12NearMissInfocvbEv'/>
<fun r='_ZNK4llvm12NearMissInfo7getKindEv'/>
<fun r='_ZNK4llvm12NearMissInfo11getFeaturesEv'/>
<fun r='_ZNK4llvm12NearMissInfo17getPredicateErrorEv'/>
<fun r='_ZNK4llvm12NearMissInfo15getOperandClassEv'/>
<fun r='_ZNK4llvm12NearMissInfo9getOpcodeEv'/>
<fun r='_ZNK4llvm12NearMissInfo15getOperandErrorEv'/>
<fun r='_ZNK4llvm12NearMissInfo15getOperandIndexEv'/>
<mbr r='llvm::NearMissInfo::Kind' o='0' t='llvm::NearMissInfo::NearMissKind'/>
<fun r='_ZN4llvm12NearMissInfoC1Ev'/>
