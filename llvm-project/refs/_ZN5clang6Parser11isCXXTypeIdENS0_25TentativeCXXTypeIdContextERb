<use f='llvm/clang/include/clang/Parse/Parser.h' l='2233' u='c' c='_ZN5clang6Parser16isTypeIdInParensERb'/>
<use f='llvm/clang/include/clang/Parse/Parser.h' l='2248' u='c' c='_ZN5clang6Parser21isTypeIdUnambiguouslyEv'/>
<dec f='llvm/clang/include/clang/Parse/Parser.h' l='2288' type='bool clang::Parser::isCXXTypeId(clang::Parser::TentativeCXXTypeIdContext Context, bool &amp; isAmbiguous)'/>
<use f='llvm/clang/include/clang/Parse/Parser.h' l='2291' u='c' c='_ZN5clang6Parser11isCXXTypeIdENS0_25TentativeCXXTypeIdContextE'/>
<def f='llvm/clang/lib/Parse/ParseTentative.cpp' l='544' ll='608' type='bool clang::Parser::isCXXTypeId(clang::Parser::TentativeCXXTypeIdContext Context, bool &amp; isAmbiguous)'/>
<doc f='llvm/clang/lib/Parse/ParseTentative.cpp' l='527'>/// Determine whether the next set of tokens contains a type-id.
  ///
  /// The context parameter states what context we&apos;re parsing right
  /// now, which affects how this routine copes with the token
  /// following the type-id. If the context is TypeIdInParens, we have
  /// already parsed the &apos;(&apos; and we will cease lookahead when we hit
  /// the corresponding &apos;)&apos;. If the context is
  /// TypeIdAsTemplateArgument, we&apos;ve already parsed the &apos;&lt;&apos; or &apos;,&apos;
  /// before this template argument, and will cease lookahead when we
  /// hit a &apos;&gt;&apos;, &apos;&gt;&gt;&apos; (in C++0x), or &apos;,&apos;; or, in C++0x, an ellipsis immediately
  /// preceding such. Returns true for a type-id and false for an expression.
  /// If during the disambiguation process a parsing error is encountered,
  /// the function returns true to let the declaration parsing code handle it.
  ///
  /// type-id:
  ///   type-specifier-seq abstract-declarator[opt]
  ///</doc>
