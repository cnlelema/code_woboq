<def f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafety.h' l='210' ll='211' type='void clang::threadSafety::ThreadSafetyHandler::handleFunExcludesLock(llvm::StringRef Kind, Name FunName, Name LockName, clang::SourceLocation Loc)'/>
<use f='llvm/clang/lib/Analysis/ThreadSafety.cpp' l='1631' u='c' c='_ZN12_GLOBAL__N_112BuildLockset18warnIfMutexNotHeldEPKN5clang9NamedDeclEPKNS1_4ExprENS1_12threadSafety10AccessKindEPS5_NS8_22ProtectedOperationKindEN42126717'/>
<use f='llvm/clang/lib/Analysis/ThreadSafety.cpp' l='1688' u='c' c='_ZN12_GLOBAL__N_112BuildLockset15warnIfMutexHeldEPKN5clang9NamedDeclEPKNS1_4ExprEPS5_N4llvm9StringRefE'/>
<doc f='llvm/clang/include/clang/Analysis/Analyses/ThreadSafety.h' l='203'>/// Warn when a function is called while an excluded mutex is locked. For
  /// example, the mutex may be locked inside the function.
  /// \param Kind -- the capability&apos;s name parameter (role, mutex, etc).
  /// \param FunName -- The name of the function
  /// \param LockName -- A StringRef name for the lock expression, to be printed
  /// in the error message.
  /// \param Loc -- The location of the function call.</doc>
<ovr f='llvm/clang/lib/Sema/AnalysisBasedWarnings.cpp' l='1837' c='_ZN5clang12threadSafety12_GLOBAL__N_120ThreadSafetyReporter21handleFunExcludesLockEN4llvm9StringRefES4_S4_NS_14SourceLocationE'/>
