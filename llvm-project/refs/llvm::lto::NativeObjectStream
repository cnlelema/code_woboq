<def f='llvm/llvm/include/llvm/LTO/LTO.h' l='189' ll='194'/>
<size>16</size>
<doc f='llvm/llvm/include/llvm/LTO/LTO.h' l='184'>/// This class wraps an output stream for a native object. Most clients should
/// just be able to return an instance of this base class from the stream
/// callback, but if a client needs to perform some action after the stream is
/// written to, that can be done by deriving from this class and overriding the
/// destructor.</doc>
<fun r='_ZN4llvm3lto18NativeObjectStreamC1ESt10unique_ptrINS_17raw_pwrite_streamESt14default_deleteIS3_EE'/>
<mbr r='llvm::lto::NativeObjectStream::OS' o='64' t='std::unique_ptr&lt;raw_pwrite_stream&gt;'/>
<fun r='_ZN4llvm3lto18NativeObjectStreamD1Ev'/>
<ovr f='llvm/llvm/lib/LTO/Caching.cpp' l='70' c='CacheStream'/>
