<def f='llvm/llvm/include/llvm/IR/DataLayout.h' l='257' ll='262' type='bool llvm::DataLayout::isLegalInteger(uint64_t Width) const'/>
<use f='llvm/llvm/include/llvm/IR/DataLayout.h' l='264' u='c' c='_ZNK4llvm10DataLayout16isIllegalIntegerEm'/>
<doc f='llvm/llvm/include/llvm/IR/DataLayout.h' l='250'>/// Returns true if the specified type is known to be a native integer
  /// type supported by the CPU.
  ///
  /// For example, i64 is not native on most 32-bit CPUs and i37 is not native
  /// on any known one. This returns false if the integer width is not legal.
  ///
  /// The width is specified in bits.</doc>
<use f='llvm/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp' l='413' u='c' c='_ZN12_GLOBAL__N_116CGRecordLowering19accumulateBitFieldsEN5clang11DeclContext22specific_decl_iteratorINS1_9FieldDeclEEES5_'/>
<use f='llvm/llvm/lib/Analysis/IVUsers.cpp' l='189' u='c' c='_ZN4llvm7IVUsers12AddUsersImplEPNS_11InstructionERNS_15SmallPtrSetImplIPNS_4LoopEEE'/>
<use f='llvm/llvm/include/llvm/Analysis/TargetTransformInfoImpl.h' l='77' u='c' c='_ZN4llvm27TargetTransformInfoImplBase16getOperationCostEjPNS_4TypeES2_'/>
<use f='llvm/llvm/include/llvm/Analysis/TargetTransformInfoImpl.h' l='88' u='c' c='_ZN4llvm27TargetTransformInfoImplBase16getOperationCostEjPNS_4TypeES2_'/>
<use f='llvm/llvm/include/llvm/Analysis/TargetTransformInfoImpl.h' l='98' u='c' c='_ZN4llvm27TargetTransformInfoImplBase16getOperationCostEjPNS_4TypeES2_'/>
<use f='llvm/llvm/lib/Transforms/AggressiveInstCombine/TruncInstCombine.cpp' l='220' u='c' c='_ZN4llvm16TruncInstCombine14getMinBitWidthEv'/>
<use f='llvm/llvm/lib/Transforms/AggressiveInstCombine/TruncInstCombine.cpp' l='221' u='c' c='_ZN4llvm16TruncInstCombine14getMinBitWidthEv'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='1752' u='c' c='_ZN4llvm12InstCombiner19foldICmpAndConstantERNS_8ICmpInstEPNS_14BinaryOperatorERKNS_5APIntE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='2017' u='c' c='_ZN4llvm12InstCombiner19foldICmpShlConstantERNS_8ICmpInstEPNS_14BinaryOperatorERKNS_5APIntE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp' l='632' u='c' c='_ZL26combineLoadToOperationTypeRN4llvm12InstCombinerERNS_8LoadInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='1256' u='c' c='_ZN4llvm12InstCombiner12visitPHINodeERNS_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='161' u='c' c='_ZNK4llvm12InstCombiner16shouldChangeTypeEjj'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='162' u='c' c='_ZNK4llvm12InstCombiner16shouldChangeTypeEjj'/>
<use f='llvm/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp' l='870' u='c' c='_ZL11visitIVCastPN4llvm8CastInstERN12_GLOBAL__N_110WideIVInfoEPNS_15ScalarEvolutionEPKNS_19TargetTransformInfoE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp' l='2195' u='c' c='_ZL15FindLoopCounterPN4llvm4LoopEPNS_10BasicBlockEPKNS_4SCEVEPNS_15ScalarEvolutionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2085' u='c' c='_ZL23isIntegerWideningViableRN4llvm4sroa9PartitionEPNS_4TypeERKNS_10DataLayoutE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='2763' u='c' c='_ZN4llvm4sroa19AllocaSliceRewriter15visitMemSetInstERNS_10MemSetInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='4110' u='c' c='_ZN4llvm4SROA16rewritePartitionERNS_10AllocaInstERNS_4sroa12AllocaSlicesERNS3_9PartitionE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp' l='868' u='c' c='_ZL26optimizeMemCmpConstantSizePN4llvm8CallInstEPNS_5ValueES3_mRNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEERKNS_10DataLayoutE'/>
<use f='llvm/llvm/unittests/IR/IRBuilderTest.cpp' l='188' u='c' c='_ZN12_GLOBAL__N_129IRBuilderTest_DataLayout_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/IRBuilderTest.cpp' l='190' u='c' c='_ZN12_GLOBAL__N_129IRBuilderTest_DataLayout_Test8TestBodyEv'/>
