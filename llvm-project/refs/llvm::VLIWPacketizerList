<def f='llvm/llvm/include/llvm/CodeGen/DFAPacketizer.h' l='133' ll='217'/>
<size>120</size>
<doc f='llvm/llvm/include/llvm/CodeGen/DFAPacketizer.h' l='126'>// VLIWPacketizerList implements a simple VLIW packetizer using DFA. The
// packetizer works on machine basic blocks. For each instruction I in BB,
// the packetizer consults the DFA to see if machine resources are available
// to execute I. If so, the packetizer checks if I depends on any instruction
// in the current packet. If no dependency is found, I is added to current
// packet and the machine resource is marked as taken. If any dependency is
// found, a target API call is made to prune the dependence.</doc>
<mbr r='llvm::VLIWPacketizerList::MF' o='64' t='llvm::MachineFunction &amp;'/>
<mbr r='llvm::VLIWPacketizerList::TII' o='128' t='const llvm::TargetInstrInfo *'/>
<mbr r='llvm::VLIWPacketizerList::AA' o='192' t='AliasAnalysis *'/>
<mbr r='llvm::VLIWPacketizerList::VLIWScheduler' o='256' t='llvm::DefaultVLIWScheduler *'/>
<mbr r='llvm::VLIWPacketizerList::CurrentPacketMIs' o='320' t='std::vector&lt;MachineInstr *&gt;'/>
<mbr r='llvm::VLIWPacketizerList::ResourceTracker' o='512' t='llvm::DFAPacketizer *'/>
<mbr r='llvm::VLIWPacketizerList::MIToSUnit' o='576' t='std::map&lt;MachineInstr *, SUnit *&gt;'/>
<fun r='_ZN4llvm18VLIWPacketizerListC1ERNS_15MachineFunctionERNS_15MachineLoopInfoEPNS_9AAResultsE'/>
<fun r='_ZN4llvm18VLIWPacketizerListD1Ev'/>
<fun r='_ZN4llvm18VLIWPacketizerList12PacketizeMIsEPNS_17MachineBasicBlockENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEES5_'/>
<fun r='_ZN4llvm18VLIWPacketizerList18getResourceTrackerEv'/>
<fun r='_ZN4llvm18VLIWPacketizerList11addToPacketERNS_12MachineInstrE'/>
<fun r='_ZN4llvm18VLIWPacketizerList9endPacketEPNS_17MachineBasicBlockENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEE'/>
<fun r='_ZN4llvm18VLIWPacketizerList19initPacketizerStateEv'/>
<fun r='_ZN4llvm18VLIWPacketizerList23ignorePseudoInstructionERKNS_12MachineInstrEPKNS_17MachineBasicBlockE'/>
<fun r='_ZN4llvm18VLIWPacketizerList17isSoloInstructionERKNS_12MachineInstrE'/>
<fun r='_ZN4llvm18VLIWPacketizerList17shouldAddToPacketERKNS_12MachineInstrE'/>
<fun r='_ZN4llvm18VLIWPacketizerList26isLegalToPacketizeTogetherEPNS_5SUnitES2_'/>
<fun r='_ZN4llvm18VLIWPacketizerList26isLegalToPruneDependenciesEPNS_5SUnitES2_'/>
<fun r='_ZN4llvm18VLIWPacketizerList11addMutationESt10unique_ptrINS_19ScheduleDAGMutationESt14default_deleteIS2_EE'/>
<fun r='_ZNK4llvm18VLIWPacketizerList5aliasERKNS_12MachineInstrES3_b'/>
<fun r='_ZNK4llvm18VLIWPacketizerList5aliasERKNS_17MachineMemOperandES3_b'/>
<fun r='_ZN4llvm18VLIWPacketizerListC1ERNS_15MachineFunctionERNS_15MachineLoopInfoEPNS_9AAResultsE'/>
<fun r='_ZN4llvm18VLIWPacketizerListD1Ev'/>
<fun r='_ZN4llvm18VLIWPacketizerList9endPacketEPNS_17MachineBasicBlockENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEE'/>
<fun r='_ZN4llvm18VLIWPacketizerList12PacketizeMIsEPNS_17MachineBasicBlockENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEES5_'/>
<fun r='_ZNK4llvm18VLIWPacketizerList5aliasERKNS_17MachineMemOperandES3_b'/>
<fun r='_ZNK4llvm18VLIWPacketizerList5aliasERKNS_12MachineInstrES3_b'/>
<fun r='_ZN4llvm18VLIWPacketizerList11addMutationESt10unique_ptrINS_19ScheduleDAGMutationESt14default_deleteIS2_EE'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/R600Packetizer.cpp' l='55' c='(anonymousnamespace)::R600PacketizerList'/>
<ovr f='llvm/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.h' l='27' c='llvm::HexagonPacketizerList'/>
