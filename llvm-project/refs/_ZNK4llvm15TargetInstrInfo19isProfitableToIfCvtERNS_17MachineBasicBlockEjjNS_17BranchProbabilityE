<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='700' ll='704' type='bool llvm::TargetInstrInfo::isProfitableToIfCvt(llvm::MachineBasicBlock &amp; MBB, unsigned int NumCycles, unsigned int ExtraPredCycles, llvm::BranchProbability Probability) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='695'>/// Return true if it&apos;s profitable to predicate
  /// instructions with accumulated instruction latency of &quot;NumCycles&quot;
  /// of the specified basic block, where the probability of the instructions
  /// being executed is given by Probability, and Confidence is a measure
  /// of our confidence that it will be properly predicted.</doc>
<use f='llvm/llvm/lib/CodeGen/IfConversion.cpp' l='284' u='c' c='_ZNK12_GLOBAL__N_111IfConverter18MeetIfcvtSizeLimitERN4llvm17MachineBasicBlockEjjNS1_17BranchProbabilityE'/>
