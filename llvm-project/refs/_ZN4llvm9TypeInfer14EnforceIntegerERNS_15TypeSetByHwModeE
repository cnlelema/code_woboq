<dec f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='295' type='bool llvm::TypeInfer::EnforceInteger(llvm::TypeSetByHwMode &amp; Out)'/>
<def f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='380' ll='388' type='bool llvm::TypeInfer::EnforceInteger(llvm::TypeSetByHwMode &amp; Out)'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='1490' u='c' c='_ZNK4llvm16SDTypeConstraint19ApplyTypeConstraintEPNS_15TreePatternNodeERKNS_10SDNodeInfoERNS_11TreePatternE'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='2315' u='c' c='_ZN4llvm15TreePatternNode20ApplyTypeConstraintsERNS_11TreePatternEb'/>
<doc f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='289'>/// The following four functions ensure that upon return the set \p Out
  /// will only contain types of the specified kind: integer, floating-point,
  /// scalar, or vector.
  /// If \p Out is empty, all legal types of the specified kind will be added
  /// to it. Otherwise, all types that are not of the specified kind will be
  /// removed from \p Out.</doc>
