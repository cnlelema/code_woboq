<dec f='llvm/llvm/include/llvm/Transforms/Scalar.h' l='187' type='llvm::Pass * llvm::createLoopUnrollPass(int OptLevel = 2, bool OnlyWhenForced = false, bool ForgetAllSCEV = false, int Threshold = -1, int Count = -1, int AllowPartial = -1, int Runtime = -1, int UpperBound = -1, int AllowPeeling = -1)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Scalar.h' l='183'>//===----------------------------------------------------------------------===//
//
// LoopUnroll - This pass is a simple loop unrolling pass.
//</doc>
<use f='llvm/llvm/include/llvm/LinkAllPasses.h' l='137' u='c' c='_ZN12_GLOBAL__N_116ForcePassLinkingC1Ev'/>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='724' u='c' c='_ZN4llvm18PassManagerBuilder25populateModulePassManagerERNS_6legacy15PassManagerBaseE'/>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='928' u='c' c='_ZN4llvm18PassManagerBuilder24addLTOOptimizationPassesERNS_6legacy15PassManagerBaseE'/>
<def f='llvm/llvm/lib/Transforms/Scalar/LoopUnrollPass.cpp' l='1238' ll='1253' type='llvm::Pass * llvm::createLoopUnrollPass(int OptLevel = 2, bool OnlyWhenForced = false, bool ForgetAllSCEV = false, int Threshold = -1, int Count = -1, int AllowPartial = -1, int Runtime = -1, int UpperBound = -1, int AllowPeeling = -1)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopUnrollPass.cpp' l='1257' u='c' c='_ZN4llvm26createSimpleLoopUnrollPassEibb'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='191' u='c' c='LLVMAddLoopUnrollPass'/>
