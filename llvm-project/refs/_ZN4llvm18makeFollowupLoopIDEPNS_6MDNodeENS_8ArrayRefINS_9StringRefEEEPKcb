<dec f='llvm/llvm/include/llvm/Transforms/Utils/LoopUtils.h' l='210' type='Optional&lt;llvm::MDNode *&gt; llvm::makeFollowupLoopID(llvm::MDNode * OrigLoopID, ArrayRef&lt;llvm::StringRef&gt; FollowupAttrs, const char * InheritOptionsAttrsPrefix = &quot;&quot;, bool AlwaysNew = false)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/LoopUtils.h' l='185'>/// Create a new loop identifier for a loop created from a loop transformation.
///
/// @param OrigLoopID The loop ID of the loop before the transformation.
/// @param FollowupAttrs List of attribute names that contain attributes to be
///                      added to the new loop ID.
/// @param InheritOptionsAttrsPrefix Selects which attributes should be inherited
///                                  from the original loop. The following values
///                                  are considered:
///        nullptr   : Inherit all attributes from @p OrigLoopID.
///        &quot;&quot;        : Do not inherit any attribute from @p OrigLoopID; only use
///                    those specified by a followup attribute.
///        &quot;&lt;prefix&gt;&quot;: Inherit all attributes except those which start with
///                    &lt;prefix&gt;; commonly used to remove metadata for the
///                    applied transformation.
/// @param AlwaysNew If true, do not try to reuse OrigLoopID and never return
///                  None.
///
/// @return The loop ID for the after-transformation loop. The following values
///         can be returned:
///         None         : No followup attribute was found; it is up to the
///                        transformation to choose attributes that make sense.
///         @p OrigLoopID: The original identifier can be reused.
///         nullptr      : The new loop has no attributes.
///         MDNode*      : A new unique loop identifier.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopDistribute.cpp' l='599' u='c' c='_ZN12_GLOBAL__N_122InstPartitionContainer12setNewLoopIDEPN4llvm6MDNodeEPNS_13InstPartitionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopDistribute.cpp' l='826' u='c' c='_ZN12_GLOBAL__N_121LoopDistributeForLoop11processLoopERSt8functionIFRKN4llvm14LoopAccessInfoERNS2_4LoopEEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopUnrollAndJamPass.cpp' l='366' u='c' c='_ZL21tryToUnrollAndJamLoopPN4llvm4LoopERNS_13DominatorTreeEPNS_8LoopInfoERNS_15ScalarEvolutionERKNS_19TargetTransformInfoERNS_15AssumptionCacheERNS_147069670'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopUnrollAndJamPass.cpp' l='394' u='c' c='_ZL21tryToUnrollAndJamLoopPN4llvm4LoopERNS_13DominatorTreeEPNS_8LoopInfoERNS_15ScalarEvolutionERKNS_19TargetTransformInfoERNS_15AssumptionCacheERNS_147069670'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopUnrollAndJamPass.cpp' l='402' u='c' c='_ZL21tryToUnrollAndJamLoopPN4llvm4LoopERNS_13DominatorTreeEPNS_8LoopInfoERNS_15ScalarEvolutionERKNS_19TargetTransformInfoERNS_15AssumptionCacheERNS_147069670'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopUnrollAndJamPass.cpp' l='410' u='c' c='_ZL21tryToUnrollAndJamLoopPN4llvm4LoopERNS_13DominatorTreeEPNS_8LoopInfoERNS_15ScalarEvolutionERKNS_19TargetTransformInfoERNS_15AssumptionCacheERNS_147069670'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopUnrollPass.cpp' l='1118' u='c' c='_ZL15tryToUnrollLoopPN4llvm4LoopERNS_13DominatorTreeEPNS_8LoopInfoERNS_15ScalarEvolutionERKNS_19TargetTransformInfoERNS_15AssumptionCacheERNS_25Optimi6926510'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopUnrollPass.cpp' l='1126' u='c' c='_ZL15tryToUnrollLoopPN4llvm4LoopERNS_13DominatorTreeEPNS_8LoopInfoERNS_15ScalarEvolutionERKNS_19TargetTransformInfoERNS_15AssumptionCacheERNS_25Optimi6926510'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp' l='408' u='c' c='_ZL15CloneLoopBlocksPN4llvm4LoopEPNS_5ValueEbbbPNS_10BasicBlockES5_S5_RSt6vectorIS5_SaIS5_EERNS_13LoopBlocksDFSERNS_8ValueMapIPKS2_NS_14WeakTrackingVH13680398'/>
<def f='llvm/llvm/lib/Transforms/Utils/LoopUtils.cpp' l='250' ll='329' type='Optional&lt;llvm::MDNode *&gt; llvm::makeFollowupLoopID(llvm::MDNode * OrigLoopID, ArrayRef&lt;llvm::StringRef&gt; FollowupOptions, const char * InheritOptionsExceptPrefix = &quot;&quot;, bool AlwaysNew = false)'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='2937' u='c' c='_ZN4llvm19InnerLoopVectorizer28createVectorizedLoopSkeletonEv'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='7540' u='c' c='_ZN4llvm17LoopVectorizePass11processLoopEPNS_4LoopE'/>
