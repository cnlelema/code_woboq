<dec f='llvm/llvm/include/llvm/Analysis/InstructionSimplify.h' l='250' type='llvm::Value * llvm::SimplifyFPBinOp(unsigned int Opcode, llvm::Value * LHS, llvm::Value * RHS, llvm::FastMathFlags FMF, const llvm::SimplifyQuery &amp; Q)'/>
<doc f='llvm/llvm/include/llvm/Analysis/InstructionSimplify.h' l='247'>/// Given operands for an FP BinaryOperator, fold the result or return null.
/// In contrast to SimplifyBinOp, try to use FastMathFlag when folding the
/// result. In case we don&apos;t need FastMathFlags, simply fall to SimplifyBinOp.</doc>
<use f='llvm/llvm/lib/Analysis/InlineCost.cpp' l='1082' u='c' c='_ZN12_GLOBAL__N_112CallAnalyzer19visitBinaryOperatorERN4llvm14BinaryOperatorE'/>
<def f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='4673' ll='4676' type='llvm::Value * llvm::SimplifyFPBinOp(unsigned int Opcode, llvm::Value * LHS, llvm::Value * RHS, llvm::FastMathFlags FMF, const llvm::SimplifyQuery &amp; Q)'/>
<use f='llvm/llvm/lib/Analysis/LoopUnrollAnalyzer.cpp' l='81' u='c' c='_ZN4llvm20UnrolledInstAnalyzer19visitBinaryOperatorERNS_14BinaryOperatorE'/>
