<def f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='1723' ll='1727' type='llvm::Value * llvm::TargetLoweringBase::emitMaskedAtomicCmpXchgIntrinsic(IRBuilder&lt;&gt; &amp; Builder, llvm::AtomicCmpXchgInst * CI, llvm::Value * AlignedAddr, llvm::Value * CmpVal, llvm::Value * NewVal, llvm::Value * Mask, llvm::AtomicOrdering Ord) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='1720'>/// Perform a masked cmpxchg using a target-specific intrinsic. This
  /// represents the core LL/SC loop which will be lowered at a late stage by
  /// the backend.</doc>
<use f='llvm/llvm/lib/CodeGen/AtomicExpandPass.cpp' l='986' u='c' c='_ZN12_GLOBAL__N_112AtomicExpand36expandAtomicCmpXchgToMaskedIntrinsicEPN4llvm17AtomicCmpXchgInstE'/>
