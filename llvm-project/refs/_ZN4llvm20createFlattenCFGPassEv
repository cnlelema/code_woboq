<dec f='llvm/llvm/include/llvm/Transforms/Scalar.h' l='267' type='llvm::FunctionPass * llvm::createFlattenCFGPass()'/>
<doc f='llvm/llvm/include/llvm/Transforms/Scalar.h' l='262'>//===----------------------------------------------------------------------===//
//
// FlattenCFG - flatten CFG, reduce number of conditional branches by using
// parallel-and and parallel-or mode, etc...
//</doc>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp' l='742' u='c' c='_ZN12_GLOBAL__N_116AMDGPUPassConfig10addPreISelEv'/>
<def f='llvm/llvm/lib/Transforms/Scalar/FlattenCFGPass.cpp' l='48' type='llvm::FunctionPass * llvm::createFlattenCFGPass()'/>
<doc f='llvm/llvm/lib/Transforms/Scalar/FlattenCFGPass.cpp' l='47'>// Public interface to the FlattenCFG pass</doc>
