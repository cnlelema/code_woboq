<dec f='llvm/clang/include/clang/Sema/Initialization.h' l='1260' type='void clang::InitializationSequence::AddExtraneousCopyToTemporary(clang::QualType T)'/>
<doc f='llvm/clang/include/clang/Sema/Initialization.h' l='1250'>/// Add a new step that makes an extraneous copy of the input
  /// to a temporary of the same class type.
  ///
  /// This extraneous copy only occurs during reference binding in
  /// C++98/03, where we are permitted (but not required) to introduce
  /// an extra copy. At a bare minimum, we must check that we could
  /// call the copy constructor, and produce a diagnostic if the copy
  /// constructor is inaccessible or no copy constructor matches.
  //
  /// \param T The type of the temporary being created.</doc>
<def f='llvm/clang/lib/Sema/SemaInit.cpp' l='3467' ll='3472' type='void clang::InitializationSequence::AddExtraneousCopyToTemporary(clang::QualType T)'/>
<use f='llvm/clang/lib/Sema/SemaInit.cpp' l='4807' u='c' c='_ZL30TryReferenceInitializationCoreRN5clang4SemaERKNS_17InitializedEntityERKNS_18InitializationKindEPNS_4ExprENS_8QualTypeESA_NS_10QualifiersESA_SA_SB794757'/>
