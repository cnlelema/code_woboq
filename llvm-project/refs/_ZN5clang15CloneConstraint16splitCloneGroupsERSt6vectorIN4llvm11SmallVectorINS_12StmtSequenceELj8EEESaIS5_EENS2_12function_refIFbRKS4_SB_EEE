<dec f='llvm/clang/include/clang/Analysis/CloneDetection.h' l='249' type='static void clang::CloneConstraint::splitCloneGroups(std::vector&lt;CloneDetector::CloneGroup&gt; &amp; CloneGroups, llvm::function_ref&lt;bool (const StmtSequence &amp;, const StmtSequence &amp;)&gt; Compare)'/>
<use f='llvm/clang/lib/Analysis/CloneDetection.cpp' l='413' u='c' c='_ZN5clang36RecursiveCloneTypeIIVerifyConstraint9constrainERSt6vectorIN4llvm11SmallVectorINS_12StmtSequenceELj8EEESaIS5_EE'/>
<use f='llvm/clang/lib/Analysis/CloneDetection.cpp' l='467' u='c' c='_ZN5clang33MatchingVariablePatternConstraint9constrainERSt6vectorIN4llvm11SmallVectorINS_12StmtSequenceELj8EEESaIS5_EE'/>
<def f='llvm/clang/lib/Analysis/CloneDetection.cpp' l='475' ll='524' type='static void clang::CloneConstraint::splitCloneGroups(std::vector&lt;CloneDetector::CloneGroup&gt; &amp; CloneGroups, llvm::function_ref&lt;bool (const StmtSequence &amp;, const StmtSequence &amp;)&gt; Compare)'/>
<doc f='llvm/clang/include/clang/Analysis/CloneDetection.h' l='243'>/// Splits the given CloneGroups until the given Compare function returns true
  /// for all clones in a single group.
  /// \param CloneGroups A list of CloneGroups that should be modified.
  /// \param Compare The comparison function that all clones are supposed to
  ///                pass. Should return true if and only if two clones belong
  ///                to the same CloneGroup.</doc>
