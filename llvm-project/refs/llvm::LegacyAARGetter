<def f='llvm/llvm/include/llvm/Analysis/BasicAliasAnalysis.h' l='261' ll='273'/>
<size>416</size>
<doc f='llvm/llvm/include/llvm/Analysis/BasicAliasAnalysis.h' l='258'>/// This class is a functor to be used in legacy module or SCC passes for
/// computing AA results for a function. We store the results in fields so that
/// they live long enough to be queried, but we re-use them each time.</doc>
<mbr r='llvm::LegacyAARGetter::P' o='0' t='llvm::Pass &amp;'/>
<mbr r='llvm::LegacyAARGetter::BAR' o='64' t='Optional&lt;llvm::BasicAAResult&gt;'/>
<mbr r='llvm::LegacyAARGetter::AAR' o='2816' t='Optional&lt;llvm::AAResults&gt;'/>
<fun r='_ZN4llvm15LegacyAARGetterC1ERNS_4PassE'/>
<fun r='_ZN4llvm15LegacyAARGetterclERNS_8FunctionE'/>
