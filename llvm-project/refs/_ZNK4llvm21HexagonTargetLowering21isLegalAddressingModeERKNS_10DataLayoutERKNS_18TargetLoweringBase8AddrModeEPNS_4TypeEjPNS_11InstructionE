<dec f='llvm/llvm/lib/Target/Hexagon/HexagonISelLowering.h' l='280' type='bool llvm::HexagonTargetLowering::isLegalAddressingMode(const llvm::DataLayout &amp; DL, const llvm::TargetLoweringBase::AddrMode &amp; AM, llvm::Type * Ty, unsigned int AS, llvm::Instruction * I = nullptr) const'/>
<doc f='llvm/llvm/lib/Target/Hexagon/HexagonISelLowering.h' l='275'>/// isLegalAddressingMode - Return true if the addressing mode represented
    /// by AM is legal for this target, for a load/store of the specified type.
    /// The type may be VoidTy, in which case only return true if the addressing
    /// mode is legal for a load/store of any legal type.
    /// TODO: Handle pre/postinc as well.</doc>
<inh f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='2185' c='_ZNK4llvm18TargetLoweringBase21isLegalAddressingModeERKNS_10DataLayoutERKNS0_8AddrModeEPNS_4TypeEjPNS_11InstructionE'/>
<def f='llvm/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp' l='2934' ll='2968' type='bool llvm::HexagonTargetLowering::isLegalAddressingMode(const llvm::DataLayout &amp; DL, const llvm::TargetLoweringBase::AddrMode &amp; AM, llvm::Type * Ty, unsigned int AS, llvm::Instruction * I = nullptr) const'/>
<doc f='llvm/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp' l='2932'>/// isLegalAddressingMode - Return true if the addressing mode represented by
/// AM is legal for this target, for a load/store of the specified type.</doc>
