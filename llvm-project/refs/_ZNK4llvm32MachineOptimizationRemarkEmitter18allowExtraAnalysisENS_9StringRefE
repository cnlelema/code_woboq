<def f='llvm/llvm/include/llvm/CodeGen/MachineOptimizationRemarkEmitter.h' l='160' ll='165' type='bool llvm::MachineOptimizationRemarkEmitter::allowExtraAnalysis(llvm::StringRef PassName) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineOptimizationRemarkEmitter.h' l='153'>/// Whether we allow for extra compile-time budget to perform more
  /// analysis to be more informative.
  ///
  /// This is useful to enable additional missed optimizations to be reported
  /// that are normally too noisy.  In this mode, we can use the extra analysis
  /// (1) to filter trivial false positives or (2) to provide more context so
  /// that non-trivial false positives can be quickly detected by the user.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/Utils.cpp' l='205' u='c' c='_ZN4llvm18reportGISelFailureERNS_15MachineFunctionERKNS_16TargetPassConfigERNS_32MachineOptimizationRemarkEmitterEPKcNS_9StringRefERKNS_12MachineInstrE'/>
