<dec f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.h' l='88' type='bool llvm::ARMBaseInstrInfo::getInsertSubregLikeInputs(const llvm::MachineInstr &amp; MI, unsigned int DefIdx, int &amp; BaseReg, int &amp; InsertedReg) const'/>
<doc f='llvm/llvm/lib/Target/ARM/ARMBaseInstrInfo.h' l='75'>/// Build the equivalent inputs of a INSERT_SUBREG for the given \p MI
  /// and \p DefIdx.
  /// \p [out] BaseReg and \p [out] InsertedReg contain
  /// the equivalent inputs of INSERT_SUBREG.
  /// E.g., INSERT_SUBREG %0:sub0, %1:sub1, sub3 would produce:
  /// - BaseReg: %0:sub0
  /// - InsertedReg: %1:sub1, sub3
  ///
  /// \returns true if it is possible to build such an input sequence
  /// with the pair \p MI, \p DefIdx. False otherwise.
  ///
  /// \pre MI.isInsertSubregLike().</doc>
