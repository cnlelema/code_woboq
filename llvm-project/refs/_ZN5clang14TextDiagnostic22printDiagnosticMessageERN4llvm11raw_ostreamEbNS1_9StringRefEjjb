<dec f='llvm/clang/include/clang/Frontend/TextDiagnostic.h' l='72' type='static void clang::TextDiagnostic::printDiagnosticMessage(llvm::raw_ostream &amp; OS, bool IsSupplemental, llvm::StringRef Message, unsigned int CurrentColumn, unsigned int Columns, bool ShowColors)'/>
<use f='llvm/clang/lib/Frontend/TextDiagnostic.cpp' l='688' u='c' c='_ZN5clang14TextDiagnostic21emitDiagnosticMessageENS_13FullSourceLocENS_11PresumedLocENS_17DiagnosticsEngine5LevelEN4llvm9StringRefENS5_8ArrayRefINS_156513676'/>
<def f='llvm/clang/lib/Frontend/TextDiagnostic.cpp' l='736' ll='760' type='static void clang::TextDiagnostic::printDiagnosticMessage(llvm::raw_ostream &amp; OS, bool IsSupplemental, llvm::StringRef Message, unsigned int CurrentColumn, unsigned int Columns, bool ShowColors)'/>
<doc f='llvm/clang/lib/Frontend/TextDiagnostic.cpp' l='735'>/*static*/</doc>
<doc f='llvm/clang/include/clang/Frontend/TextDiagnostic.h' l='56'>/// Pretty-print a diagnostic message to a raw_ostream.
  ///
  /// This is a static helper to handle the line wrapping, colorizing, and
  /// rendering of a diagnostic message to a particular ostream. It is
  /// publicly visible so that clients which do not have sufficient state to
  /// build a complete TextDiagnostic object can still get consistent
  /// formatting of their diagnostic messages.
  ///
  /// \param OS Where the message is printed
  /// \param IsSupplemental true if this is a continuation note diagnostic
  /// \param Message The text actually printed
  /// \param CurrentColumn The starting column of the first line, accounting
  ///                      for any prefix.
  /// \param Columns The number of columns to use in line-wrapping, 0 disables
  ///                all line-wrapping.
  /// \param ShowColors Enable colorizing of the message.</doc>
<use f='llvm/clang/lib/Frontend/TextDiagnosticPrinter.cpp' l='138' u='c' c='_ZN5clang21TextDiagnosticPrinter16HandleDiagnosticENS_17DiagnosticsEngine5LevelERKNS_10DiagnosticE'/>
