<dec f='llvm/clang/include/clang/AST/DeclBase.h' l='346' type='static void * clang::Decl::operator new(std::size_t Size, const clang::ASTContext &amp; Ctx, unsigned int ID, std::size_t Extra = 0)'/>
<doc f='llvm/clang/include/clang/AST/DeclBase.h' l='337'>/// Allocate memory for a deserialized declaration.
  ///
  /// This routine must be used to allocate memory for any declaration that is
  /// deserialized from a module file.
  ///
  /// \param Size The size of the allocated object.
  /// \param Ctx The context in which we will allocate memory.
  /// \param ID The global ID of the deserialized declaration.
  /// \param Extra The amount of extra space to allocate after the object.</doc>
<def f='llvm/clang/lib/AST/DeclBase.cpp' l='72' ll='90' type='static void * clang::Decl::operator new(std::size_t Size, const clang::ASTContext &amp; Context, unsigned int ID, std::size_t Extra = 0)'/>
