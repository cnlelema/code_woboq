<dec f='llvm/llvm/include/llvm/Analysis/MemorySSAUpdater.h' l='180' type='void llvm::MemorySSAUpdater::wireOldPredecessorsToNewImmediatePredecessor(llvm::BasicBlock * Old, llvm::BasicBlock * New, ArrayRef&lt;llvm::BasicBlock *&gt; Preds, bool IdenticalEdgesWereMerged = true)'/>
<doc f='llvm/llvm/include/llvm/Analysis/MemorySSAUpdater.h' l='175'>/// A new empty BasicBlock (New) now branches directly to Old. Some of
  /// Old&apos;s predecessors (Preds) are now branching to New instead of Old.
  /// If New is the only predecessor, move Old&apos;s Phi, if present, to New.
  /// Otherwise, add a new Phi in New with appropriate incoming values, and
  /// update the incoming values in Old&apos;s Phi node too, if present.</doc>
<def f='llvm/llvm/lib/Analysis/MemorySSAUpdater.cpp' l='1122' ll='1158' type='void llvm::MemorySSAUpdater::wireOldPredecessorsToNewImmediatePredecessor(llvm::BasicBlock * Old, llvm::BasicBlock * New, ArrayRef&lt;llvm::BasicBlock *&gt; Preds, bool IdenticalEdgesWereMerged = true)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LICM.cpp' l='755' u='c' c='_ZN12_GLOBAL__N_118ControlFlowHoister23getOrCreateHoistedBlockEPN4llvm10BasicBlockE'/>
<use f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='417' u='c' c='_ZL25UpdateAnalysisInformationPN4llvm10BasicBlockES1_NS_8ArrayRefIS1_EEPNS_13DominatorTreeEPNS_8LoopInfoEPNS_16MemorySSAUpdaterEbRb'/>
<use f='llvm/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp' l='217' u='c' c='_ZN4llvm17SplitCriticalEdgeEPNS_11InstructionEjRKNS_28CriticalEdgeSplittingOptionsE'/>
