<dec f='llvm/llvm/include/llvm/IR/Constants.h' l='1031' type='static llvm::Constant * llvm::ConstantExpr::getBinOpIdentity(unsigned int Opcode, llvm::Type * Ty, bool AllowRHSConstant = false)'/>
<doc f='llvm/llvm/include/llvm/IR/Constants.h' l='1024'>/// Return the identity constant for a binary opcode.
  /// The identity constant C is defined as X op C = X and C op X = X for every
  /// X when the binary operation is commutative. If the binop is not
  /// commutative, callers can acquire the operand 1 identity constant by
  /// setting AllowRHSConstant to true. For example, any shift has a zero
  /// identity constant for operand 1: X shift 0 = X.
  /// Return nullptr if the operator does not have an identity constant.</doc>
<def f='llvm/llvm/lib/IR/Constants.cpp' l='2345' ll='2389' type='static llvm::Constant * llvm::ConstantExpr::getBinOpIdentity(unsigned int Opcode, llvm::Type * Ty, bool AllowRHSConstant = false)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='197' u='c' c='_ZN4llvmL29getSafeVectorConstantForBinopENS_11Instruction9BinaryOpsEPNS_8ConstantEb'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp' l='85' u='c' c='_ZL23foldSelectBinOpIdentityRN4llvm10SelectInstERKNS_17TargetLibraryInfoE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp' l='1312' u='c' c='_ZL27foldSelectShuffleWith1BinopRN4llvm17ShuffleVectorInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='491' u='c' c='_ZL16getIdentityValueN4llvm11Instruction9BinaryOpsEPNS_5ValueE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='668' u='c' c='_ZN4llvm12InstCombiner29SimplifyUsingDistributiveLawsERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='677' u='c' c='_ZN4llvm12InstCombiner29SimplifyUsingDistributiveLawsERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='705' u='c' c='_ZN4llvm12InstCombiner29SimplifyUsingDistributiveLawsERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='714' u='c' c='_ZN4llvm12InstCombiner29SimplifyUsingDistributiveLawsERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Reassociate.cpp' l='618' u='c' c='_ZL17LinearizeExprTreePN4llvm14BinaryOperatorERNS_15SmallVectorImplISt4pairIPNS_5ValueENS_5APIntEEEE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Reassociate.cpp' l='1844' u='c' c='_ZN4llvm15ReassociatePass18OptimizeExpressionEPNS_14BinaryOperatorERNS_15SmallVectorImplINS_11reassociate10ValueEntryEEE'/>
