<use f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='723' u='w' c='_ZN5clang12ast_matchers8internal32matcher_ignoringImplicit0MatcherC1ERKNS1_7MatcherINS_4ExprEEE'/>
<dec f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='723' type='const internal::Matcher&lt;Expr&gt;'/>
<use f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='724' u='m' c='_ZNK5clang12ast_matchers8internal32matcher_ignoringImplicit0Matcher7matchesERKNS_4ExprEPNS1_14ASTMatchFinderEPNS1_21BoundNodesTreeBuilderE'/>
<offset>128</offset>
<doc f='llvm/clang/include/clang/ASTMatchers/ASTMatchers.h' l='701'>/// Matches expressions that match InnerMatcher after any implicit AST
/// nodes are stripped off.
///
/// Parentheses and explicit casts are not discarded.
/// Given
/// \code
///   class C {};
///   C a = C();
///   C b;
///   C c = b;
/// \endcode
/// The matchers
/// \code
///    varDecl(hasInitializer(ignoringImplicit(cxxConstructExpr())))
/// \endcode
/// would match the declarations for a, b, and c.
/// While
/// \code
///    varDecl(hasInitializer(cxxConstructExpr()))
/// \endcode
/// only match the declarations for b and c.</doc>
