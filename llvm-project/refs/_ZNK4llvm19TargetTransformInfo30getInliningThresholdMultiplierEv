<dec f='llvm/llvm/include/llvm/Analysis/TargetTransformInfo.h' l='236' type='unsigned int llvm::TargetTransformInfo::getInliningThresholdMultiplier() const'/>
<doc f='llvm/llvm/include/llvm/Analysis/TargetTransformInfo.h' l='230'>/// \returns A value by which our inlining threshold should be multiplied.
  /// This is primarily used to bump up the inlining threshold wholesale on
  /// targets where calls are unusually expensive.
  ///
  /// TODO: This is a rather blunt instrument.  Perhaps altering the costs of
  /// individual classes of instructions would be better.</doc>
<use f='llvm/llvm/lib/Analysis/InlineCost.cpp' l='975' u='c' c='_ZN12_GLOBAL__N_112CallAnalyzer15updateThresholdERN4llvm8CallBaseERNS1_8FunctionE'/>
<def f='llvm/llvm/lib/Analysis/TargetTransformInfo.cpp' l='78' ll='80' type='unsigned int llvm::TargetTransformInfo::getInliningThresholdMultiplier() const'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUInline.cpp' l='121' u='c' c='_ZNK12_GLOBAL__N_113AMDGPUInliner18getInlineThresholdEN4llvm8CallSiteE'/>
