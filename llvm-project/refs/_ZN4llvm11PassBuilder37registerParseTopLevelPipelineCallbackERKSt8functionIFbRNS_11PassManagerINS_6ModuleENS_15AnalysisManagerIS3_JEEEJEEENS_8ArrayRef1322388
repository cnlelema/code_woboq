<def f='llvm/llvm/include/llvm/Passes/PassBuilder.h' l='626' ll='630' type='void llvm::PassBuilder::registerParseTopLevelPipelineCallback(const std::function&lt;bool (ModulePassManager &amp;, ArrayRef&lt;PipelineElement&gt;, bool, bool)&gt; &amp; C)'/>
<doc f='llvm/llvm/include/llvm/Passes/PassBuilder.h' l='619'>/// @}}

  /// Register a callback for a top-level pipeline entry.
  ///
  /// If the PassManager type is not given at the top level of the pipeline
  /// text, this Callback should be used to determine the appropriate stack of
  /// PassManagers and populate the passed ModulePassManager.</doc>
<use f='llvm/llvm/unittests/IR/PassBuilderCallbacksTest.cpp' l='946' u='c' c='_ZN12_GLOBAL__N_146ModuleCallbacksTest_ParseTopLevelPipeline_Test8TestBodyEv'/>
