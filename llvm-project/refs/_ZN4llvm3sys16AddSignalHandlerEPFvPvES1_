<dec f='llvm/llvm/include/llvm/Support/Signals.h' l='63' type='void llvm::sys::AddSignalHandler(SignalHandlerCallback FnPtr, void * Cookie)'/>
<doc f='llvm/llvm/include/llvm/Support/Signals.h' l='60'>/// Add a function to be called when an abort/kill signal is delivered to the
  /// process. The handler can have a cookie passed to it to identify what
  /// instance of the handler it is.</doc>
<use f='llvm/llvm/lib/Support/Debug.cpp' l='143' u='c' c='_ZZN4llvm4dbgsEvEN9dbgstreamC1Ev'/>
<use f='llvm/llvm/lib/Support/PrettyStackTrace.cpp' l='178' u='c' c='_ZL20RegisterCrashPrinterv'/>
<def f='llvm/llvm/lib/Support/Unix/Signals.inc' l='387' ll='391' type='void llvm::sys::AddSignalHandler(sys::SignalHandlerCallback FnPtr, void * Cookie)'/>
<use f='llvm/llvm/lib/Support/Unix/Signals.inc' l='600' u='c' c='_ZN4llvm3sys28PrintStackTraceOnErrorSignalENS_9StringRefEb'/>
<doc f='llvm/llvm/lib/Support/Unix/Signals.inc' l='384'>/// Add a function to be called when a signal is delivered to the process. The
/// handler can have a cookie passed to it to identify what instance of the
/// handler it is.</doc>
