<dec f='llvm/clang/lib/Lex/ModuleMap.cpp' l='1427' type='bool clang::ModuleMapParser::parseModuleId(ModuleId &amp; Id)'/>
<def f='llvm/clang/lib/Lex/ModuleMap.cpp' l='1671' ll='1689' type='bool clang::ModuleMapParser::parseModuleId(ModuleId &amp; Id)'/>
<use f='llvm/clang/lib/Lex/ModuleMap.cpp' l='1834' u='c' c='_ZN5clang15ModuleMapParser15parseModuleDeclEv'/>
<use f='llvm/clang/lib/Lex/ModuleMap.cpp' l='2112' u='c' c='_ZN5clang15ModuleMapParser21parseExternModuleDeclEv'/>
<use f='llvm/clang/lib/Lex/ModuleMap.cpp' l='2533' u='c' c='_ZN5clang15ModuleMapParser12parseUseDeclEv'/>
<use f='llvm/clang/lib/Lex/ModuleMap.cpp' l='2653' u='c' c='_ZN5clang15ModuleMapParser13parseConflictEv'/>
<doc f='llvm/clang/lib/Lex/ModuleMap.cpp' l='1664'>/// Parse a module-id.
///
///   module-id:
///     identifier
///     identifier &apos;.&apos; module-id
///
/// \returns true if an error occurred, false otherwise.</doc>
