<dec f='llvm/llvm/include/llvm/LTO/legacy/LTOCodeGenerator.h' l='163' type='bool llvm::LTOCodeGenerator::optimize(bool DisableVerify, bool DisableInline, bool DisableGVNLoadPRE, bool DisableVectorization)'/>
<use f='llvm/llvm/lib/LTO/LTOCodeGenerator.cpp' l='315' u='c' c='_ZN4llvm16LTOCodeGenerator15compile_to_fileEPPKcbbbb'/>
<use f='llvm/llvm/lib/LTO/LTOCodeGenerator.cpp' l='325' u='c' c='_ZN4llvm16LTOCodeGenerator7compileEbbbb'/>
<def f='llvm/llvm/lib/LTO/LTOCodeGenerator.cpp' l='513' ll='571' type='bool llvm::LTOCodeGenerator::optimize(bool DisableVerify, bool DisableInline, bool DisableGVNLoadPRE, bool DisableVectorization)'/>
<doc f='llvm/llvm/lib/LTO/LTOCodeGenerator.cpp' l='512'>/// Optimize merged modules using various IPO passes</doc>
<doc f='llvm/llvm/include/llvm/LTO/legacy/LTOCodeGenerator.h' l='160'>/// Optimizes the merged module.  Returns true on success.
  ///
  /// Calls \a verifyMergedModuleOnce().</doc>
<use f='llvm/llvm/tools/llvm-lto/llvm-lto.cpp' l='1001' u='c' c='main'/>
<use f='llvm/llvm/tools/lto/lto.cpp' l='434' u='c' c='lto_codegen_optimize'/>
