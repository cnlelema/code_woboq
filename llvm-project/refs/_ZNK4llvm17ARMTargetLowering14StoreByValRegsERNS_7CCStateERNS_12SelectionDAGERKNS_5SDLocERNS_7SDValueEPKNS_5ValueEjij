<dec f='llvm/llvm/lib/Target/ARM/ARMISelLowering.h' l='748' type='int llvm::ARMTargetLowering::StoreByValRegs(llvm::CCState &amp; CCInfo, llvm::SelectionDAG &amp; DAG, const llvm::SDLoc &amp; dl, llvm::SDValue &amp; Chain, const llvm::Value * OrigArg, unsigned int InRegsParamRecordIdx, int ArgOffset, unsigned int ArgSize) const'/>
<def f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='3549' ll='3600' type='int llvm::ARMTargetLowering::StoreByValRegs(llvm::CCState &amp; CCInfo, llvm::SelectionDAG &amp; DAG, const llvm::SDLoc &amp; dl, llvm::SDValue &amp; Chain, const llvm::Value * OrigArg, unsigned int InRegsParamRecordIdx, int ArgOffset, unsigned int ArgSize) const'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='3616' u='c' c='_ZNK4llvm17ARMTargetLowering20VarArgStyleRegistersERNS_7CCStateERNS_12SelectionDAGERKNS_5SDLocERNS_7SDValueEjjb'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='3788' u='c' c='_ZNK4llvm17ARMTargetLowering20LowerFormalArgumentsENS_7SDValueEjbRKNS_15SmallVectorImplINS_3ISD8InputArgEEERKNS_5SDLocERNS_12SelectionDAGERNS2_IS1_EE'/>
<doc f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='3541'>// The remaining GPRs hold either the beginning of variable-argument
// data, or the beginning of an aggregate passed by value (usually
// byval).  Either way, we allocate stack slots adjacent to the data
// provided by our caller, and store the unallocated registers there.
// If this is a variadic function, the va_list pointer will begin with
// these values; otherwise, this reassembles a (byval) structure that
// was split between registers and memory.
// Return: The frame index registers were stored into.</doc>
