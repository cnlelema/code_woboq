<dec f='llvm/llvm/tools/dsymutil/DwarfStreamer.h' l='82' type='void llvm::dsymutil::DwarfStreamer::emitRangesEntries(int64_t UnitPcOffset, uint64_t OrigLowPc, const FunctionIntervals::const_iterator &amp; FuncRange, const std::vector&lt;DWARFDebugRangeList::RangeListEntry&gt; &amp; Entries, unsigned int AddressSize)'/>
<use f='llvm/llvm/tools/dsymutil/DwarfLinker.cpp' l='1738' u='c' c='_ZNK4llvm8dsymutil11DwarfLinker18patchRangesForUnitERKNS0_11CompileUnitERNS_12DWARFContextERKNS0_14DebugMapObjectE'/>
<doc f='llvm/llvm/tools/dsymutil/DwarfStreamer.h' l='80'>/// Emit debug_ranges for \p FuncRange by translating the
  /// original \p Entries.</doc>
<def f='llvm/llvm/tools/dsymutil/DwarfStreamer.cpp' l='268' ll='300' type='void llvm::dsymutil::DwarfStreamer::emitRangesEntries(int64_t UnitPcOffset, uint64_t OrigLowPc, const FunctionIntervals::const_iterator &amp; FuncRange, const std::vector&lt;DWARFDebugRangeList::RangeListEntry&gt; &amp; Entries, unsigned int AddressSize)'/>
<doc f='llvm/llvm/tools/dsymutil/DwarfStreamer.cpp' l='264'>/// Emit the debug_range section contents for \p FuncRange by
/// translating the original \p Entries. The debug_range section
/// format is totally trivial, consisting just of pairs of address
/// sized addresses describing the ranges.</doc>
