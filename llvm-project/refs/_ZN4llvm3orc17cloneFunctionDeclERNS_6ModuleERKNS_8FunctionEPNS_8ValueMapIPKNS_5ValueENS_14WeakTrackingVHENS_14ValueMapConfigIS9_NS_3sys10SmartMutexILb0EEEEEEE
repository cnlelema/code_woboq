<dec f='llvm/llvm/include/llvm/ExecutionEngine/Orc/IndirectionUtils.h' l='449' type='llvm::Function * llvm::orc::cloneFunctionDecl(llvm::Module &amp; Dst, const llvm::Function &amp; F, ValueToValueMapTy * VMap = nullptr)'/>
<use f='llvm/llvm/include/llvm/ExecutionEngine/Orc/CompileOnDemandLayer.h' l='458' u='c' c='_ZN4llvm3orc26LegacyCompileOnDemandLayer16addLogicalModuleERNS1_12LogicalDylibESt10unique_ptrINS_6ModuleESt14default_deleteIS5_EE'/>
<use f='llvm/llvm/include/llvm/ExecutionEngine/Orc/CompileOnDemandLayer.h' l='635' u='c' c='_ZN4llvm3orc26LegacyCompileOnDemandLayer13emitPartitionERNS1_12LogicalDylibENS2_18SourceModuleHandleERKT_'/>
<use f='llvm/llvm/include/llvm/ExecutionEngine/Orc/CompileOnDemandLayer.h' l='641' u='c' c='_ZN4llvm3orc26LegacyCompileOnDemandLayer13emitPartitionERNS1_12LogicalDylibENS2_18SourceModuleHandleERKT_'/>
<use f='llvm/llvm/lib/ExecutionEngine/Orc/CompileOnDemandLayer.cpp' l='41' u='c' c='_ZL16extractSubModuleRN4llvm3orc16ThreadSafeModuleENS_9StringRefESt8functionIFbRKNS_11GlobalValueEEE'/>
<doc f='llvm/llvm/include/llvm/ExecutionEngine/Orc/IndirectionUtils.h' l='437'>/// Clone a function declaration into a new module.
///
///   This function can be used as the first step towards creating a callback
/// stub (see makeStub), or moving a function body (see moveFunctionBody).
///
///   If the VMap argument is non-null, a mapping will be added between F and
/// the new declaration, and between each of F&apos;s arguments and the new
/// declaration&apos;s arguments. This map can then be passed in to moveFunction to
/// move the function body if required. Note: When moving functions between
/// modules with these utilities, all decls should be cloned (and added to a
/// single VMap) before any bodies are moved. This will ensure that references
/// between functions all refer to the versions in the new module.</doc>
<def f='llvm/llvm/lib/ExecutionEngine/Orc/IndirectionUtils.cpp' l='283' ll='299' type='llvm::Function * llvm::orc::cloneFunctionDecl(llvm::Module &amp; Dst, const llvm::Function &amp; F, ValueToValueMapTy * VMap = nullptr)'/>
