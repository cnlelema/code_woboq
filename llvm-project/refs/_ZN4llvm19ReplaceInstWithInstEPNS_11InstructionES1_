<dec f='llvm/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h' l='105' type='void llvm::ReplaceInstWithInst(llvm::Instruction * From, llvm::Instruction * To)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h' l='103'>/// Replace the instruction specified by From with the instruction specified by
/// To. Copies DebugLoc from BI to I, if I doesn&apos;t already have a DebugLoc.</doc>
<use f='llvm/llvm/lib/Transforms/Coroutines/CoroSplit.cpp' l='465' u='c' c='_ZL30simplifyTerminatorLeadingToRetPN4llvm11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/IPO/LowerTypeTests.cpp' l='729' u='c' c='_ZN12_GLOBAL__N_120LowerTypeTestsModule17lowerTypeTestCallEPN4llvm8MetadataEPNS1_8CallInstERKNS0_14TypeIdLoweringE'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp' l='1712' u='c' c='_ZN12_GLOBAL__N_116AddressSanitizer17instrumentAddressEPN4llvm11InstructionES3_PNS1_5ValueEjbS5_bj'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp' l='1266' u='c' c='_ZN12_GLOBAL__N_113DFSanFunction10loadShadowEPN4llvm5ValueEmmPNS1_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/ThreadSanitizer.cpp' l='659' u='c' c='_ZN12_GLOBAL__N_115ThreadSanitizer16instrumentAtomicEPN4llvm11InstructionERKNS1_10DataLayoutE'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/ThreadSanitizer.cpp' l='676' u='c' c='_ZN12_GLOBAL__N_115ThreadSanitizer16instrumentAtomicEPN4llvm11InstructionERKNS1_10DataLayoutE'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/ThreadSanitizer.cpp' l='716' u='c' c='_ZN12_GLOBAL__N_115ThreadSanitizer16instrumentAtomicEPN4llvm11InstructionERKNS1_10DataLayoutE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LICM.cpp' l='769' u='c' c='_ZN12_GLOBAL__N_118ControlFlowHoister23getOrCreateHoistedBlockEPN4llvm10BasicBlockE'/>
<def f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='319' ll='322' type='void llvm::ReplaceInstWithInst(llvm::Instruction * From, llvm::Instruction * To)'/>
<use f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='790' u='c' c='_ZN4llvm25SplitBlockAndInsertIfThenEPNS_5ValueEPNS_11InstructionEbPNS_6MDNodeEPNS_13DominatorTreeEPNS_8LoopInfoEPNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='835' u='c' c='_ZN4llvm29SplitBlockAndInsertIfThenElseEPNS_5ValueEPNS_11InstructionEPS3_S4_PNS_6MDNodeE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='2574' u='c' c='_ZN4llvm19InnerLoopVectorizer30emitMinimumIterationCountCheckEPNS_4LoopEPNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='2605' u='c' c='_ZN4llvm19InnerLoopVectorizer14emitSCEVChecksEPNS_4LoopEPNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='2638' u='c' c='_ZN4llvm19InnerLoopVectorizer20emitMemRuntimeChecksEPNS_4LoopEPNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='2923' u='c' c='_ZN4llvm19InnerLoopVectorizer28createVectorizedLoopSkeletonEv'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='7126' u='c' c='_ZN4llvm20VPBranchOnMaskRecipe7executeERNS_16VPTransformStateE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/VPlan.cpp' l='224' u='c' c='_ZN4llvm12VPBasicBlock7executeEPNS_16VPTransformStateE'/>
