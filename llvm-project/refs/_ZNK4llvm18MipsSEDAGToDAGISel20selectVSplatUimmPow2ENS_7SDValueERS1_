<dec f='llvm/llvm/lib/Target/Mips/MipsSEISelDAGToDAG.h' l='121' type='bool llvm::MipsSEDAGToDAGISel::selectVSplatUimmPow2(llvm::SDValue N, llvm::SDValue &amp; Imm) const'/>
<doc f='llvm/llvm/lib/Target/Mips/MipsSEISelDAGToDAG.h' l='120'>/// Select constant vector splats whose value is a power of 2.</doc>
<inh f='llvm/llvm/lib/Target/Mips/MipsISelDAGToDAG.h' l='118' c='_ZNK4llvm16MipsDAGToDAGISel20selectVSplatUimmPow2ENS_7SDValueERS1_'/>
<def f='llvm/llvm/lib/Target/Mips/MipsSEISelDAGToDAG.cpp' l='735' ll='753' type='bool llvm::MipsSEDAGToDAGISel::selectVSplatUimmPow2(llvm::SDValue N, llvm::SDValue &amp; Imm) const'/>
<doc f='llvm/llvm/lib/Target/Mips/MipsSEISelDAGToDAG.cpp' l='725'>// Select constant vector splats whose value is a power of 2.
//
// In addition to the requirements of selectVSplat(), this function returns
// true and sets Imm if:
// * The splat value is the same width as the elements of the vector
// * The splat value is a power of two.
//
// This function looks through ISD::BITCAST nodes.
// TODO: This might not be appropriate for big-endian MSA since BITCAST is
//       sometimes a shuffle in big-endian mode.</doc>
