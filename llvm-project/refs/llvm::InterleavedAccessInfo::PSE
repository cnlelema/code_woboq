<use f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='423' u='w' c='_ZN4llvm21InterleavedAccessInfoC1ERNS_25PredicatedScalarEvolutionEPNS_4LoopEPNS_13DominatorTreeEPNS_8LoopInfoEPKNS_14LoopAccessInfoE'/>
<dec f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='483' type='llvm::PredicatedScalarEvolution &amp;'/>
<offset>0</offset>
<doc f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='479'>/// A wrapper around ScalarEvolution, used to add runtime SCEV checks.
  /// Simplifies SCEV expressions in the context of existing SCEV assumptions.
  /// The interleaved access analysis can also add new predicates (for example
  /// by versioning strides of pointers).</doc>
<use f='llvm/llvm/lib/Analysis/VectorUtils.cpp' l='827' u='a' c='_ZN4llvm21InterleavedAccessInfo26collectConstStrideAccessesERNS_9MapVectorIPNS_11InstructionENS0_16StrideDescriptorENS_8DenseMapIS3_jNS_12DenseMapInfo11695689'/>
<use f='llvm/llvm/lib/Analysis/VectorUtils.cpp' l='830' u='a' c='_ZN4llvm21InterleavedAccessInfo26collectConstStrideAccessesERNS_9MapVectorIPNS_11InstructionENS0_16StrideDescriptorENS_8DenseMapIS3_jNS_12DenseMapInfo11695689'/>
<use f='llvm/llvm/lib/Analysis/VectorUtils.cpp' l='1005' u='m' c='_ZN4llvm21InterleavedAccessInfo19analyzeInterleavingEb'/>
<use f='llvm/llvm/lib/Analysis/VectorUtils.cpp' l='1077' u='a' c='_ZN4llvm21InterleavedAccessInfo19analyzeInterleavingEb'/>
<use f='llvm/llvm/lib/Analysis/VectorUtils.cpp' l='1088' u='a' c='_ZN4llvm21InterleavedAccessInfo19analyzeInterleavingEb'/>
