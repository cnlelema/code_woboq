<def f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='418' ll='629'/>
<size>184</size>
<doc f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='410'>/// Drive the analysis of interleaved memory accesses in the loop.
///
/// Use this class to analyze interleaved accesses only when we can vectorize
/// a loop. Otherwise it&apos;s meaningless to do analysis as the vectorization
/// on interleaved accesses is unsafe.
///
/// The analysis collects interleave groups and records the relationships
/// between the member and the group in a map.</doc>
<fun r='_ZN4llvm21InterleavedAccessInfoC1ERNS_25PredicatedScalarEvolutionEPNS_4LoopEPNS_13DominatorTreeEPNS_8LoopInfoEPKNS_14LoopAccessInfoE'/>
<fun r='_ZN4llvm21InterleavedAccessInfoD1Ev'/>
<fun r='_ZN4llvm21InterleavedAccessInfo19analyzeInterleavingEb'/>
<fun r='_ZN4llvm21InterleavedAccessInfo5resetEv'/>
<fun r='_ZNK4llvm21InterleavedAccessInfo13isInterleavedEPNS_11InstructionE'/>
<fun r='_ZNK4llvm21InterleavedAccessInfo18getInterleaveGroupEPKNS_11InstructionE'/>
<fun r='_ZN4llvm21InterleavedAccessInfo19getInterleaveGroupsEv'/>
<fun r='_ZNK4llvm21InterleavedAccessInfo22requiresScalarEpilogueEv'/>
<fun r='_ZN4llvm21InterleavedAccessInfo39invalidateGroupsRequiringScalarEpilogueEv'/>
<mbr r='llvm::InterleavedAccessInfo::PSE' o='0' t='llvm::PredicatedScalarEvolution &amp;'/>
<mbr r='llvm::InterleavedAccessInfo::TheLoop' o='64' t='llvm::Loop *'/>
<mbr r='llvm::InterleavedAccessInfo::DT' o='128' t='llvm::DominatorTree *'/>
<mbr r='llvm::InterleavedAccessInfo::LI' o='192' t='llvm::LoopInfo *'/>
<mbr r='llvm::InterleavedAccessInfo::LAI' o='256' t='const llvm::LoopAccessInfo *'/>
<mbr r='llvm::InterleavedAccessInfo::RequiresScalarEpilogue' o='320' t='bool'/>
<mbr r='llvm::InterleavedAccessInfo::InterleaveGroupMap' o='384' t='DenseMap&lt;llvm::Instruction *, InterleaveGroup&lt;llvm::Instruction&gt; *&gt;'/>
<mbr r='llvm::InterleavedAccessInfo::InterleaveGroups' o='640' t='SmallPtrSet&lt;InterleaveGroup&lt;llvm::Instruction&gt; *, 4&gt;'/>
<mbr r='llvm::InterleavedAccessInfo::Dependences' o='1216' t='DenseMap&lt;llvm::Instruction *, SmallPtrSet&lt;llvm::Instruction *, 2&gt; &gt;'/>
<fun r='_ZN4llvm21InterleavedAccessInfo21createInterleaveGroupEPNS_11InstructionEij'/>
<fun r='_ZN4llvm21InterleavedAccessInfo12releaseGroupEPNS_15InterleaveGroupINS_11InstructionEEE'/>
<fun r='_ZN4llvm21InterleavedAccessInfo26collectConstStrideAccessesERNS_9MapVectorIPNS_11InstructionENS0_16StrideDescriptorENS_8DenseMapIS3_jNS_12DenseMapInfo11695689'/>
<fun r='_ZN4llvm21InterleavedAccessInfo9isStridedEi'/>
<fun r='_ZNK4llvm21InterleavedAccessInfo12isPredicatedEPNS_10BasicBlockE'/>
<fun r='_ZNK4llvm21InterleavedAccessInfo19areDependencesValidEv'/>
<fun r='_ZNK4llvm21InterleavedAccessInfo41canReorderMemAccessesForInterleavedGroupsEPSt4pairIPNS_11InstructionENS0_16StrideDescriptorEES6_'/>
<fun r='_ZN4llvm21InterleavedAccessInfo18collectDependencesEv'/>
