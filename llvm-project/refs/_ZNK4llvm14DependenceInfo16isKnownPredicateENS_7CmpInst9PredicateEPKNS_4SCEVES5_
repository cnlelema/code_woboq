<dec f='llvm/llvm/include/llvm/Analysis/DependenceAnalysis.h' l='559' type='bool llvm::DependenceInfo::isKnownPredicate(ICmpInst::Predicate Pred, const llvm::SCEV * X, const llvm::SCEV * Y) const'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='451' u='c' c='_ZN4llvm14DependenceInfo20intersectConstraintsEPNS0_10ConstraintEPKS1_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='453' u='c' c='_ZN4llvm14DependenceInfo20intersectConstraintsEPNS0_10ConstraintEPKS1_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='480' u='c' c='_ZN4llvm14DependenceInfo20intersectConstraintsEPNS0_10ConstraintEPKS1_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='485' u='c' c='_ZN4llvm14DependenceInfo20intersectConstraintsEPNS0_10ConstraintEPKS1_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='487' u='c' c='_ZN4llvm14DependenceInfo20intersectConstraintsEPNS0_10ConstraintEPKS1_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='494' u='c' c='_ZN4llvm14DependenceInfo20intersectConstraintsEPNS0_10ConstraintEPKS1_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='566' u='c' c='_ZN4llvm14DependenceInfo20intersectConstraintsEPNS0_10ConstraintEPKS1_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='568' u='c' c='_ZN4llvm14DependenceInfo20intersectConstraintsEPNS0_10ConstraintEPKS1_'/>
<def f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='967' ll='1009' type='bool llvm::DependenceInfo::isKnownPredicate(ICmpInst::Predicate Pred, const llvm::SCEV * X, const llvm::SCEV * Y) const'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1104' u='c' c='_ZNK4llvm14DependenceInfo7testZIVEPKNS_4SCEVES3_RNS_14FullDependenceE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1108' u='c' c='_ZNK4llvm14DependenceInfo7testZIVEPKNS_4SCEVES3_RNS_14FullDependenceE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1174' u='c' c='_ZNK4llvm14DependenceInfo13strongSIVtestEPKNS_4SCEVES3_S3_PKNS_4LoopEjRNS_14FullDependenceERNS0_10ConstraintE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1350' u='c' c='_ZNK4llvm14DependenceInfo19weakCrossingSIVtestEPKNS_4SCEVES3_S3_PKNS_4LoopEjRNS_14FullDependenceERNS0_10ConstraintERS3_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1356' u='c' c='_ZNK4llvm14DependenceInfo19weakCrossingSIVtestEPKNS_4SCEVES3_S3_PKNS_4LoopEjRNS_14FullDependenceERNS0_10ConstraintERS3_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1723' u='c' c='_ZNK4llvm14DependenceInfo18weakZeroSrcSIVtestEPKNS_4SCEVES3_S3_PKNS_4LoopEjRNS_14FullDependenceERNS0_10ConstraintE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1745' u='c' c='_ZNK4llvm14DependenceInfo18weakZeroSrcSIVtestEPKNS_4SCEVES3_S3_PKNS_4LoopEjRNS_14FullDependenceERNS0_10ConstraintE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1750' u='c' c='_ZNK4llvm14DependenceInfo18weakZeroSrcSIVtestEPKNS_4SCEVES3_S3_PKNS_4LoopEjRNS_14FullDependenceERNS0_10ConstraintE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1832' u='c' c='_ZNK4llvm14DependenceInfo18weakZeroDstSIVtestEPKNS_4SCEVES3_S3_PKNS_4LoopEjRNS_14FullDependenceERNS0_10ConstraintE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1854' u='c' c='_ZNK4llvm14DependenceInfo18weakZeroDstSIVtestEPKNS_4SCEVES3_S3_PKNS_4LoopEjRNS_14FullDependenceERNS0_10ConstraintE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='1859' u='c' c='_ZNK4llvm14DependenceInfo18weakZeroDstSIVtestEPKNS_4SCEVES3_S3_PKNS_4LoopEjRNS_14FullDependenceERNS0_10ConstraintE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='2064' u='c' c='_ZNK4llvm14DependenceInfo16symbolicRDIVtestEPKNS_4SCEVES3_S3_S3_PKNS_4LoopES6_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='2073' u='c' c='_ZNK4llvm14DependenceInfo16symbolicRDIVtestEPKNS_4SCEVES3_S3_S3_PKNS_4LoopES6_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='2087' u='c' c='_ZNK4llvm14DependenceInfo16symbolicRDIVtestEPKNS_4SCEVES3_S3_S3_PKNS_4LoopES6_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='2108' u='c' c='_ZNK4llvm14DependenceInfo16symbolicRDIVtestEPKNS_4SCEVES3_S3_S3_PKNS_4LoopES6_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='2125' u='c' c='_ZNK4llvm14DependenceInfo16symbolicRDIVtestEPKNS_4SCEVES3_S3_S3_PKNS_4LoopES6_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='2134' u='c' c='_ZNK4llvm14DependenceInfo16symbolicRDIVtestEPKNS_4SCEVES3_S3_S3_PKNS_4LoopES6_'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='2721' u='c' c='_ZNK4llvm14DependenceInfo10testBoundsEhjPNS0_9BoundInfoEPKNS_4SCEVE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='2724' u='c' c='_ZNK4llvm14DependenceInfo10testBoundsEhjPNS0_9BoundInfoEPKNS_4SCEVE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='2759' u='c' c='_ZNK4llvm14DependenceInfo13findBoundsALLEPNS0_15CoefficientInfoES2_PNS0_9BoundInfoEj'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='2762' u='c' c='_ZNK4llvm14DependenceInfo13findBoundsALLEPNS0_15CoefficientInfoES2_PNS0_9BoundInfoEj'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3157' u='c' c='_ZN4llvm14DependenceInfo13propagateLineERPKNS_4SCEVES4_RNS0_10ConstraintERb'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3239' u='c' c='_ZNK4llvm14DependenceInfo15updateDirectionERNS_10Dependence7DVEntryERKNS0_10ConstraintE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3244' u='c' c='_ZNK4llvm14DependenceInfo15updateDirectionERNS_10Dependence7DVEntryERKNS0_10ConstraintE'/>
<use f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='3249' u='c' c='_ZNK4llvm14DependenceInfo15updateDirectionERNS_10Dependence7DVEntryERKNS0_10ConstraintE'/>
<doc f='llvm/llvm/lib/Analysis/DependenceAnalysis.cpp' l='957'>// A wrapper around SCEV::isKnownPredicate.
// Looks for cases where we&apos;re interested in comparing for equality.
// If both X and Y have been identically sign or zero extended,
// it strips off the (confusing) extensions before invoking
// SCEV::isKnownPredicate. Perhaps, someday, the ScalarEvolution package
// will be similarly updated.
//
// If SCEV::isKnownPredicate can&apos;t prove the predicate,
// we try simple subtraction, which seems to help in some cases
// involving symbolics.</doc>
<doc f='llvm/llvm/include/llvm/Analysis/DependenceAnalysis.h' l='555'>/// isKnownPredicate - Compare X and Y using the predicate Pred.
    /// Basically a wrapper for SCEV::isKnownPredicate,
    /// but tries harder, especially in the presence of sign and zero
    /// extensions and symbolics.</doc>
