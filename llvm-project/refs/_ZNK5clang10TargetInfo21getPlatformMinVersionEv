<def f='llvm/clang/include/clang/Basic/TargetInfo.h' l='1286' type='llvm::VersionTuple clang::TargetInfo::getPlatformMinVersion() const'/>
<doc f='llvm/clang/include/clang/Basic/TargetInfo.h' l='1284'>/// Retrieve the minimum desired version of the platform, to
  /// which the program should be compiled.</doc>
<use f='llvm/clang/lib/AST/DeclBase.cpp' l='494' u='c' c='_ZL17CheckAvailabilityRN5clang10ASTContextEPKiPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm12VersionTupleE'/>
<use f='llvm/clang/lib/CodeGen/CGExprScalar.cpp' l='559' u='c' c='_ZN12_GLOBAL__N_117ScalarExprEmitter30VisitObjCAvailabilityCheckExprEPN5clang25ObjCAvailabilityCheckExprE'/>
<use f='llvm/clang/lib/Sema/SemaDeclAttr.cpp' l='8148' u='c' c='_ZL25DoEmitAvailabilityWarningRN5clang4SemaENS_18AvailabilityResultEPNS_4DeclEPKNS_9NamedDeclES7_N4llvm9StringRefENS8_8ArrayRefINS_14SourceLocationEEE12966173'/>
<use f='llvm/clang/lib/Sema/SemaDeclAttr.cpp' l='8511' u='c' c='_ZN12_GLOBAL__N_129DiagnoseUnguardedAvailabilityC1ERN5clang4SemaEPNS1_4DeclE'/>
<use f='llvm/clang/lib/Sema/SemaDeclObjC.cpp' l='4532' u='c' c='_ZL29checkObjCMethodX86VectorTypesRN5clang4SemaEPKNS_14ObjCMethodDeclE'/>
