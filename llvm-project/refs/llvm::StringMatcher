<def f='llvm/llvm/include/llvm/TableGen/StringMatcher.h' l='30' ll='50'/>
<size>32</size>
<doc f='llvm/llvm/include/llvm/TableGen/StringMatcher.h' l='25'>/// Given a list of strings and code to execute when they match, output a
/// simple switch tree to classify the input string.
///
/// If a match is found, the code in Matches[i].second is executed; control must
/// not exit this code fragment.  If nothing matches, execution falls through.</doc>
<mbr r='llvm::StringMatcher::StrVariableName' o='0' t='llvm::StringRef'/>
<mbr r='llvm::StringMatcher::Matches' o='128' t='const std::vector&lt;StringPair&gt; &amp;'/>
<mbr r='llvm::StringMatcher::OS' o='192' t='llvm::raw_ostream &amp;'/>
<fun r='_ZN4llvm13StringMatcherC1ENS_9StringRefERKSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_ESaISA_EERNS_11raw_ostreamE'/>
<fun r='_ZNK4llvm13StringMatcher4EmitEjb'/>
<fun r='_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb'/>
