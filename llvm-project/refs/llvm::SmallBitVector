<def f='llvm/llvm/include/llvm/ADT/SmallBitVector.h' l='34' ll='679'/>
<size>8</size>
<doc f='llvm/llvm/include/llvm/ADT/SmallBitVector.h' l='29'>/// This is a &apos;bitvector&apos; (really, a variable-sized bit array), optimized for
/// the case when the array is small. It contains one pointer-sized field, which
/// is directly used as a plain collection of bits when possible, or as a
/// pointer to a larger heap-allocated array when necessary. This allows normal
/// &quot;small&quot; cases to be fast without losing generality for large inputs.</doc>
<mbr r='llvm::SmallBitVector::X' o='0' t='uintptr_t'/>
<fun r='_ZNK4llvm14SmallBitVector10getPointerEv'/>
<fun r='_ZN4llvm14SmallBitVector13switchToSmallEmm'/>
<fun r='_ZN4llvm14SmallBitVector13switchToLargeEPNS_9BitVectorE'/>
<fun r='_ZNK4llvm14SmallBitVector15getSmallRawBitsEv'/>
<fun r='_ZN4llvm14SmallBitVector15setSmallRawBitsEm'/>
<fun r='_ZNK4llvm14SmallBitVector12getSmallSizeEv'/>
<fun r='_ZN4llvm14SmallBitVector12setSmallSizeEm'/>
<fun r='_ZNK4llvm14SmallBitVector12getSmallBitsEv'/>
<fun r='_ZN4llvm14SmallBitVector12setSmallBitsEm'/>
<fun r='_ZN4llvm14SmallBitVectorC1Ev'/>
<fun r='_ZN4llvm14SmallBitVectorC1Ejb'/>
<fun r='_ZN4llvm14SmallBitVectorC1ERKS0_'/>
<fun r='_ZN4llvm14SmallBitVectorC1EOS0_'/>
<fun r='_ZN4llvm14SmallBitVectorD1Ev'/>
<fun r='_ZNK4llvm14SmallBitVector14set_bits_beginEv'/>
<fun r='_ZNK4llvm14SmallBitVector12set_bits_endEv'/>
<fun r='_ZNK4llvm14SmallBitVector8set_bitsEv'/>
<fun r='_ZNK4llvm14SmallBitVector7isSmallEv'/>
<fun r='_ZNK4llvm14SmallBitVector5emptyEv'/>
<fun r='_ZNK4llvm14SmallBitVector4sizeEv'/>
<fun r='_ZNK4llvm14SmallBitVector5countEv'/>
<fun r='_ZNK4llvm14SmallBitVector3anyEv'/>
<fun r='_ZNK4llvm14SmallBitVector3allEv'/>
<fun r='_ZNK4llvm14SmallBitVector4noneEv'/>
<fun r='_ZNK4llvm14SmallBitVector10find_firstEv'/>
<fun r='_ZNK4llvm14SmallBitVector9find_lastEv'/>
<fun r='_ZNK4llvm14SmallBitVector16find_first_unsetEv'/>
<fun r='_ZNK4llvm14SmallBitVector15find_last_unsetEv'/>
<fun r='_ZNK4llvm14SmallBitVector9find_nextEj'/>
<fun r='_ZNK4llvm14SmallBitVector15find_next_unsetEj'/>
<fun r='_ZNK4llvm14SmallBitVector9find_prevEj'/>
<fun r='_ZN4llvm14SmallBitVector5clearEv'/>
<fun r='_ZN4llvm14SmallBitVector6resizeEjb'/>
<fun r='_ZN4llvm14SmallBitVector7reserveEj'/>
<fun r='_ZN4llvm14SmallBitVector3setEv'/>
<fun r='_ZN4llvm14SmallBitVector3setEj'/>
<fun r='_ZN4llvm14SmallBitVector3setEjj'/>
<fun r='_ZN4llvm14SmallBitVector5resetEv'/>
<fun r='_ZN4llvm14SmallBitVector5resetEj'/>
<fun r='_ZN4llvm14SmallBitVector5resetEjj'/>
<fun r='_ZN4llvm14SmallBitVector4flipEv'/>
<fun r='_ZN4llvm14SmallBitVector4flipEj'/>
<fun r='_ZNK4llvm14SmallBitVectorcoEv'/>
<fun r='_ZN4llvm14SmallBitVectorixEj'/>
<fun r='_ZNK4llvm14SmallBitVectorixEj'/>
<fun r='_ZNK4llvm14SmallBitVector4testEj'/>
<fun r='_ZN4llvm14SmallBitVector9push_backEb'/>
<fun r='_ZNK4llvm14SmallBitVector9anyCommonERKS0_'/>
<fun r='_ZNK4llvm14SmallBitVectoreqERKS0_'/>
<fun r='_ZNK4llvm14SmallBitVectorneERKS0_'/>
<fun r='_ZN4llvm14SmallBitVectoraNERKS0_'/>
<fun r='_ZN4llvm14SmallBitVector5resetERKS0_'/>
<fun r='_ZNK4llvm14SmallBitVector4testERKS0_'/>
<fun r='_ZN4llvm14SmallBitVectoroRERKS0_'/>
<fun r='_ZN4llvm14SmallBitVectoreOERKS0_'/>
<fun r='_ZN4llvm14SmallBitVectorlSEj'/>
<fun r='_ZN4llvm14SmallBitVectorrSEj'/>
<fun r='_ZN4llvm14SmallBitVectoraSERKS0_'/>
<fun r='_ZN4llvm14SmallBitVectoraSEOS0_'/>
<fun r='_ZN4llvm14SmallBitVector4swapERS0_'/>
<fun r='_ZN4llvm14SmallBitVector13setBitsInMaskEPKjj'/>
<fun r='_ZN4llvm14SmallBitVector15clearBitsInMaskEPKjj'/>
<fun r='_ZN4llvm14SmallBitVector16setBitsNotInMaskEPKjj'/>
<fun r='_ZN4llvm14SmallBitVector18clearBitsNotInMaskEPKjj'/>
<fun r='_ZN4llvm14SmallBitVector9applyMaskEPKjj'/>
