<dec f='llvm/clang/include/clang/Sema/Sema.h' l='4509' type='ExprResult clang::Sema::ActOnMemberAccessExpr(clang::Scope * S, clang::Expr * Base, clang::SourceLocation OpLoc, tok::TokenKind OpKind, clang::CXXScopeSpec &amp; SS, clang::SourceLocation TemplateKWLoc, clang::UnqualifiedId &amp; Member, clang::Decl * ObjCImpDecl)'/>
<use f='llvm/clang/lib/Parse/ParseExpr.cpp' l='1835' u='c' c='_ZN5clang6Parser28ParsePostfixExpressionSuffixENS_12ActionResultIPNS_4ExprELb1EEE'/>
<use f='llvm/clang/lib/Sema/SemaExprMember.cpp' l='1022' u='c' c='_ZN5clang4Sema24BuildMemberReferenceExprEPNS_4ExprENS_8QualTypeENS_14SourceLocationEbRKNS_12CXXScopeSpecES4_PNS_9NamedDeclERNS_12LookupResultEPKNS_24T696367'/>
<def f='llvm/clang/lib/Sema/SemaExprMember.cpp' l='1685' ll='1736' type='ExprResult clang::Sema::ActOnMemberAccessExpr(clang::Scope * S, clang::Expr * Base, clang::SourceLocation OpLoc, tok::TokenKind OpKind, clang::CXXScopeSpec &amp; SS, clang::SourceLocation TemplateKWLoc, clang::UnqualifiedId &amp; Id, clang::Decl * ObjCImpDecl)'/>
<doc f='llvm/clang/lib/Sema/SemaExprMember.cpp' l='1675'>/// The main callback when the parser finds something like
///   expression . [nested-name-specifier] identifier
///   expression -&gt; [nested-name-specifier] identifier
/// where &apos;identifier&apos; encompasses a fairly broad spectrum of
/// possibilities, including destructor and operator references.
///
/// \param OpKind either tok::arrow or tok::period
/// \param ObjCImpDecl the current Objective-C \@implementation
///   decl; this is an ugly hack around the fact that Objective-C
///   \@implementations aren&apos;t properly put in the context chain</doc>
<use f='llvm/clang/lib/Sema/SemaPseudoObject.cpp' l='1484' u='c' c='_ZN12_GLOBAL__N_119MSPropertyOpBuilder8buildGetEv'/>
<use f='llvm/clang/lib/Sema/SemaPseudoObject.cpp' l='1513' u='c' c='_ZN12_GLOBAL__N_119MSPropertyOpBuilder8buildSetEPN5clang4ExprENS1_14SourceLocationEb'/>
