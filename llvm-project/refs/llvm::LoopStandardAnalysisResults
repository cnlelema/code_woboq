<def f='llvm/llvm/include/llvm/Analysis/LoopAnalysisManager.h' l='53' ll='62'/>
<size>64</size>
<doc f='llvm/llvm/include/llvm/Analysis/LoopAnalysisManager.h' l='49'>/// The adaptor from a function pass to a loop pass computes these analyses and
/// makes them available to the loop passes &quot;for free&quot;. Each loop pass is
/// expected expected to update these analyses if necessary to ensure they&apos;re
/// valid after it runs.</doc>
<mbr r='llvm::LoopStandardAnalysisResults::AA' o='0' t='llvm::AAResults &amp;'/>
<mbr r='llvm::LoopStandardAnalysisResults::AC' o='64' t='llvm::AssumptionCache &amp;'/>
<mbr r='llvm::LoopStandardAnalysisResults::DT' o='128' t='llvm::DominatorTree &amp;'/>
<mbr r='llvm::LoopStandardAnalysisResults::LI' o='192' t='llvm::LoopInfo &amp;'/>
<mbr r='llvm::LoopStandardAnalysisResults::SE' o='256' t='llvm::ScalarEvolution &amp;'/>
<mbr r='llvm::LoopStandardAnalysisResults::TLI' o='320' t='llvm::TargetLibraryInfo &amp;'/>
<mbr r='llvm::LoopStandardAnalysisResults::TTI' o='384' t='llvm::TargetTransformInfo &amp;'/>
<mbr r='llvm::LoopStandardAnalysisResults::MSSA' o='448' t='llvm::MemorySSA *'/>
