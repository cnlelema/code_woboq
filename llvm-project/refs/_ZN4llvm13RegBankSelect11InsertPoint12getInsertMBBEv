<def f='llvm/llvm/include/llvm/CodeGen/GlobalISel/RegBankSelect.h' l='167' ll='176' type='llvm::MachineBasicBlock &amp; llvm::RegBankSelect::InsertPoint::getInsertMBB()'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/RegBankSelect.h' l='180' u='c' c='_ZN4llvm13RegBankSelect11InsertPoint6insertERNS_12MachineInstrE'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/RegBankSelect.h' l='159'>/// The first call to this method will cause the splitting to
    /// happen if need be, then sub sequent calls just return
    /// the basic block that contains the insertion point.
    /// I.e., no more splitting will occur.
    ///
    /// \return The basic block should be used with
    /// MachineBasicBlock::insert and ::getPoint. The new code should
    /// happen before that point.</doc>
