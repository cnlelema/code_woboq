<dec f='llvm/llvm/lib/Target/X86/X86ISelLowering.h' l='1287' type='llvm::SDValue llvm::X86TargetLowering::FP_TO_INTHelper(llvm::SDValue Op, llvm::SelectionDAG &amp; DAG, bool isSigned) const'/>
<def f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='18328' ll='18451' type='llvm::SDValue llvm::X86TargetLowering::FP_TO_INTHelper(llvm::SDValue Op, llvm::SelectionDAG &amp; DAG, bool IsSigned) const'/>
<use f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='18990' u='c' c='_ZNK4llvm17X86TargetLowering14LowerFP_TO_INTENS_7SDValueERNS_12SelectionDAGE'/>
<use f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='27617' u='c' c='_ZNK4llvm17X86TargetLowering18ReplaceNodeResultsEPNS_6SDNodeERNS_15SmallVectorImplINS_7SDValueEEERNS_12SelectionDAGE'/>
<doc f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='18322'>// If the given FP_TO_SINT (IsSigned) or FP_TO_UINT (!IsSigned) operation
// is legal, or has an fp128 or f16 source (which needs to be promoted to f32),
// just return an SDValue().
// Otherwise it is assumed to be a conversion from one of f32, f64 or f80
// to i16, i32 or i64, and we lower it to a legal sequence and return the
// result.</doc>
