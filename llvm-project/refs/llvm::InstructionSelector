<def f='llvm/llvm/include/llvm/CodeGen/GlobalISel/InstructionSelector.h' l='344' ll='458'/>
<size>8</size>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/InstructionSelector.h' l='343'>/// Provides the logic to select generic machine instructions.</doc>
<fun r='_ZN4llvm19InstructionSelectorD1Ev'/>
<fun r='_ZNK4llvm19InstructionSelector6selectERNS_12MachineInstrERNS_15CodeGenCoverageE'/>
<fun r='_ZN4llvm19InstructionSelectorC1Ev'/>
<fun r='_ZNK4llvm19InstructionSelector17executeMatchTableERT_RNS_11SmallVectorINS_19MachineInstrBuilderELj4EEERNS0_12MatcherStateERKNS0_10ISelInfoTyIT0_T1_T2_3694218'/>
<fun r='_ZNK4llvm19InstructionSelector13getMatchTableEv'/>
<fun r='_ZNK4llvm19InstructionSelector20testImmPredicate_I64Ejl'/>
<fun r='_ZNK4llvm19InstructionSelector22testImmPredicate_APIntEjRKNS_5APIntE'/>
<fun r='_ZNK4llvm19InstructionSelector24testImmPredicate_APFloatEjRKNS_7APFloatE'/>
<fun r='_ZNK4llvm19InstructionSelector18testMIPredicate_MIEjRKNS_12MachineInstrE'/>
<fun r='_ZNK4llvm19InstructionSelector29constrainOperandRegToRegClassERNS_12MachineInstrEjRKNS_19TargetRegisterClassERKNS_15TargetInstrInfoERKNS_18TargetRegis12307033'/>
<fun r='_ZNK4llvm19InstructionSelector17isOperandImmEqualERKNS_14MachineOperandElRKNS_19MachineRegisterInfoE'/>
<fun r='_ZNK4llvm19InstructionSelector24isBaseWithConstantOffsetERKNS_14MachineOperandERKNS_19MachineRegisterInfoE'/>
<fun r='_ZNK4llvm19InstructionSelector21isObviouslySafeToFoldERNS_12MachineInstrES2_'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64InstructionSelector.cpp' l='48' c='(anonymousnamespace)::AArch64InstructionSelector'/>
<fun r='_ZNK4llvm19InstructionSelector17executeMatchTableERT_RNS_11SmallVectorINS_19MachineInstrBuilderELj4EEERNS0_12MatcherStateERKNS0_10ISelInfoTyIT0_T1_T2_3694218'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/AMDGPUInstructionSelector.h' l='42' c='llvm::AMDGPUInstructionSelector'/>
<ovr f='llvm/llvm/lib/Target/ARM/ARMInstructionSelector.cpp' l='32' c='(anonymousnamespace)::ARMInstructionSelector'/>
<ovr f='llvm/llvm/lib/Target/Mips/MipsInstructionSelector.cpp' l='31' c='(anonymousnamespace)::MipsInstructionSelector'/>
<ovr f='llvm/llvm/lib/Target/X86/X86InstructionSelector.cpp' l='58' c='(anonymousnamespace)::X86InstructionSelector'/>
