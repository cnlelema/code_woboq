<def f='llvm/llvm/include/llvm/Support/JSON.h' l='647' ll='675'/>
<size>8</size>
<doc f='llvm/llvm/include/llvm/Support/JSON.h' l='635'>/// Helper for mapping JSON objects onto protocol structs.
///
/// Example:
/// \code
///   bool fromJSON(const Value &amp;E, MyStruct &amp;R) {
///     ObjectMapper O(E);
///     if (!O || !O.map(&quot;mandatory_field&quot;, R.MandatoryField))
///       return false;
///     O.map(&quot;optional_field&quot;, R.OptionalField);
///     return true;
///   }
/// \endcode</doc>
<fun r='_ZN4llvm4json12ObjectMapperC1ERKNS0_5ValueE'/>
<fun r='_ZN4llvm4json12ObjectMappercvbEv'/>
<fun r='_ZN4llvm4json12ObjectMapper3mapENS_9StringRefERT_'/>
<fun r='_ZN4llvm4json12ObjectMapper3mapENS_9StringRefERNS_8OptionalIT_EE'/>
<mbr r='llvm::json::ObjectMapper::O' o='0' t='const llvm::json::Object *'/>
