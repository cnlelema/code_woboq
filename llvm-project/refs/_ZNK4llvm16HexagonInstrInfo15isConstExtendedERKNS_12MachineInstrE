<dec f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.h' l='362' type='bool llvm::HexagonInstrInfo::isConstExtended(const llvm::MachineInstr &amp; MI) const'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonBranchRelaxation.cpp' l='204' u='c' c='_ZN12_GLOBAL__N_123HexagonBranchRelaxation16reGenerateBranchERN4llvm15MachineFunctionERNS1_8DenseMapIPNS1_17MachineBasicBlockEjNS1_12DenseMapInfoIS6_E13581357'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp' l='1050' u='c' c='_ZNK12_GLOBAL__N_121HexagonConstExtenders14getOffsetRangeENS0_8RegisterERKN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp' l='1227' u='c' c='_ZN12_GLOBAL__N_121HexagonConstExtenders12collectInstrERN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonGenInsert.cpp' l='1073' u='c' c='_ZN12_GLOBAL__N_116HexagonGenInsert16pruneCoveredSetsEj'/>
<def f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='2019' ll='2060' type='bool llvm::HexagonInstrInfo::isConstExtended(const llvm::MachineInstr &amp; MI) const'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='4292' u='c' c='_ZNK4llvm16HexagonInstrInfo7getSizeERKNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='4344' u='c' c='_ZNK4llvm16HexagonInstrInfo15immediateExtendERNS_12MachineInstrE'/>
<doc f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='2017'>// TODO: In order to have isExtendable for fpimm/f32Ext, we need to handle
// isFPImm and later getFPImm as well.</doc>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp' l='1703' u='c' c='_ZN4llvm21HexagonPacketizerList11addToPacketERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp' l='1716' u='c' c='_ZN4llvm21HexagonPacketizerList11addToPacketERNS_12MachineInstrE'/>
