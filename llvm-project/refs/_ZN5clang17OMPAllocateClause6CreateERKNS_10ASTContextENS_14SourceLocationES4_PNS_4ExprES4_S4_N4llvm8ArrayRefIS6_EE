<dec f='llvm/clang/include/clang/AST/OpenMPClause.h' l='360' type='static clang::OMPAllocateClause * clang::OMPAllocateClause::Create(const clang::ASTContext &amp; C, clang::SourceLocation StartLoc, clang::SourceLocation LParenLoc, clang::Expr * Allocator, clang::SourceLocation ColonLoc, clang::SourceLocation EndLoc, ArrayRef&lt;clang::Expr *&gt; VL)'/>
<doc f='llvm/clang/include/clang/AST/OpenMPClause.h' l='351'>/// Creates clause with a list of variables \a VL.
  ///
  /// \param C AST context.
  /// \param StartLoc Starting location of the clause.
  /// \param LParenLoc Location of &apos;(&apos;.
  /// \param Allocator Allocator expression.
  /// \param ColonLoc Location of &apos;:&apos; delimiter.
  /// \param EndLoc Ending location of the clause.
  /// \param VL List of references to the variables.</doc>
<def f='llvm/clang/lib/AST/OpenMPClause.cpp' l='704' ll='715' type='static clang::OMPAllocateClause * clang::OMPAllocateClause::Create(const clang::ASTContext &amp; C, clang::SourceLocation StartLoc, clang::SourceLocation LParenLoc, clang::Expr * Allocator, clang::SourceLocation ColonLoc, clang::SourceLocation EndLoc, ArrayRef&lt;clang::Expr *&gt; VL)'/>
