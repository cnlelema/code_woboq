<dec f='llvm/clang/include/clang/AST/OpenMPClause.h' l='2045' type='static clang::OMPLastprivateClause * clang::OMPLastprivateClause::Create(const clang::ASTContext &amp; C, clang::SourceLocation StartLoc, clang::SourceLocation LParenLoc, clang::SourceLocation EndLoc, ArrayRef&lt;clang::Expr *&gt; VL, ArrayRef&lt;clang::Expr *&gt; SrcExprs, ArrayRef&lt;clang::Expr *&gt; DstExprs, ArrayRef&lt;clang::Expr *&gt; AssignmentOps, clang::Stmt * PreInit, clang::Expr * PostUpdate)'/>
<doc f='llvm/clang/include/clang/AST/OpenMPClause.h' l='2020'>/// Creates clause with a list of variables \a VL.
  ///
  /// \param C AST context.
  /// \param StartLoc Starting location of the clause.
  /// \param LParenLoc Location of &apos;(&apos;.
  /// \param EndLoc Ending location of the clause.
  /// \param VL List of references to the variables.
  /// \param SrcExprs List of helper expressions for proper generation of
  /// assignment operation required for lastprivate clause. This list represents
  /// private variables (for arrays, single array element).
  /// \param DstExprs List of helper expressions for proper generation of
  /// assignment operation required for lastprivate clause. This list represents
  /// original variables (for arrays, single array element).
  /// \param AssignmentOps List of helper expressions that represents assignment
  /// operation:
  /// \code
  /// DstExprs = SrcExprs;
  /// \endcode
  /// Required for proper codegen of final assignment performed by the
  /// lastprivate clause.
  /// \param PreInit Statement that must be executed before entering the OpenMP
  /// region with this clause.
  /// \param PostUpdate Expression that must be executed after exit from the
  /// OpenMP region with this clause.</doc>
<def f='llvm/clang/lib/AST/OpenMPClause.cpp' l='335' ll='350' type='static clang::OMPLastprivateClause * clang::OMPLastprivateClause::Create(const clang::ASTContext &amp; C, clang::SourceLocation StartLoc, clang::SourceLocation LParenLoc, clang::SourceLocation EndLoc, ArrayRef&lt;clang::Expr *&gt; VL, ArrayRef&lt;clang::Expr *&gt; SrcExprs, ArrayRef&lt;clang::Expr *&gt; DstExprs, ArrayRef&lt;clang::Expr *&gt; AssignmentOps, clang::Stmt * PreInit, clang::Expr * PostUpdate)'/>
