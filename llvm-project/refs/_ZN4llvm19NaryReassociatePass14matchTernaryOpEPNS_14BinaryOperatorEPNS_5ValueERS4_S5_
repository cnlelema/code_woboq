<dec f='llvm/llvm/include/llvm/Transforms/Scalar/NaryReassociate.h' l='150' type='bool llvm::NaryReassociatePass::matchTernaryOp(llvm::BinaryOperator * I, llvm::Value * V, llvm::Value *&amp; Op1, llvm::Value *&amp; Op2)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Scalar/NaryReassociate.h' l='149'>// Tries to match Op1 and Op2 by using V.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/NaryReassociate.cpp' l='453' u='c' c='_ZN4llvm19NaryReassociatePass22tryReassociateBinaryOpEPNS_5ValueES2_PNS_14BinaryOperatorE'/>
<def f='llvm/llvm/lib/Transforms/Scalar/NaryReassociate.cpp' l='496' ll='507' type='bool llvm::NaryReassociatePass::matchTernaryOp(llvm::BinaryOperator * I, llvm::Value * V, llvm::Value *&amp; Op1, llvm::Value *&amp; Op2)'/>
