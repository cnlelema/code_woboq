<dec f='llvm/llvm/include/llvm/LTO/LTO.h' l='400' type='llvm::Error llvm::lto::LTO::addModule(llvm::lto::InputFile &amp; Input, unsigned int ModI, const llvm::lto::SymbolResolution *&amp; ResI, const llvm::lto::SymbolResolution * ResE)'/>
<doc f='llvm/llvm/include/llvm/LTO/LTO.h' l='396'>// These functions take a range of symbol resolutions [ResI, ResE) and consume
  // the resolutions used by a single input module by incrementing ResI. After
  // these functions return, [ResI, ResE) will refer to the resolution range for
  // the remaining modules in the InputFile.</doc>
<use f='llvm/llvm/lib/LTO/LTO.cpp' l='569' u='c' c='_ZN4llvm3lto3LTO3addESt10unique_ptrINS0_9InputFileESt14default_deleteIS3_EENS_8ArrayRefINS0_16SymbolResolutionEEE'/>
<def f='llvm/llvm/lib/LTO/LTO.cpp' l='576' ll='615' type='llvm::Error llvm::lto::LTO::addModule(llvm::lto::InputFile &amp; Input, unsigned int ModI, const llvm::lto::SymbolResolution *&amp; ResI, const llvm::lto::SymbolResolution * ResE)'/>
