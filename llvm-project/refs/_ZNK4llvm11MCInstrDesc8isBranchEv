<def f='llvm/llvm/include/llvm/MC/MCInstrDesc.h' l='277' type='bool llvm::MCInstrDesc::isBranch() const'/>
<use f='llvm/llvm/include/llvm/MC/MCInstrDesc.h' l='288' u='c' c='_ZNK4llvm11MCInstrDesc19isConditionalBranchEv'/>
<use f='llvm/llvm/include/llvm/MC/MCInstrDesc.h' l='296' u='c' c='_ZNK4llvm11MCInstrDesc21isUnconditionalBranchEv'/>
<doc f='llvm/llvm/include/llvm/MC/MCInstrDesc.h' l='273'>/// Returns true if this is a conditional, unconditional, or
  /// indirect branch.  Predicates below can be used to discriminate between
  /// these cases, and the TargetInstrInfo::AnalyzeBranch method can be used to
  /// get more information.</doc>
<use f='llvm/llvm/include/llvm/MC/MCInstrAnalysis.h' l='38' u='c' c='_ZNK4llvm15MCInstrAnalysis8isBranchERKNS_6MCInstE'/>
<use f='llvm/llvm/lib/MC/MCInstrDesc.cpp' l='34' u='c' c='_ZNK4llvm11MCInstrDesc20mayAffectControlFlowERKNS_6MCInstERKNS_14MCRegisterInfoE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp' l='3233' u='c' c='_ZNK4llvm11SIInstrInfo17verifyInstructionERKNS_12MachineInstrERNS_9StringRefE'/>
<use f='llvm/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCChecker.cpp' l='303' u='c' c='_ZN4llvm16HexagonMCChecker18reportBranchErrorsEv'/>
<use f='llvm/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCChecker.cpp' l='314' u='c' c='_ZN4llvm16HexagonMCChecker11checkHWLoopEv'/>
<use f='llvm/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCChecker.cpp' l='328' u='c' c='_ZN4llvm16HexagonMCChecker12checkCOFMax1Ev'/>
<use f='llvm/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCChecker.cpp' l='415' u='c' c='_ZN4llvm16HexagonMCChecker14checkNewValuesEv'/>
<use f='llvm/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCCodeEmitter.cpp' l='484' u='c' c='_ZNK4llvm20HexagonMCCodeEmitter14getFixupNoBitsERKNS_11MCInstrInfoERKNS_6MCInstERKNS_9MCOperandENS_15MCSymbolRefExpr11VariantKindE'/>
<use f='llvm/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCCodeEmitter.cpp' l='511' u='c' c='_ZNK4llvm20HexagonMCCodeEmitter14getFixupNoBitsERKNS_11MCInstrInfoERKNS_6MCInstERKNS_9MCOperandENS_15MCSymbolRefExpr11VariantKindE'/>
<use f='llvm/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCCodeEmitter.cpp' l='671' u='c' c='_ZNK4llvm20HexagonMCCodeEmitter14getExprOpValueERKNS_6MCInstERKNS_9MCOperandEPKNS_6MCExprERNS_15SmallVectorImplINS_7MCFixupEEERKNS_15MCSubtargetInfoE'/>
<use f='llvm/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCInstrInfo.cpp' l='506' u='c' c='_ZN4llvm18HexagonMCInstrInfo15isConstExtendedERKNS_11MCInstrInfoERKNS_6MCInstE'/>
<use f='llvm/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCInstrInfo.cpp' l='508' u='c' c='_ZN4llvm18HexagonMCInstrInfo15isConstExtendedERKNS_11MCInstrInfoERKNS_6MCInstE'/>
<use f='llvm/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonShuffler.cpp' l='395' u='c' c='_ZN4llvm15HexagonShuffler5checkEv'/>
<use f='llvm/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonShuffler.cpp' l='402' u='c' c='_ZN4llvm15HexagonShuffler5checkEv'/>
<use f='llvm/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonShuffler.cpp' l='404' u='c' c='_ZN4llvm15HexagonShuffler5checkEv'/>
<use f='llvm/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp' l='1965' u='c' c='_ZN12_GLOBAL__N_113MipsAsmParser18processInstructionERN4llvm6MCInstENS1_5SMLocERNS1_10MCStreamerEPKNS1_15MCSubtargetInfoE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCHazardRecognizers.cpp' l='59' u='c' c='_ZN4llvm34PPCDispatchGroupSBHazardRecognizer14isBCTRAfterSetEPNS_5SUnitE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCHazardRecognizers.cpp' l='177' u='c' c='_ZN4llvm34PPCDispatchGroupSBHazardRecognizer15EmitInstructionEPNS_5SUnitE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCHazardRecognizers.cpp' l='197' u='c' c='_ZN4llvm34PPCDispatchGroupSBHazardRecognizer15EmitInstructionEPNS_5SUnitE'/>
