<dec f='llvm/llvm/include/llvm/ADT/APFloat.h' l='506' type='bool llvm::detail::IEEEFloat::roundAwayFromZero(llvm::APFloatBase::roundingMode , llvm::lostFraction , unsigned int ) const'/>
<def f='llvm/llvm/lib/Support/APFloat.cpp' l='1238' ll='1271' type='bool llvm::detail::IEEEFloat::roundAwayFromZero(llvm::APFloatBase::roundingMode rounding_mode, llvm::lostFraction lost_fraction, unsigned int bit) const'/>
<use f='llvm/llvm/lib/Support/APFloat.cpp' l='1339' u='c' c='_ZN4llvm6detail9IEEEFloat9normalizeENS_11APFloatBase12roundingModeENS_12lostFractionE'/>
<use f='llvm/llvm/lib/Support/APFloat.cpp' l='2098' u='c' c='_ZNK4llvm6detail9IEEEFloat28convertToSignExtendedIntegerENS_15MutableArrayRefImEEjbNS_11APFloatBase12roundingModeEPb'/>
<use f='llvm/llvm/lib/Support/APFloat.cpp' l='2712' u='c' c='_ZNK4llvm6detail9IEEEFloat24convertNormalToHexStringEPcjbNS_11APFloatBase12roundingModeE'/>
<doc f='llvm/llvm/lib/Support/APFloat.cpp' l='1233'>/* Returns TRUE if, when truncating the current number, with BIT the
   new LSB, with the given lost fraction and rounding mode, the result
   would need to be rounded away from zero (i.e., by increasing the
   signficand).  This routine must work for fcZero of both signs, and
   fcNormal numbers.  */</doc>
