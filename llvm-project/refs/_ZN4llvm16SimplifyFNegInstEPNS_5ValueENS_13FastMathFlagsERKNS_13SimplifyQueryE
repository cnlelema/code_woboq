<dec f='llvm/llvm/include/llvm/Analysis/InstructionSimplify.h' l='121' type='llvm::Value * llvm::SimplifyFNegInst(llvm::Value * Op, llvm::FastMathFlags FMF, const llvm::SimplifyQuery &amp; Q)'/>
<doc f='llvm/llvm/include/llvm/Analysis/InstructionSimplify.h' l='116'>// NOTE: the explicit multiple argument versions of these functions are
// deprecated.
// Please use the SimplifyQuery versions in new code.

/// Given operand for an FNeg, fold the result or return null.</doc>
<use f='llvm/llvm/lib/Analysis/InlineCost.cpp' l='1116' u='c' c='_ZN12_GLOBAL__N_112CallAnalyzer9visitFNegERN4llvm13UnaryOperatorE'/>
<def f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='4324' ll='4327' type='llvm::Value * llvm::SimplifyFNegInst(llvm::Value * Op, llvm::FastMathFlags FMF, const llvm::SimplifyQuery &amp; Q)'/>
<use f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='5098' u='c' c='_ZN4llvm19SimplifyInstructionEPNS_11InstructionERKNS_13SimplifyQueryEPNS_25OptimizationRemarkEmitterE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp' l='1873' u='c' c='_ZN4llvm12InstCombiner9visitFNegERNS_13UnaryOperatorE'/>
