<def f='llvm/llvm/include/llvm/Support/BinaryStream.h' l='35' ll='66'/>
<ovr f='llvm/llvm/include/llvm/Support/BinaryStream.h' l='73' c='llvm::WritableBinaryStream'/>
<ovr f='llvm/llvm/include/llvm/Support/BinaryByteStream.h' l='31' c='llvm::BinaryByteStream'/>
<size>8</size>
<doc f='llvm/llvm/include/llvm/Support/BinaryStream.h' l='28'>/// An interface for accessing data in a stream-like format, but which
/// discourages copying.  Instead of specifying a buffer in which to copy
/// data on a read, the API returns an ArrayRef to data owned by the stream&apos;s
/// implementation.  Since implementations may not necessarily store data in a
/// single contiguous buffer (or even in memory at all), in such cases a it may
/// be necessary for an implementation to cache such a buffer so that it can
/// return it.</doc>
<fun r='_ZN4llvm12BinaryStreamD1Ev'/>
<fun r='_ZNK4llvm12BinaryStream9getEndianEv'/>
<fun r='_ZN4llvm12BinaryStream9readBytesEjjRNS_8ArrayRefIhEE'/>
<fun r='_ZN4llvm12BinaryStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE'/>
<fun r='_ZN4llvm12BinaryStream9getLengthEv'/>
<fun r='_ZNK4llvm12BinaryStream8getFlagsEv'/>
<fun r='_ZN4llvm12BinaryStream18checkOffsetForReadEjj'/>
<ovr f='llvm/llvm/include/llvm/DebugInfo/MSF/MappedBlockStream.h' l='39' c='llvm::msf::MappedBlockStream'/>
<ovr f='llvm/llvm/include/llvm/Support/BinaryItemStream.h' l='34' c='llvm::BinaryItemStream'/>
<ovr f='llvm/llvm/lib/Support/BinaryStreamRef.cpp' l='17' c='(anonymousnamespace)::ArrayRefImpl'/>
