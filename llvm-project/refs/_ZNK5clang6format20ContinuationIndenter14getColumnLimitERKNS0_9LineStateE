<dec f='llvm/clang/lib/Format/ContinuationIndenter.h' l='89' type='unsigned int clang::format::ContinuationIndenter::getColumnLimit(const clang::format::LineState &amp; State) const'/>
<doc f='llvm/clang/lib/Format/ContinuationIndenter.h' l='87'>/// Get the column limit for this line. This is the style&apos;s column
  /// limit, potentially reduced for preprocessor definitions.</doc>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='365' u='c' c='_ZN5clang6format20ContinuationIndenter9mustBreakERKNS0_9LineStateE'/>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='374' u='c' c='_ZN5clang6format20ContinuationIndenter9mustBreakERKNS0_9LineStateE'/>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='1379' u='c' c='_ZN5clang6format20ContinuationIndenter24moveStatePastScopeOpenerERNS0_9LineStateEb'/>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='1652' u='c' c='_ZN5clang6format20ContinuationIndenter17addMultilineTokenERKNS0_11FormatTokenERNS0_9LineStateE'/>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='1653' u='c' c='_ZN5clang6format20ContinuationIndenter17addMultilineTokenERKNS0_11FormatTokenERNS0_9LineStateE'/>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='1704' u='c' c='_ZN5clang6format20ContinuationIndenter15handleEndOfLineERKNS0_11FormatTokenERNS0_9LineStateEbbb'/>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='1705' u='c' c='_ZN5clang6format20ContinuationIndenter15handleEndOfLineERKNS0_11FormatTokenERNS0_9LineStateEbbb'/>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='1745' u='c' c='_ZN5clang6format20ContinuationIndenter17getRawStringStyleERKNS0_11FormatTokenERKNS0_9LineStateE'/>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='1837' u='c' c='_ZN5clang6format20ContinuationIndenter20breakProtrudingTokenERKNS0_11FormatTokenERNS0_9LineStateEbbb'/>
<def f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='2202' ll='2205' type='unsigned int clang::format::ContinuationIndenter::getColumnLimit(const clang::format::LineState &amp; State) const'/>
