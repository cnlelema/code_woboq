<dec f='llvm/clang/include/clang/AST/ExprCXX.h' l='2065' type='void clang::CXXNewExpr::CXXNewExpr(bool IsGlobalNew, clang::FunctionDecl * OperatorNew, clang::FunctionDecl * OperatorDelete, bool ShouldPassAlignment, bool UsualArrayDeleteWantsSize, ArrayRef&lt;clang::Expr *&gt; PlacementArgs, clang::SourceRange TypeIdParens, Optional&lt;clang::Expr *&gt; ArraySize, clang::CXXNewExpr::InitializationStyle InitializationStyle, clang::Expr * Initializer, clang::QualType Ty, clang::TypeSourceInfo * AllocatedTypeInfo, clang::SourceRange Range, clang::SourceRange DirectInitRange)'/>
<doc f='llvm/clang/include/clang/AST/ExprCXX.h' l='2064'>/// Build a c++ new expression.</doc>
<def f='llvm/clang/lib/AST/ExprCXX.cpp' l='96' ll='170' type='void clang::CXXNewExpr::CXXNewExpr(bool IsGlobalNew, clang::FunctionDecl * OperatorNew, clang::FunctionDecl * OperatorDelete, bool ShouldPassAlignment, bool UsualArrayDeleteWantsSize, ArrayRef&lt;clang::Expr *&gt; PlacementArgs, clang::SourceRange TypeIdParens, Optional&lt;clang::Expr *&gt; ArraySize, clang::CXXNewExpr::InitializationStyle InitializationStyle, clang::Expr * Initializer, clang::QualType Ty, clang::TypeSourceInfo * AllocatedTypeInfo, clang::SourceRange Range, clang::SourceRange DirectInitRange)'/>
<doc f='llvm/clang/lib/AST/ExprCXX.cpp' l='95'>// CXXNewExpr</doc>
