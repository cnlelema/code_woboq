<dec f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='129' type='2'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='120'>// Lexically forward.
      //
      // FIXME: If we only have loop-independent forward dependences (e.g. a
      // read and write of A[i]), LAA will locally deem the dependence &quot;safe&quot;
      // without querying the MemoryDepChecker.  Therefore we can miss
      // enumerating loop-independent forward dependences in
      // getDependences.  Note that as soon as there are different
      // indices used to access the same array, the MemoryDepChecker *is*
      // queried and the dependence list is complete.</doc>
<use f='llvm/llvm/lib/Analysis/LoopAccessAnalysis.cpp' l='1226' c='_ZN4llvm16MemoryDepChecker10Dependence22isSafeForVectorizationENS1_7DepTypeE'/>
<use f='llvm/llvm/lib/Analysis/LoopAccessAnalysis.cpp' l='1243' c='_ZNK4llvm16MemoryDepChecker10Dependence10isBackwardEv'/>
<use f='llvm/llvm/lib/Analysis/LoopAccessAnalysis.cpp' l='1262' c='_ZNK4llvm16MemoryDepChecker10Dependence9isForwardEv'/>
<use f='llvm/llvm/lib/Analysis/LoopAccessAnalysis.cpp' l='1518' u='r' c='_ZN4llvm16MemoryDepChecker11isDependentERKNS_14PointerIntPairIPNS_5ValueELj1EbNS_21PointerLikeTypeTraitsIS3_EENS_18PointerIntPairInfoIS3_Lj1ES5_EEEEjS12820736'/>
<use f='llvm/llvm/lib/Analysis/LoopAccessAnalysis.cpp' l='1525' u='r' c='_ZN4llvm16MemoryDepChecker11isDependentERKNS_14PointerIntPairIPNS_5ValueELj1EbNS_21PointerLikeTypeTraitsIS3_EENS_18PointerIntPairInfoIS3_Lj1ES5_EEEEjS12820736'/>
