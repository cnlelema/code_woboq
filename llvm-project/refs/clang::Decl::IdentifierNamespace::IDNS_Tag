<dec f='llvm/clang/include/clang/AST/DeclBase.h' l='127' type='2'/>
<use f='llvm/clang/include/clang/AST/DeclBase.h' l='815' u='r' c='_ZN5clang4Decl24isTagIdentifierNamespaceEj'/>
<use f='llvm/clang/include/clang/AST/DeclBase.h' l='1049' u='r' c='_ZN5clang4Decl18setLocalExternDeclEv'/>
<use f='llvm/clang/include/clang/AST/DeclBase.h' l='1073' u='r' c='_ZN5clang4Decl21setObjectOfFriendDeclEb'/>
<use f='llvm/clang/include/clang/AST/DeclBase.h' l='1077' u='r' c='_ZN5clang4Decl21setObjectOfFriendDeclEb'/>
<use f='llvm/clang/include/clang/AST/DeclBase.h' l='1083' u='r' c='_ZN5clang4Decl21setObjectOfFriendDeclEb'/>
<use f='llvm/clang/include/clang/AST/DeclBase.h' l='1085' u='r' c='_ZN5clang4Decl21setObjectOfFriendDeclEb'/>
<use f='llvm/clang/include/clang/AST/DeclBase.h' l='1088' u='r' c='_ZN5clang4Decl21setObjectOfFriendDeclEb'/>
<use f='llvm/clang/include/clang/AST/DeclBase.h' l='1089' u='r' c='_ZN5clang4Decl21setObjectOfFriendDeclEb'/>
<use f='llvm/clang/include/clang/AST/DeclBase.h' l='1115' u='r' c='_ZNK5clang4Decl19getFriendObjectKindEv'/>
<use f='llvm/clang/include/clang/AST/Decl.h' l='4347' u='r' c='_ZN5clang12Redeclarable15setPreviousDeclEPT_'/>
<doc f='llvm/clang/include/clang/AST/DeclBase.h' l='121'>/// Tags, declared with &apos;struct foo;&apos; and referenced with
    /// &apos;struct foo&apos;.  All tags are also types.  This is what
    /// elaborated-type-specifiers look for in C.
    /// This also contains names that conflict with tags in the
    /// same scope but that are otherwise ordinary names (non-type
    /// template parameters and indirect field declarations).</doc>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='2424' u='r' c='_ZN5clang15ASTNodeImporter13VisitEnumDeclEPNS_8EnumDeclE'/>
<use f='llvm/clang/lib/AST/ASTImporter.cpp' l='2516' u='r' c='_ZN5clang15ASTNodeImporter15VisitRecordDeclEPNS_10RecordDeclE'/>
<use f='llvm/clang/lib/AST/CXXInheritance.cpp' l='433' u='r' c='_ZL18findOrdinaryMemberPN5clang10RecordDeclERNS_11CXXBasePathENS_15DeclarationNameE'/>
<use f='llvm/clang/lib/AST/Decl.cpp' l='4619' u='r' c='_ZN5clang17IndirectFieldDeclC1ERNS_10ASTContextEPNS_11DeclContextENS_14SourceLocationENS_15DeclarationNameENS_8QualTypeEN4llvm15MutableArrayRefIPNS_9NamedDeclEEE'/>
<use f='llvm/clang/lib/Frontend/ASTUnit.cpp' l='2019' u='r' c='_ZL20CalculateHiddenNamesRKN5clang21CodeCompletionContextEPNS_20CodeCompletionResultEjRNS_10ASTContextERN4llvm9StringSetINS7_20BumpPtrAllocatorImplINS11443770'/>
<use f='llvm/clang/lib/Frontend/ASTUnit.cpp' l='2025' u='r' c='_ZL20CalculateHiddenNamesRKN5clang21CodeCompletionContextEPNS_20CodeCompletionResultEjRNS_10ASTContextERN4llvm9StringSetINS7_20BumpPtrAllocatorImplINS11443770'/>
<use f='llvm/clang/lib/Sema/SemaCodeComplete.cpp' l='1372' u='r' c='_ZNK12_GLOBAL__N_113ResultBuilder14IsOrdinaryNameEPKN5clang9NamedDeclE'/>
<use f='llvm/clang/lib/Sema/SemaCodeComplete.cpp' l='1397' u='r' c='_ZNK12_GLOBAL__N_113ResultBuilder21IsOrdinaryNonTypeNameEPKN5clang9NamedDeclE'/>
<use f='llvm/clang/lib/Sema/SemaCodeComplete.cpp' l='1424' u='r' c='_ZNK12_GLOBAL__N_113ResultBuilder22IsOrdinaryNonValueNameEPKN5clang9NamedDeclE'/>
<use f='llvm/clang/lib/Sema/SemaLookup.cpp' l='219' u='r' c='_ZL7getIDNSN5clang4Sema14LookupNameKindEbb'/>
<use f='llvm/clang/lib/Sema/SemaLookup.cpp' l='244' u='r' c='_ZL7getIDNSN5clang4Sema14LookupNameKindEbb'/>
<use f='llvm/clang/lib/Sema/SemaLookup.cpp' l='246' u='r' c='_ZL7getIDNSN5clang4Sema14LookupNameKindEbb'/>
<use f='llvm/clang/lib/Sema/SemaLookup.cpp' l='257' u='r' c='_ZL7getIDNSN5clang4Sema14LookupNameKindEbb'/>
<use f='llvm/clang/lib/Sema/SemaLookup.cpp' l='270' u='r' c='_ZL7getIDNSN5clang4Sema14LookupNameKindEbb'/>
<use f='llvm/clang/lib/Sema/SemaLookup.cpp' l='288' u='r' c='_ZL7getIDNSN5clang4Sema14LookupNameKindEbb'/>
<use f='llvm/clang/lib/Serialization/ASTReaderDecl.cpp' l='3616' u='r' c='_ZN5clang13ASTDeclReader18attachPreviousDeclERNS_9ASTReaderEPNS_4DeclES4_S4_'/>
