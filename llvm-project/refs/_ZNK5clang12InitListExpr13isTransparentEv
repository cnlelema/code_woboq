<dec f='llvm/clang/include/clang/AST/Expr.h' l='4454' type='bool clang::InitListExpr::isTransparent() const'/>
<doc f='llvm/clang/include/clang/AST/Expr.h' l='4451'>/// Is this a transparent initializer list (that is, an InitListExpr that is
  /// purely syntactic, and whose semantics are that of the sole contained
  /// initializer)?</doc>
<def f='llvm/clang/lib/AST/Expr.cpp' l='2218' ll='2239' type='bool clang::InitListExpr::isTransparent() const'/>
<use f='llvm/clang/lib/CodeGen/CGExpr.cpp' l='4992' u='c' c='_ZN5clang7CodeGen15CodeGenFunction18EmitInitListLValueEPKNS_12InitListExprE'/>
<use f='llvm/clang/lib/CodeGen/CGExprAgg.cpp' l='1455' u='c' c='_ZN12_GLOBAL__N_114AggExprEmitter17VisitInitListExprEPN5clang12InitListExprE'/>
<use f='llvm/clang/lib/CodeGen/CGExprAgg.cpp' l='1733' u='c' c='_ZL24GetNumNonZeroBytesInInitPKN5clang4ExprERNS_7CodeGen15CodeGenFunctionE'/>
<use f='llvm/clang/lib/Sema/SemaInit.cpp' l='692' u='c' c='_ZN12_GLOBAL__N_115InitListChecker26FillInEmptyInitializationsERKN5clang17InitializedEntityEPNS1_12InitListExprERbS6_jb'/>
<use f='llvm/clang/lib/Sema/SemaInit.cpp' l='6743' u='c' c='_ZL37visitLocalsRetainedByReferenceBindingRN4llvm15SmallVectorImplIN12_GLOBAL__N_122IndirectLocalPathEntryEEEPN5clang4ExprENS1_13ReferenceKindENS_12fu2841956'/>
<use f='llvm/clang/lib/Sema/SemaInit.cpp' l='6950' u='c' c='_ZL32visitLocalsRetainedByInitializerRN4llvm15SmallVectorImplIN12_GLOBAL__N_122IndirectLocalPathEntryEEEPN5clang4ExprENS_12function_refIFbS4_S7_NS1_13ReferenceKindEEEEb'/>
