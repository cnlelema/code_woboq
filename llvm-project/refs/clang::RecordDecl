<inh f='llvm/clang/include/clang/AST/Decl.h' l='3094' c='clang::TagDecl'/>
<def f='llvm/clang/include/clang/AST/Decl.h' l='3623' ll='3851'/>
<ovr f='llvm/clang/include/clang/AST/DeclCXX.h' l='300' c='clang::CXXRecordDecl'/>
<size>1</size>
<doc f='llvm/clang/include/clang/AST/Decl.h' l='3619'>/// Represents a struct/union/class.  For example:
///   struct X;                  // Forward declaration, no &quot;body&quot;.
///   union Y { int A, B; };     // Has body with members A and B (FieldDecls).
/// This decl will be marked invalid if *any* members are invalid.</doc>
<fun r='_ZN5clang10RecordDeclC1ENS_4Decl4KindENS_11TagTypeKindERKNS_10ASTContextEPNS_11DeclContextENS_14SourceLocationES9_PNS_14IdentifierInfoEPS0_'/>
<fun r='_ZN5clang10RecordDecl6CreateERKNS_10ASTContextENS_11TagTypeKindEPNS_11DeclContextENS_14SourceLocationES7_PNS_14IdentifierInfoEPS0_'/>
<fun r='_ZN5clang10RecordDecl18CreateDeserializedERKNS_10ASTContextEj'/>
<fun r='_ZN5clang10RecordDecl15getPreviousDeclEv'/>
<fun r='_ZNK5clang10RecordDecl15getPreviousDeclEv'/>
<fun r='_ZN5clang10RecordDecl17getMostRecentDeclEv'/>
<fun r='_ZNK5clang10RecordDecl17getMostRecentDeclEv'/>
<fun r='_ZNK5clang10RecordDecl22hasFlexibleArrayMemberEv'/>
<fun r='_ZN5clang10RecordDecl25setHasFlexibleArrayMemberEb'/>
<fun r='_ZNK5clang10RecordDecl24isAnonymousStructOrUnionEv'/>
<fun r='_ZN5clang10RecordDecl25setAnonymousStructOrUnionEb'/>
<fun r='_ZNK5clang10RecordDecl15hasObjectMemberEv'/>
<fun r='_ZN5clang10RecordDecl18setHasObjectMemberEb'/>
<fun r='_ZNK5clang10RecordDecl17hasVolatileMemberEv'/>
<fun r='_ZN5clang10RecordDecl20setHasVolatileMemberEb'/>
<fun r='_ZNK5clang10RecordDecl34hasLoadedFieldsFromExternalStorageEv'/>
<fun r='_ZNK5clang10RecordDecl37setHasLoadedFieldsFromExternalStorageEb'/>
<fun r='_ZNK5clang10RecordDecl40isNonTrivialToPrimitiveDefaultInitializeEv'/>
<fun r='_ZN5clang10RecordDecl41setNonTrivialToPrimitiveDefaultInitializeEb'/>
<fun r='_ZNK5clang10RecordDecl27isNonTrivialToPrimitiveCopyEv'/>
<fun r='_ZN5clang10RecordDecl28setNonTrivialToPrimitiveCopyEb'/>
<fun r='_ZNK5clang10RecordDecl30isNonTrivialToPrimitiveDestroyEv'/>
<fun r='_ZN5clang10RecordDecl31setNonTrivialToPrimitiveDestroyEb'/>
<fun r='_ZNK5clang10RecordDecl18canPassInRegistersEv'/>
<fun r='_ZNK5clang10RecordDecl25getArgPassingRestrictionsEv'/>
<fun r='_ZN5clang10RecordDecl25setArgPassingRestrictionsENS0_14ArgPassingKindE'/>
<fun r='_ZNK5clang10RecordDecl24isParamDestroyedInCalleeEv'/>
<fun r='_ZN5clang10RecordDecl25setParamDestroyedInCalleeEb'/>
<fun r='_ZNK5clang10RecordDecl19isInjectedClassNameEv'/>
<fun r='_ZNK5clang10RecordDecl8isLambdaEv'/>
<fun r='_ZNK5clang10RecordDecl16isCapturedRecordEv'/>
<fun r='_ZN5clang10RecordDecl17setCapturedRecordEv'/>
<fun r='_ZNK5clang10RecordDecl13getDefinitionEv'/>
<fun r='_ZNK5clang10RecordDecl6fieldsEv'/>
<fun r='_ZNK5clang10RecordDecl11field_beginEv'/>
<fun r='_ZNK5clang10RecordDecl9field_endEv'/>
<fun r='_ZNK5clang10RecordDecl11field_emptyEv'/>
<fun r='_ZN5clang10RecordDecl18completeDefinitionEv'/>
<fun r='_ZN5clang10RecordDecl7classofEPKNS_4DeclE'/>
<fun r='_ZN5clang10RecordDecl11classofKindENS_4Decl4KindE'/>
<fun r='_ZNK5clang10RecordDecl10isMsStructERKNS_10ASTContextE'/>
<fun r='_ZNK5clang10RecordDecl21mayInsertExtraPaddingEb'/>
<fun r='_ZNK5clang10RecordDecl24findFirstNamedDataMemberEv'/>
<fun r='_ZNK5clang10RecordDecl29LoadFieldsFromExternalStorageEv'/>
