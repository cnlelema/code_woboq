<dec f='llvm/llvm/include/llvm/CodeGen/MIRPrinter.h' l='39' type='void llvm::guessSuccessors(const llvm::MachineBasicBlock &amp; MBB, SmallVectorImpl&lt;llvm::MachineBasicBlock *&gt; &amp; Result, bool &amp; IsFallthrough)'/>
<use f='llvm/llvm/lib/CodeGen/MIRParser/MIParser.cpp' l='839' u='c' c='_ZN12_GLOBAL__N_18MIParser15parseBasicBlockERN4llvm17MachineBasicBlockERPS2_'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MIRPrinter.h' l='32'>/// Determine a possible list of successors of a basic block based on the
/// basic block machine operand being used inside the block. This should give
/// you the correct list of successor blocks in most cases except for things
/// like jump tables where the basic block references can&apos;t easily be found.
/// The MIRPRinter will skip printing successors if they match the result of
/// this funciton and the parser will use this function to construct a list if
/// it is missing.</doc>
<def f='llvm/llvm/lib/CodeGen/MIRPrinter.cpp' l='510' ll='529' type='void llvm::guessSuccessors(const llvm::MachineBasicBlock &amp; MBB, SmallVectorImpl&lt;llvm::MachineBasicBlock *&gt; &amp; Result, bool &amp; IsFallthrough)'/>
<use f='llvm/llvm/lib/CodeGen/MIRPrinter.cpp' l='551' u='c' c='_ZNK4llvm9MIPrinter20canPredictSuccessorsERKNS_17MachineBasicBlockE'/>
