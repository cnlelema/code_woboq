<def f='llvm/clang/include/clang/AST/Type.h' l='4003' ll='4006' type='clang::QualType clang::FunctionProtoType::getExceptionType(unsigned int i) const'/>
<doc f='llvm/clang/include/clang/AST/Type.h' l='4002'>/// Return the ith exception type, where 0 &lt;= i &lt; getNumExceptions().</doc>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='348' u='c' c='_ZL25IsEquivalentExceptionSpecRN5clang28StructuralEquivalenceContextEPKNS_17FunctionProtoTypeES4_'/>
<use f='llvm/clang/lib/AST/ASTStructuralEquivalence.cpp' l='349' u='c' c='_ZL25IsEquivalentExceptionSpecRN5clang28StructuralEquivalenceContextEPKNS_17FunctionProtoTypeES4_'/>
<use f='llvm/clang/lib/AST/DeclPrinter.cpp' l='706' u='c' c='_ZN12_GLOBAL__N_111DeclPrinter17VisitFunctionDeclEPN5clang12FunctionDeclE'/>
<use f='llvm/clang/lib/AST/Type.cpp' l='3146' u='c' c='_ZNK5clang17FunctionProtoType8canThrowEv'/>
<use f='llvm/clang/lib/AST/TypePrinter.cpp' l='751' u='c' c='_ZNK5clang17FunctionProtoType27printExceptionSpecificationERN4llvm11raw_ostreamERKNS_14PrintingPolicyE'/>
<use f='llvm/clang/lib/CodeGen/CGException.cpp' l='478' u='c' c='_ZN5clang7CodeGen15CodeGenFunction15EmitStartEHSpecEPKNS_4DeclE'/>
<use f='llvm/clang/lib/Serialization/ASTWriter.cpp' l='299' u='c' c='_ZL16addExceptionSpecPKN5clang17FunctionProtoTypeERNS_15ASTRecordWriterE'/>
