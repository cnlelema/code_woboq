<inh f='llvm/lld/wasm/InputChunks.h' l='36' c='lld::wasm::InputChunk'/>
<def f='llvm/lld/wasm/InputChunks.h' l='120' ll='174'/>
<ovr f='llvm/lld/wasm/InputChunks.h' l='176' c='lld::wasm::SyntheticFunction'/>
<size>88</size>
<doc f='llvm/lld/wasm/InputChunks.h' l='118'>// Represents a single wasm function within and input file.  These are
// combined to create the final output CODE section.</doc>
<fun r='_ZN3lld4wasm13InputFunctionC1ERKN4llvm4wasm13WasmSignatureEPKNS3_12WasmFunctionEPNS0_7ObjFileE'/>
<fun r='_ZN3lld4wasm13InputFunction7classofEPKNS0_10InputChunkE'/>
<fun r='_ZNK3lld4wasm13InputFunction7writeToEPh'/>
<fun r='_ZNK3lld4wasm13InputFunction7getNameEv'/>
<fun r='_ZNK3lld4wasm13InputFunction12getDebugNameEv'/>
<fun r='_ZNK3lld4wasm13InputFunction9getComdatEv'/>
<fun r='_ZNK3lld4wasm13InputFunction22getFunctionInputOffsetEv'/>
<fun r='_ZNK3lld4wasm13InputFunction21getFunctionCodeOffsetEv'/>
<fun r='_ZNK3lld4wasm13InputFunction7getSizeEv'/>
<fun r='_ZNK3lld4wasm13InputFunction12getInputSizeEv'/>
<fun r='_ZNK3lld4wasm13InputFunction16getFunctionIndexEv'/>
<fun r='_ZNK3lld4wasm13InputFunction16hasFunctionIndexEv'/>
<fun r='_ZN3lld4wasm13InputFunction16setFunctionIndexEj'/>
<fun r='_ZNK3lld4wasm13InputFunction21getInputSectionOffsetEv'/>
<fun r='_ZNK3lld4wasm13InputFunction13getTableIndexEv'/>
<fun r='_ZNK3lld4wasm13InputFunction13hasTableIndexEv'/>
<fun r='_ZN3lld4wasm13InputFunction13setTableIndexEj'/>
<fun r='_ZN3lld4wasm13InputFunction13calculateSizeEv'/>
<mbr r='lld::wasm::InputFunction::Signature' o='384' t='const llvm::wasm::WasmSignature &amp;'/>
<fun r='_ZNK3lld4wasm13InputFunction4dataEv'/>
<mbr r='lld::wasm::InputFunction::Function' o='448' t='const llvm::wasm::WasmFunction *'/>
<mbr r='lld::wasm::InputFunction::FunctionIndex' o='512' t='llvm::Optional&lt;uint32_t&gt;'/>
<mbr r='lld::wasm::InputFunction::TableIndex' o='576' t='llvm::Optional&lt;uint32_t&gt;'/>
<mbr r='lld::wasm::InputFunction::CompressedFuncSize' o='640' t='uint32_t'/>
<mbr r='lld::wasm::InputFunction::CompressedSize' o='672' t='uint32_t'/>
