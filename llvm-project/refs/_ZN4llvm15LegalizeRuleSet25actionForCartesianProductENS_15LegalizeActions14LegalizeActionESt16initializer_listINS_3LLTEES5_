<def f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='419' ll='426' type='llvm::LegalizeRuleSet &amp; llvm::LegalizeRuleSet::actionForCartesianProduct(llvm::LegalizeActions::LegalizeAction Action, std::initializer_list&lt;LLT&gt; Types0, std::initializer_list&lt;LLT&gt; Types1)'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='487' u='c' c='_ZN4llvm15LegalizeRuleSet24legalForCartesianProductESt16initializer_listINS_3LLTEES3_'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='558' u='c' c='_ZN4llvm15LegalizeRuleSet24lowerForCartesianProductESt16initializer_listINS_3LLTEES3_'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='591' u='c' c='_ZN4llvm15LegalizeRuleSet26libcallForCartesianProductESt16initializer_listINS_3LLTEES3_'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='666' u='c' c='_ZN4llvm15LegalizeRuleSet25customForCartesianProductESt16initializer_listINS_3LLTEES3_'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='415'>/// Use the given action when type indexes 0 and 1 are both in their
  /// respective lists.
  /// That is, the type pair is in the cartesian product of the lists
  /// Action should not be an action that requires mutation.</doc>
