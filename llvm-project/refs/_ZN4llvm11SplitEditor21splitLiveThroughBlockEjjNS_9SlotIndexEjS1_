<dec f='llvm/llvm/lib/CodeGen/SplitKit.h' l='534' type='void llvm::SplitEditor::splitLiveThroughBlock(unsigned int MBBNum, unsigned int IntvIn, llvm::SlotIndex LeaveBefore, unsigned int IntvOut, llvm::SlotIndex EnterAfter)'/>
<doc f='llvm/llvm/lib/CodeGen/SplitKit.h' l='525'>/// splitLiveThroughBlock - Split CurLI in the given block such that it
  /// enters the block in IntvIn and leaves it in IntvOut. There may be uses in
  /// the block, but they will be ignored when placing split points.
  ///
  /// @param MBBNum      Block number.
  /// @param IntvIn      Interval index entering the block.
  /// @param LeaveBefore When set, leave IntvIn before this point.
  /// @param IntvOut     Interval index leaving the block.
  /// @param EnterAfter  When set, enter IntvOut after this point.</doc>
<use f='llvm/llvm/lib/CodeGen/RegAllocGreedy.cpp' l='1727' u='c' c='_ZN12_GLOBAL__N_18RAGreedy17splitAroundRegionERN4llvm13LiveRangeEditENS1_8ArrayRefIjEE'/>
<use f='llvm/llvm/lib/CodeGen/RegAllocGreedy.cpp' l='1766' u='c' c='_ZN12_GLOBAL__N_18RAGreedy17splitAroundRegionERN4llvm13LiveRangeEditENS1_8ArrayRefIjEE'/>
<def f='llvm/llvm/lib/CodeGen/SplitKit.cpp' l='1600' ll='1701' type='void llvm::SplitEditor::splitLiveThroughBlock(unsigned int MBBNum, unsigned int IntvIn, llvm::SlotIndex LeaveBefore, unsigned int IntvOut, llvm::SlotIndex EnterAfter)'/>
<doc f='llvm/llvm/lib/CodeGen/SplitKit.cpp' l='1589'>//===----------------------------------------------------------------------===//
//                    Global Live Range Splitting Support
//===----------------------------------------------------------------------===//

// These methods support a method of global live range splitting that uses a
// global algorithm to decide intervals for CFG edges. They will insert split
// points and color intervals in basic blocks while avoiding interference.
//
// Note that splitSingleBlock is also useful for blocks where both CFG edges
// are on the stack.</doc>
