<dec f='llvm/clang/include/clang-c/Index.h' l='1436' type='enum CXErrorCode clang_parseTranslationUnit2(CXIndex CIdx, const char * source_filename, const char *const * command_line_args, int num_command_line_args, struct CXUnsavedFile * unsaved_files, unsigned int num_unsaved_files, unsigned int options, CXTranslationUnit * out_TU)'/>
<doc f='llvm/clang/include/clang-c/Index.h' l='1391'>/**
 * Parse the given source file and the translation unit corresponding
 * to that file.
 *
 * This routine is the main entry point for the Clang C API, providing the
 * ability to parse a source file into a translation unit that can then be
 * queried by other functions in the API. This routine accepts a set of
 * command-line arguments so that the compilation can be configured in the same
 * way that the compiler is configured on the command line.
 *
 * \param CIdx The index object with which the translation unit will be
 * associated.
 *
 * \param source_filename The name of the source file to load, or NULL if the
 * source file is included in \c command_line_args.
 *
 * \param command_line_args The command-line arguments that would be
 * passed to the \c clang executable if it were being invoked out-of-process.
 * These command-line options will be parsed and will affect how the translation
 * unit is parsed. Note that the following options are ignored: &apos;-c&apos;,
 * &apos;-emit-ast&apos;, &apos;-fsyntax-only&apos; (which is the default), and &apos;-o \&lt;output file&gt;&apos;.
 *
 * \param num_command_line_args The number of command-line arguments in
 * \c command_line_args.
 *
 * \param unsaved_files the files that have not yet been saved to disk
 * but may be required for parsing, including the contents of
 * those files.  The contents and name of these files (as specified by
 * CXUnsavedFile) are copied when necessary, so the client only needs to
 * guarantee their validity until the call to this function returns.
 *
 * \param num_unsaved_files the number of unsaved file entries in \p
 * unsaved_files.
 *
 * \param options A bitmask of options that affects how the translation unit
 * is managed but not its compilation. This should be a bitwise OR of the
 * CXTranslationUnit_XXX flags.
 *
 * \param[out] out_TU A non-NULL pointer to store the created
 * \c CXTranslationUnit, describing the parsed code and containing any
 * diagnostics produced by the compiler.
 *
 * \returns Zero on success, otherwise returns an error code.
 */</doc>
<use f='llvm/clang/tools/c-index-test/c-index-test.c' l='1886' u='c' c='print_target_info'/>
<use f='llvm/clang/tools/c-index-test/c-index-test.c' l='2029' u='c' c='perform_test_load_source'/>
<use f='llvm/clang/tools/c-index-test/c-index-test.c' l='2101' u='c' c='perform_test_reparse_source'/>
<use f='llvm/clang/tools/c-index-test/c-index-test.c' l='2164' u='c' c='perform_single_file_parse'/>
<use f='llvm/clang/tools/c-index-test/c-index-test.c' l='2645' u='c' c='perform_code_completion'/>
<use f='llvm/clang/tools/c-index-test/c-index-test.c' l='2790' u='c' c='inspect_cursor_at'/>
<use f='llvm/clang/tools/c-index-test/c-index-test.c' l='3084' u='c' c='find_file_refs_at'/>
<use f='llvm/clang/tools/c-index-test/c-index-test.c' l='3190' u='c' c='find_file_includes_in'/>
<use f='llvm/clang/tools/c-index-test/c-index-test.c' l='4107' u='c' c='perform_token_annotation'/>
<use f='llvm/clang/tools/c-index-test/c-index-test.c' l='4504' u='c' c='write_pch_file'/>
<use f='llvm/clang/tools/libclang/CIndex.cpp' l='3554' u='c' c='clang_parseTranslationUnit'/>
<def f='llvm/clang/tools/libclang/CIndex.cpp' l='3563' ll='3574' type='enum CXErrorCode clang_parseTranslationUnit2(CXIndex CIdx, const char * source_filename, const char *const * command_line_args, int num_command_line_args, struct CXUnsavedFile * unsaved_files, unsigned int num_unsaved_files, unsigned int options, CXTranslationUnit * out_TU)'/>
<use f='llvm/clang/unittests/libclang/LibclangTest.cpp' l='25' u='c' c='_ZN53libclang_clang_parseTranslationUnit2_InvalidArgs_Test8TestBodyEv'/>
