<dec f='llvm/llvm/include/llvm/MC/MCAssembler.h' l='172' type='bool llvm::MCAssembler::evaluateFixup(const llvm::MCAsmLayout &amp; Layout, const llvm::MCFixup &amp; Fixup, const llvm::MCFragment * DF, llvm::MCValue &amp; Target, uint64_t &amp; Value, bool &amp; WasForced) const'/>
<doc f='llvm/llvm/include/llvm/MC/MCAssembler.h' l='157'>/// Evaluate a fixup to a relocatable expression and the value which should be
  /// placed into the fixup.
  ///
  /// \param Layout The layout to use for evaluation.
  /// \param Fixup The fixup to evaluate.
  /// \param DF The fragment the fixup is inside.
  /// \param Target [out] On return, the relocatable expression the fixup
  /// evaluates to.
  /// \param Value [out] On return, the value of the fixup as currently laid
  /// out.
  /// \param WasForced [out] On return, the value in the fixup is set to the
  /// correct value if WasForced is true, even if evaluateFixup returns false.
  /// \return Whether the fixup value was fully resolved. This is true if the
  /// \p Value result is fixed, otherwise the value may change due to
  /// relocation.</doc>
<def f='llvm/llvm/lib/MC/MCAssembler.cpp' l='198' ll='284' type='bool llvm::MCAssembler::evaluateFixup(const llvm::MCAsmLayout &amp; Layout, const llvm::MCFixup &amp; Fixup, const llvm::MCFragment * DF, llvm::MCValue &amp; Target, uint64_t &amp; Value, bool &amp; WasForced) const'/>
<use f='llvm/llvm/lib/MC/MCAssembler.cpp' l='727' u='c' c='_ZN4llvm11MCAssembler11handleFixupERKNS_11MCAsmLayoutERNS_10MCFragmentERKNS_7MCFixupE'/>
<use f='llvm/llvm/lib/MC/MCAssembler.cpp' l='874' u='c' c='_ZNK4llvm11MCAssembler20fixupNeedsRelaxationERKNS_7MCFixupEPKNS_19MCRelaxableFragmentERKNS_11MCAsmLayoutE'/>
