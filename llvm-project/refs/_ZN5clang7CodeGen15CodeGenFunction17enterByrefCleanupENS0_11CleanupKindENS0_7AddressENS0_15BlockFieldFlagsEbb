<dec f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='1801' type='void clang::CodeGen::CodeGenFunction::enterByrefCleanup(clang::CodeGen::CleanupKind Kind, clang::CodeGen::Address Addr, clang::CodeGen::BlockFieldFlags Flags, bool LoadBlockVarAddr, bool CanThrow)'/>
<doc f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='1785'>/// Enter a cleanup to destroy a __block variable.  Note that this
  /// cleanup should be a no-op if the variable hasn&apos;t left the stack
  /// yet; if a cleanup is required for the variable itself, that needs
  /// to be done externally.
  ///
  /// \param Kind Cleanup kind.
  ///
  /// \param Addr When \p LoadBlockVarAddr is false, the address of the __block
  /// structure that will be passed to _Block_object_dispose. When
  /// \p LoadBlockVarAddr is true, the address of the field of the block
  /// structure that holds the address of the __block structure.
  ///
  /// \param Flags The flag that will be passed to _Block_object_dispose.
  ///
  /// \param LoadBlockVarAddr Indicates whether we need to emit a load from
  /// \p Addr to get the address of the __block structure.</doc>
<use f='llvm/clang/lib/CodeGen/CGBlocks.cpp' l='1968' u='c' c='_ZL18pushCaptureCleanupN12_GLOBAL__N_122BlockCaptureEntityKindEN5clang7CodeGen7AddressENS1_8QualTypeENS2_15BlockFieldFlagsEbPNS1_7VarDeclERNS2_15CodeGenFunctionE'/>
<def f='llvm/clang/lib/CodeGen/CGBlocks.cpp' l='2956' ll='2961' type='void clang::CodeGen::CodeGenFunction::enterByrefCleanup(clang::CodeGen::CleanupKind Kind, clang::CodeGen::Address Addr, clang::CodeGen::BlockFieldFlags Flags, bool LoadBlockVarAddr, bool CanThrow)'/>
