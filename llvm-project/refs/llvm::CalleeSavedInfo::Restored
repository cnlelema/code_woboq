<dec f='llvm/llvm/include/llvm/CodeGen/MachineFrameInfo.h' l='50' type='bool'/>
<use f='llvm/llvm/include/llvm/CodeGen/MachineFrameInfo.h' l='57' u='w' c='_ZN4llvm15CalleeSavedInfoC1Eji'/>
<use f='llvm/llvm/include/llvm/CodeGen/MachineFrameInfo.h' l='71' u='r' c='_ZNK4llvm15CalleeSavedInfo10isRestoredEv'/>
<use f='llvm/llvm/include/llvm/CodeGen/MachineFrameInfo.h' l='72' u='w' c='_ZN4llvm15CalleeSavedInfo11setRestoredEb'/>
<offset>64</offset>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineFrameInfo.h' l='38'>/// Flag indicating whether the register is actually restored in the epilog.
  /// In most cases, if a register is saved, it is also restored. There are
  /// some situations, though, when this is not the case. For example, the
  /// LR register on ARM is usually saved, but on exit from the function its
  /// saved value may be loaded directly into PC. Since liveness tracking of
  /// physical registers treats callee-saved registers are live outside of
  /// the function, LR would be treated as live-on-exit, even though in these
  /// scenarios it is not. This flag is added to indicate that the saved
  /// register described by this object is not restored in the epilog.
  /// The long-term solution is to model the liveness of callee-saved registers
  /// by implicit uses on the return instructions, however, the required
  /// changes in the ARM backend would be quite extensive.</doc>
