<use f='llvm/llvm/utils/unittest/googletest/include/gtest/gtest.h' l='298' u='m' c='_ZNK7testing15AssertionResult7messageEv'/>
<use f='llvm/llvm/utils/unittest/googletest/include/gtest/gtest.h' l='298' u='m' c='_ZNK7testing15AssertionResult7messageEv'/>
<use f='llvm/llvm/utils/unittest/googletest/include/gtest/gtest.h' l='321' u='m' c='_ZN7testing15AssertionResult13AppendMessageERKNS_7MessageE'/>
<use f='llvm/llvm/utils/unittest/googletest/include/gtest/gtest.h' l='322' u='m' c='_ZN7testing15AssertionResult13AppendMessageERKNS_7MessageE'/>
<use f='llvm/llvm/utils/unittest/googletest/include/gtest/gtest.h' l='323' u='m' c='_ZN7testing15AssertionResult13AppendMessageERKNS_7MessageE'/>
<dec f='llvm/llvm/utils/unittest/googletest/include/gtest/gtest.h' l='335' type='internal::scoped_ptr&lt; ::std::string&gt;'/>
<offset>64</offset>
<doc f='llvm/llvm/utils/unittest/googletest/include/gtest/gtest.h' l='331'>// Stores the message describing the condition in case the expectation
  // construct is not satisfied with the predicate&apos;s outcome.
  // Referenced via a pointer to avoid taking too much stack frame space
  // with test assertions.</doc>
<use f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='989' u='w' c='_ZN7testing15AssertionResultC1ERKS0_'/>
<use f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='989' u='m' c='_ZN7testing15AssertionResultC1ERKS0_'/>
<use f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='990' u='m' c='_ZN7testing15AssertionResultC1ERKS0_'/>
<use f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='998' u='a' c='_ZN7testing15AssertionResult4swapERS0_'/>
<use f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='998' u='a' c='_ZN7testing15AssertionResult4swapERS0_'/>
<use f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='1004' u='m' c='_ZNK7testing15AssertionResultntEv'/>
<use f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='1005' u='m' c='_ZNK7testing15AssertionResultntEv'/>
