<def f='llvm/clang/include/clang/AST/DeclTemplate.h' l='255' ll='256' type='void clang::TemplateArgumentList::TemplateArgumentList(const clang::TemplateArgumentList * Other)'/>
<doc f='llvm/clang/include/clang/AST/DeclTemplate.h' l='249'>/// Produces a shallow copy of the given template argument list.
  ///
  /// This operation assumes that the input argument list outlives it.
  /// This takes the list as a pointer to avoid looking like a copy
  /// constructor, since this really really isn&apos;t safe to use that
  /// way.</doc>
<use f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='8435' u='c' c='_ZN5clang4Sema35CheckFunctionTemplateSpecializationEPNS_12FunctionDeclEPNS_24TemplateArgumentListInfoERNS_12LookupResultEb'/>
