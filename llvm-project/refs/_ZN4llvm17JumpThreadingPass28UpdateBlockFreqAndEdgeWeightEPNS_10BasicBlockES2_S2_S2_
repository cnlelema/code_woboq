<dec f='llvm/llvm/include/llvm/Transforms/Scalar/JumpThreading.h' l='154' type='void llvm::JumpThreadingPass::UpdateBlockFreqAndEdgeWeight(llvm::BasicBlock * PredBB, llvm::BasicBlock * BB, llvm::BasicBlock * NewBB, llvm::BasicBlock * SuccBB)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2071' u='c' c='_ZN4llvm17JumpThreadingPass10ThreadEdgeEPNS_10BasicBlockERKNS_15SmallVectorImplIS2_EES2_'/>
<def f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2142' ll='2233' type='void llvm::JumpThreadingPass::UpdateBlockFreqAndEdgeWeight(llvm::BasicBlock * PredBB, llvm::BasicBlock * BB, llvm::BasicBlock * NewBB, llvm::BasicBlock * SuccBB)'/>
<doc f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2139'>/// Update the block frequency of BB and branch weight and the metadata on the
/// edge BB-&gt;SuccBB. This is done by scaling the weight of BB-&gt;SuccBB by 1 -
/// Freq(PredBB-&gt;BB) / Freq(BB-&gt;SuccBB).</doc>
