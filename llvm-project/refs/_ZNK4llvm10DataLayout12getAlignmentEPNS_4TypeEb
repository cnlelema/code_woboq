<dec f='llvm/llvm/include/llvm/IR/DataLayout.h' l='186' type='unsigned int llvm::DataLayout::getAlignment(llvm::Type * Ty, bool abi_or_pref) const'/>
<doc f='llvm/llvm/include/llvm/IR/DataLayout.h' l='185'>/// Internal helper method that returns requested alignment for type.</doc>
<def f='llvm/llvm/lib/IR/DataLayout.cpp' l='719' ll='770' type='unsigned int llvm::DataLayout::getAlignment(llvm::Type * Ty, bool abi_or_pref) const'/>
<use f='llvm/llvm/lib/IR/DataLayout.cpp' l='736' u='c' c='_ZNK4llvm10DataLayout12getAlignmentEPNS_4TypeEb'/>
<use f='llvm/llvm/lib/IR/DataLayout.cpp' l='773' u='c' c='_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE'/>
<use f='llvm/llvm/lib/IR/DataLayout.cpp' l='783' u='c' c='_ZNK4llvm10DataLayout20getPrefTypeAlignmentEPNS_4TypeE'/>
<doc f='llvm/llvm/lib/IR/DataLayout.cpp' l='711'>/*!
  \param abi_or_pref Flag that determines which alignment is returned. true
  returns the ABI alignment, false returns the preferred alignment.
  \param Ty The underlying type for which alignment is determined.

  Get the ABI (\a abi_or_pref == true) or preferred alignment (\a abi_or_pref
  == false) for the requested type \a Ty.
 */</doc>
