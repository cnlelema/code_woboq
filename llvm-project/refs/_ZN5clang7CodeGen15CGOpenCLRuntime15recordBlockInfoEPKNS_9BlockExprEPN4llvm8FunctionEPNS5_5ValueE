<dec f='llvm/clang/lib/CodeGen/CGOpenCLRuntime.h' l='92' type='void clang::CodeGen::CGOpenCLRuntime::recordBlockInfo(const clang::BlockExpr * E, llvm::Function * InvokeF, llvm::Value * Block)'/>
<use f='llvm/clang/lib/CodeGen/CGBlocks.cpp' l='1185' u='c' c='_ZN5clang7CodeGen15CodeGenFunction16EmitBlockLiteralERKNS0_11CGBlockInfoE'/>
<use f='llvm/clang/lib/CodeGen/CGBlocks.cpp' l='1477' u='c' c='_ZL16buildGlobalBlockRN5clang7CodeGen13CodeGenModuleERKNS0_11CGBlockInfoEPN4llvm8ConstantE'/>
<doc f='llvm/clang/lib/CodeGen/CGOpenCLRuntime.h' l='86'>/// Record invoke function and block literal emitted during normal
  /// codegen for a block expression. The information is used by
  /// emitOpenCLEnqueuedBlock to emit wrapper kernel.
  ///
  /// \param InvokeF invoke function emitted for the block expression.
  /// \param Block block literal emitted for the block expression.</doc>
<def f='llvm/clang/lib/CodeGen/CGOpenCLRuntime.cpp' l='144' ll='154' type='void clang::CodeGen::CGOpenCLRuntime::recordBlockInfo(const clang::BlockExpr * E, llvm::Function * InvokeF, llvm::Value * Block)'/>
<doc f='llvm/clang/lib/CodeGen/CGOpenCLRuntime.cpp' l='142'>/// Record emitted llvm invoke function and llvm block literal for the
/// corresponding block expression.</doc>
