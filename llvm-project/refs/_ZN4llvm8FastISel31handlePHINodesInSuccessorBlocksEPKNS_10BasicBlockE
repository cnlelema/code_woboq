<dec f='llvm/llvm/include/llvm/CodeGen/FastISel.h' l='551' type='bool llvm::FastISel::handlePHINodesInSuccessorBlocks(const llvm::BasicBlock * LLVMBB)'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp' l='1606' u='c' c='_ZN4llvm8FastISel17selectInstructionEPKNS_11InstructionE'/>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp' l='2262' ll='2325' type='bool llvm::FastISel::handlePHINodesInSuccessorBlocks(const llvm::BasicBlock * LLVMBB)'/>
<doc f='llvm/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp' l='2256'>/// HandlePHINodesInSuccessorBlocks - Handle PHI nodes in successor blocks.
/// Emit code to ensure constants are copied into registers when needed.
/// Remember the virtual registers that need to be added to the Machine PHI
/// nodes as input.  We cannot just directly add them, because expansion
/// might result in multiple MBB&apos;s for one BB.  As such, the start of the
/// BB might correspond to a different MBB than the end.</doc>
<doc f='llvm/llvm/include/llvm/CodeGen/FastISel.h' l='544'>/// Handle PHI nodes in successor blocks.
  ///
  /// Emit code to ensure constants are copied into registers when needed.
  /// Remember the virtual registers that need to be added to the Machine PHI
  /// nodes as input.  We cannot just directly add them, because expansion might
  /// result in multiple MBB&apos;s for one BB.  As such, the start of the BB might
  /// correspond to a different MBB than the end.</doc>
