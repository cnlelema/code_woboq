<dec f='llvm/llvm/include/llvm/MC/MCCodeView.h' l='97' type='unsigned int'/>
<use f='llvm/llvm/include/llvm/MC/MCCodeView.h' l='121' u='r' c='_ZNK4llvm16MCCVFunctionInfo25isUnallocatedFunctionInfoEv'/>
<use f='llvm/llvm/include/llvm/MC/MCCodeView.h' l='127' u='r' c='_ZNK4llvm16MCCVFunctionInfo17isInlinedCallSiteEv'/>
<use f='llvm/llvm/include/llvm/MC/MCCodeView.h' l='132' u='r' c='_ZNK4llvm16MCCVFunctionInfo15getParentFuncIdEv'/>
<offset>0</offset>
<doc f='llvm/llvm/include/llvm/MC/MCCodeView.h' l='92'>/// If this represents an inlined call site, then ParentFuncIdPlusOne will be
  /// the parent function id plus one. If this represents a normal function,
  /// then there is no parent, and ParentFuncIdPlusOne will be FunctionSentinel.
  /// If this struct is an unallocated slot in the function info vector, then
  /// ParentFuncIdPlusOne will be zero.</doc>
<use f='llvm/llvm/lib/MC/MCCodeView.cpp' l='95' u='w' c='_ZN4llvm15CodeViewContext16recordFunctionIdEj'/>
<use f='llvm/llvm/lib/MC/MCCodeView.cpp' l='116' u='w' c='_ZN4llvm15CodeViewContext23recordInlinedCallSiteIdEjjjjj'/>
