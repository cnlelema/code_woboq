<def f='llvm/llvm/include/llvm/Support/VersionTuple.h' l='26' ll='147'/>
<size>16</size>
<doc f='llvm/llvm/include/llvm/Support/VersionTuple.h' l='25'>/// Represents a version number in the form major[.minor[.subminor[.build]]].</doc>
<mbr r='llvm::VersionTuple::Major' o='0' t='unsigned int'/>
<mbr r='llvm::VersionTuple::Minor' o='32' t='unsigned int'/>
<mbr r='llvm::VersionTuple::HasMinor' o='63' t='unsigned int'/>
<mbr r='llvm::VersionTuple::Subminor' o='64' t='unsigned int'/>
<mbr r='llvm::VersionTuple::HasSubminor' o='95' t='unsigned int'/>
<mbr r='llvm::VersionTuple::Build' o='96' t='unsigned int'/>
<mbr r='llvm::VersionTuple::HasBuild' o='127' t='unsigned int'/>
<fun r='_ZN4llvm12VersionTupleC1Ev'/>
<fun r='_ZN4llvm12VersionTupleC1Ej'/>
<fun r='_ZN4llvm12VersionTupleC1Ejj'/>
<fun r='_ZN4llvm12VersionTupleC1Ejjj'/>
<fun r='_ZN4llvm12VersionTupleC1Ejjjj'/>
<fun r='_ZNK4llvm12VersionTuple5emptyEv'/>
<fun r='_ZNK4llvm12VersionTuple8getMajorEv'/>
<fun r='_ZNK4llvm12VersionTuple8getMinorEv'/>
<fun r='_ZNK4llvm12VersionTuple11getSubminorEv'/>
<fun r='_ZNK4llvm12VersionTuple8getBuildEv'/>
<fun r='_ZNK4llvm12VersionTuple11getAsStringEv'/>
<fun r='_ZN4llvm12VersionTuple8tryParseENS_9StringRefE'/>
