<inh f='llvm/llvm/include/llvm/Pass.h' l='284' c='llvm::FunctionPass'/>
<def f='llvm/llvm/include/llvm/Transforms/InstCombine/InstCombine.h' l='42' ll='56'/>
<size>2136</size>
<doc f='llvm/llvm/include/llvm/Transforms/InstCombine/InstCombine.h' l='38'>/// The legacy pass manager&apos;s instcombine pass.
///
/// This is a basic whole-function wrapper around the instcombine utility. It
/// will try to combine all instructions in the function.</doc>
<mbr r='llvm::InstructionCombiningPass::Worklist' o='256' t='llvm::InstCombineWorklist'/>
<mbr r='llvm::InstructionCombiningPass::ExpensiveCombines' o='17024' t='const bool'/>
<smbr r='llvm::InstructionCombiningPass::ID' t='char'/>
<fun r='_ZN4llvm24InstructionCombiningPassC1Eb'/>
<fun r='_ZNK4llvm24InstructionCombiningPass16getAnalysisUsageERNS_13AnalysisUsageE'/>
<fun r='_ZN4llvm24InstructionCombiningPass13runOnFunctionERNS_8FunctionE'/>
