<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='894' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildExtractVectorElement(const llvm::DstOp &amp; Res, const llvm::SrcOp &amp; Val, const llvm::SrcOp &amp; Idx)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='886'>/// Build and insert \p Res = G_EXTRACT_VECTOR_ELT \p Val, \p Idx
  ///
  /// \pre setBasicBlock or setMI must have been called.
  /// \pre \p Res must be a generic virtual register with scalar type.
  /// \pre \p Val must be a generic virtual register with vector type.
  /// \pre \p Idx must be a generic virtual register with scalar type.
  ///
  /// \return The newly created instruction.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp' l='1546' u='c' c='_ZN4llvm12IRTranslator23translateExtractElementERKNS_4UserERNS_16MachineIRBuilderE'/>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='694' ll='698' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildExtractVectorElement(const llvm::DstOp &amp; Res, const llvm::SrcOp &amp; Val, const llvm::SrcOp &amp; Idx)'/>
