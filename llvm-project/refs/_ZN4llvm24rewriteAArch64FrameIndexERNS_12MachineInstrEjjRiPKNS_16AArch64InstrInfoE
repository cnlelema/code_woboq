<dec f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.h' l='310' type='bool llvm::rewriteAArch64FrameIndex(llvm::MachineInstr &amp; MI, unsigned int FrameRegIdx, unsigned int FrameReg, int &amp; Offset, const llvm::AArch64InstrInfo * TII)'/>
<doc f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.h' l='307'>/// rewriteAArch64FrameIndex - Rewrite MI to access &apos;Offset&apos; bytes from the
/// FP. Return false if the offset could not be handled directly in MI, and
/// return the left-over portion by reference.</doc>
<def f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='3309' ll='3342' type='bool llvm::rewriteAArch64FrameIndex(llvm::MachineInstr &amp; MI, unsigned int FrameRegIdx, unsigned int FrameReg, int &amp; Offset, const llvm::AArch64InstrInfo * TII)'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp' l='431' u='c' c='_ZNK4llvm19AArch64RegisterInfo17resolveFrameIndexERNS_12MachineInstrEjl'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp' l='473' u='c' c='_ZNK4llvm19AArch64RegisterInfo19eliminateFrameIndexENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEEijPNS_12RegScavengerE'/>
