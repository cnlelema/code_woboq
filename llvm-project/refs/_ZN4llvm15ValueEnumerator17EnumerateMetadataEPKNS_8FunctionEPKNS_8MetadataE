<dec f='llvm/llvm/lib/Bitcode/Writer/ValueEnumerator.h' l='284' type='void llvm::ValueEnumerator::EnumerateMetadata(const llvm::Function * F, const llvm::Metadata * MD)'/>
<doc f='llvm/llvm/lib/Bitcode/Writer/ValueEnumerator.h' l='269'>/// Enumerate reachable metadata in (almost) post-order.
  ///
  /// Enumerate all the metadata reachable from MD.  We want to minimize the
  /// cost of reading bitcode records, and so the primary consideration is that
  /// operands of uniqued nodes are resolved before the nodes are read.  This
  /// avoids re-uniquing them on the context and factors away RAUW support.
  ///
  /// This algorithm guarantees that subgraphs of uniqued nodes are in
  /// post-order.  Distinct subgraphs reachable only from a single uniqued node
  /// will be in post-order.
  ///
  /// \note The relative order of a distinct and uniqued node is irrelevant.
  /// \a organizeMetadata() will later partition distinct nodes ahead of
  /// uniqued ones.
  ///{</doc>
<use f='llvm/llvm/lib/Bitcode/Writer/ValueEnumerator.cpp' l='387' u='c' c='_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb'/>
<use f='llvm/llvm/lib/Bitcode/Writer/ValueEnumerator.cpp' l='399' u='c' c='_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb'/>
<use f='llvm/llvm/lib/Bitcode/Writer/ValueEnumerator.cpp' l='414' u='c' c='_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb'/>
<use f='llvm/llvm/lib/Bitcode/Writer/ValueEnumerator.cpp' l='424' u='c' c='_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb'/>
<use f='llvm/llvm/lib/Bitcode/Writer/ValueEnumerator.cpp' l='430' u='c' c='_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb'/>
<use f='llvm/llvm/lib/Bitcode/Writer/ValueEnumerator.cpp' l='563' u='c' c='_ZN4llvm15ValueEnumerator20EnumerateNamedMDNodeEPKNS_11NamedMDNodeE'/>
<def f='llvm/llvm/lib/Bitcode/Writer/ValueEnumerator.cpp' l='570' ll='572' type='void llvm::ValueEnumerator::EnumerateMetadata(const llvm::Function * F, const llvm::Metadata * MD)'/>
