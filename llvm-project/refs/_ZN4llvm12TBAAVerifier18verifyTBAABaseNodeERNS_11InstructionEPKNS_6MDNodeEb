<dec f='llvm/llvm/include/llvm/IR/Verifier.h' l='64' type='TBAAVerifier::TBAABaseNodeSummary llvm::TBAAVerifier::verifyTBAABaseNode(llvm::Instruction &amp; I, const llvm::MDNode * BaseNode, bool IsNewFormat)'/>
<def f='llvm/llvm/lib/IR/Verifier.cpp' l='5097' ll='5114' type='TBAAVerifier::TBAABaseNodeSummary llvm::TBAAVerifier::verifyTBAABaseNode(llvm::Instruction &amp; I, const llvm::MDNode * BaseNode, bool IsNewFormat)'/>
<use f='llvm/llvm/lib/IR/Verifier.cpp' l='5397' u='c' c='_ZN4llvm12TBAAVerifier17visitTBAAMetadataERNS_11InstructionEPKNS_6MDNodeE'/>
<doc f='llvm/llvm/lib/IR/Verifier.cpp' l='5094'>/// Verify that \p BaseNode can be used as the &quot;base type&quot; in the struct-path
/// TBAA scheme.  This means \p BaseNode is either a scalar node, or a
/// struct-type node describing an aggregate data structure (like a struct).</doc>
