<dec f='llvm/llvm/include/llvm/Analysis/MustExecute.h' l='149' type='bool llvm::ICFLoopSafetyInfo::doesNotWriteMemoryBefore(const llvm::Instruction &amp; I, const llvm::Loop * CurLoop) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/MustExecute.h' l='147'>/// Returns true if we could not execute a memory-modifying instruction before
  /// we execute \p I under assumption that \p CurLoop is entered.</doc>
<def f='llvm/llvm/lib/Analysis/MustExecute.cpp' l='287' ll='293' type='bool llvm::ICFLoopSafetyInfo::doesNotWriteMemoryBefore(const llvm::Instruction &amp; I, const llvm::Loop * CurLoop) const'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LICM.cpp' l='889' u='c' c='_ZN4llvm11hoistRegionEPNS_15DomTreeNodeBaseINS_10BasicBlockEEEPNS_9AAResultsEPNS_8LoopInfoEPNS_13DominatorTreeEPNS_17TargetLibraryInfoEPNS_4LoopEPNS_18226459'/>
