<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolutionExpander.h' l='399' type='void llvm::SCEVExpander::fixupInsertPoints(llvm::Instruction * I)'/>
<def f='llvm/llvm/lib/Analysis/ScalarEvolutionExpander.cpp' l='989' ll='997' type='void llvm::SCEVExpander::fixupInsertPoints(llvm::Instruction * I)'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolutionExpander.cpp' l='1028' u='c' c='_ZN4llvm12SCEVExpander10hoistIVIncEPNS_11InstructionES2_'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolutionExpander.cpp' l='1088' u='c' c='_ZN4llvm12SCEVExpander14hoistBeforePosEPNS_13DominatorTreeEPNS_11InstructionES4_PNS_7PHINodeE'/>
<doc f='llvm/llvm/lib/Analysis/ScalarEvolutionExpander.cpp' l='982'>/// If the insert point of the current builder or any of the builders on the
/// stack of saved builders has &apos;I&apos; as its insert point, update it to point to
/// the instruction after &apos;I&apos;.  This is intended to be used when the instruction
/// &apos;I&apos; is being moved.  If this fixup is not done and &apos;I&apos; is moved to a
/// different block, the inconsistent insert point (with a mismatched
/// Instruction and Block) can lead to an instruction being inserted in a block
/// other than its parent.</doc>
