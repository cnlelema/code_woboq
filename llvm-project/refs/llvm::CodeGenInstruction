<def f='llvm/llvm/utils/TableGen/CodeGenInstruction.h' l='216' ll='311'/>
<size>208</size>
<mbr r='llvm::CodeGenInstruction::TheDef' o='0' t='llvm::Record *'/>
<mbr r='llvm::CodeGenInstruction::Namespace' o='64' t='llvm::StringRef'/>
<mbr r='llvm::CodeGenInstruction::AsmString' o='192' t='std::string'/>
<mbr r='llvm::CodeGenInstruction::Operands' o='448' t='llvm::CGIOperandList'/>
<mbr r='llvm::CodeGenInstruction::ImplicitDefs' o='832' t='std::vector&lt;Record *&gt;'/>
<mbr r='llvm::CodeGenInstruction::ImplicitUses' o='1024' t='std::vector&lt;Record *&gt;'/>
<mbr r='llvm::CodeGenInstruction::isReturn' o='1216' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isEHScopeReturn' o='1217' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isBranch' o='1218' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isIndirectBranch' o='1219' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isCompare' o='1220' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isMoveImm' o='1221' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isMoveReg' o='1222' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isBitcast' o='1223' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isSelect' o='1224' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isBarrier' o='1225' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isCall' o='1226' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isAdd' o='1227' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isTrap' o='1228' t='bool'/>
<mbr r='llvm::CodeGenInstruction::canFoldAsLoad' o='1229' t='bool'/>
<mbr r='llvm::CodeGenInstruction::mayLoad' o='1230' t='bool'/>
<mbr r='llvm::CodeGenInstruction::mayLoad_Unset' o='1231' t='bool'/>
<mbr r='llvm::CodeGenInstruction::mayStore' o='1232' t='bool'/>
<mbr r='llvm::CodeGenInstruction::mayStore_Unset' o='1233' t='bool'/>
<mbr r='llvm::CodeGenInstruction::mayRaiseFPException' o='1234' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isPredicable' o='1235' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isConvertibleToThreeAddress' o='1236' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isCommutable' o='1237' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isTerminator' o='1238' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isReMaterializable' o='1239' t='bool'/>
<mbr r='llvm::CodeGenInstruction::hasDelaySlot' o='1240' t='bool'/>
<mbr r='llvm::CodeGenInstruction::usesCustomInserter' o='1241' t='bool'/>
<mbr r='llvm::CodeGenInstruction::hasPostISelHook' o='1242' t='bool'/>
<mbr r='llvm::CodeGenInstruction::hasCtrlDep' o='1243' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isNotDuplicable' o='1244' t='bool'/>
<mbr r='llvm::CodeGenInstruction::hasSideEffects' o='1245' t='bool'/>
<mbr r='llvm::CodeGenInstruction::hasSideEffects_Unset' o='1246' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isAsCheapAsAMove' o='1247' t='bool'/>
<mbr r='llvm::CodeGenInstruction::hasExtraSrcRegAllocReq' o='1248' t='bool'/>
<mbr r='llvm::CodeGenInstruction::hasExtraDefRegAllocReq' o='1249' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isCodeGenOnly' o='1250' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isPseudo' o='1251' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isRegSequence' o='1252' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isExtractSubreg' o='1253' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isInsertSubreg' o='1254' t='bool'/>
<mbr r='llvm::CodeGenInstruction::isConvergent' o='1255' t='bool'/>
<mbr r='llvm::CodeGenInstruction::hasNoSchedulingInfo' o='1256' t='bool'/>
<mbr r='llvm::CodeGenInstruction::FastISelShouldIgnore' o='1257' t='bool'/>
<mbr r='llvm::CodeGenInstruction::hasChain' o='1258' t='bool'/>
<mbr r='llvm::CodeGenInstruction::hasChain_Inferred' o='1259' t='bool'/>
<mbr r='llvm::CodeGenInstruction::variadicOpsAreDefs' o='1260' t='bool'/>
<mbr r='llvm::CodeGenInstruction::DeprecatedReason' o='1280' t='std::string'/>
<mbr r='llvm::CodeGenInstruction::HasComplexDeprecationPredicate' o='1536' t='bool'/>
<fun r='_ZNK4llvm18CodeGenInstruction13hasUndefFlagsEv'/>
<mbr r='llvm::CodeGenInstruction::InferredFrom' o='1600' t='llvm::Record *'/>
<fun r='_ZN4llvm18CodeGenInstructionC1EPNS_6RecordE'/>
<fun r='_ZNK4llvm18CodeGenInstruction28HasOneImplicitDefWithKnownVTERKNS_13CodeGenTargetE'/>
<fun r='_ZN4llvm18CodeGenInstruction24FlattenAsmStringVariantsENS_9StringRefEj'/>
<fun r='_ZNK4llvm18CodeGenInstruction17isOperandAPointerEj'/>
