<dec f='llvm/llvm/include/llvm/Analysis/AliasAnalysis.h' l='411' type='llvm::ModRefInfo llvm::AAResults::getArgModRefInfo(const llvm::CallBase * Call, unsigned int ArgIdx)'/>
<use f='llvm/llvm/include/llvm/Analysis/AliasAnalysis.h' l='803' u='c' c='_ZN4llvm14BatchAAResults16getArgModRefInfoEPKNS_8CallBaseEj'/>
<use f='llvm/llvm/include/llvm/Analysis/AliasAnalysis.h' l='986' u='c' c='_ZN4llvm12AAResultBase14AAResultsProxy16getArgModRefInfoEPKNS_8CallBaseEj'/>
<doc f='llvm/llvm/include/llvm/Analysis/AliasAnalysis.h' l='401'>/// @}
  //===--------------------------------------------------------------------===//
  /// \name Simple mod/ref information
  /// @{

  /// Get the ModRef info associated with a pointer argument of a call. The
  /// result&apos;s bits are set to indicate the allowed aliasing ModRef kinds. Note
  /// that these bits do not necessarily account for the overall behavior of
  /// the function, but rather only provide additional per-argument
  /// information. This never sets ModRefInfo::Must.</doc>
<def f='llvm/llvm/lib/Analysis/AliasAnalysis.cpp' l='135' ll='147' type='llvm::ModRefInfo llvm::AAResults::getArgModRefInfo(const llvm::CallBase * Call, unsigned int ArgIdx)'/>
<use f='llvm/llvm/lib/Analysis/AliasAnalysis.cpp' l='220' u='c' c='_ZN4llvm9AAResults13getModRefInfoEPKNS_8CallBaseERKNS_14MemoryLocationERNS_11AAQueryInfoE'/>
<use f='llvm/llvm/lib/Analysis/AliasAnalysis.cpp' l='306' u='c' c='_ZN4llvm9AAResults13getModRefInfoEPKNS_8CallBaseES3_RNS_11AAQueryInfoE'/>
<use f='llvm/llvm/lib/Analysis/AliasAnalysis.cpp' l='355' u='c' c='_ZN4llvm9AAResults13getModRefInfoEPKNS_8CallBaseES3_RNS_11AAQueryInfoE'/>
<use f='llvm/llvm/lib/Analysis/AliasSetTracker.cpp' l='498' u='c' c='_ZN4llvm15AliasSetTracker3addEPNS_11InstructionE'/>
