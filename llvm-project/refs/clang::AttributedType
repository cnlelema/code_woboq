<inh f='llvm/clang/include/clang/AST/Type.h' l='1428' c='clang::Type'/>
<inh f='llvm/llvm/include/llvm/ADT/FoldingSet.h' l='135' c='llvm::FoldingSetBase::Node'/>
<def f='llvm/clang/include/clang/AST/Type.h' l='4507' ll='4602'/>
<size>48</size>
<doc f='llvm/clang/include/clang/AST/Type.h' l='4495'>/// An attributed type is a type to which a type attribute has been applied.
///
/// The &quot;modified type&quot; is the fully-sugared type to which the attributed
/// type was applied; generally it is not canonically equivalent to the
/// attributed type. The &quot;equivalent type&quot; is the minimally-desugared type
/// which the type is canonically equivalent to.
///
/// For example, in the following attributed type:
///     int32_t __attribute__((vector_size(16)))
///   - the modified type is the TypedefType for int32_t
///   - the equivalent type is VectorType(16, int32_t)
///   - the canonical type is VectorType(16, int)</doc>
<mbr r='clang::AttributedType::ModifiedType' o='256' t='clang::QualType'/>
<mbr r='clang::AttributedType::EquivalentType' o='320' t='clang::QualType'/>
<fun r='_ZN5clang14AttributedTypeC1ENS_8QualTypeENS_4attr4KindES1_S1_'/>
<fun r='_ZNK5clang14AttributedType11getAttrKindEv'/>
<fun r='_ZNK5clang14AttributedType15getModifiedTypeEv'/>
<fun r='_ZNK5clang14AttributedType17getEquivalentTypeEv'/>
<fun r='_ZNK5clang14AttributedType9isSugaredEv'/>
<fun r='_ZNK5clang14AttributedType7desugarEv'/>
<fun r='_ZNK5clang14AttributedType11isQualifierEv'/>
<fun r='_ZNK5clang14AttributedType12isMSTypeSpecEv'/>
<fun r='_ZNK5clang14AttributedType13isCallingConvEv'/>
<fun r='_ZNK5clang14AttributedType23getImmediateNullabilityEv'/>
<fun r='_ZN5clang14AttributedType22getNullabilityAttrKindENS_15NullabilityKindE'/>
<fun r='_ZN5clang14AttributedType21stripOuterNullabilityERNS_8QualTypeE'/>
<fun r='_ZN5clang14AttributedType7ProfileERN4llvm16FoldingSetNodeIDE'/>
<fun r='_ZN5clang14AttributedType7ProfileERN4llvm16FoldingSetNodeIDENS_4attr4KindENS_8QualTypeES6_'/>
<fun r='_ZN5clang14AttributedType7classofEPKNS_4TypeE'/>
