<def f='llvm/llvm/include/llvm/Analysis/LoopInfo.h' l='917' ll='925' type='void llvm::LoopInfoBase::removeBlock(BlockT * BB)'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopInfo.h' l='914'>/// This method completely removes BB from all data structures,
  /// including all of the Loop objects it is nested in and our mapping from
  /// BasicBlocks to loops.</doc>
<use f='llvm/llvm/include/llvm/CodeGen/MachineLoopInfo.h' l='167' u='c' c='_ZN4llvm15MachineLoopInfo11removeBlockEPNS_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopFuse.cpp' l='1097' u='c' c='_ZN9LoopFuser13performFusionERK15FusionCandidateS2_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp' l='461' u='c' c='_ZN12_GLOBAL__N_129ConstantTerminatorFoldingImpl20deleteDeadLoopBlocksEv'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopUnswitch.cpp' l='1638' u='c' c='_ZN12_GLOBAL__N_112LoopUnswitch12SimplifyCodeERSt6vectorIPN4llvm11InstructionESaIS4_EEPNS2_4LoopE'/>
<use f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='264' u='c' c='_ZN4llvm25MergeBlockIntoPredecessorEPNS_10BasicBlockEPNS_14DomTreeUpdaterEPNS_8LoopInfoEPNS_16MemorySSAUpdaterEPNS_23MemoryDependenceResultsE'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopRotationUtils.cpp' l='634' u='c' c='_ZN12_GLOBAL__N_110LoopRotate17simplifyLoopLatchEPN4llvm4LoopE'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopSimplify.cpp' l='673' u='c' c='_ZL15simplifyOneLoopPN4llvm4LoopERNS_15SmallVectorImplIS1_EEPNS_13DominatorTreeEPNS_8LoopInfoEPNS_15ScalarEvolutionEPNS_15AssumptionCacheEPNS_16MemorySSAUpdaterEb'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopUtils.cpp' l='616' u='c' c='_ZN4llvm14deleteDeadLoopEPNS_4LoopEPNS_13DominatorTreeEPNS_15ScalarEvolutionEPNS_8LoopInfoE'/>
<use f='llvm/llvm/unittests/Transforms/Scalar/LoopPassManagerTest.cpp' l='1396' u='c' c='_ZN12_GLOBAL__N_137LoopPassManagerTest_LoopDeletion_Test8TestBodyEv'/>
