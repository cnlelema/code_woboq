<dec f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='313' type='llvm::ConstantRange llvm::ConstantRange::truncate(uint32_t BitWidth) const'/>
<doc f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='309'>/// Return a new range in the specified integer type, which must be
  /// strictly smaller than the current type.  The returned range will
  /// correspond to the possible range of values if the source range had been
  /// truncated to the specified type.</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='1674' u='c' c='_ZN4llvm15ScalarEvolution17getZeroExtendExprEPKNS_4SCEVEPNS_4TypeEj'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='1985' u='c' c='_ZN4llvm15ScalarEvolution17getSignExtendExprEPKNS_4SCEVEPNS_4TypeEj'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5619' u='c' c='_ZN4llvm15ScalarEvolution11getRangeRefEPKNS_4SCEVENS0_13RangeSignHintE'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='611' u='c' c='_ZNK4llvm13ConstantRange6castOpENS_11Instruction7CastOpsEj'/>
<def f='llvm/llvm/lib/IR/ConstantRange.cpp' l='683' ll='735' type='llvm::ConstantRange llvm::ConstantRange::truncate(uint32_t DstTySize) const'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='740' u='c' c='_ZNK4llvm13ConstantRange11zextOrTruncEj'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='749' u='c' c='_ZNK4llvm13ConstantRange11sextOrTruncEj'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='872' u='c' c='_ZNK4llvm13ConstantRange8multiplyERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='897' u='c' c='_ZNK4llvm13ConstantRange8multiplyERKS0_'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='299' u='c' c='_ZN12_GLOBAL__N_128ConstantRangeTest_Trunc_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='300' u='c' c='_ZN12_GLOBAL__N_128ConstantRangeTest_Trunc_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='301' u='c' c='_ZN12_GLOBAL__N_128ConstantRangeTest_Trunc_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='302' u='c' c='_ZN12_GLOBAL__N_128ConstantRangeTest_Trunc_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='303' u='c' c='_ZN12_GLOBAL__N_128ConstantRangeTest_Trunc_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='313' u='c' c='_ZN12_GLOBAL__N_128ConstantRangeTest_Trunc_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='313' u='c' c='_ZN12_GLOBAL__N_128ConstantRangeTest_Trunc_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='317' u='c' c='_ZN12_GLOBAL__N_128ConstantRangeTest_Trunc_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='321' u='c' c='_ZN12_GLOBAL__N_128ConstantRangeTest_Trunc_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='321' u='c' c='_ZN12_GLOBAL__N_128ConstantRangeTest_Trunc_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='325' u='c' c='_ZN12_GLOBAL__N_128ConstantRangeTest_Trunc_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='325' u='c' c='_ZN12_GLOBAL__N_128ConstantRangeTest_Trunc_Test8TestBodyEv'/>
