<def f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='150' ll='153' type='LatticeVal llvm::SparseSolver::getExistingValueState(LatticeKey Key) const'/>
<use f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='304' u='c' c='_ZN4llvm12SparseSolver21getFeasibleSuccessorsERNS_11InstructionERNS_15SmallVectorImplIbEEb'/>
<use f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='343' u='c' c='_ZN4llvm12SparseSolver21getFeasibleSuccessorsERNS_11InstructionERNS_15SmallVectorImplIbEEb'/>
<doc f='llvm/llvm/include/llvm/Analysis/SparsePropagation.h' l='147'>/// getExistingValueState - Return the LatticeVal object corresponding to the
  /// given value from the ValueState map. If the value is not in the map,
  /// UntrackedVal is returned, unlike the getValueState method.</doc>
