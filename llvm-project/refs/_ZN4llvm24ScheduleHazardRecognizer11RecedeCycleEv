<def f='llvm/llvm/include/llvm/CodeGen/ScheduleHazardRecognizer.h' l='109' type='void llvm::ScheduleHazardRecognizer::RecedeCycle()'/>
<use f='llvm/llvm/lib/CodeGen/MachineScheduler.cpp' l='2137' u='c' c='_ZN4llvm13SchedBoundary9bumpCycleEj'/>
<doc f='llvm/llvm/include/llvm/CodeGen/ScheduleHazardRecognizer.h' l='106'>/// RecedeCycle - This callback is invoked whenever the next bottom-up
  /// instruction to be scheduled cannot issue in the current cycle, either
  /// because of latency or resource conflicts.</doc>
<ovr f='llvm/llvm/lib/CodeGen/ScoreboardHazardRecognizer.cpp' l='235' c='_ZN4llvm26ScoreboardHazardRecognizer11RecedeCycleEv'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp' l='641' u='c' c='_ZN12_GLOBAL__N_117ScheduleDAGRRList14AdvanceToCycleEj'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp' l='940' u='c' c='_ZN12_GLOBAL__N_117ScheduleDAGRRList28RestoreHazardCheckerBottomUpEv'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/GCNHazardRecognizer.cpp' l='330' c='_ZN4llvm19GCNHazardRecognizer11RecedeCycleEv'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonMachineScheduler.cpp' l='379' u='c' c='_ZN4llvm23ConvergingVLIWScheduler17VLIWSchedBoundary9bumpCycleEv'/>
