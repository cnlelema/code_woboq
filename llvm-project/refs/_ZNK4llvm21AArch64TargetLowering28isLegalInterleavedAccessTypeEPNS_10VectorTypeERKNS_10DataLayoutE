<dec f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.h' l='527' type='bool llvm::AArch64TargetLowering::isLegalInterleavedAccessType(llvm::VectorType * VecTy, const llvm::DataLayout &amp; DL) const'/>
<doc f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.h' l='524'>/// Returns true if \p VecTy is a legal interleaved access type. This
  /// function checks the vector element type and the overall width of the
  /// vector.</doc>
<def f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='8430' ll='8447' type='bool llvm::AArch64TargetLowering::isLegalInterleavedAccessType(llvm::VectorType * VecTy, const llvm::DataLayout &amp; DL) const'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='8476' u='c' c='_ZNK4llvm21AArch64TargetLowering20lowerInterleavedLoadEPNS_8LoadInstENS_8ArrayRefIPNS_17ShuffleVectorInstEEENS3_IjEEj'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='8607' u='c' c='_ZNK4llvm21AArch64TargetLowering21lowerInterleavedStoreEPNS_9StoreInstEPNS_17ShuffleVectorInstEj'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp' l='678' u='c' c='_ZN4llvm14AArch64TTIImpl26getInterleavedMemoryOpCostEjPNS_4TypeEjNS_8ArrayRefIjEEjjbb'/>
