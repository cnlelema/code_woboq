<dec f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.h' l='215' type='bool llvm::HexagonInstrInfo::expandPostRAPseudo(llvm::MachineInstr &amp; MI) const'/>
<doc f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.h' l='209'>/// This function is called for all pseudo instructions
  /// that remain after register allocation. Many pseudo instructions are
  /// created to help register allocation. This is the place to convert them
  /// into real instructions. The target can edit MI in place, or it can insert
  /// new instructions and erase MI. The function should return true if
  /// anything was changed.</doc>
<def f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='1011' ll='1421' type='bool llvm::HexagonInstrInfo::expandPostRAPseudo(llvm::MachineInstr &amp; MI) const'/>
<doc f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='1005'>/// expandPostRAPseudo - This function is called for all pseudo instructions
/// that remain after register allocation. Many pseudo instructions are
/// created to help register allocation. This is the place to convert them
/// into real instructions. The target can edit MI in place, or it can insert
/// new instructions and erase MI. The function should return true if
/// anything was changed.</doc>
