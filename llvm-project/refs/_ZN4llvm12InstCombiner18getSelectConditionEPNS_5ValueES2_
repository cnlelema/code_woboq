<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='570' type='llvm::Value * llvm::InstCombiner::getSelectCondition(llvm::Value * A, llvm::Value * B)'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='1947' ll='2000' type='llvm::Value * llvm::InstCombiner::getSelectCondition(llvm::Value * A, llvm::Value * B)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='2011' u='c' c='_ZN4llvm12InstCombiner20matchSelectFromAndOrEPNS_5ValueES2_S2_S2_'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='1944'>/// We have an expression of the form (A &amp; C) | (B &amp; D). If A is a scalar or
/// vector composed of all-zeros or all-ones values and is the bitwise &apos;not&apos; of
/// B, it can be used as the condition operand of a select instruction.</doc>
