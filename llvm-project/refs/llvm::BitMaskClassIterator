<def f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='1072' ll='1153'/>
<size>32</size>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='1065'>//===----------------------------------------------------------------------===//
//                           BitMaskClassIterator
//===----------------------------------------------------------------------===//
/// This class encapuslates the logic to iterate over bitmask returned by
/// the various RegClass related APIs.
/// E.g., this class can be used to iterate over the subclasses provided by
/// TargetRegisterClass::getSubClassMask or SuperRegClassIterator::getMask.</doc>
<mbr r='llvm::BitMaskClassIterator::NumRegClasses' o='0' t='const unsigned int'/>
<mbr r='llvm::BitMaskClassIterator::Base' o='32' t='unsigned int'/>
<mbr r='llvm::BitMaskClassIterator::Idx' o='64' t='unsigned int'/>
<mbr r='llvm::BitMaskClassIterator::ID' o='96' t='unsigned int'/>
<mbr r='llvm::BitMaskClassIterator::Mask' o='128' t='const uint32_t *'/>
<mbr r='llvm::BitMaskClassIterator::CurrentChunk' o='192' t='uint32_t'/>
<fun r='_ZN4llvm20BitMaskClassIterator12moveToNextIDEv'/>
<fun r='_ZN4llvm20BitMaskClassIterator9moveNBitsEj'/>
<fun r='_ZN4llvm20BitMaskClassIteratorC1EPKjRKNS_18TargetRegisterInfoE'/>
<fun r='_ZNK4llvm20BitMaskClassIterator7isValidEv'/>
<fun r='_ZNK4llvm20BitMaskClassIterator5getIDEv'/>
<fun r='_ZN4llvm20BitMaskClassIteratorppEv'/>
