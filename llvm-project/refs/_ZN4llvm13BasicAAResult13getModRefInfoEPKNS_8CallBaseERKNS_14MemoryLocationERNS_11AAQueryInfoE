<dec f='llvm/llvm/include/llvm/Analysis/BasicAliasAnalysis.h' l='87' type='llvm::ModRefInfo llvm::BasicAAResult::getModRefInfo(const llvm::CallBase * Call, const llvm::MemoryLocation &amp; Loc, llvm::AAQueryInfo &amp; AAQI)'/>
<def f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='849' ll='1024' type='llvm::ModRefInfo llvm::BasicAAResult::getModRefInfo(const llvm::CallBase * Call, const llvm::MemoryLocation &amp; Loc, llvm::AAQueryInfo &amp; AAQI)'/>
<doc f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='843'>/// Checks to see if the specified callsite can clobber the specified memory
/// object.
///
/// Since we only look at local properties of this function, we really can&apos;t
/// say much about this query.  We do, however, use simple &quot;address taken&quot;
/// analysis on local objects.</doc>
