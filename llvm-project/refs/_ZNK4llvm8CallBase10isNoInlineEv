<def f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='1620' type='bool llvm::CallBase::isNoInline() const'/>
<doc f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='1619'>/// Return true if the call should not be inlined.</doc>
<use f='llvm/llvm/lib/Analysis/CodeMetrics.cpp' l='132' u='c' c='_ZN4llvm11CodeMetrics17analyzeBasicBlockEPKNS_10BasicBlockERKNS_19TargetTransformInfoERKNS_15SmallPtrSetImplIPKNS_5ValueEEE'/>
<use f='llvm/llvm/lib/Analysis/InlineCost.cpp' l='2090' u='c' c='_ZN4llvm13getInlineCostERNS_8CallBaseEPNS_8FunctionERKNS_12InlineParamsERNS_19TargetTransformInfoERSt8functionIFRNS_15AssumptionCacheERS2_EENS_8Option13600799'/>
