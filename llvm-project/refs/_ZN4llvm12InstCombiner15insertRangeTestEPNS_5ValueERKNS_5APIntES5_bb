<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='914' type='llvm::Value * llvm::InstCombiner::insertRangeTest(llvm::Value * V, const llvm::APInt &amp; Lo, const llvm::APInt &amp; Hi, bool isSigned, bool Inside)'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='165' ll='188' type='llvm::Value * llvm::InstCombiner::insertRangeTest(llvm::Value * V, const llvm::APInt &amp; Lo, const llvm::APInt &amp; Hi, bool isSigned, bool Inside)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='1169' u='c' c='_ZN4llvm12InstCombiner14foldAndOfICmpsEPNS_8ICmpInstES2_RNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='1190' u='c' c='_ZN4llvm12InstCombiner14foldAndOfICmpsEPNS_8ICmpInstES2_RNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='1203' u='c' c='_ZN4llvm12InstCombiner14foldAndOfICmpsEPNS_8ICmpInstES2_RNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='2231' u='c' c='_ZN4llvm12InstCombiner13foldOrOfICmpsEPNS_8ICmpInstES2_RNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='2243' u='c' c='_ZN4llvm12InstCombiner13foldOrOfICmpsEPNS_8ICmpInstES2_RNS_11InstructionE'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='162'>/// Emit a computation of: (V &gt;= Lo &amp;&amp; V &lt; Hi) if Inside is true, otherwise
/// (V &lt; Lo || V &gt;= Hi). This method expects that Lo &lt;= Hi. IsSigned indicates
/// whether to treat V, Lo, and Hi as signed or not.</doc>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='2284' u='c' c='_ZN4llvm12InstCombiner19foldICmpDivConstantERNS_8ICmpInstEPNS_14BinaryOperatorERKNS_5APIntE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='2297' u='c' c='_ZN4llvm12InstCombiner19foldICmpDivConstantERNS_8ICmpInstEPNS_14BinaryOperatorERKNS_5APIntE'/>
