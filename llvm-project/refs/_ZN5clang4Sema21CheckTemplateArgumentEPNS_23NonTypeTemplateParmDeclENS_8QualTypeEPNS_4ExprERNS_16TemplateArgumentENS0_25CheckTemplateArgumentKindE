<dec f='llvm/clang/include/clang/Sema/Sema.h' l='6683' type='ExprResult clang::Sema::CheckTemplateArgument(clang::NonTypeTemplateParmDecl * Param, clang::QualType InstantiatedParamType, clang::Expr * Arg, clang::TemplateArgument &amp; Converted, clang::Sema::CheckTemplateArgumentKind CTAK = CTAK_Specified)'/>
<use f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='4904' u='c' c='_ZN5clang4Sema21CheckTemplateArgumentEPNS_9NamedDeclERNS_19TemplateArgumentLocES2_NS_14SourceLocationES5_jRN4llvm15SmallVectorImplINS_16TemplateArgume15467567'/>
<use f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='4965' u='c' c='_ZN5clang4Sema21CheckTemplateArgumentEPNS_9NamedDeclERNS_19TemplateArgumentLocES2_NS_14SourceLocationES5_jRN4llvm15SmallVectorImplINS_16TemplateArgume15467567'/>
<def f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='6281' ll='6788' type='ExprResult clang::Sema::CheckTemplateArgument(clang::NonTypeTemplateParmDecl * Param, clang::QualType ParamType, clang::Expr * Arg, clang::TemplateArgument &amp; Converted, clang::Sema::CheckTemplateArgumentKind CTAK = CTAK_Specified)'/>
<doc f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='6274'>/// Check a template argument against its corresponding
/// non-type template parameter.
///
/// This routine implements the semantics of C++ [temp.arg.nontype].
/// If an error occurred, it returns ExprError(); otherwise, it
/// returns the converted template argument. \p ParamType is the
/// type of the non-type template parameter after it has been instantiated.</doc>
