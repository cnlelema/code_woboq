<dec f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.h' l='698' type='const char * llvm::AArch64TargetLowering::LowerXConstraint(llvm::EVT ConstraintVT) const'/>
<inh f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3823' c='_ZNK4llvm14TargetLowering16LowerXConstraintENS_3EVTE'/>
<def f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='5630' ll='5650' type='const char * llvm::AArch64TargetLowering::LowerXConstraint(llvm::EVT ConstraintVT) const'/>
<doc f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='5603'>//===----------------------------------------------------------------------===//
//                          AArch64 Inline Assembly Support
//===----------------------------------------------------------------------===//

// Table of Constraints
// TODO: This is the current set of constraints supported by ARM for the
// compiler, not all of them may make sense.
//
// r - A general register
// w - An FP/SIMD register of some size in the range v0-v31
// x - An FP/SIMD register of some size in the range v0-v15
// I - Constant that can be used with an ADD instruction
// J - Constant that can be used with a SUB instruction
// K - Constant that can be used with a 32-bit logical instruction
// L - Constant that can be used with a 64-bit logical instruction
// M - Constant that can be used as a 32-bit MOV immediate
// N - Constant that can be used as a 64-bit MOV immediate
// Q - A memory reference with base register and no offset
// S - A symbolic address
// Y - Floating point constant zero
// Z - Integer constant zero
//
//   Note that general register operands will be output using their 64-bit x
// register name, whatever the size of the variable, unless the asm operand
// is prefixed by the %w modifier. Floating-point and SIMD register operands
// will be output with the v prefix unless prefixed by the %b, %h, %s, %d or
// %q modifier.</doc>
