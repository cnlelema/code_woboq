<inh f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='333' c='llvm::VPBlockBase'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='1067' ll='1140'/>
<size>144</size>
<doc f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='1059'>/// VPRegionBlock represents a collection of VPBasicBlocks and VPRegionBlocks
/// which form a Single-Entry-Single-Exit subgraph of the output IR CFG.
/// A VPRegionBlock may indicate that its contents are to be replicated several
/// times. This is designed to support predicated scalarization, in which a
/// scalar if-then code structure needs to be generated VF * UF times. Having
/// this replication indicator helps to keep a single model for multiple
/// candidate VF&apos;s. The actual replication takes place only once the desired VF
/// and UF have been determined.</doc>
<mbr r='llvm::VPRegionBlock::Entry' o='960' t='llvm::VPBlockBase *'/>
<mbr r='llvm::VPRegionBlock::Exit' o='1024' t='llvm::VPBlockBase *'/>
<mbr r='llvm::VPRegionBlock::IsReplicator' o='1088' t='bool'/>
<fun r='_ZN4llvm13VPRegionBlockC1EPNS_11VPBlockBaseES2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb'/>
<fun r='_ZN4llvm13VPRegionBlockC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb'/>
<fun r='_ZN4llvm13VPRegionBlockD1Ev'/>
<fun r='_ZN4llvm13VPRegionBlock7classofEPKNS_11VPBlockBaseE'/>
<fun r='_ZNK4llvm13VPRegionBlock8getEntryEv'/>
<fun r='_ZN4llvm13VPRegionBlock8getEntryEv'/>
<fun r='_ZN4llvm13VPRegionBlock8setEntryEPNS_11VPBlockBaseE'/>
<fun r='_ZNK4llvm13VPRegionBlock5frontEv'/>
<fun r='_ZNK4llvm13VPRegionBlock7getExitEv'/>
<fun r='_ZN4llvm13VPRegionBlock7getExitEv'/>
<fun r='_ZN4llvm13VPRegionBlock7setExitEPNS_11VPBlockBaseE'/>
<fun r='_ZNK4llvm13VPRegionBlock12isReplicatorEv'/>
<fun r='_ZN4llvm13VPRegionBlock7executeEPNS_16VPTransformStateE'/>
