<def f='llvm/lld/COFF/SymbolTable.h' l='48' ll='122'/>
<size>64</size>
<doc f='llvm/lld/COFF/SymbolTable.h' l='36'>// SymbolTable is a bucket of all known symbols, including defined,
// undefined, or lazy symbols (the last one is symbols in archive
// files whose archive members are not yet loaded).
//
// We put all symbols of all files to a SymbolTable, and the
// SymbolTable selects the &quot;best&quot; symbols if there are name
// conflicts. For example, obviously, a defined symbol is better than
// an undefined symbol. Or, if there&apos;s a conflict between a lazy and a
// undefined, it&apos;ll read an archive member to read a real definition
// to replace the lazy symbol. The logic is implemented in the
// add*() functions, which are called by input files as they are parsed.
// There is one add* function per symbol type.</doc>
<fun r='_ZN3lld4coff11SymbolTable7addFileEPNS0_9InputFileE'/>
<fun r='_ZN3lld4coff11SymbolTable24reportRemainingUndefinesEv'/>
<fun r='_ZN3lld4coff11SymbolTable25loadMinGWAutomaticImportsEv'/>
<fun r='_ZN3lld4coff11SymbolTable26handleMinGWAutomaticImportEPNS0_6SymbolEN4llvm9StringRefE'/>
<fun r='_ZN3lld4coff11SymbolTable9getChunksEv'/>
<fun r='_ZN3lld4coff11SymbolTable4findEN4llvm9StringRefE'/>
<fun r='_ZN3lld4coff11SymbolTable14findUnderscoreEN4llvm9StringRefE'/>
<fun r='_ZN3lld4coff11SymbolTable10findMangleEN4llvm9StringRefE'/>
<fun r='_ZN3lld4coff11SymbolTable21addCombinedLTOObjectsEv'/>
<fun r='_ZN3lld4coff11SymbolTable19compileBitcodeFilesEv'/>
<fun r='_ZN3lld4coff11SymbolTable12addUndefinedEN4llvm9StringRefE'/>
<fun r='_ZN3lld4coff11SymbolTable12addSyntheticEN4llvm9StringRefEPNS0_5ChunkE'/>
<fun r='_ZN3lld4coff11SymbolTable11addAbsoluteEN4llvm9StringRefEm'/>
<fun r='_ZN3lld4coff11SymbolTable12addUndefinedEN4llvm9StringRefEPNS0_9InputFileEb'/>
<fun r='_ZN3lld4coff11SymbolTable7addLazyEPNS0_11ArchiveFileEN4llvm6object7Archive6SymbolE'/>
<fun r='_ZN3lld4coff11SymbolTable11addAbsoluteEN4llvm9StringRefENS2_6object13COFFSymbolRefE'/>
<fun r='_ZN3lld4coff11SymbolTable10addRegularEPNS0_9InputFileEN4llvm9StringRefEPKNS4_6object19coff_symbol_genericEPNS0_12SectionChunkE'/>
<fun r='_ZN3lld4coff11SymbolTable9addComdatEPNS0_9InputFileEN4llvm9StringRefEPKNS4_6object19coff_symbol_genericE'/>
<fun r='_ZN3lld4coff11SymbolTable9addCommonEPNS0_9InputFileEN4llvm9StringRefEmPKNS4_6object19coff_symbol_genericEPNS0_11CommonChunkE'/>
<fun r='_ZN3lld4coff11SymbolTable13addImportDataEN4llvm9StringRefEPNS0_10ImportFileE'/>
<fun r='_ZN3lld4coff11SymbolTable14addImportThunkEN4llvm9StringRefEPNS0_17DefinedImportDataEt'/>
<fun r='_ZN3lld4coff11SymbolTable15reportDuplicateEPNS0_6SymbolEPNS0_9InputFileE'/>
<mbr r='lld::coff::SymbolTable::LocalImportChunks' o='0' t='std::vector&lt;Chunk *&gt;'/>
<fun r='_ZN3lld4coff11SymbolTable13forEachSymbolET_'/>
<fun r='_ZN3lld4coff11SymbolTable6insertEN4llvm9StringRefE'/>
<fun r='_ZN3lld4coff11SymbolTable6insertEN4llvm9StringRefEPNS0_9InputFileE'/>
<fun r='_ZN3lld4coff11SymbolTable17getSymsWithPrefixEN4llvm9StringRefE'/>
<mbr r='lld::coff::SymbolTable::SymMap' o='192' t='llvm::DenseMap&lt;llvm::CachedHashStringRef, Symbol *&gt;'/>
<mbr r='lld::coff::SymbolTable::LTO' o='448' t='std::unique_ptr&lt;BitcodeCompiler&gt;'/>
