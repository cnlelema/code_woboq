<def f='llvm/llvm/include/llvm/ADT/ilist.h' l='56' ll='58'/>
<doc f='llvm/llvm/include/llvm/ADT/ilist.h' l='44'>/// Custom traits to do nothing on deletion.
///
/// Specialize ilist_alloc_traits to inherit from this to disable the
/// non-intrusive deletion in iplist (which implies ownership).
///
/// If you want purely intrusive semantics with no callbacks, consider using \a
/// simple_ilist instead.
///
/// \code
/// template &lt;&gt;
/// struct ilist_alloc_traits&lt;MyType&gt; : ilist_noalloc_traits&lt;MyType&gt; {};
/// \endcode</doc>
<fun r='_ZN4llvm20ilist_noalloc_traits10deleteNodeEPT_'/>
<ovr f='llvm/lld/lib/ReaderWriter/MachO/MachONormalizedFileBinaryWriter.cpp' l='70' c='llvm::ilist_alloc_traits'/>
<ovr f='llvm/llvm/include/llvm/CodeGen/SlotIndexes.h' l='79' c='llvm::ilist_alloc_traits'/>
