<def f='llvm/llvm/include/llvm/IR/Instruction.h' l='554' ll='567' type='bool llvm::Instruction::isFenceLike() const'/>
<doc f='llvm/llvm/include/llvm/IR/Instruction.h' l='552'>/// Return true if this instruction behaves like a memory fence: it can load
  /// or store to memory location without being given a memory location.</doc>
<use f='llvm/llvm/lib/Analysis/AliasAnalysis.cpp' l='160' u='c' c='_ZN4llvm9AAResults13getModRefInfoEPNS_11InstructionEPKNS_8CallBaseERNS_11AAQueryInfoE'/>
<use f='llvm/llvm/lib/Analysis/MemorySSA.cpp' l='2291' u='c' c='_ZN4llvm9MemorySSA17ClobberWalkerBase29getClobberingMemoryAccessBaseEPNS_12MemoryAccessERKNS_14MemoryLocationERj'/>
<use f='llvm/llvm/lib/Analysis/MemorySSA.cpp' l='2340' u='c' c='_ZN4llvm9MemorySSA17ClobberWalkerBase29getClobberingMemoryAccessBaseEPNS_12MemoryAccessERjb'/>
