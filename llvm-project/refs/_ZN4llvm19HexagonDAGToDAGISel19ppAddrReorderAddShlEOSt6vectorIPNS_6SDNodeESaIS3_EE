<def f='llvm/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp' l='1025' ll='1074' type='void llvm::HexagonDAGToDAGISel::ppAddrReorderAddShl(std::vector&lt;SDNode *&gt; &amp;&amp; Nodes)'/>
<doc f='llvm/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp' l='1019'>// Transform: (store ch val (add x (add (shl y c) e)))
//        to: (store ch val (add x (shl (add y d) c))),
// where e = (shl d c) for some integer d.
// The purpose of this is to enable generation of loads/stores with
// shifted addressing mode, i.e. mem(x+y&lt;&lt;#c). For that, the shift
// value c must be 0, 1 or 2.</doc>
