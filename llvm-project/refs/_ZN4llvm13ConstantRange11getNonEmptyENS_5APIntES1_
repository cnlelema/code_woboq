<def f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='84' ll='88' type='static llvm::ConstantRange llvm::ConstantRange::getNonEmpty(llvm::APInt Lower, llvm::APInt Upper)'/>
<doc f='llvm/llvm/include/llvm/IR/ConstantRange.h' l='82'>/// Create non-empty constant range with the given bounds. If Lower and
  /// Upper are the same, a full range is returned.</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5787' u='c' c='_ZL25getRangeForAffineARHelperN4llvm5APIntERKNS_13ConstantRangeERKS0_jb'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='5846' u='c' c='_ZN4llvm20computeConstantRangeEPKNS_5ValueEb'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='105' u='c' c='_ZN4llvm13ConstantRange21makeAllowedICmpRegionENS_7CmpInst9PredicateERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='107' u='c' c='_ZN4llvm13ConstantRange21makeAllowedICmpRegionENS_7CmpInst9PredicateERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='121' u='c' c='_ZN4llvm13ConstantRange21makeAllowedICmpRegionENS_7CmpInst9PredicateERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='123' u='c' c='_ZN4llvm13ConstantRange21makeAllowedICmpRegionENS_7CmpInst9PredicateERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='189' u='c' c='_ZL21makeExactMulNUWRegionRKN4llvm5APIntE'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='245' u='c' c='_ZN4llvm13ConstantRange26makeGuaranteedNoWrapRegionENS_11Instruction9BinaryOpsERKS0_j'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='250' u='c' c='_ZN4llvm13ConstantRange26makeGuaranteedNoWrapRegionENS_11Instruction9BinaryOpsERKS0_j'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='257' u='c' c='_ZN4llvm13ConstantRange26makeGuaranteedNoWrapRegionENS_11Instruction9BinaryOpsERKS0_j'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='261' u='c' c='_ZN4llvm13ConstantRange26makeGuaranteedNoWrapRegionENS_11Instruction9BinaryOpsERKS0_j'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='910' u='c' c='_ZNK4llvm13ConstantRange4smaxERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='921' u='c' c='_ZNK4llvm13ConstantRange4umaxERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='932' u='c' c='_ZNK4llvm13ConstantRange4sminERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='943' u='c' c='_ZNK4llvm13ConstantRange4uminERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='964' u='c' c='_ZNK4llvm13ConstantRange4udivERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='1062' u='c' c='_ZNK4llvm13ConstantRange4uremERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='1115' u='c' c='_ZNK4llvm13ConstantRange9binaryAndERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='1126' u='c' c='_ZNK4llvm13ConstantRange8binaryOrERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='1161' u='c' c='_ZNK4llvm13ConstantRange4lshrERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='1212' u='c' c='_ZNK4llvm13ConstantRange4ashrERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='1221' u='c' c='_ZNK4llvm13ConstantRange8uadd_satERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='1230' u='c' c='_ZNK4llvm13ConstantRange8sadd_satERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='1239' u='c' c='_ZNK4llvm13ConstantRange8usub_satERKS0_'/>
<use f='llvm/llvm/lib/IR/ConstantRange.cpp' l='1248' u='c' c='_ZNK4llvm13ConstantRange8ssub_satERKS0_'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='90' u='c' c='_ZN12_GLOBAL__N_1L27TestUnsignedBinOpExhaustiveET_T0_bb'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='127' u='c' c='_ZN12_GLOBAL__N_1L25TestSignedBinOpExhaustiveET_T0_bb'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='880' u='c' c='_ZN12_GLOBAL__N_127ConstantRangeTest_SDiv_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='900' u='c' c='_ZN12_GLOBAL__N_127ConstantRangeTest_SDiv_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/ConstantRangeTest.cpp' l='1992' u='c' c='_ZN12_GLOBAL__N_126ConstantRangeTest_Abs_Test8TestBodyEv'/>
