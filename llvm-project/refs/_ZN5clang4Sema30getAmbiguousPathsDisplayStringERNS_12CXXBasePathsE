<dec f='llvm/clang/include/clang/Sema/Sema.h' l='6195' type='std::string clang::Sema::getAmbiguousPathsDisplayString(clang::CXXBasePaths &amp; Paths)'/>
<use f='llvm/clang/lib/Sema/SemaCast.cpp' l='1594' u='c' c='_ZL28TryStaticMemberPointerUpcastRN5clang4SemaERNS_12ActionResultIPNS_4ExprELb1EEENS_8QualTypeES7_bNS_11SourceRangeERjRNS_8CastKindERN4llvm11SmallVect13425350'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='2703' u='c' c='_ZN5clang4Sema28CheckDerivedToBaseConversionENS_8QualTypeES1_jjNS_14SourceLocationENS_11SourceRangeENS_15DeclarationNameEPN4llvm11SmallVectorIPNS_16CX12891372'/>
<def f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='2735' ll='2752' type='std::string clang::Sema::getAmbiguousPathsDisplayString(clang::CXXBasePaths &amp; Paths)'/>
<doc f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='2723'>/// Builds a string representing ambiguous paths from a
/// specific derived class to different subobjects of the same base
/// class.
///
/// This function builds a string that can be used in error messages
/// to show the different paths that one can take through the
/// inheritance hierarchy to go from the derived class to different
/// subobjects of a base class. The result looks something like this:
/// @code
/// struct D -&gt; struct B -&gt; struct A
/// struct D -&gt; struct C -&gt; struct A
/// @endcode</doc>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='3071' u='c' c='_ZN5clang4Sema28CheckMemberPointerConversionEPNS_4ExprENS_8QualTypeERNS_8CastKindERN4llvm11SmallVectorIPNS_16CXXBaseSpecifierELj4EEEb'/>
