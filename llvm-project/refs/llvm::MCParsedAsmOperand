<def f='llvm/llvm/include/llvm/MC/MCParser/MCParsedAsmOperand.h' l='24' ll='87'/>
<size>48</size>
<doc f='llvm/llvm/include/llvm/MC/MCParser/MCParsedAsmOperand.h' l='20'>/// MCParsedAsmOperand - This abstract class represents a source-level assembly
/// instruction operand.  It should be subclassed by target-specific code.  This
/// base class is used by target-independent clients and is the interface
/// between parsing an asm instruction and recognizing it.</doc>
<mbr r='llvm::MCParsedAsmOperand::MCOperandNum' o='64' t='unsigned int'/>
<mbr r='llvm::MCParsedAsmOperand::Constraint' o='128' t='std::string'/>
<fun r='_ZN4llvm18MCParsedAsmOperandC1Ev'/>
<fun r='_ZN4llvm18MCParsedAsmOperandC1ERKS0_'/>
<fun r='_ZN4llvm18MCParsedAsmOperandaSERKS0_'/>
<fun r='_ZN4llvm18MCParsedAsmOperandD1Ev'/>
<fun r='_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE'/>
<fun r='_ZN4llvm18MCParsedAsmOperand13getConstraintEv'/>
<fun r='_ZN4llvm18MCParsedAsmOperand15setMCOperandNumEj'/>
<fun r='_ZN4llvm18MCParsedAsmOperand15getMCOperandNumEv'/>
<fun r='_ZN4llvm18MCParsedAsmOperand10getSymNameEv'/>
<fun r='_ZN4llvm18MCParsedAsmOperand9getOpDeclEv'/>
<fun r='_ZNK4llvm18MCParsedAsmOperand7isTokenEv'/>
<fun r='_ZNK4llvm18MCParsedAsmOperand5isImmEv'/>
<fun r='_ZNK4llvm18MCParsedAsmOperand5isRegEv'/>
<fun r='_ZNK4llvm18MCParsedAsmOperand6getRegEv'/>
<fun r='_ZNK4llvm18MCParsedAsmOperand5isMemEv'/>
<fun r='_ZNK4llvm18MCParsedAsmOperand11getStartLocEv'/>
<fun r='_ZNK4llvm18MCParsedAsmOperand9getEndLocEv'/>
<fun r='_ZNK4llvm18MCParsedAsmOperand13needAddressOfEv'/>
<fun r='_ZNK4llvm18MCParsedAsmOperand10isOffsetOfEv'/>
<fun r='_ZNK4llvm18MCParsedAsmOperand14getOffsetOfLocEv'/>
<fun r='_ZNK4llvm18MCParsedAsmOperand5printERNS_11raw_ostreamE'/>
<fun r='_ZNK4llvm18MCParsedAsmOperand4dumpEv'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp' l='275' c='(anonymousnamespace)::AArch64Operand'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/AsmParser/AMDGPUAsmParser.cpp' l='78' c='(anonymousnamespace)::AMDGPUOperand'/>
<ovr f='llvm/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp' l='638' c='(anonymousnamespace)::ARMOperand'/>
<ovr f='llvm/llvm/lib/Target/BPF/AsmParser/BPFAsmParser.cpp' l='79' c='(anonymousnamespace)::BPFOperand'/>
<ovr f='llvm/llvm/lib/Target/Hexagon/AsmParser/HexagonAsmParser.cpp' l='193' c='(anonymousnamespace)::HexagonOperand'/>
<ovr f='llvm/llvm/lib/Target/Lanai/AsmParser/LanaiAsmParser.cpp' l='103' c='(anonymousnamespace)::LanaiOperand'/>
<ovr f='llvm/llvm/lib/Target/MSP430/AsmParser/MSP430AsmParser.cpp' l='89' c='(anonymousnamespace)::MSP430Operand'/>
<ovr f='llvm/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp' l='811' c='(anonymousnamespace)::MipsOperand'/>
<ovr f='llvm/llvm/lib/Target/PowerPC/AsmParser/PPCAsmParser.cpp' l='171' c='(anonymousnamespace)::PPCOperand'/>
<ovr f='llvm/llvm/lib/Target/Sparc/AsmParser/SparcAsmParser.cpp' l='200' c='(anonymousnamespace)::SparcOperand'/>
<ovr f='llvm/llvm/lib/Target/SystemZ/AsmParser/SystemZAsmParser.cpp' l='76' c='(anonymousnamespace)::SystemZOperand'/>
<ovr f='llvm/llvm/lib/Target/WebAssembly/AsmParser/WebAssemblyAsmParser.cpp' l='42' c='(anonymousnamespace)::WebAssemblyOperand'/>
<ovr f='llvm/llvm/lib/Target/X86/AsmParser/X86Operand.h' l='31' c='llvm::X86Operand'/>
