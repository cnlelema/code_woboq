<inh f='llvm/clang/include/clang/AST/DeclCXX.h' l='2109' c='clang::CXXMethodDecl'/>
<def f='llvm/clang/include/clang/AST/DeclCXX.h' l='2889' ll='2944'/>
<size>1</size>
<doc f='llvm/clang/include/clang/AST/DeclCXX.h' l='2879'>/// Represents a C++ conversion function within a class.
///
/// For example:
///
/// \code
/// class X {
/// public:
///   operator bool();
/// };
/// \endcode</doc>
<fun r='_ZN5clang17CXXConversionDeclC1ERNS_10ASTContextEPNS_13CXXRecordDeclENS_14SourceLocationERKNS_19DeclarationNameInfoENS_8QualTypeEPNS_14TypeSourceInfoEb7615310'/>
<fun r='_ZN5clang17CXXConversionDecl6anchorEv'/>
<mbr r='clang::CXXConversionDecl::ExplicitSpec' t='clang::ExplicitSpecifier'/>
<fun r='_ZN5clang17CXXConversionDecl20setExplicitSpecifierENS_17ExplicitSpecifierE'/>
<fun r='_ZN5clang17CXXConversionDecl6CreateERNS_10ASTContextEPNS_13CXXRecordDeclENS_14SourceLocationERKNS_19DeclarationNameInfoENS_8QualTypeEPNS_14TypeSourceI2908482'/>
<fun r='_ZN5clang17CXXConversionDecl18CreateDeserializedERNS_10ASTContextEj'/>
<fun r='_ZN5clang17CXXConversionDecl20getExplicitSpecifierEv'/>
<fun r='_ZNK5clang17CXXConversionDecl20getExplicitSpecifierEv'/>
<fun r='_ZNK5clang17CXXConversionDecl10isExplicitEv'/>
<fun r='_ZNK5clang17CXXConversionDecl17getConversionTypeEv'/>
<fun r='_ZNK5clang17CXXConversionDecl32isLambdaToBlockPointerConversionEv'/>
<fun r='_ZN5clang17CXXConversionDecl16getCanonicalDeclEv'/>
<fun r='_ZNK5clang17CXXConversionDecl16getCanonicalDeclEv'/>
<fun r='_ZN5clang17CXXConversionDecl7classofEPKNS_4DeclE'/>
<fun r='_ZN5clang17CXXConversionDecl11classofKindENS_4Decl4KindE'/>
