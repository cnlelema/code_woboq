<dec f='llvm/llvm/include/llvm/Analysis/LoopInfo.h' l='531' type='bool llvm::Loop::getIncomingAndBackEdge(llvm::BasicBlock *&amp; Incoming, llvm::BasicBlock *&amp; Backedge) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopInfo.h' l='529'>/// Obtain the unique incoming and back edge. Return false if they are
  /// non-unique or the loop is dead; otherwise, return true.</doc>
<def f='llvm/llvm/lib/Analysis/LoopInfo.cpp' l='120' ll='144' type='bool llvm::Loop::getIncomingAndBackEdge(llvm::BasicBlock *&amp; Incoming, llvm::BasicBlock *&amp; Backedge) const'/>
<use f='llvm/llvm/lib/Analysis/LoopInfo.cpp' l='150' u='c' c='_ZNK4llvm4Loop29getCanonicalInductionVariableEv'/>
<use f='llvm/llvm/unittests/Analysis/ScalarEvolutionTest.cpp' l='1548' u='c' c='_ZN4llvm12_GLOBAL__N_153ScalarEvolutionsTest_SCEVExpandInsertCanonicalIV_Test8TestBodyEv'/>
