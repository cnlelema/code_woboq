<dec f='llvm/clang/include/clang/Lex/Preprocessor.h' l='1309' type='void clang::Preprocessor::EnterTokenStream(const clang::Token * Toks, unsigned int NumToks, bool DisableMacroExpansion, bool OwnsTokens, bool IsReinject)'/>
<use f='llvm/clang/include/clang/Lex/Preprocessor.h' l='1316' u='c' c='_ZN5clang12Preprocessor16EnterTokenStreamESt10unique_ptrIA_NS_5TokenESt14default_deleteIS3_EEjbb'/>
<use f='llvm/clang/include/clang/Lex/Preprocessor.h' l='1322' u='c' c='_ZN5clang12Preprocessor16EnterTokenStreamEN4llvm8ArrayRefINS_5TokenEEEbb'/>
<doc f='llvm/clang/include/clang/Lex/Preprocessor.h' l='1295'>/// Add a &quot;macro&quot; context to the top of the include stack,
  /// which will cause the lexer to start returning the specified tokens.
  ///
  /// If \p DisableMacroExpansion is true, tokens lexed from the token stream
  /// will not be subject to further macro expansion. Otherwise, these tokens
  /// will be re-macro-expanded when/if expansion is enabled.
  ///
  /// If \p OwnsTokens is false, this method assumes that the specified stream
  /// of tokens has a permanent owner somewhere, so they do not need to be
  /// copied. If it is true, it assumes the array of tokens is allocated with
  /// \c new[] and the Preprocessor will delete[] it.
  ///
  /// If \p IsReinject the resulting tokens will have Token::IsReinjected flag
  /// set, see the flag documentation for details.</doc>
<use f='llvm/clang/lib/Lex/MacroArgs.cpp' l='183' u='c' c='_ZN5clang9MacroArgs17getPreExpArgumentEjRNS_12PreprocessorE'/>
<def f='llvm/clang/lib/Lex/PPLexerChange.cpp' l='156' ll='197' type='void clang::Preprocessor::EnterTokenStream(const clang::Token * Toks, unsigned int NumToks, bool DisableMacroExpansion, bool OwnsTokens, bool IsReinject)'/>
<use f='llvm/clang/lib/Lex/PPLexerChange.cpp' l='174' u='c' c='_ZN5clang12Preprocessor16EnterTokenStreamEPKNS_5TokenEjbbb'/>
<doc f='llvm/clang/lib/Lex/PPLexerChange.cpp' l='144'>/// EnterTokenStream - Add a &quot;macro&quot; context to the top of the include stack,
/// which will cause the lexer to start returning the specified tokens.
///
/// If DisableMacroExpansion is true, tokens lexed from the token stream will
/// not be subject to further macro expansion.  Otherwise, these tokens will
/// be re-macro-expanded when/if expansion is enabled.
///
/// If OwnsTokens is false, this method assumes that the specified stream of
/// tokens has a permanent owner somewhere, so they do not need to be copied.
/// If it is true, it assumes the array of tokens is allocated with new[] and
/// must be freed.
///</doc>
<use f='llvm/clang/lib/Lex/Pragma.cpp' l='368' u='c' c='_ZN5clang12Preprocessor23HandleMicrosoft__pragmaERNS_5TokenE'/>
