<inh f='llvm/clang/include/clang/AST/Stmt.h' l='66' c='clang::Stmt'/>
<def f='llvm/clang/include/clang/AST/Stmt.h' l='3316' ll='3527'/>
<size>1</size>
<doc f='llvm/clang/include/clang/AST/Stmt.h' l='3307'>/// This captures a statement into a function. For example, the following
/// pragma annotated compound statement can be represented as a CapturedStmt,
/// and this compound statement is the body of an anonymous outlined function.
/// @code
/// #pragma omp parallel
/// {
///   compute();
/// }
/// @endcode</doc>
<mbr r='clang::CapturedStmt::NumCaptures' t='unsigned int'/>
<mbr r='clang::CapturedStmt::CapDeclAndKind' t='int'/>
<mbr r='clang::CapturedStmt::TheRecordDecl' t='clang::RecordDecl *'/>
<fun r='_ZN5clang12CapturedStmtC1EPNS_4StmtENS_18CapturedRegionKindEN4llvm8ArrayRefINS0_7CaptureEEENS5_IPNS_4ExprEEEPNS_12CapturedDeclEPNS_10RecordDeclE'/>
<fun r='_ZN5clang12CapturedStmtC1ENS_4Stmt10EmptyShellEj'/>
<fun r='_ZN5clang12CapturedStmt14getStoredStmtsEv'/>
<fun r='_ZNK5clang12CapturedStmt14getStoredStmtsEv'/>
<fun r='_ZNK5clang12CapturedStmt17getStoredCapturesEv'/>
<fun r='_ZN5clang12CapturedStmt15setCapturedStmtEPNS_4StmtE'/>
<fun r='_ZN5clang12CapturedStmt6CreateERKNS_10ASTContextEPNS_4StmtENS_18CapturedRegionKindEN4llvm8ArrayRefINS0_7CaptureEEENS8_IPNS_4ExprEEEPNS_12CapturedDeclEPNS_10RecordDeclE'/>
<fun r='_ZN5clang12CapturedStmt18CreateDeserializedERKNS_10ASTContextEj'/>
<fun r='_ZN5clang12CapturedStmt15getCapturedStmtEv'/>
<fun r='_ZNK5clang12CapturedStmt15getCapturedStmtEv'/>
<fun r='_ZN5clang12CapturedStmt15getCapturedDeclEv'/>
<fun r='_ZNK5clang12CapturedStmt15getCapturedDeclEv'/>
<fun r='_ZN5clang12CapturedStmt15setCapturedDeclEPNS_12CapturedDeclE'/>
<fun r='_ZNK5clang12CapturedStmt21getCapturedRegionKindEv'/>
<fun r='_ZN5clang12CapturedStmt21setCapturedRegionKindENS_18CapturedRegionKindE'/>
<fun r='_ZNK5clang12CapturedStmt21getCapturedRecordDeclEv'/>
<fun r='_ZN5clang12CapturedStmt21setCapturedRecordDeclEPNS_10RecordDeclE'/>
<fun r='_ZNK5clang12CapturedStmt16capturesVariableEPKNS_7VarDeclE'/>
<fun r='_ZN5clang12CapturedStmt8capturesEv'/>
<fun r='_ZNK5clang12CapturedStmt8capturesEv'/>
<fun r='_ZN5clang12CapturedStmt13capture_beginEv'/>
<fun r='_ZNK5clang12CapturedStmt13capture_beginEv'/>
<fun r='_ZNK5clang12CapturedStmt11capture_endEv'/>
<fun r='_ZNK5clang12CapturedStmt12capture_sizeEv'/>
<fun r='_ZN5clang12CapturedStmt13capture_initsEv'/>
<fun r='_ZNK5clang12CapturedStmt13capture_initsEv'/>
<fun r='_ZN5clang12CapturedStmt18capture_init_beginEv'/>
<fun r='_ZNK5clang12CapturedStmt18capture_init_beginEv'/>
<fun r='_ZN5clang12CapturedStmt16capture_init_endEv'/>
<fun r='_ZNK5clang12CapturedStmt16capture_init_endEv'/>
<fun r='_ZNK5clang12CapturedStmt11getBeginLocEv'/>
<fun r='_ZNK5clang12CapturedStmt9getEndLocEv'/>
<fun r='_ZNK5clang12CapturedStmt14getSourceRangeEv'/>
<fun r='_ZN5clang12CapturedStmt7classofEPKNS_4StmtE'/>
<fun r='_ZN5clang12CapturedStmt8childrenEv'/>
<fun r='_ZNK5clang12CapturedStmt8childrenEv'/>
