<dec f='llvm/clang/lib/Format/ContinuationIndenter.h' l='182' type='unsigned int clang::format::ContinuationIndenter::addMultilineToken(const clang::format::FormatToken &amp; Current, clang::format::LineState &amp; State)'/>
<doc f='llvm/clang/lib/Format/ContinuationIndenter.h' l='177'>/// Adds a multiline token to the \p State.
  ///
  /// \returns Extra penalty for the first line of the literal: last line is
  /// handled in \c addNextStateToQueue, and the penalty for other lines doesn&apos;t
  /// matter, as we don&apos;t change them.</doc>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='1581' u='c' c='_ZN5clang6format20ContinuationIndenter24reformatRawStringLiteralERKNS0_11FormatTokenERNS0_9LineStateERKNS0_11FormatStyleEbb'/>
<def f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='1641' ll='1655' type='unsigned int clang::format::ContinuationIndenter::addMultilineToken(const clang::format::FormatToken &amp; Current, clang::format::LineState &amp; State)'/>
<use f='llvm/clang/lib/Format/ContinuationIndenter.cpp' l='1670' u='c' c='_ZN5clang6format20ContinuationIndenter15handleEndOfLineERKNS0_11FormatTokenERNS0_9LineStateEbbb'/>
