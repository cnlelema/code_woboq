<dec f='llvm/llvm/include/llvm/CodeGen/LiveRangeEdit.h' l='212' type='bool llvm::LiveRangeEdit::canRematerializeAt(llvm::LiveRangeEdit::Remat &amp; RM, llvm::VNInfo * OrigVNI, llvm::SlotIndex UseIdx, bool cheapAsAMove)'/>
<use f='llvm/llvm/lib/CodeGen/InlineSpiller.cpp' l='585' u='c' c='_ZN12_GLOBAL__N_113InlineSpiller16reMaterializeForERN4llvm12LiveIntervalERNS1_12MachineInstrE'/>
<doc f='llvm/llvm/include/llvm/CodeGen/LiveRangeEdit.h' l='209'>/// canRematerializeAt - Determine if ParentVNI can be rematerialized at
  /// UseIdx. It is assumed that parent_.getVNINfoAt(UseIdx) == ParentVNI.
  /// When cheapAsAMove is set, only cheap remats are allowed.</doc>
<def f='llvm/llvm/lib/CodeGen/LiveRangeEdit.cpp' l='140' ll='162' type='bool llvm::LiveRangeEdit::canRematerializeAt(llvm::LiveRangeEdit::Remat &amp; RM, llvm::VNInfo * OrigVNI, llvm::SlotIndex UseIdx, bool cheapAsAMove)'/>
<use f='llvm/llvm/lib/CodeGen/SplitKit.cpp' l='649' u='c' c='_ZN4llvm11SplitEditor13defFromParentEjPNS_6VNInfoENS_9SlotIndexERNS_17MachineBasicBlockENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEE'/>
