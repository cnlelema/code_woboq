<dec f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='137' type='bool llvm::wouldInstructionBeTriviallyDead(llvm::Instruction * I, const llvm::TargetLibraryInfo * TLI = nullptr)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='134'>/// Return true if the result produced by the instruction would have no side
/// effects if it was not used. This is equivalent to checking whether
/// isInstructionTriviallyDead would be true if the use count was 0.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/BDCE.cpp' l='103' u='c' c='_ZL14bitTrackingDCERN4llvm8FunctionERNS_12DemandedBitsE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/NewGVN.cpp' l='4087' u='c' c='_ZN12_GLOBAL__N_16NewGVN21eliminateInstructionsERN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='357' u='c' c='_ZN4llvm26isInstructionTriviallyDeadEPNS_11InstructionEPKNS_17TargetLibraryInfoE'/>
<def f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='360' ll='428' type='bool llvm::wouldInstructionBeTriviallyDead(llvm::Instruction * I, const llvm::TargetLibraryInfo * TLI = nullptr)'/>
