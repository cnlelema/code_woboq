<def f='llvm/llvm/include/llvm/CodeGen/MachineOperand.h' l='854' ll='859' type='static llvm::MachineOperand llvm::MachineOperand::CreateRegMask(const uint32_t * Mask)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineOperand.h' l='842'>/// CreateRegMask - Creates a register mask operand referencing Mask.  The
  /// operand does not take ownership of the memory referenced by Mask, it
  /// must remain valid for the lifetime of the operand.
  ///
  /// A RegMask operand represents a set of non-clobbered physical registers
  /// on an instruction that clobbers many registers, typically a call.  The
  /// bit mask has a bit set for each physreg that is preserved by this
  /// instruction, as described in the documentation for
  /// TargetRegisterInfo::getCallPreservedMask().
  ///
  /// Any physreg with a 0 bit in the mask is clobbered by the instruction.
  ///</doc>
<use f='llvm/llvm/include/llvm/CodeGen/MachineInstrBuilder.h' l='189' u='c' c='_ZNK4llvm19MachineInstrBuilder10addRegMaskEPKj'/>
<use f='llvm/llvm/lib/CodeGen/MIRParser/MIParser.cpp' l='2330' u='c' c='_ZN12_GLOBAL__N_18MIParser30parseCustomRegisterMaskOperandERN4llvm14MachineOperandE'/>
<use f='llvm/llvm/lib/CodeGen/MIRParser/MIParser.cpp' l='2439' u='c' c='_ZN12_GLOBAL__N_18MIParser19parseMachineOperandERN4llvm14MachineOperandERNS1_8OptionalIjEE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp' l='1008' u='c' c='_ZN4llvm8FastISel16selectPatchpointEPKNS_8CallInstE'/>
<use f='llvm/llvm/unittests/CodeGen/MachineOperandTest.cpp' l='49' u='c' c='_ZN12_GLOBAL__N_141MachineOperandTest_PrintRegisterMask_Test8TestBodyEv'/>
