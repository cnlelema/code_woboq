<dec f='llvm/clang/include/clang/Sema/Sema.h' l='6466' type='bool clang::Sema::CheckTemplateParameterList(clang::TemplateParameterList * NewParams, clang::TemplateParameterList * OldParams, clang::Sema::TemplateParamListContext TPC, clang::Sema::SkipBodyInfo * SkipBody = nullptr)'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='10661' u='c' c='_ZN5clang4Sema21ActOnAliasDeclarationEPNS_5ScopeENS_15AccessSpecifierEN4llvm15MutableArrayRefIPNS_21TemplateParameterListEEENS_14SourceLocationERNS_1310457492'/>
<def f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='2236' ll='2453' type='bool clang::Sema::CheckTemplateParameterList(clang::TemplateParameterList * NewParams, clang::TemplateParameterList * OldParams, clang::Sema::TemplateParamListContext TPC, clang::Sema::SkipBodyInfo * SkipBody = nullptr)'/>
<use f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='2889' u='c' c='_ZN5clang4Sema39MatchTemplateParametersToScopeSpecifierENS_14SourceLocationES1_RKNS_12CXXScopeSpecEPNS_20TemplateIdAnnotationEN4llvm8ArrayRefIPNS_21Te11435786'/>
<doc f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='2208'>/// Checks the validity of a template parameter list, possibly
/// considering the template parameter list from a previous
/// declaration.
///
/// If an &quot;old&quot; template parameter list is provided, it must be
/// equivalent (per TemplateParameterListsAreEqual) to the &quot;new&quot;
/// template parameter list.
///
/// \param NewParams Template parameter list for a new template
/// declaration. This template parameter list will be updated with any
/// default arguments that are carried through from the previous
/// template parameter list.
///
/// \param OldParams If provided, template parameter list from a
/// previous declaration of the same template. Default template
/// arguments will be merged from the old template parameter list to
/// the new template parameter list.
///
/// \param TPC Describes the context in which we are checking the given
/// template parameter list.
///
/// \param SkipBody If we might have already made a prior merged definition
/// of this template visible, the corresponding body-skipping information.
/// Default argument redefinition is not an error when skipping such a body,
/// because (under the ODR) we can assume the default arguments are the same
/// as the prior merged definition.
///
/// \returns true if an error occurred, false otherwise.</doc>
<use f='llvm/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp' l='1356' u='c' c='_ZN5clang24TemplateDeclInstantiator22VisitClassTemplateDeclEPNS_17ClassTemplateDeclE'/>
