<dec f='llvm/clang/include/clang/Parse/Parser.h' l='1848' type='ExprResult clang::Parser::ParseCXXDeleteExpression(bool UseGlobal, clang::SourceLocation Start)'/>
<use f='llvm/clang/lib/Parse/ParseExpr.cpp' l='1387' u='c' c='_ZN5clang6Parser19ParseCastExpressionEbbRbNS0_13TypeCastStateEb'/>
<use f='llvm/clang/lib/Parse/ParseExpr.cpp' l='1398' u='c' c='_ZN5clang6Parser19ParseCastExpressionEbbRbNS0_13TypeCastStateEb'/>
<def f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='3086' ll='3167' type='ExprResult clang::Parser::ParseCXXDeleteExpression(bool UseGlobal, clang::SourceLocation Start)'/>
<doc f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='3075'>/// ParseCXXDeleteExpression - Parse a C++ delete-expression. Delete is used
/// to free memory allocated by new.
///
/// This method is called to parse the &apos;delete&apos; expression after the optional
/// &apos;::&apos; has been already parsed.  If the &apos;::&apos; was present, &quot;UseGlobal&quot; is true
/// and &quot;Start&quot; is its location.  Otherwise, &quot;Start&quot; is the location of the
/// &apos;delete&apos; token.
///
///        delete-expression:
///                   &apos;::&apos;[opt] &apos;delete&apos; cast-expression
///                   &apos;::&apos;[opt] &apos;delete&apos; &apos;[&apos; &apos;]&apos; cast-expression</doc>
