<dec f='include/c++/7/bits/stl_list.h' l='1337' type='iterator std::__cxx11::list::erase(const_iterator __position)'/>
<def f='include/c++/7/bits/list.tcc' l='147' ll='159' type='typename list&lt;_Tp, _Alloc&gt;::iterator std::__cxx11::list::erase(const_iterator __position)'/>
<doc f='include/c++/7/bits/stl_list.h' l='1320'>/**
       *  @brief  Remove element at given position.
       *  @param  __position  Iterator pointing to element to be erased.
       *  @return  An iterator pointing to the next element (or end()).
       *
       *  This function will erase the element at the given position and thus
       *  shorten the %list by one.
       *
       *  Due to the nature of a %list this operation can be done in
       *  constant time, and only invalidates iterators/references to
       *  the element being removed.  The user is also cautioned that
       *  this function only erases the element, and that if the element
       *  is itself a pointer, the pointed-to memory is not touched in
       *  any way.  Managing the pointer is the user&apos;s responsibility.
       */</doc>
<use f='llvm/llvm/lib/Analysis/GlobalsModRef.cpp' l='239' u='c' c='_ZN4llvm15GlobalsAAResult22DeletionCallbackHandle7deletedEv'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIFixSGPRCopies.cpp' l='520' u='c' c='_ZL22hoistAndMergeSGPRInitsjRKN4llvm19MachineRegisterInfoERNS_20MachineDominatorTreeE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIFixSGPRCopies.cpp' l='530' u='c' c='_ZL22hoistAndMergeSGPRInitsjRKN4llvm19MachineRegisterInfoERNS_20MachineDominatorTreeE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIFixSGPRCopies.cpp' l='552' u='c' c='_ZL22hoistAndMergeSGPRInitsjRKN4llvm19MachineRegisterInfoERNS_20MachineDominatorTreeE'/>
<use f='llvm/llvm/tools/llvm-rtdyld/llvm-rtdyld.cpp' l='648' u='c' c='_ZL23remapSectionsAndSymbolsRKN4llvm6TripleERNS_11RuntimeDyldER20TrivialMemoryManager'/>
