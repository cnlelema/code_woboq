<def f='llvm/llvm/include/llvm/ADT/fallible_iterator.h' l='127' ll='134' type='fallible_iterator&lt;Underlying&gt; &amp; llvm::fallible_iterator::operator++()'/>
<doc f='llvm/llvm/include/llvm/ADT/fallible_iterator.h' l='120'>/// Increment the fallible iterator.
  ///
  /// If the underlying &apos;inc&apos; operation fails, this will set the Error value
  /// and update this iterator value to point to end-of-range.
  ///
  /// The Error value is marked as needing checking, regardless of whether the
  /// &apos;inc&apos; operation succeeds or fails.</doc>
<use f='llvm/lld/lib/ReaderWriter/FileArchive.cpp' l='86' u='c' c='_ZN3lld12_GLOBAL__N_111FileArchive15parseAllMembersERSt6vectorISt10unique_ptrINS_4FileESt14default_deleteIS4_EESaIS7_EE'/>
<use f='llvm/llvm/lib/Object/Archive.cpp' l='579' u='c' c='_ZN4llvm6object7ArchiveC1ENS_15MemoryBufferRefERNS_5ErrorE'/>
