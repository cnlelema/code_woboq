<def f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='223' ll='239' type='AAType &amp; llvm::Attributor::registerAA(AAType &amp; AA, int ArgNo = -1)'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='214'>/// Introduce a new abstract attribute into the fixpoint analysis.
  ///
  /// Note that ownership of the attribute is given to the Attributor. It will
  /// invoke delete for the Attributor on destruction of the Attributor.
  ///
  /// Attributes are identified by
  ///  (1) their anchored value (see AA.getAnchoredValue()),
  ///  (2) their argument number (\p ArgNo, or Argument::getArgNo()), and
  ///  (3) their default attribute kind (see AAType::ID).</doc>
