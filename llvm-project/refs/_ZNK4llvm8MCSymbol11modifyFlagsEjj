<def f='llvm/llvm/include/llvm/MC/MCSymbol.h' l='418' ll='421' type='void llvm::MCSymbol::modifyFlags(uint32_t Value, uint32_t Mask) const'/>
<doc f='llvm/llvm/include/llvm/MC/MCSymbol.h' l='417'>/// Modify the flags via a mask</doc>
<use f='llvm/llvm/include/llvm/MC/MCSymbolWasm.h' l='54' u='c' c='_ZNK4llvm12MCSymbolWasm11setExportedEv'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbolCOFF.h' l='44' u='c' c='_ZNK4llvm12MCSymbolCOFF8setClassEt'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbolCOFF.h' l='51' u='c' c='_ZNK4llvm12MCSymbolCOFF17setIsWeakExternalEv'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbolCOFF.h' l='58' u='c' c='_ZNK4llvm12MCSymbolCOFF12setIsSafeSEHEv'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbolMachO.h' l='51' u='c' c='_ZNK4llvm13MCSymbolMachO18clearReferenceTypeEv'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbolMachO.h' l='55' u='c' c='_ZNK4llvm13MCSymbolMachO29setReferenceTypeUndefinedLazyEb'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbolMachO.h' l='62' u='c' c='_ZNK4llvm13MCSymbolMachO12setThumbFuncEv'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbolMachO.h' l='69' u='c' c='_ZNK4llvm13MCSymbolMachO14setNoDeadStripEv'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbolMachO.h' l='76' u='c' c='_ZNK4llvm13MCSymbolMachO16setWeakReferenceEv'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbolMachO.h' l='83' u='c' c='_ZNK4llvm13MCSymbolMachO17setWeakDefinitionEv'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbolMachO.h' l='90' u='c' c='_ZNK4llvm13MCSymbolMachO17setSymbolResolverEv'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbolMachO.h' l='94' u='c' c='_ZNK4llvm13MCSymbolMachO11setAltEntryEv'/>
<use f='llvm/llvm/include/llvm/MC/MCSymbolMachO.h' l='101' u='c' c='_ZNK4llvm13MCSymbolMachO7setColdEv'/>
