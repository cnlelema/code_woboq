<def f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='1145' ll='1149' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildAdd(const llvm::DstOp &amp; Dst, const llvm::SrcOp &amp; Src0, const llvm::SrcOp &amp; Src1, Optional&lt;unsigned int&gt; Flags = None)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='1134'>/// Build and insert \p Res = G_ADD \p Op0, \p Op1
  ///
  /// G_ADD sets \p Res to the sum of integer parameters \p Op0 and \p Op1,
  /// truncated to their width.
  ///
  /// \pre setBasicBlock or setMI must have been called.
  /// \pre \p Res, \p Op0 and \p Op1 must be generic virtual registers
  ///      with the same (scalar or vector) type).
  ///
  /// \return a MachineInstrBuilder for the newly created instruction.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='1553' u='c' c='_ZN4llvm15LegalizerHelper5lowerERNS_12MachineInstrEjNS_3LLTE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='1569' u='c' c='_ZN4llvm15LegalizerHelper5lowerERNS_12MachineInstrEjNS_3LLTE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='1571' u='c' c='_ZN4llvm15LegalizerHelper5lowerERNS_12MachineInstrEjNS_3LLTE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='2607' u='c' c='_ZN4llvm15LegalizerHelper17multiplyRegistersERNS_15SmallVectorImplIjEENS_8ArrayRefIjEES5_NS_3LLTE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='2611' u='c' c='_ZN4llvm15LegalizerHelper17multiplyRegistersERNS_15SmallVectorImplIjEENS_8ArrayRefIjEES5_NS_3LLTE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='2613' u='c' c='_ZN4llvm15LegalizerHelper17multiplyRegistersERNS_15SmallVectorImplIjEENS_8ArrayRefIjEES5_NS_3LLTE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='3050' u='c' c='_ZN4llvm15LegalizerHelper19lowerU64ToF32BitOpsERNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='3100' u='c' c='_ZN4llvm15LegalizerHelper11lowerSITOFPERNS_12MachineInstrEjNS_3LLTE'/>
<use f='llvm/llvm/unittests/CodeGen/GlobalISel/MachineIRBuilderTest.cpp' l='82' u='c' c='_ZN27GISelMITest_DstOpSrcOp_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/GlobalISel/MachineIRBuilderTest.cpp' l='86' u='c' c='_ZN27GISelMITest_DstOpSrcOp_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/GlobalISel/PatternMatchTest.cpp' l='159' u='c' c='_ZN12_GLOBAL__N_136PatternMatchInstr_MatchBinaryOp_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/GlobalISel/PatternMatchTest.cpp' l='245' u='c' c='_ZN12_GLOBAL__N_136PatternMatchInstr_MatchBinaryOp_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/GlobalISel/PatternMatchTest.cpp' l='416' u='c' c='_ZN12_GLOBAL__N_140PatternMatchInstr_MatchSpecificType_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/GlobalISel/PatternMatchTest.cpp' l='461' u='c' c='_ZN12_GLOBAL__N_139PatternMatchInstr_MatchCombinators_Test8TestBodyEv'/>
