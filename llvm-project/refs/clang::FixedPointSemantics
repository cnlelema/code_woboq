<def f='llvm/clang/include/clang/Basic/FixedPoint.h' l='33' ll='83'/>
<size>12</size>
<doc f='llvm/clang/include/clang/Basic/FixedPoint.h' l='28'>/// The fixed point semantics work similarly to llvm::fltSemantics. The width
/// specifies the whole bit width of the underlying scaled integer (with padding
/// if any). The scale represents the number of fractional bits in this type.
/// When HasUnsignedPadding is true and this type is signed, the first bit
/// in the value this represents is treaded as padding.</doc>
<fun r='_ZN5clang19FixedPointSemanticsC1Ejjbbb'/>
<fun r='_ZNK5clang19FixedPointSemantics8getWidthEv'/>
<fun r='_ZNK5clang19FixedPointSemantics8getScaleEv'/>
<fun r='_ZNK5clang19FixedPointSemantics8isSignedEv'/>
<fun r='_ZNK5clang19FixedPointSemantics11isSaturatedEv'/>
<fun r='_ZNK5clang19FixedPointSemantics18hasUnsignedPaddingEv'/>
<fun r='_ZN5clang19FixedPointSemantics12setSaturatedEb'/>
<fun r='_ZNK5clang19FixedPointSemantics15getIntegralBitsEv'/>
<fun r='_ZNK5clang19FixedPointSemantics18getCommonSemanticsERKS0_'/>
<fun r='_ZN5clang19FixedPointSemantics19GetIntegerSemanticsEjb'/>
<mbr r='clang::FixedPointSemantics::Width' o='0' t='unsigned int'/>
<mbr r='clang::FixedPointSemantics::Scale' o='32' t='unsigned int'/>
<mbr r='clang::FixedPointSemantics::IsSigned' o='64' t='bool'/>
<mbr r='clang::FixedPointSemantics::IsSaturated' o='72' t='bool'/>
<mbr r='clang::FixedPointSemantics::HasUnsignedPadding' o='80' t='bool'/>
