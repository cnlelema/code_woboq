<dec f='llvm/llvm/include/llvm/IR/DIBuilder.h' l='430' type='llvm::DICompositeType * llvm::DIBuilder::createVariantPart(llvm::DIScope * Scope, llvm::StringRef Name, llvm::DIFile * File, unsigned int LineNumber, uint64_t SizeInBits, uint32_t AlignInBits, DINode::DIFlags Flags, llvm::DIDerivedType * Discriminator, DINodeArray Elements, llvm::StringRef UniqueIdentifier = &quot;&quot;)'/>
<doc f='llvm/llvm/include/llvm/IR/DIBuilder.h' l='417'>/// Create debugging information entry for a variant part.  A
    /// variant part normally has a discriminator (though this is not
    /// required) and a number of variant children.
    /// \param Scope        Scope in which this union is defined.
    /// \param Name         Union name.
    /// \param File         File where this member is defined.
    /// \param LineNumber   Line number.
    /// \param SizeInBits   Member size.
    /// \param AlignInBits  Member alignment.
    /// \param Flags        Flags to encode member attribute, e.g. private
    /// \param Discriminator Discriminant member
    /// \param Elements     Variant elements.
    /// \param UniqueIdentifier A unique identifier for the union.</doc>
<def f='llvm/llvm/lib/IR/DIBuilder.cpp' l='485' ll='495' type='llvm::DICompositeType * llvm::DIBuilder::createVariantPart(llvm::DIScope * Scope, llvm::StringRef Name, llvm::DIFile * File, unsigned int LineNumber, uint64_t SizeInBits, uint32_t AlignInBits, DINode::DIFlags Flags, llvm::DIDerivedType * Discriminator, DINodeArray Elements, llvm::StringRef UniqueIdentifier = &quot;&quot;)'/>
