<inh f='llvm/clang/include/clang/AST/Expr.h' l='108' c='clang::Expr'/>
<def f='llvm/clang/include/clang/AST/Expr.h' l='1576' ll='1606'/>
<size>24</size>
<doc f='llvm/clang/include/clang/AST/Expr.h' l='1571'>/// ImaginaryLiteral - We support imaginary integer and floating point literals,
/// like &quot;1.0i&quot;.  We represent these as a wrapper around FloatingLiteral and
/// IntegerLiteral classes.  Instances of this class always have a Complex type
/// whose element type matches the subexpression.
///</doc>
<mbr r='clang::ImaginaryLiteral::Val' o='128' t='clang::Stmt *'/>
<fun r='_ZN5clang16ImaginaryLiteralC1EPNS_4ExprENS_8QualTypeE'/>
<fun r='_ZN5clang16ImaginaryLiteralC1ENS_4Stmt10EmptyShellE'/>
<fun r='_ZNK5clang16ImaginaryLiteral10getSubExprEv'/>
<fun r='_ZN5clang16ImaginaryLiteral10getSubExprEv'/>
<fun r='_ZN5clang16ImaginaryLiteral10setSubExprEPNS_4ExprE'/>
<fun r='_ZNK5clang16ImaginaryLiteral11getBeginLocEv'/>
<fun r='_ZNK5clang16ImaginaryLiteral9getEndLocEv'/>
<fun r='_ZN5clang16ImaginaryLiteral7classofEPKNS_4StmtE'/>
<fun r='_ZN5clang16ImaginaryLiteral8childrenEv'/>
<fun r='_ZNK5clang16ImaginaryLiteral8childrenEv'/>
