<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='288' u='r' c='_ZNK4llvm4sroa12AllocaSlices15getDeadOperandsEv'/>
<dec f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='344' type='SmallVector&lt;llvm::Use *, 8&gt;'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='986' u='m' c='_ZN4llvm4sroa12AllocaSlices12SliceBuilder24visitPHINodeOrSelectInstERNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='1009' u='m' c='_ZN4llvm4sroa12AllocaSlices12SliceBuilder24visitPHINodeOrSelectInstERNS_11InstructionE'/>
<offset>2432</offset>
<doc f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='336'>/// Operands which will become dead if we rewrite the alloca.
  ///
  /// These are operands that in their particular use can be replaced with
  /// undef when we rewrite the alloca. These show up in out-of-bounds inputs
  /// to PHI nodes and the like. They aren&apos;t entirely dead (there might be
  /// a GEP back into the bounds using it elsewhere) and nor is the PHI, but we
  /// want to swap this particular input for undef to simplify the use lists of
  /// the alloca.</doc>
