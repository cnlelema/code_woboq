<dec f='llvm/llvm/include/llvm/Analysis/IVDescriptors.h' l='310' type='static bool llvm::InductionDescriptor::isInductionPHI(llvm::PHINode * Phi, const llvm::Loop * L, llvm::PredicatedScalarEvolution &amp; PSE, llvm::InductionDescriptor &amp; D, bool Assume = false)'/>
<def f='llvm/llvm/lib/Analysis/IVDescriptors.cpp' l='984' ll='1026' type='static bool llvm::InductionDescriptor::isInductionPHI(llvm::PHINode * Phi, const llvm::Loop * TheLoop, llvm::PredicatedScalarEvolution &amp; PSE, llvm::InductionDescriptor &amp; D, bool Assume = false)'/>
<doc f='llvm/llvm/include/llvm/Analysis/IVDescriptors.h' l='304'>/// Returns true if \p Phi is a loop \p L induction, in the context associated
  /// with the run-time predicate of PSE. If \p Assume is true, this can add
  /// further SCEV predicates to \p PSE in order to prove that \p Phi is an
  /// induction.
  /// If \p Phi is an induction, \p D will contain the data describing this
  /// induction.</doc>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp' l='582' u='c' c='_ZN4llvm25LoopVectorizationLegality24setupOuterLoopInductionsEv'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp' l='670' u='c' c='_ZN4llvm25LoopVectorizationLegality18canVectorizeInstrsEv'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp' l='685' u='c' c='_ZN4llvm25LoopVectorizationLegality18canVectorizeInstrsEv'/>
