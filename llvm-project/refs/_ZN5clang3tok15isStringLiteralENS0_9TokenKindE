<def f='llvm/clang/include/clang/Basic/TokenKinds.h' l='77' ll='81' type='bool clang::tok::isStringLiteral(clang::tok::TokenKind K)'/>
<use f='llvm/clang/include/clang/Basic/TokenKinds.h' l='89' u='c' c='_ZN5clang3tok9isLiteralENS0_9TokenKindE'/>
<doc f='llvm/clang/include/clang/Basic/TokenKinds.h' l='75'>/// Return true if this is a C or C++ string-literal (or
/// C++11 user-defined-string-literal) token.</doc>
<use f='llvm/clang/lib/Format/FormatToken.h' l='352' u='c' c='_ZNK5clang6format11FormatToken15isStringLiteralEv'/>
<use f='llvm/clang/lib/Lex/Lexer.cpp' l='268' u='c' c='_ZL15getSpellingSlowRKN5clang5TokenEPKcRKNS_11LangOptionsEPc'/>
<use f='llvm/clang/lib/Lex/MacroArgs.cpp' l='233' u='c' c='_ZN5clang9MacroArgs17StringifyArgumentEPKNS_5TokenERNS_12PreprocessorEbNS_14SourceLocationES6_'/>
<use f='llvm/clang/lib/Lex/Pragma.cpp' l='212' u='c' c='_ZN5clang12Preprocessor13Handle_PragmaERNS_5TokenE'/>
<use f='llvm/clang/include/clang/Parse/Parser.h' l='525' u='c' c='_ZNK5clang6Parser20isTokenStringLiteralEv'/>
