<def f='llvm/llvm/include/llvm/MC/MCInstrDesc.h' l='271' type='bool llvm::MCInstrDesc::isTerminator() const'/>
<doc f='llvm/llvm/include/llvm/MC/MCInstrDesc.h' l='265'>/// Returns true if this instruction part of the terminator for
  /// a basic block.  Typically this is things like return and branch
  /// instructions.
  ///
  /// Various passes use this to insert code into the bottom of a basic block,
  /// but before control flow occurs.</doc>
<use f='llvm/llvm/include/llvm/MC/MCInstrAnalysis.h' l='62' u='c' c='_ZNK4llvm15MCInstrAnalysis12isTerminatorERKNS_6MCInstE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='1695' u='c' c='_ZNK4llvm16HexagonInstrInfo20isSchedulingBoundaryERKNS_12MachineInstrEPKNS_17MachineBasicBlockERKNS_15MachineFunctionE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp' l='336' u='c' c='_ZL13isControlFlowRKN4llvm12MachineInstrE'/>
