<dec f='llvm/llvm/include/llvm/IR/LLVMContext.h' l='303' type='void llvm::LLVMContext::yield()'/>
<doc f='llvm/llvm/include/llvm/IR/LLVMContext.h' l='298'>/// Calls the yield callback (if applicable).
  ///
  /// This transfers control of the current thread back to the client, which may
  /// suspend the current thread. Only call this method when LLVM doesn&apos;t hold
  /// any global mutex or cannot block the execution in another LLVM context.</doc>
<use f='llvm/llvm/lib/Analysis/CallGraphSCCPass.cpp' l='178' u='c' c='_ZN12_GLOBAL__N_113CGPassManager12RunPassOnSCCEPN4llvm4PassERNS1_12CallGraphSCCERNS1_9CallGraphERbS8_'/>
<use f='llvm/llvm/lib/Analysis/LoopPass.cpp' l='275' u='c' c='_ZN4llvm13LPPassManager13runOnFunctionERNS_8FunctionE'/>
<def f='llvm/llvm/lib/IR/LLVMContext.cpp' l='190' ll='193' type='void llvm::LLVMContext::yield()'/>
<use f='llvm/llvm/lib/IR/LegacyPassManager.cpp' l='1588' u='c' c='_ZN4llvm6legacy23FunctionPassManagerImpl3runERNS_8FunctionE'/>
<use f='llvm/llvm/lib/IR/LegacyPassManager.cpp' l='1868' u='c' c='_ZN4llvm6legacy15PassManagerImpl3runERNS_6ModuleE'/>
