<dec f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='316' type='bool llvm::TypeInfer::EnforceVectorSubVectorTypeIs(llvm::TypeSetByHwMode &amp; Vec, llvm::TypeSetByHwMode &amp; Sub)'/>
<def f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='605' ll='664' type='bool llvm::TypeInfer::EnforceVectorSubVectorTypeIs(llvm::TypeSetByHwMode &amp; Vec, llvm::TypeSetByHwMode &amp; Sub)'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='1552' u='c' c='_ZNK4llvm16SDTypeConstraint19ApplyTypeConstraintEPNS_15TreePatternNodeERKNS_10SDNodeInfoERNS_11TreePatternE'/>
<doc f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='602'>/// Ensure that for each type T in Sub, T is a vector type, and there
/// exists a type U in Vec such that U is a vector type with the same
/// element type as T and at least as many elements as T.</doc>
<doc f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='313'>/// Ensure that for each type T in \p Sub, T is a vector type, and there
  /// exists a type U in \p Vec such that U is a vector type with the same
  /// element type as T and at least as many elements as T.</doc>
