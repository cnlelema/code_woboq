<dec f='llvm/llvm/include/llvm/Analysis/OrderedInstructions.h' l='47' type='bool llvm::OrderedInstructions::dominates(const llvm::Instruction * , const llvm::Instruction * ) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/OrderedInstructions.h' l='46'>/// Return true if first instruction dominates the second.</doc>
<use f='llvm/llvm/lib/Analysis/InstructionPrecedenceTracking.cpp' l='61' u='c' c='_ZN4llvm29InstructionPrecedenceTracking31isPreceededBySpecialInstructionEPKNS_11InstructionE'/>
<def f='llvm/llvm/lib/Analysis/OrderedInstructions.cpp' l='31' ll='38' type='bool llvm::OrderedInstructions::dominates(const llvm::Instruction * InstA, const llvm::Instruction * InstB) const'/>
<doc f='llvm/llvm/lib/Analysis/OrderedInstructions.cpp' l='28'>/// Given 2 instructions, use OrderedBasicBlock to check for dominance relation
/// if the instructions are in the same basic block, Otherwise, use dominator
/// tree.</doc>
<use f='llvm/llvm/unittests/Analysis/OrderedInstructionsTest.cpp' l='59' u='c' c='_ZN42OrderedInstructionsTest_DominanceTest_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/OrderedInstructionsTest.cpp' l='60' u='c' c='_ZN42OrderedInstructionsTest_DominanceTest_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Analysis/OrderedInstructionsTest.cpp' l='63' u='c' c='_ZN42OrderedInstructionsTest_DominanceTest_Test8TestBodyEv'/>
