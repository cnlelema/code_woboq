<def f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='1704' type='bool llvm::CallBase::isConvergent() const'/>
<doc f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='1703'>/// Determine if the invoke is convergent</doc>
<use f='llvm/llvm/lib/Analysis/CodeMetrics.cpp' l='166' u='c' c='_ZN4llvm11CodeMetrics17analyzeBasicBlockEPKNS_10BasicBlockERKNS_19TargetTransformInfoERKNS_15SmallPtrSetImplIPKNS_5ValueEEE'/>
<use f='llvm/llvm/lib/Analysis/LoopAccessAnalysis.cpp' l='1797' u='c' c='_ZN4llvm14LoopAccessInfo11analyzeLoopEPNS_9AAResultsEPNS_8LoopInfoEPKNS_17TargetLibraryInfoEPNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp' l='4177' u='c' c='_ZN4llvm12InstCombiner13visitCallBaseERNS_8CallBaseE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='3113' u='c' c='_ZL20TryToSinkInstructionPN4llvm11InstructionEPNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GVNHoist.cpp' l='1118' u='c' c='_ZN4llvm8GVNHoist16hoistExpressionsERNS_8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='515' u='c' c='_ZL28getJumpThreadDuplicationCostPN4llvm10BasicBlockEPNS_11InstructionEj'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopVersioningLICM.cpp' l='364' u='c' c='_ZN12_GLOBAL__N_118LoopVersioningLICM28instructionSafeForVersioningEPN4llvm11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyCFG.cpp' l='2198' u='c' c='_ZL19FoldCondBranchOnPHIPN4llvm10BranchInstERKNS_10DataLayoutEPNS_15AssumptionCacheE'/>
