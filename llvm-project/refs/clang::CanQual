<def f='llvm/clang/include/clang/AST/CanonicalType.h' l='65' ll='199'/>
<mbr r='clang::CanQual::Stored' t='clang::QualType'/>
<fun r='_ZN5clang7CanQualC1Ev'/>
<fun r='_ZN5clang7CanQualC1ERKNS_7CanQualIT_EENSt9enable_ifIXsr3std10is_base_ofIT_S2_EE5valueEiE4typeE'/>
<fun r='_ZNK5clang7CanQual10getTypePtrEv'/>
<fun r='_ZNK5clang7CanQual16getTypePtrOrNullEv'/>
<fun r='_ZNK5clang7CanQualcvNS_8QualTypeEEv'/>
<fun r='_ZNK5clang7CanQualcvbEv'/>
<fun r='_ZNK5clang7CanQual6isNullEv'/>
<fun r='_ZNK5clang7CanQual5splitEv'/>
<fun r='_ZNK5clang7CanQual5getAsEv'/>
<fun r='_ZNK5clang7CanQual6castAsEv'/>
<fun r='_ZNK5clang7CanQualptEv'/>
<fun r='_ZNK5clang7CanQual13getQualifiersEv'/>
<fun r='_ZNK5clang7CanQual16getCVRQualifiersEv'/>
<fun r='_ZNK5clang7CanQual13hasQualifiersEv'/>
<fun r='_ZNK5clang7CanQual16isConstQualifiedEv'/>
<fun r='_ZNK5clang7CanQual19isVolatileQualifiedEv'/>
<fun r='_ZNK5clang7CanQual19isRestrictQualifiedEv'/>
<fun r='_ZNK5clang7CanQual18isCanonicalAsParamEv'/>
<fun r='_ZNK5clang7CanQual18getUnqualifiedTypeEv'/>
<fun r='_ZNK5clang7CanQual9withConstEv'/>
<fun r='_ZNK5clang7CanQual19isMoreQualifiedThanENS_7CanQualIT_EE'/>
<fun r='_ZNK5clang7CanQual22isAtLeastAsQualifiedAsENS_7CanQualIT_EE'/>
<fun r='_ZNK5clang7CanQual19getNonReferenceTypeEv'/>
<fun r='_ZNK5clang7CanQual14getAsOpaquePtrEv'/>
<fun r='_ZN5clang7CanQual16getFromOpaquePtrEPv'/>
<fun r='_ZN5clang7CanQual12CreateUnsafeENS_8QualTypeE'/>
<fun r='_ZNK5clang7CanQual4dumpEv'/>
<fun r='_ZNK5clang7CanQual7ProfileERN4llvm16FoldingSetNodeIDE'/>
<fun r='_ZNK5clang7CanQual18getUnqualifiedTypeEv'/>
<fun r='_ZNK5clang7CanQual19getNonReferenceTypeEv'/>
<fun r='_ZN5clang7CanQual16getFromOpaquePtrEPv'/>
<fun r='_ZN5clang7CanQual12CreateUnsafeENS_8QualTypeE'/>
<fun r='_ZNK5clang7CanQual5getAsEv'/>
<fun r='_ZNK5clang7CanQual6castAsEv'/>
<fun r='_ZNK5clang7CanQualptEv'/>
