<dec f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='62' type='llvm::Value * llvm::stripGetElementPtr(llvm::Value * Ptr, llvm::ScalarEvolution * SE, llvm::Loop * Lp)'/>
<doc f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='59'>/// If the argument is a GEP, then returns the operand identified by
/// getGEPInductionOperand. However, if there is some other non-loop-invariant
/// operand, it returns that instead.</doc>
<def f='llvm/llvm/lib/Analysis/VectorUtils.cpp' l='148' ll='162' type='llvm::Value * llvm::stripGetElementPtr(llvm::Value * Ptr, llvm::ScalarEvolution * SE, llvm::Loop * Lp)'/>
<use f='llvm/llvm/lib/Analysis/VectorUtils.cpp' l='194' u='c' c='_ZN4llvm20getStrideFromPointerEPNS_5ValueEPNS_15ScalarEvolutionEPNS_4LoopE'/>
<doc f='llvm/llvm/lib/Analysis/VectorUtils.cpp' l='145'>/// If the argument is a GEP, then returns the operand identified by
/// getGEPInductionOperand. However, if there is some other non-loop-invariant
/// operand, it returns that instead.</doc>
