<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='653' ll='659' type='unsigned int llvm::TargetInstrInfo::insertUnconditionalBranch(llvm::MachineBasicBlock &amp; MBB, llvm::MachineBasicBlock * DestBB, const llvm::DebugLoc &amp; DL, int * BytesAdded = nullptr) const'/>
<use f='llvm/llvm/lib/CodeGen/BranchRelaxation.cpp' l='243' u='c' c='_ZN12_GLOBAL__N_116BranchRelaxation21splitBlockBeforeInstrERN4llvm12MachineInstrEPNS1_17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/BranchRelaxation.cpp' l='313' u='c' c='_ZN12_GLOBAL__N_116BranchRelaxation22fixupConditionalBranchERN4llvm12MachineInstrE'/>
