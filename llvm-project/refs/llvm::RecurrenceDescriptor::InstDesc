<def f='llvm/llvm/include/llvm/Analysis/IVDescriptors.h' l='102' ll='132'/>
<size>32</size>
<doc f='llvm/llvm/include/llvm/Analysis/IVDescriptors.h' l='101'>/// This POD struct holds information about a potential recurrence operation.</doc>
<fun r='_ZN4llvm20RecurrenceDescriptor8InstDescC1EbPNS_11InstructionES3_'/>
<fun r='_ZN4llvm20RecurrenceDescriptor8InstDescC1EPNS_11InstructionENS0_20MinMaxRecurrenceKindES3_'/>
<fun r='_ZN4llvm20RecurrenceDescriptor8InstDesc12isRecurrenceEv'/>
<fun r='_ZN4llvm20RecurrenceDescriptor8InstDesc16hasUnsafeAlgebraEv'/>
<fun r='_ZN4llvm20RecurrenceDescriptor8InstDesc20getUnsafeAlgebraInstEv'/>
<fun r='_ZN4llvm20RecurrenceDescriptor8InstDesc13getMinMaxKindEv'/>
<fun r='_ZN4llvm20RecurrenceDescriptor8InstDesc14getPatternInstEv'/>
<mbr r='llvm::RecurrenceDescriptor::InstDesc::IsRecurrence' o='0' t='bool'/>
<mbr r='llvm::RecurrenceDescriptor::InstDesc::PatternLastInst' o='64' t='llvm::Instruction *'/>
<mbr r='llvm::RecurrenceDescriptor::InstDesc::MinMaxKind' o='128' t='llvm::RecurrenceDescriptor::MinMaxRecurrenceKind'/>
<mbr r='llvm::RecurrenceDescriptor::InstDesc::UnsafeAlgebraInst' o='192' t='llvm::Instruction *'/>
