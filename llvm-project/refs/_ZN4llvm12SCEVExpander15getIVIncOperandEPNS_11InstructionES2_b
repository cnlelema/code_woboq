<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolutionExpander.h' l='189' type='llvm::Instruction * llvm::SCEVExpander::getIVIncOperand(llvm::Instruction * IncV, llvm::Instruction * InsertPos, bool allowScale)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolutionExpander.h' l='188'>/// Return the induction variable increment&apos;s IV operand.</doc>
<def f='llvm/llvm/lib/Analysis/ScalarEvolutionExpander.cpp' l='935' ll='980' type='llvm::Instruction * llvm::SCEVExpander::getIVIncOperand(llvm::Instruction * IncV, llvm::Instruction * InsertPos, bool allowScale)'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolutionExpander.cpp' l='1018' u='c' c='_ZN4llvm12SCEVExpander10hoistIVIncEPNS_11InstructionES2_'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolutionExpander.cpp' l='1042' u='c' c='_ZN4llvm12SCEVExpander23isExpandedAddRecExprPHIEPNS_7PHINodeEPNS_11InstructionEPKNS_4LoopE'/>
<doc f='llvm/llvm/lib/Analysis/ScalarEvolutionExpander.cpp' l='926'>/// getIVIncOperand returns an induction variable increment&apos;s induction
/// variable operand.
///
/// If allowScale is set, any type of GEP is allowed as long as the nonIV
/// operands dominate InsertPos.
///
/// If allowScale is not set, ensure that a GEP increment conforms to one of the
/// simple patterns generated by getAddRecExprPHILiterally and
/// expandAddtoGEP. If the pattern isn&apos;t recognized, return NULL.</doc>
