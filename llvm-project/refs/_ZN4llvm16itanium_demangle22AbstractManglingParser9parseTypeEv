<dec f='llvm/llvm/include/llvm/Demangle/ItaniumDemangle.h' l='2257' type='llvm::itanium_demangle::Node * llvm::itanium_demangle::AbstractManglingParser::parseType()'/>
<def f='llvm/llvm/include/llvm/Demangle/ItaniumDemangle.h' l='3461' ll='3788' type='llvm::itanium_demangle::Node * llvm::itanium_demangle::AbstractManglingParser::parseType()'/>
<doc f='llvm/llvm/include/llvm/Demangle/ItaniumDemangle.h' l='2256'>/// Parse the &lt;type&gt; production.</doc>
<doc f='llvm/llvm/include/llvm/Demangle/ItaniumDemangle.h' l='3441'>// &lt;type&gt;      ::= &lt;builtin-type&gt;
//             ::= &lt;qualified-type&gt;
//             ::= &lt;function-type&gt;
//             ::= &lt;class-enum-type&gt;
//             ::= &lt;array-type&gt;
//             ::= &lt;pointer-to-member-type&gt;
//             ::= &lt;template-param&gt;
//             ::= &lt;template-template-param&gt; &lt;template-args&gt;
//             ::= &lt;decltype&gt;
//             ::= P &lt;type&gt;        # pointer
//             ::= R &lt;type&gt;        # l-value reference
//             ::= O &lt;type&gt;        # r-value reference (C++11)
//             ::= C &lt;type&gt;        # complex pair (C99)
//             ::= G &lt;type&gt;        # imaginary (C99)
//             ::= &lt;substitution&gt;  # See Compression below
// extension   ::= U &lt;objc-name&gt; &lt;objc-type&gt;  # objc-type&lt;identifier&gt;
// extension   ::= &lt;vector-type&gt; # &lt;vector-type&gt; starts with Dv
//
// &lt;objc-name&gt; ::= &lt;k0 number&gt; objcproto &lt;k1 number&gt; &lt;identifier&gt;  # k0 = 9 + &lt;number of digits in k1&gt; + k1
// &lt;objc-type&gt; ::= &lt;source-name&gt;  # PU&lt;11+&gt;objcproto 11objc_object&lt;source-name&gt; 11objc_object -&gt; id&lt;source-name&gt;</doc>
