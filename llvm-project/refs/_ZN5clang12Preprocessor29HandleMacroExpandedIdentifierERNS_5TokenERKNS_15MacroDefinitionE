<dec f='llvm/clang/include/clang/Lex/Preprocessor.h' l='2094' type='bool clang::Preprocessor::HandleMacroExpandedIdentifier(clang::Token &amp; Identifier, const clang::MacroDefinition &amp; MD)'/>
<doc f='llvm/clang/include/clang/Lex/Preprocessor.h' l='2091'>/// If an identifier token is read that is to be expanded as a macro, handle
  /// it and return the next token as &apos;Tok&apos;.  If we lexed a token, return true;
  /// otherwise the caller should lex again.</doc>
<def f='llvm/clang/lib/Lex/PPMacroExpansion.cpp' l='464' ll='619' type='bool clang::Preprocessor::HandleMacroExpandedIdentifier(clang::Token &amp; Identifier, const clang::MacroDefinition &amp; M)'/>
<doc f='llvm/clang/lib/Lex/PPMacroExpansion.cpp' l='462'>/// HandleMacroExpandedIdentifier - If an identifier token is read that is to be
/// expanded as a macro, handle it and return the next token as &apos;Identifier&apos;.</doc>
<use f='llvm/clang/lib/Lex/Preprocessor.cpp' l='826' u='c' c='_ZN5clang12Preprocessor16HandleIdentifierERNS_5TokenE'/>
