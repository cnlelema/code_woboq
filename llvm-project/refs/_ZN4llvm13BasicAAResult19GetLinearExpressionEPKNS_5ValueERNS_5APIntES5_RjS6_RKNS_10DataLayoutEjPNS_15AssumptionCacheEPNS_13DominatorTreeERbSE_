<dec f='llvm/llvm/include/llvm/Analysis/BasicAliasAnalysis.h' l='167' type='static const llvm::Value * llvm::BasicAAResult::GetLinearExpression(const llvm::Value * V, llvm::APInt &amp; Scale, llvm::APInt &amp; Offset, unsigned int &amp; ZExtBits, unsigned int &amp; SExtBits, const llvm::DataLayout &amp; DL, unsigned int Depth, llvm::AssumptionCache * AC, llvm::DominatorTree * DT, bool &amp; NSW, bool &amp; NUW)'/>
<def f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='257' ll='408' type='static const llvm::Value * llvm::BasicAAResult::GetLinearExpression(const llvm::Value * V, llvm::APInt &amp; Scale, llvm::APInt &amp; Offset, unsigned int &amp; ZExtBits, unsigned int &amp; SExtBits, const llvm::DataLayout &amp; DL, unsigned int Depth, llvm::AssumptionCache * AC, llvm::DominatorTree * DT, bool &amp; NSW, bool &amp; NUW)'/>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='306' u='c' c='_ZN4llvm13BasicAAResult19GetLinearExpressionEPKNS_5ValueERNS_5APIntES5_RjS6_RKNS_10DataLayoutEjPNS_15AssumptionCacheEPNS_13DominatorTreeERbSE_'/>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='311' u='c' c='_ZN4llvm13BasicAAResult19GetLinearExpressionEPKNS_5ValueERNS_5APIntES5_RjS6_RKNS_10DataLayoutEjPNS_15AssumptionCacheEPNS_13DominatorTreeERbSE_'/>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='316' u='c' c='_ZN4llvm13BasicAAResult19GetLinearExpressionEPKNS_5ValueERNS_5APIntES5_RjS6_RKNS_10DataLayoutEjPNS_15AssumptionCacheEPNS_13DominatorTreeERbSE_'/>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='322' u='c' c='_ZN4llvm13BasicAAResult19GetLinearExpressionEPKNS_5ValueERNS_5APIntES5_RjS6_RKNS_10DataLayoutEjPNS_15AssumptionCacheEPNS_13DominatorTreeERbSE_'/>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='362' u='c' c='_ZN4llvm13BasicAAResult19GetLinearExpressionEPKNS_5ValueERNS_5APIntES5_RjS6_RKNS_10DataLayoutEjPNS_15AssumptionCacheEPNS_13DominatorTreeERbSE_'/>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='560' u='c' c='_ZN4llvm13BasicAAResult22DecomposeGEPExpressionEPKNS_5ValueERNS0_13DecomposedGEPERKNS_10DataLayoutEPNS_15AssumptionCacheEPNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='1982' u='c' c='_ZN4llvm13BasicAAResult23constantOffsetHeuristicERKNS_15SmallVectorImplINS0_16VariableGEPIndexEEENS_12LocationSizeES6_NS_5APIntEPNS_15AssumptionCacheEPNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='1986' u='c' c='_ZN4llvm13BasicAAResult23constantOffsetHeuristicERKNS_15SmallVectorImplINS0_16VariableGEPIndexEEENS_12LocationSizeES6_NS_5APIntEPNS_15AssumptionCacheEPNS_13DominatorTreeE'/>
<doc f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='243'>//===----------------------------------------------------------------------===//
// GetElementPtr Instruction Decomposition and Analysis
//===----------------------------------------------------------------------===//

/// Analyzes the specified value as a linear expression: &quot;A*V + B&quot;, where A and
/// B are constant integers.
///
/// Returns the scale and offset values as APInts and return V as a Value*, and
/// return whether we looked through any sign or zero extends.  The incoming
/// Value is known to have IntegerType, and it may already be sign or zero
/// extended.
///
/// Note that this looks through extends, so the high bits may not be
/// represented in the result.</doc>
<doc f='llvm/llvm/lib/Analysis/BasicAliasAnalysis.cpp' l='257'>/*static*/</doc>
