<dec f='llvm/clang/lib/CodeGen/CGDebugInfo.h' l='206' type='llvm::DISubroutineType * clang::CodeGen::CGDebugInfo::getOrCreateFunctionType(const clang::Decl * D, clang::QualType FnType, llvm::DIFile * F)'/>
<def f='llvm/clang/lib/CodeGen/CGDebugInfo.cpp' l='3441' ll='3509' type='llvm::DISubroutineType * clang::CodeGen::CGDebugInfo::getOrCreateFunctionType(const clang::Decl * D, clang::QualType FnType, llvm::DIFile * F)'/>
<use f='llvm/clang/lib/CodeGen/CGDebugInfo.cpp' l='3589' u='c' c='_ZN5clang7CodeGen11CGDebugInfo17EmitFunctionStartENS_10GlobalDeclENS_14SourceLocationES3_NS_8QualTypeEPN4llvm8FunctionEbRNS0_11CGBuilderTyE'/>
<use f='llvm/clang/lib/CodeGen/CGDebugInfo.cpp' l='3610' u='c' c='_ZN5clang7CodeGen11CGDebugInfo17EmitFunctionStartENS_10GlobalDeclENS_14SourceLocationES3_NS_8QualTypeEPN4llvm8FunctionEbRNS0_11CGBuilderTyE'/>
<use f='llvm/clang/lib/CodeGen/CGDebugInfo.cpp' l='3665' u='c' c='_ZN5clang7CodeGen11CGDebugInfo16EmitFunctionDeclENS_10GlobalDeclENS_14SourceLocationENS_8QualTypeE'/>
<doc f='llvm/clang/lib/CodeGen/CGDebugInfo.cpp' l='3439'>// getOrCreateFunctionType - Construct type. If it is a c++ method, include
// implicit parameter &quot;this&quot;.</doc>
