<dec f='llvm/llvm/include/llvm/IR/Constants.h' l='910' type='static llvm::Constant * llvm::ConstantExpr::getAlignOf(llvm::Type * Ty)'/>
<doc f='llvm/llvm/include/llvm/IR/Constants.h' l='903'>// Static methods to construct a ConstantExpr of different kinds.  Note that
  // these methods may return a object that is not an instance of the
  // ConstantExpr class, because they will attempt to fold the constant
  // expression into something simpler if possible.

  /// getAlignOf constant expr - computes the alignment of a type in a target
  /// independent way (Note: the return type is an i64).</doc>
<use f='llvm/llvm/lib/IR/ConstantFold.cpp' l='412' u='c' c='_ZL16getFoldedAlignOfPN4llvm4TypeES1_b'/>
<use f='llvm/llvm/lib/IR/ConstantFold.cpp' l='461' u='c' c='_ZL16getFoldedAlignOfPN4llvm4TypeES1_b'/>
<def f='llvm/llvm/lib/IR/Constants.cpp' l='1944' ll='1955' type='static llvm::Constant * llvm::ConstantExpr::getAlignOf(llvm::Type * Ty)'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='1451' u='c' c='LLVMAlignOf'/>
