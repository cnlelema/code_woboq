<def f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='587' type='const ValueToValueMap &amp; llvm::LoopAccessInfo::getSymbolicStrides() const'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='585'>/// If an access has a symbolic strides, this maps the pointer value to
  /// the stride symbol.</doc>
<use f='llvm/llvm/lib/Analysis/VectorUtils.cpp' l='882' u='c' c='_ZN4llvm21InterleavedAccessInfo19analyzeInterleavingEb'/>
<use f='llvm/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h' l='381' u='c' c='_ZN4llvm25LoopVectorizationLegality18getSymbolicStridesEv'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='4682' u='c' c='_ZN4llvm26LoopVectorizationCostModel12computeMaxVFEb'/>
