<dec f='llvm/clang/include/clang/AST/ExprCXX.h' l='2117' type='bool clang::CXXNewExpr::shouldNullCheckAllocation() const'/>
<doc f='llvm/clang/include/clang/AST/ExprCXX.h' l='2102'>/// True if the allocation result needs to be null-checked.
  ///
  /// C++11 [expr.new]p13:
  ///   If the allocation function returns null, initialization shall
  ///   not be done, the deallocation function shall not be called,
  ///   and the value of the new-expression shall be null.
  ///
  /// C++ DR1748:
  ///   If the allocation function is a reserved placement allocation
  ///   function that returns null, the behavior is undefined.
  ///
  /// An allocation function is not allowed to return null unless it
  /// has a non-throwing exception-specification.  The &apos;03 rule is
  /// identical except that the definition of a non-throwing
  /// exception specification is just &quot;is it throw()?&quot;.</doc>
<def f='llvm/clang/lib/AST/ExprCXX.cpp' l='215' ll='221' type='bool clang::CXXNewExpr::shouldNullCheckAllocation() const'/>
<use f='llvm/clang/lib/CodeGen/CGExprCXX.cpp' l='1658' u='c' c='_ZN5clang7CodeGen15CodeGenFunction14EmitCXXNewExprEPKNS_10CXXNewExprE'/>
