<def f='llvm/clang/include/clang/AST/TemplateName.h' l='331' ll='333' type='static clang::TemplateName clang::TemplateName::getFromVoidPointer(void * Ptr)'/>
<use f='llvm/clang/include/clang/AST/TemplateName.h' l='554' u='c' c='_ZN4llvm21PointerLikeTypeTraitsIN5clang12TemplateNameEE18getFromVoidPointerEPv'/>
<use f='llvm/clang/include/clang/AST/TemplateBase.h' l='282' u='c' c='_ZNK5clang16TemplateArgument13getAsTemplateEv'/>
<use f='llvm/clang/include/clang/AST/TemplateBase.h' l='291' u='c' c='_ZNK5clang16TemplateArgument30getAsTemplateOrTemplatePatternEv'/>
<doc f='llvm/clang/include/clang/AST/TemplateName.h' l='330'>/// Build a template name from a void pointer.</doc>
