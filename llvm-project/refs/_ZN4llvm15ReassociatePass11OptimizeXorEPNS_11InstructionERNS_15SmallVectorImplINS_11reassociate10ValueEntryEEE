<dec f='llvm/llvm/include/llvm/Transforms/Scalar/Reassociate.h' l='110' type='llvm::Value * llvm::ReassociatePass::OptimizeXor(llvm::Instruction * I, SmallVectorImpl&lt;reassociate::ValueEntry&gt; &amp; Ops)'/>
<def f='llvm/llvm/lib/Transforms/Scalar/Reassociate.cpp' l='1305' ll='1423' type='llvm::Value * llvm::ReassociatePass::OptimizeXor(llvm::Instruction * I, SmallVectorImpl&lt;llvm::reassociate::ValueEntry&gt; &amp; Ops)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Reassociate.cpp' l='1864' u='c' c='_ZN4llvm15ReassociatePass18OptimizeExpressionEPNS_14BinaryOperatorERNS_15SmallVectorImplINS_11reassociate10ValueEntryEEE'/>
<doc f='llvm/llvm/lib/Transforms/Scalar/Reassociate.cpp' l='1302'>/// Optimize a series of operands to an &apos;xor&apos; instruction. If it can be reduced
/// to a single Value, it is returned, otherwise the Ops list is mutated as
/// necessary.</doc>
