<dec f='llvm/llvm/include/llvm/Transforms/Utils/LoopVersioning.h' l='41' type='void llvm::LoopVersioning::LoopVersioning(const llvm::LoopAccessInfo &amp; LAI, llvm::Loop * L, llvm::LoopInfo * LI, llvm::DominatorTree * DT, llvm::ScalarEvolution * SE, bool UseLAIChecks = true)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopDistribute.cpp' l='816' u='c' c='_ZN12_GLOBAL__N_121LoopDistributeForLoop11processLoopERSt8functionIFRKN4llvm14LoopAccessInfoERNS2_4LoopEEE'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/LoopVersioning.h' l='37'>/// Expects LoopAccessInfo, Loop, LoopInfo, DominatorTree as input.
  /// It uses runtime check provided by the user. If \p UseLAIChecks is true,
  /// we will retain the default checks made by LAI. Otherwise, construct an
  /// object having no checks and we expect the user to add them.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopLoadElimination.cpp' l='562' u='c' c='_ZN12_GLOBAL__N_122LoadEliminationForLoop11processLoopEv'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopVersioningLICM.cpp' l='637' u='c' c='_ZN12_GLOBAL__N_118LoopVersioningLICM9runOnLoopEPN4llvm4LoopERNS1_13LPPassManagerE'/>
<def f='llvm/llvm/lib/Transforms/Utils/LoopVersioning.cpp' l='32' ll='43' type='void llvm::LoopVersioning::LoopVersioning(const llvm::LoopAccessInfo &amp; LAI, llvm::Loop * L, llvm::LoopInfo * LI, llvm::DominatorTree * DT, llvm::ScalarEvolution * SE, bool UseLAIChecks = true)'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopVersioning.cpp' l='286' u='c' c='_ZN12_GLOBAL__N_118LoopVersioningPass13runOnFunctionERN4llvm8FunctionE'/>
