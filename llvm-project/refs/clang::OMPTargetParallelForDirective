<inh f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='361' c='clang::OMPLoopDirective'/>
<def f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='2604' ll='2674'/>
<size>40</size>
<doc f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='2595'>/// This represents &apos;#pragma omp target parallel for&apos; directive.
///
/// \code
/// #pragma omp target parallel for private(a,b) reduction(+:c,d)
/// \endcode
/// In this example directive &apos;#pragma omp target parallel for&apos; has clauses
/// &apos;private&apos; with the variables &apos;a&apos; and &apos;b&apos; and &apos;reduction&apos; with operator &apos;+&apos;
/// and variables &apos;c&apos; and &apos;d&apos;.
///</doc>
<mbr r='clang::OMPTargetParallelForDirective::HasCancel' o='288' t='bool'/>
<fun r='_ZN5clang29OMPTargetParallelForDirectiveC1ENS_14SourceLocationES1_jj'/>
<fun r='_ZN5clang29OMPTargetParallelForDirectiveC1Ejj'/>
<fun r='_ZN5clang29OMPTargetParallelForDirective12setHasCancelEb'/>
<fun r='_ZN5clang29OMPTargetParallelForDirective6CreateERKNS_10ASTContextENS_14SourceLocationES4_jN4llvm8ArrayRefIPNS_9OMPClauseEEEPNS_4StmtERKNS_16OMPLoopDir4356640'/>
<fun r='_ZN5clang29OMPTargetParallelForDirective11CreateEmptyERKNS_10ASTContextEjjNS_4Stmt10EmptyShellE'/>
<fun r='_ZNK5clang29OMPTargetParallelForDirective9hasCancelEv'/>
<fun r='_ZN5clang29OMPTargetParallelForDirective7classofEPKNS_4StmtE'/>
