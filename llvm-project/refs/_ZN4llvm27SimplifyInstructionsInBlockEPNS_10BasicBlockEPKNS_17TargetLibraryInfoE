<dec f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='172' type='bool llvm::SimplifyInstructionsInBlock(llvm::BasicBlock * BB, const llvm::TargetLibraryInfo * TLI = nullptr)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='167'>/// Scan the specified basic block and try to simplify any instructions in it
/// and recursively delete dead instructions.
///
/// This returns true if it changed the code, note that it can delete
/// instructions in other blocks as well in this block.</doc>
<use f='llvm/llvm/lib/CodeGen/WinEHPrepare.cpp' l='1010' u='c' c='_ZN12_GLOBAL__N_112WinEHPrepare23cleanupPreparedFuncletsERN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/AggressiveInstCombine/AggressiveInstCombine.cpp' l='278' u='c' c='_ZL19foldUnusualPatternsRN4llvm8FunctionERNS_13DominatorTreeE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='2068' u='c' c='_ZN4llvm17JumpThreadingPass10ThreadEdgeEPNS_10BasicBlockERKNS_15SmallVectorImplIS2_EES2_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp' l='1478' u='c' c='_ZN12_GLOBAL__N_110LoopReroll14DAGRootTracker7replaceEPKN4llvm4SCEVE'/>
<def f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='596' ll='630' type='bool llvm::SimplifyInstructionsInBlock(llvm::BasicBlock * BB, const llvm::TargetLibraryInfo * TLI = nullptr)'/>
<doc f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='591'>/// SimplifyInstructionsInBlock - Scan the specified basic block and try to
/// simplify any instructions in it and recursively delete dead instructions.
///
/// This returns true if it changed the code, note that it can delete
/// instructions in other blocks as well in this block.</doc>
<use f='llvm/llvm/unittests/Transforms/Utils/LocalTest.cpp' l='579' u='c' c='_ZN54SalvageDebugInfoTest_RecursiveBlockSimplification_Test8TestBodyEv'/>
