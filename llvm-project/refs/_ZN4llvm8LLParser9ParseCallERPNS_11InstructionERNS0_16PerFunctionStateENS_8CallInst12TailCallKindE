<dec f='llvm/llvm/lib/AsmParser/LLParser.h' l='590' type='bool llvm::LLParser::ParseCall(llvm::Instruction *&amp; Inst, llvm::LLParser::PerFunctionState &amp; PFS, CallInst::TailCallKind TCK)'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='5789' u='c' c='_ZN4llvm8LLParser16ParseInstructionERPNS_11InstructionEPNS_10BasicBlockERNS0_16PerFunctionStateE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='5790' u='c' c='_ZN4llvm8LLParser16ParseInstructionERPNS_11InstructionEPNS_10BasicBlockERNS0_16PerFunctionStateE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='5791' u='c' c='_ZN4llvm8LLParser16ParseInstructionERPNS_11InstructionEPNS_10BasicBlockERNS0_16PerFunctionStateE'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='5792' u='c' c='_ZN4llvm8LLParser16ParseInstructionERPNS_11InstructionEPNS_10BasicBlockERNS0_16PerFunctionStateE'/>
<def f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='6720' ll='6823' type='bool llvm::LLParser::ParseCall(llvm::Instruction *&amp; Inst, llvm::LLParser::PerFunctionState &amp; PFS, CallInst::TailCallKind TCK)'/>
<doc f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='6711'>/// ParseCall
///   ::= &apos;call&apos; OptionalFastMathFlags OptionalCallingConv
///           OptionalAttrs Type Value ParameterList OptionalAttrs
///   ::= &apos;tail&apos; &apos;call&apos; OptionalFastMathFlags OptionalCallingConv
///           OptionalAttrs Type Value ParameterList OptionalAttrs
///   ::= &apos;musttail&apos; &apos;call&apos; OptionalFastMathFlags OptionalCallingConv
///           OptionalAttrs Type Value ParameterList OptionalAttrs
///   ::= &apos;notail&apos; &apos;call&apos;  OptionalFastMathFlags OptionalCallingConv
///           OptionalAttrs Type Value ParameterList OptionalAttrs</doc>
