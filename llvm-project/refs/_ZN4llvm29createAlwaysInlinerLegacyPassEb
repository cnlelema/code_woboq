<dec f='llvm/llvm/include/llvm/Transforms/IPO/AlwaysInliner.h' l='41' type='llvm::Pass * llvm::createAlwaysInlinerLegacyPass(bool InsertLifetime = true)'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='564' u='c' c='_ZN12_GLOBAL__N_118EmitAssemblyHelper12CreatePassesERN4llvm6legacy11PassManagerERNS2_19FunctionPassManagerE'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/AlwaysInliner.h' l='39'>/// Create a legacy pass manager instance of a pass to inline and remove
/// functions marked as &quot;always_inline&quot;.</doc>
<use f='llvm/llvm/include/llvm/LinkAllPasses.h' l='112' u='c' c='_ZN12_GLOBAL__N_116ForcePassLinkingC1Ev'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp' l='667' u='c' c='_ZN12_GLOBAL__N_116AMDGPUPassConfig11addIRPassesEv'/>
<def f='llvm/llvm/lib/Transforms/IPO/AlwaysInliner.cpp' l='128' ll='130' type='llvm::Pass * llvm::createAlwaysInlinerLegacyPass(bool InsertLifetime = true)'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='94' u='c' c='LLVMAddAlwaysInlinerPass'/>
<use f='llvm/llvm/tools/bugpoint/bugpoint.cpp' l='195' u='c' c='main'/>
<use f='llvm/llvm/tools/opt/opt.cpp' l='375' u='c' c='_ZL21AddOptimizationPassesRN4llvm6legacy15PassManagerBaseERNS0_19FunctionPassManagerEPNS_13TargetMachineEjj'/>
