<dec f='llvm/clang/include/clang/Sema/Sema.h' l='683' type='SmallVector&lt;std::pair&lt;FunctionDecl *, FunctionDecl *&gt;, 2&gt;'/>
<use f='llvm/clang/include/clang/Sema/Sema.h' l='11152' u='m' c='_ZN5clang4Sema31SavePendingParsedClassStateRAIID1Ev'/>
<use f='llvm/clang/include/clang/Sema/Sema.h' l='11163'/>
<use f='llvm/clang/include/clang/Sema/Sema.h' l='11171' u='a' c='_ZN5clang4Sema31SavePendingParsedClassStateRAII14swapSavedStateEv'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='677'>/// All the function redeclarations seen during a class definition that had
  /// their exception spec checks delayed, plus the prior declaration they
  /// should be checked against. Except during error recovery, the new decl
  /// should always be a friend declaration, as that&apos;s the only valid way to
  /// redeclare a special member before its class is complete.</doc>
<use f='llvm/clang/lib/Sema/Sema.cpp' l='1064' u='m' c='_ZN5clang4Sema25ActOnEndOfTranslationUnitEv'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='6750' c='_ZN5clang4Sema32CheckDelayedMemberExceptionSpecsEv'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='6753' u='a' c='_ZN5clang4Sema32CheckDelayedMemberExceptionSpecsEv'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='11398' u='m' c='_ZN5clang4Sema25ActOnFinishCXXMemberDeclsEv'/>
<use f='llvm/clang/lib/Sema/SemaExceptionSpec.cpp' l='294' u='m' c='_ZN5clang4Sema28CheckEquivalentExceptionSpecEPNS_12FunctionDeclES2_'/>
