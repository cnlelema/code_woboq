<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='323' ll='325' type='unsigned int llvm::TargetInstrInfo::getInstSizeInBytes(const llvm::MachineInstr &amp; MI) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='321'>/// Returns the size in bytes of the specified MachineInstr, or ~0U
  /// when this function is not implemented by a target.</doc>
<use f='llvm/llvm/lib/CodeGen/BranchRelaxation.cpp' l='173' u='c' c='_ZNK12_GLOBAL__N_116BranchRelaxation16computeBlockSizeERKN4llvm17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/CodeGen/BranchRelaxation.cpp' l='191' u='c' c='_ZNK12_GLOBAL__N_116BranchRelaxation14getInstrOffsetERKN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/BranchRelaxation.cpp' l='443' u='c' c='_ZN12_GLOBAL__N_116BranchRelaxation24fixupUnconditionalBranchERN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64CompressJumpTables.cpp' l='69' u='c' c='_ZN12_GLOBAL__N_125AArch64CompressJumpTables16computeBlockSizeERN4llvm17MachineBasicBlockE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64CompressJumpTables.cpp' l='153' u='c' c='_ZN12_GLOBAL__N_125AArch64CompressJumpTables20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
