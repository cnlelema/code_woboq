<dec f='llvm/llvm/include/llvm/Analysis/MustExecute.h' l='144' type='bool llvm::ICFLoopSafetyInfo::doesNotWriteMemoryBefore(const llvm::BasicBlock * BB, const llvm::Loop * CurLoop) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/MustExecute.h' l='142'>/// Returns true if we could not execute a memory-modifying instruction before
  /// we enter \p BB under assumption that \p CurLoop is entered.</doc>
<def f='llvm/llvm/lib/Analysis/MustExecute.cpp' l='267' ll='285' type='bool llvm::ICFLoopSafetyInfo::doesNotWriteMemoryBefore(const llvm::BasicBlock * BB, const llvm::Loop * CurLoop) const'/>
<use f='llvm/llvm/lib/Analysis/MustExecute.cpp' l='292' u='c' c='_ZNK4llvm17ICFLoopSafetyInfo24doesNotWriteMemoryBeforeERKNS_11InstructionEPKNS_4LoopE'/>
