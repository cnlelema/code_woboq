<dec f='llvm/llvm/include/llvm/IRReader/IRReader.h' l='45' type='std::unique_ptr&lt;Module&gt; llvm::getLazyIRFileModule(llvm::StringRef Filename, llvm::SMDiagnostic &amp; Err, llvm::LLVMContext &amp; Context, bool ShouldLazyLoadMetadata = false)'/>
<doc f='llvm/llvm/include/llvm/IRReader/IRReader.h' l='39'>/// If the given file holds a bitcode image, return a Module
/// for it which does lazy deserialization of function bodies.  Otherwise,
/// attempt to parse it as LLVM Assembly and return a fully populated
/// Module. The ShouldLazyLoadMetadata flag is passed down to the bitcode
/// reader to optionally enable lazy metadata loading.</doc>
<def f='llvm/llvm/lib/IRReader/IRReader.cpp' l='52' ll='66' type='std::unique_ptr&lt;Module&gt; llvm::getLazyIRFileModule(llvm::StringRef Filename, llvm::SMDiagnostic &amp; Err, llvm::LLVMContext &amp; Context, bool ShouldLazyLoadMetadata = false)'/>
<use f='llvm/llvm/lib/Transforms/IPO/FunctionImport.cpp' l='155' u='c' c='_ZL8loadFileRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERN4llvm11LLVMContextE'/>
<use f='llvm/llvm/tools/llvm-extract/llvm-extract.cpp' l='133' u='c' c='main'/>
<use f='llvm/llvm/tools/llvm-link/llvm-link.cpp' l='127' u='c' c='_ZL8loadFilePKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERN4llvm11LLVMContextEb'/>
