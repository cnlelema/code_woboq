<dec f='llvm/llvm/include/llvm/MC/MCStreamer.h' l='571' type='void llvm::MCStreamer::emitELFSymverDirective(llvm::StringRef AliasName, const llvm::MCSymbol * Aliasee)'/>
<doc f='llvm/llvm/include/llvm/MC/MCStreamer.h' l='565'>/// Emit an ELF .symver directive.
  ///
  /// This corresponds to an assembler statement such as:
  ///  .symver _start, foo@@SOME_VERSION
  /// \param AliasName - The versioned alias (i.e. &quot;foo@@SOME_VERSION&quot;)
  /// \param Aliasee - The aliased symbol (i.e. &quot;_start&quot;)</doc>
<ovr f='llvm/llvm/lib/MC/MCAsmStreamer.cpp' l='438' c='_ZN12_GLOBAL__N_113MCAsmStreamer22emitELFSymverDirectiveEN4llvm9StringRefEPKNS1_8MCSymbolE'/>
<ovr f='llvm/llvm/lib/MC/MCELFStreamer.cpp' l='326' c='_ZN4llvm13MCELFStreamer22emitELFSymverDirectiveENS_9StringRefEPKNS_8MCSymbolE'/>
<use f='llvm/llvm/lib/MC/MCParser/ELFAsmParser.cpp' l='782' u='c' c='_ZN12_GLOBAL__N_112ELFAsmParser20ParseDirectiveSymverEN4llvm9StringRefENS1_5SMLocE'/>
<def f='llvm/llvm/lib/MC/MCStreamer.cpp' l='1121' ll='1122' type='void llvm::MCStreamer::emitELFSymverDirective(llvm::StringRef AliasName, const llvm::MCSymbol * Aliasee)'/>
<ovr f='llvm/llvm/lib/Object/RecordStreamer.cpp' l='126' c='_ZN4llvm14RecordStreamer22emitELFSymverDirectiveENS_9StringRefEPKNS_8MCSymbolE'/>
