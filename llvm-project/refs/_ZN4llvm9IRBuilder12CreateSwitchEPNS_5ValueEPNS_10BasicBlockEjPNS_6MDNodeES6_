<def f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='884' ll='889' type='llvm::SwitchInst * llvm::IRBuilder::CreateSwitch(llvm::Value * V, llvm::BasicBlock * Dest, unsigned int NumCases = 10, llvm::MDNode * BranchWeights = nullptr, llvm::MDNode * Unpredictable = nullptr)'/>
<use f='llvm/clang/lib/CodeGen/CGAtomic.cpp' l='482' u='c' c='_ZL27emitAtomicCmpXchgFailureSetRN5clang7CodeGen15CodeGenFunctionEPNS_10AtomicExprEbNS0_7AddressES5_S5_S5_PN4llvm5ValueEmNS6_14AtomicOrderingEh'/>
<use f='llvm/clang/lib/CodeGen/CGAtomic.cpp' l='552' u='c' c='_ZL12EmitAtomicOpRN5clang7CodeGen15CodeGenFunctionEPNS_10AtomicExprENS0_7AddressES5_S5_S5_PN4llvm5ValueES8_mNS6_14AtomicOrderingEh'/>
<use f='llvm/clang/lib/CodeGen/CGAtomic.cpp' l='727' u='c' c='_ZL12EmitAtomicOpRN5clang7CodeGen15CodeGenFunctionEPNS_10AtomicExprENS0_7AddressES5_S5_S5_PN4llvm5ValueES8_mNS6_14AtomicOrderingES8_'/>
<use f='llvm/clang/lib/CodeGen/CGAtomic.cpp' l='1326' u='c' c='_ZN5clang7CodeGen15CodeGenFunction14EmitAtomicExprEPNS_10AtomicExprE'/>
<doc f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='881'>/// Create a switch instruction with the specified value, default dest,
  /// and with a hint for the number of cases that will be added (for efficient
  /// allocation).</doc>
<use f='llvm/clang/lib/CodeGen/CGBuiltin.cpp' l='3067' u='c' c='_ZN5clang7CodeGen15CodeGenFunction15EmitBuiltinExprENS_10GlobalDeclEjPKNS_8CallExprENS0_15ReturnValueSlotE'/>
<use f='llvm/clang/lib/CodeGen/CGBuiltin.cpp' l='3132' u='c' c='_ZN5clang7CodeGen15CodeGenFunction15EmitBuiltinExprENS_10GlobalDeclEjPKNS_8CallExprENS0_15ReturnValueSlotE'/>
<use f='llvm/clang/lib/CodeGen/CGBuiltin.cpp' l='3191' u='c' c='_ZN5clang7CodeGen15CodeGenFunction15EmitBuiltinExprENS_10GlobalDeclEjPKNS_8CallExprENS0_15ReturnValueSlotE'/>
<use f='llvm/clang/lib/CodeGen/CGCoroutine.cpp' l='219' u='c' c='_ZL21emitSuspendExpressionRN5clang7CodeGen15CodeGenFunctionERNS0_10CGCoroDataERKNS_20CoroutineSuspendExprEN12_GLOBAL__N_19AwaitKindENS0_12AggValueSlotEbb'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='155' u='c' c='_ZN12_GLOBAL__N_130CGOpenMPTaskOutlinedRegionInfo18UntiedTaskActionTy5EnterERN5clang7CodeGen15CodeGenFunctionE'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='5782' u='c' c='_ZN5clang7CodeGen15CGOpenMPRuntime13emitReductionERNS0_15CodeGenFunctionENS_14SourceLocationEN4llvm8ArrayRefIPKNS_4ExprEEESA_SA_SA_NS1_18ReductionOptionsTyE'/>
<use f='llvm/clang/lib/CodeGen/CGStmt.cpp' l='1679' u='c' c='_ZN5clang7CodeGen15CodeGenFunction14EmitSwitchStmtERKNS_10SwitchStmtE'/>
<use f='llvm/clang/lib/CodeGen/CGStmtOpenMP.cpp' l='2574' u='c' c='_ZN5clang7CodeGen15CodeGenFunction12EmitSectionsERKNS_22OMPExecutableDirectiveE'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='3090' u='c' c='LLVMBuildSwitch'/>
<use f='llvm/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp' l='1024' u='c' c='_ZN12_GLOBAL__N_132WebAssemblyLowerEmscriptenEHSjLj17runSjLjOnFunctionERN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/Coroutines/CoroSplit.cpp' l='98' u='c' c='_ZL22createResumeEntryBlockRN4llvm8FunctionERNS_4coro5ShapeE'/>
<use f='llvm/llvm/lib/Transforms/IPO/CrossDSOCFI.cpp' l='145' u='c' c='_ZN12_GLOBAL__N_111CrossDSOCFI13buildCFICheckERN4llvm6ModuleE'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/PGOMemOPSizeOpt.cpp' l='356' u='c' c='_ZN12_GLOBAL__N_112MemOPSizeOpt7performEPN4llvm12MemIntrinsicE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp' l='360' u='c' c='_ZN12_GLOBAL__N_129ConstantTerminatorFoldingImpl15handleDeadExitsEv'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyCFG.cpp' l='1200' u='c' c='_ZN12_GLOBAL__N_114SimplifyCFGOpt35FoldValueComparisonIntoPredecessorsEPN4llvm11InstructionERNS1_9IRBuilderINS1_14ConstantFolderENS1_24IRBuilderDefaultInserterEEE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyCFG.cpp' l='3776' u='c' c='_ZL25SimplifyBranchOnICmpChainPN4llvm10BranchInstERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEERKNS_10DataLayoutE'/>
<use f='llvm/llvm/unittests/IR/CFGBuilder.cpp' l='47' u='c' c='_ZL13ConnectBlocksPN4llvm10BasicBlockES1_'/>
