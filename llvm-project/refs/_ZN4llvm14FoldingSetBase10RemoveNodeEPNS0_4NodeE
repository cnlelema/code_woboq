<dec f='llvm/llvm/include/llvm/ADT/FoldingSet.h' l='198' type='bool llvm::FoldingSetBase::RemoveNode(llvm::FoldingSetBase::Node * N)'/>
<use f='llvm/llvm/include/llvm/ADT/FoldingSet.h' l='432' u='c' c='_ZN4llvm14FoldingSetImpl10RemoveNodeEPT_'/>
<doc f='llvm/llvm/include/llvm/ADT/FoldingSet.h' l='193'>// The below methods are protected to encourage subclasses to provide a more
  // type-safe API.

  /// RemoveNode - Remove a node from the folding set, returning true if one
  /// was removed or false if the node was not in the folding set.</doc>
<def f='llvm/llvm/lib/Support/FoldingSet.cpp' l='375' ll='411' type='bool llvm::FoldingSetBase::RemoveNode(llvm::FoldingSetBase::Node * N)'/>
<doc f='llvm/llvm/lib/Support/FoldingSet.cpp' l='373'>/// RemoveNode - Remove a node from the folding set, returning true if one was
/// removed or false if the node was not in the folding set.</doc>
