<dec f='llvm/clang/include/clang/Parse/Parser.h' l='2556' type='void clang::Parser::ParseAvailabilityAttribute(clang::IdentifierInfo &amp; Availability, clang::SourceLocation AvailabilityLoc, clang::ParsedAttributes &amp; attrs, clang::SourceLocation * endLoc, clang::IdentifierInfo * ScopeName, clang::SourceLocation ScopeLoc, ParsedAttr::Syntax Syntax)'/>
<use f='llvm/clang/lib/Parse/ParseDecl.cpp' l='427' u='c' c='_ZN5clang6Parser21ParseGNUAttributeArgsEPNS_14IdentifierInfoENS_14SourceLocationERNS_16ParsedAttributesEPS3_S2_S3_NS_10ParsedAttr6SyntaxEPNS_10DeclaratorE'/>
<def f='llvm/clang/lib/Parse/ParseDecl.cpp' l='974' ll='1194' type='void clang::Parser::ParseAvailabilityAttribute(clang::IdentifierInfo &amp; Availability, clang::SourceLocation AvailabilityLoc, clang::ParsedAttributes &amp; attrs, clang::SourceLocation * endLoc, clang::IdentifierInfo * ScopeName, clang::SourceLocation ScopeLoc, ParsedAttr::Syntax Syntax)'/>
<doc f='llvm/clang/lib/Parse/ParseDecl.cpp' l='949'>/// Parse the contents of the &quot;availability&quot; attribute.
///
/// availability-attribute:
///   &apos;availability&apos; &apos;(&apos; platform &apos;,&apos; opt-strict version-arg-list,
///                      opt-replacement, opt-message&apos;)&apos;
///
/// platform:
///   identifier
///
/// opt-strict:
///   &apos;strict&apos; &apos;,&apos;
///
/// version-arg-list:
///   version-arg
///   version-arg &apos;,&apos; version-arg-list
///
/// version-arg:
///   &apos;introduced&apos; &apos;=&apos; version
///   &apos;deprecated&apos; &apos;=&apos; version
///   &apos;obsoleted&apos; = version
///   &apos;unavailable&apos;
/// opt-replacement:
///   &apos;replacement&apos; &apos;=&apos; &lt;string&gt;
/// opt-message:
///   &apos;message&apos; &apos;=&apos; &lt;string&gt;</doc>
