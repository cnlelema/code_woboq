<dec f='llvm/llvm/include/llvm/Bitcode/BitcodeWriterPass.h' l='38' type='llvm::ModulePass * llvm::createBitcodeWriterPass(llvm::raw_ostream &amp; Str, bool ShouldPreserveUseListOrder = false, bool EmitSummaryIndex = false, bool EmitModuleHash = false)'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='883' u='c' c='_ZN12_GLOBAL__N_118EmitAssemblyHelper12EmitAssemblyEN5clang13BackendActionESt10unique_ptrIN4llvm17raw_pwrite_streamESt14default_deleteIS5_EE'/>
<doc f='llvm/llvm/include/llvm/Bitcode/BitcodeWriterPass.h' l='26'>/// Create and return a pass that writes the module to the specified
/// ostream. Note that this pass is designed for use with the legacy pass
/// manager.
///
/// If \c ShouldPreserveUseListOrder, encode use-list order so it can be
/// reproduced when deserialized.
///
/// If \c EmitSummaryIndex, emit the summary index (currently for use in ThinLTO
/// optimization).
///
/// If \c EmitModuleHash, compute and emit the module hash in the bitcode
/// (currently for use in ThinLTO incremental build).</doc>
<def f='llvm/llvm/lib/Bitcode/Writer/BitcodeWriterPass.cpp' l='76' ll='81' type='llvm::ModulePass * llvm::createBitcodeWriterPass(llvm::raw_ostream &amp; Str, bool ShouldPreserveUseListOrder = false, bool EmitSummaryIndex = false, bool EmitModuleHash = false)'/>
<use f='llvm/llvm/tools/llvm-extract/llvm-extract.cpp' l='363' u='c' c='main'/>
<use f='llvm/llvm/tools/opt/opt.cpp' l='897' u='c' c='main'/>
