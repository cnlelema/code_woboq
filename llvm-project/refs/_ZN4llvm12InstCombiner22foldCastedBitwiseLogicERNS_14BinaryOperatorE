<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='538' type='llvm::Instruction * llvm::InstCombiner::foldCastedBitwiseLogic(llvm::BinaryOperator &amp; I)'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='1387' ll='1451' type='llvm::Instruction * llvm::InstCombiner::foldCastedBitwiseLogic(llvm::BinaryOperator &amp; I)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='1802' u='c' c='_ZN4llvm12InstCombiner8visitAndERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='2481' u='c' c='_ZN4llvm12InstCombiner7visitOrERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='2974' u='c' c='_ZN4llvm12InstCombiner8visitXorERNS_14BinaryOperatorE'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='1386'>/// Fold {and,or,xor} (cast X), Y.</doc>
