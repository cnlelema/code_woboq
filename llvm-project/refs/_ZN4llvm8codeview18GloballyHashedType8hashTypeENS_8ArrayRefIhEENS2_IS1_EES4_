<dec f='llvm/llvm/include/llvm/DebugInfo/CodeView/TypeHashing.h' l='93' type='static llvm::codeview::GloballyHashedType llvm::codeview::GloballyHashedType::hashType(ArrayRef&lt;uint8_t&gt; RecordData, ArrayRef&lt;llvm::codeview::GloballyHashedType&gt; PreviousTypes, ArrayRef&lt;llvm::codeview::GloballyHashedType&gt; PreviousIds)'/>
<use f='llvm/llvm/include/llvm/DebugInfo/CodeView/TypeHashing.h' l='104' u='c' c='_ZN4llvm8codeview18GloballyHashedType8hashTypeENS0_8CVRecordINS0_12TypeLeafKindEEENS_8ArrayRefIS1_EES6_'/>
<use f='llvm/llvm/include/llvm/DebugInfo/CodeView/TypeHashing.h' l='159' u='c' c='_ZN4llvm8codeview18GloballyHashedType18hashTypeCollectionERNS0_14TypeCollectionE'/>
<doc f='llvm/llvm/include/llvm/DebugInfo/CodeView/TypeHashing.h' l='89'>/// Given a sequence of bytes representing a record, compute a global hash for
  /// this record.  Due to the nature of global hashes incorporating the hashes
  /// of referenced records, this function requires a list of types and ids
  /// that RecordData might reference, indexable by TypeIndex.</doc>
<use f='llvm/llvm/lib/DebugInfo/CodeView/GlobalTypeTableBuilder.cpp' l='89' u='c' c='_ZN4llvm8codeview22GlobalTypeTableBuilder17insertRecordBytesENS_8ArrayRefIhEE'/>
<def f='llvm/llvm/lib/DebugInfo/CodeView/TypeHashing.cpp' l='32' ll='80' type='static llvm::codeview::GloballyHashedType llvm::codeview::GloballyHashedType::hashType(ArrayRef&lt;uint8_t&gt; RecordData, ArrayRef&lt;llvm::codeview::GloballyHashedType&gt; PreviousTypes, ArrayRef&lt;llvm::codeview::GloballyHashedType&gt; PreviousIds)'/>
