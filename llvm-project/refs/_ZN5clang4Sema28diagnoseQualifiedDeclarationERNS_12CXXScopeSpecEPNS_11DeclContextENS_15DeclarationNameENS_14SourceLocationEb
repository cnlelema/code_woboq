<dec f='llvm/clang/include/clang/Sema/Sema.h' l='2001' type='bool clang::Sema::diagnoseQualifiedDeclaration(clang::CXXScopeSpec &amp; SS, clang::DeclContext * DC, clang::DeclarationName Name, clang::SourceLocation Loc, bool IsTemplateId)'/>
<def f='llvm/clang/lib/Sema/SemaDecl.cpp' l='5285' ll='5366' type='bool clang::Sema::diagnoseQualifiedDeclaration(clang::CXXScopeSpec &amp; SS, clang::DeclContext * DC, clang::DeclarationName Name, clang::SourceLocation Loc, bool IsTemplateId)'/>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='5427' u='c' c='_ZN5clang4Sema16HandleDeclaratorEPNS_5ScopeERNS_10DeclaratorEN4llvm15MutableArrayRefIPNS_21TemplateParameterListEEE'/>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='15058' u='c' c='_ZN5clang4Sema8ActOnTagEPNS_5ScopeEjNS0_10TagUseKindENS_14SourceLocationERNS_12CXXScopeSpecEPNS_14IdentifierInfoES4_RKNS_20ParsedAttributesViewENS_15A7284731'/>
<doc f='llvm/clang/lib/Sema/SemaDecl.cpp' l='5269'>/// Diagnose a declaration whose declarator-id has the given
/// nested-name-specifier.
///
/// \param SS The nested-name-specifier of the declarator-id.
///
/// \param DC The declaration context to which the nested-name-specifier
/// resolves.
///
/// \param Name The name of the entity being declared.
///
/// \param Loc The location of the name of the entity being declared.
///
/// \param IsTemplateId Whether the name is a (simple-)template-id, and thus
/// we&apos;re declaring an explicit / partial specialization / instantiation.
///
/// \returns true if we cannot safely recover from this error, false otherwise.</doc>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='3132' u='c' c='_ZN5clang4Sema24ActOnCXXMemberDeclaratorEPNS_5ScopeENS_15AccessSpecifierERNS_10DeclaratorEN4llvm15MutableArrayRefIPNS_21TemplateParameterListEEEPNS_4E15006520'/>
<use f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='1392' u='c' c='_ZN5clang4Sema18CheckClassTemplateEPNS_5ScopeEjNS0_10TagUseKindENS_14SourceLocationERNS_12CXXScopeSpecEPNS_14IdentifierInfoES4_RKNS_20ParsedAttributes4636109'/>
