<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1539' type='SmallDenseMap&lt;PointerIntPair&lt;llvm::Value *, 1&gt;, llvm::ScalarEvolution::ExitLimit&gt;'/>
<offset>0</offset>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1534'>// It may look like we need key on the whole (L, ExitIfTrue, ControlsExit,
    // AllowPredicates) tuple, but recursive calls to
    // computeExitLimitFromCondCached from computeExitLimitFromCondImpl only
    // vary the in \c ExitCond and \c ControlsExit parameters.  We remember the
    // initial values of the other values to assert our assumption.</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='7143' u='m' c='_ZN4llvm15ScalarEvolution14ExitLimitCache4findEPKNS_4LoopEPNS_5ValueEbbb'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='7144' u='m' c='_ZN4llvm15ScalarEvolution14ExitLimitCache4findEPKNS_4LoopEPNS_5ValueEbbb'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='7158' u='m' c='_ZN4llvm15ScalarEvolution14ExitLimitCache6insertEPKNS_4LoopEPNS_5ValueEbbbRKNS0_9ExitLimitE'/>
