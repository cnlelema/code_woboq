<dec f='llvm/clang/include/clang/Sema/Sema.h' l='3035' type='clang::FunctionDecl * clang::Sema::resolveAddressOfOnlyViableOverloadCandidate(clang::Expr * E, clang::DeclAccessPair &amp; FoundResult)'/>
<def f='llvm/clang/lib/Sema/SemaOverload.cpp' l='11524' ll='11552' type='clang::FunctionDecl * clang::Sema::resolveAddressOfOnlyViableOverloadCandidate(clang::Expr * E, clang::DeclAccessPair &amp; Pair)'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='11567' u='c' c='_ZN5clang4Sema49resolveAndFixAddressOfOnlyViableOverloadCandidateERNS_12ActionResultIPNS_4ExprELb1EEEb'/>
<doc f='llvm/clang/lib/Sema/SemaOverload.cpp' l='11518'>/// Given an expression that refers to an overloaded function, try to
/// resolve that function to a single function that can have its address taken.
/// This will modify `Pair` iff it returns non-null.
///
/// This routine can only realistically succeed if all but one candidates in the
/// overload set for SrcExpr cannot have their addresses taken.</doc>
<use f='llvm/clang/lib/Sema/SemaTemplateDeduction.cpp' l='3501' u='c' c='_ZL27ResolveOverloadForDeductionRN5clang4SemaEPNS_21TemplateParameterListEPNS_4ExprENS_8QualTypeEb'/>
