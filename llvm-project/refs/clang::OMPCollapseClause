<inh f='llvm/clang/include/clang/AST/OpenMPClause.h' l='50' c='clang::OMPClause'/>
<def f='llvm/clang/include/clang/AST/OpenMPClause.h' l='734' ll='780'/>
<size>24</size>
<doc f='llvm/clang/include/clang/AST/OpenMPClause.h' l='723'>/// This represents &apos;collapse&apos; clause in the &apos;#pragma omp ...&apos;
/// directive.
///
/// \code
/// #pragma omp simd collapse(3)
/// \endcode
/// In this example directive &apos;#pragma omp simd&apos; has clause &apos;collapse&apos;
/// with single expression &apos;3&apos;.
/// The parameter must be a constant positive integer expression, it specifies
/// the number of nested loops that should be collapsed into a single iteration
/// space.</doc>
<mbr r='clang::OMPCollapseClause::LParenLoc' o='96' t='clang::SourceLocation'/>
<mbr r='clang::OMPCollapseClause::NumForLoops' o='128' t='clang::Stmt *'/>
<fun r='_ZN5clang17OMPCollapseClause14setNumForLoopsEPNS_4ExprE'/>
<fun r='_ZN5clang17OMPCollapseClauseC1EPNS_4ExprENS_14SourceLocationES3_S3_'/>
<fun r='_ZN5clang17OMPCollapseClauseC1Ev'/>
<fun r='_ZN5clang17OMPCollapseClause12setLParenLocENS_14SourceLocationE'/>
<fun r='_ZNK5clang17OMPCollapseClause12getLParenLocEv'/>
<fun r='_ZNK5clang17OMPCollapseClause14getNumForLoopsEv'/>
<fun r='_ZN5clang17OMPCollapseClause8childrenEv'/>
<fun r='_ZNK5clang17OMPCollapseClause8childrenEv'/>
<fun r='_ZN5clang17OMPCollapseClause7classofEPKNS_9OMPClauseE'/>
