<def f='include/c++/7/bits/unordered_set.h' l='219' ll='225' type='void std::unordered_set::unordered_set&lt;_Value, _Hash, _Pred, _Alloc&gt;(initializer_list&lt;value_type&gt; __l, size_type __n = 0, const hasher &amp; __hf = hasher(), const key_equal &amp; __eql = key_equal(), const allocator_type &amp; __a = allocator_type())'/>
<doc f='include/c++/7/bits/unordered_set.h' l='208'>/**
       *  @brief  Builds an %unordered_set from an initializer_list.
       *  @param  __l  An initializer_list.
       *  @param __n  Minimal initial number of buckets.
       *  @param __hf  A hash functor.
       *  @param __eql  A key equality functor.
       *  @param  __a  An allocator object.
       *
       *  Create an %unordered_set consisting of copies of the elements in the
       *  list. This is linear in N (where N is @a __l.size()).
       */</doc>
<use f='llvm/clang/lib/Format/FormatToken.h' l='764' u='c' c='_ZN5clang6format18AdditionalKeywordsC1ERNS_15IdentifierTableE'/>
<use f='llvm/clang/lib/Format/FormatToken.h' l='771' u='c' c='_ZN5clang6format18AdditionalKeywordsC1ERNS_15IdentifierTableE'/>
