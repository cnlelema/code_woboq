<def f='llvm/clang/include/clang/Basic/Diagnostic.h' l='669' ll='673' type='void clang::DiagnosticsEngine::setLastDiagnosticIgnored(bool Ignored = true)'/>
<doc f='llvm/clang/include/clang/Basic/Diagnostic.h' l='663'>/// Pretend that the last diagnostic issued was ignored, so any
  /// subsequent notes will be suppressed, or restore a prior ignoring
  /// state after ignoring some diagnostics and their notes, possibly in
  /// the middle of another diagnostic.
  ///
  /// This can be used by clients who suppress diagnostics themselves.</doc>
<use f='llvm/clang/include/clang/Sema/Sema.h' l='7809' u='c' c='_ZN5clang4Sema10SFINAETrapD1Ev'/>
<use f='llvm/clang/lib/Sema/Sema.cpp' l='1389' u='c' c='_ZN5clang4Sema21EmitCurrentDiagnosticEj'/>
<use f='llvm/clang/lib/Sema/Sema.cpp' l='1414' u='c' c='_ZN5clang4Sema21EmitCurrentDiagnosticEj'/>
<use f='llvm/clang/lib/Sema/Sema.cpp' l='1423' u='c' c='_ZN5clang4Sema21EmitCurrentDiagnosticEj'/>
<use f='llvm/clang/lib/Sema/Sema.cpp' l='1437' u='c' c='_ZN5clang4Sema21EmitCurrentDiagnosticEj'/>
