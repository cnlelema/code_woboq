<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='908' type='bool llvm::ScalarEvolution::isKnownViaInduction(ICmpInst::Predicate Pred, const llvm::SCEV * LHS, const llvm::SCEV * RHS)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='890'>/// We&apos;d like to check the predicate on every iteration of the most dominated
  /// loop between loops used in LHS and RHS.
  /// To do this we use the following list of steps:
  /// 1. Collect set S all loops on which either LHS or RHS depend.
  /// 2. If S is non-empty
  /// a. Let PD be the element of S which is dominated by all other elements.
  /// b. Let E(LHS) be value of LHS on entry of PD.
  ///    To get E(LHS), we should just take LHS and replace all AddRecs that are
  ///    attached to PD on with their entry values.
  ///    Define E(RHS) in the same way.
  /// c. Let B(LHS) be value of L on backedge of PD.
  ///    To get B(LHS), we should just take LHS and replace all AddRecs that are
  ///    attached to PD on with their backedge values.
  ///    Define B(RHS) in the same way.
  /// d. Note that E(LHS) and E(RHS) are automatically available on entry of PD,
  ///    so we can assert on that.
  /// e. Return true if isLoopEntryGuardedByCond(Pred, E(LHS), E(RHS)) &amp;&amp;
  ///                   isLoopBackedgeGuardedByCond(Pred, B(LHS), B(RHS))</doc>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='9070' ll='9117' type='bool llvm::ScalarEvolution::isKnownViaInduction(ICmpInst::Predicate Pred, const llvm::SCEV * LHS, const llvm::SCEV * RHS)'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='9124' u='c' c='_ZN4llvm15ScalarEvolution16isKnownPredicateENS_7CmpInst9PredicateEPKNS_4SCEVES5_'/>
