<dec f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.h' l='126' type='static bool llvm::AArch64InstrInfo::getMemOpInfo(unsigned int Opcode, unsigned int &amp; Scale, unsigned int &amp; Width, int64_t &amp; MinOffset, int64_t &amp; MaxOffset)'/>
<doc f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.h' l='122'>/// Returns true if opcode \p Opc is a memory operation. If it is, set
  /// \p Scale, \p Width, \p MinOffset, and \p MaxOffset accordingly.
  ///
  /// For unscaled instructions, \p Scale is set to 1.</doc>
<use f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='1979' u='c' c='_ZNK4llvm16AArch64InstrInfo28getMemOperandWithOffsetWidthERKNS_12MachineInstrERPKNS_14MachineOperandERlRjPKNS_18TargetRegisterInfoE'/>
<def f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='2009' ll='2168' type='static bool llvm::AArch64InstrInfo::getMemOpInfo(unsigned int Opcode, unsigned int &amp; Scale, unsigned int &amp; Width, int64_t &amp; MinOffset, int64_t &amp; MaxOffset)'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='3266' u='c' c='_ZN4llvm25isAArch64FrameOffsetLegalERKNS_12MachineInstrERiPbPjPi'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='3282' u='c' c='_ZN4llvm25isAArch64FrameOffsetLegalERKNS_12MachineInstrERiPbPjPi'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='4962' u='c' c='_ZNK4llvm16AArch64InstrInfo25getOutliningCandidateInfoERSt6vectorINS_8outliner9CandidateESaIS3_EE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='5333' u='c' c='_ZNK4llvm16AArch64InstrInfo16fixupPostOutlineERNS_17MachineBasicBlockE'/>
