<use f='llvm/clang/include/clang/Parse/Parser.h' l='2203' u='c' c='_ZN5clang6Parser20isForInitDeclarationEv'/>
<dec f='llvm/clang/include/clang/Parse/Parser.h' l='2262' type='bool clang::Parser::isCXXSimpleDeclaration(bool AllowForRangeDecl)'/>
<doc f='llvm/clang/include/clang/Parse/Parser.h' l='2257'>/// isCXXSimpleDeclaration - C++-specialized function that disambiguates
  /// between a simple-declaration or an expression-statement.
  /// If during the disambiguation process a parsing error is encountered,
  /// the function returns true to let the declaration parsing code handle it.
  /// Returns false if the statement is disambiguated as expression.</doc>
<use f='llvm/clang/lib/Parse/ParseDeclCXX.cpp' l='3274' u='c' c='_ZN5clang6Parser27ParseCXXMemberSpecificationENS_14SourceLocationES1_RNS0_25ParsedAttributesWithRangeEjPNS_4DeclE'/>
<use f='llvm/clang/lib/Parse/ParseTentative.cpp' l='64' u='c' c='_ZN5clang6Parser25isCXXDeclarationStatementEv'/>
<def f='llvm/clang/lib/Parse/ParseTentative.cpp' l='88' ll='150' type='bool clang::Parser::isCXXSimpleDeclaration(bool AllowForRangeDecl)'/>
<doc f='llvm/clang/lib/Parse/ParseTentative.cpp' l='68'>/// isCXXSimpleDeclaration - C++-specialized function that disambiguates
/// between a simple-declaration or an expression-statement.
/// If during the disambiguation process a parsing error is encountered,
/// the function returns true to let the declaration parsing code handle it.
/// Returns false if the statement is disambiguated as expression.
///
/// simple-declaration:
///   decl-specifier-seq init-declarator-list[opt] &apos;;&apos;
///   decl-specifier-seq ref-qualifier[opt] &apos;[&apos; identifier-list &apos;]&apos;
///                      brace-or-equal-initializer &apos;;&apos;    [C++17]
///
/// (if AllowForRangeDecl specified)
/// for ( for-range-declaration : for-range-initializer ) statement
///
/// for-range-declaration:
///    decl-specifier-seq declarator
///    decl-specifier-seq ref-qualifier[opt] &apos;[&apos; identifier-list &apos;]&apos;
///
/// In any of the above cases there can be a preceding attribute-specifier-seq,
/// but the caller is expected to handle that.</doc>
