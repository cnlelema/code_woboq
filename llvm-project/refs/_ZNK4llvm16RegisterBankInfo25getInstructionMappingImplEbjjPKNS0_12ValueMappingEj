<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/RegisterBankInfo.h' l='519' type='const llvm::RegisterBankInfo::InstructionMapping &amp; llvm::RegisterBankInfo::getInstructionMappingImpl(bool IsInvalid, unsigned int ID = InvalidMappingID, unsigned int Cost = 0, const llvm::RegisterBankInfo::ValueMapping * OperandsMapping = nullptr, unsigned int NumOperands = 0) const'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/RegisterBankInfo.h' l='530' u='c' c='_ZNK4llvm16RegisterBankInfo21getInstructionMappingEjjPKNS0_12ValueMappingEj'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/RegisterBankInfo.h' l='536' u='c' c='_ZNK4llvm16RegisterBankInfo28getInvalidInstructionMappingEv'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/RegisterBankInfo.h' l='517'>/// Method to get a uniquely generated InstructionMapping.</doc>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/RegisterBankInfo.cpp' l='357' ll='383' type='const RegisterBankInfo::InstructionMapping &amp; llvm::RegisterBankInfo::getInstructionMappingImpl(bool IsInvalid, unsigned int ID = InvalidMappingID, unsigned int Cost = 0, const RegisterBankInfo::ValueMapping * OperandsMapping = nullptr, unsigned int NumOperands = 0) const'/>
