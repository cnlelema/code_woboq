<dec f='llvm/llvm/lib/CodeGen/AsmPrinter/DwarfExpression.h' l='225' type='void llvm::DwarfExpression::addStackValue()'/>
<doc f='llvm/llvm/lib/CodeGen/AsmPrinter/DwarfExpression.h' l='214'>/// Emit a DW_OP_stack_value, if supported.
  ///
  /// The proper way to describe a constant value is DW_OP_constu &lt;const&gt;,
  /// DW_OP_stack_value.  Unfortunately, DW_OP_stack_value was not available
  /// until DWARF 4, so we will continue to generate DW_OP_constu &lt;const&gt; for
  /// DWARF 2 and DWARF 3. Technically, this is incorrect since DW_OP_const
  /// &lt;const&gt; actually describes a value at a constant address, not a constant
  /// value.  However, in the past there was no better way to describe a
  /// constant value, so the producers and consumers started to rely on
  /// heuristics to disambiguate the value vs. location status of the
  /// expression.  See PR21176 for more details.</doc>
<def f='llvm/llvm/lib/CodeGen/AsmPrinter/DwarfExpression.cpp' l='181' ll='184' type='void llvm::DwarfExpression::addStackValue()'/>
<use f='llvm/llvm/lib/CodeGen/AsmPrinter/DwarfExpression.cpp' l='213' u='c' c='_ZN4llvm15DwarfExpression19addUnsignedConstantERKNS_5APIntE'/>
<use f='llvm/llvm/lib/CodeGen/AsmPrinter/DwarfExpression.cpp' l='347' u='c' c='_ZN4llvm15DwarfExpression13addExpressionEONS_18DIExpressionCursorEj'/>
<use f='llvm/llvm/lib/CodeGen/AsmPrinter/DwarfExpression.cpp' l='448' u='c' c='_ZN4llvm15DwarfExpression13addExpressionEONS_18DIExpressionCursorEj'/>
