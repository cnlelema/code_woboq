<dec f='llvm/llvm/tools/llvm-cfi-verify/lib/GraphBuilder.h' l='127' type='static void llvm::cfi_verify::GraphBuilder::buildFlowsToUndefined(const llvm::cfi_verify::FileAnalysis &amp; Analysis, llvm::cfi_verify::GraphResult &amp; Result, llvm::cfi_verify::ConditionalBranchNode &amp; BranchNode, const Instr &amp; BranchInstrMeta)'/>
<doc f='llvm/llvm/tools/llvm-cfi-verify/lib/GraphBuilder.h' l='122'>// Utilised by buildFlowGraphImpl to build the tree out from the provided
  // conditional branch node to an undefined instruction. The provided
  // conditional branch node must have exactly one of its subtrees set, and will
  // update the node&apos;s CFIProtection field if a deterministic flow can be found
  // to an undefined instruction.</doc>
<def f='llvm/llvm/tools/llvm-cfi-verify/lib/GraphBuilder.cpp' l='112' ll='195' type='static void llvm::cfi_verify::GraphBuilder::buildFlowsToUndefined(const llvm::cfi_verify::FileAnalysis &amp; Analysis, llvm::cfi_verify::GraphResult &amp; Result, llvm::cfi_verify::ConditionalBranchNode &amp; BranchNode, const Instr &amp; BranchInstrMeta)'/>
<use f='llvm/llvm/tools/llvm-cfi-verify/lib/GraphBuilder.cpp' l='311' u='c' c='_ZN4llvm10cfi_verify12GraphBuilder18buildFlowGraphImplERKNS0_12FileAnalysisERNS_8DenseSetImNS_12DenseMapInfoImEEEERNS0_11GraphResultEmm'/>
