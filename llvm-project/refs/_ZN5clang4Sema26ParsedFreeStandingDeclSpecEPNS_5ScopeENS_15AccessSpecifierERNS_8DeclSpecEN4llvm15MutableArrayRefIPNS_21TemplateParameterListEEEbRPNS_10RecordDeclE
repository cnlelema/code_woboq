<dec f='llvm/clang/include/clang/Sema/Sema.h' l='2298' type='clang::Decl * clang::Sema::ParsedFreeStandingDeclSpec(clang::Scope * S, clang::AccessSpecifier AS, clang::DeclSpec &amp; DS, MultiTemplateParamsArg TemplateParams, bool IsExplicitInstantiation, clang::RecordDecl *&amp; AnonRecord)'/>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='4145' u='c' c='_ZN5clang4Sema26ParsedFreeStandingDeclSpecEPNS_5ScopeENS_15AccessSpecifierERNS_8DeclSpecERPNS_10RecordDeclE'/>
<def f='llvm/clang/lib/Sema/SemaDecl.cpp' l='4252' ll='4502' type='clang::Decl * clang::Sema::ParsedFreeStandingDeclSpec(clang::Scope * S, clang::AccessSpecifier AS, clang::DeclSpec &amp; DS, MultiTemplateParamsArg TemplateParams, bool IsExplicitInstantiation, clang::RecordDecl *&amp; AnonRecord)'/>
<doc f='llvm/clang/lib/Sema/SemaDecl.cpp' l='4249'>/// ParsedFreeStandingDeclSpec - This method is invoked when a declspec with
/// no declarator (e.g. &quot;struct foo;&quot;) is parsed. It also accepts template
/// parameters to cope with template friend declarations.</doc>
