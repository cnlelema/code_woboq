<dec f='llvm/clang/include/clang/Parse/Parser.h' l='2717' type='DeclGroupPtrTy clang::Parser::ParseNamespace(clang::DeclaratorContext Context, clang::SourceLocation &amp; DeclEnd, clang::SourceLocation InlineLoc = clang::SourceLocation())'/>
<use f='llvm/clang/lib/Parse/ParseDecl.cpp' l='1747' u='c' c='_ZN5clang6Parser16ParseDeclarationENS_17DeclaratorContextERNS_14SourceLocationERNS0_25ParsedAttributesWithRangeE'/>
<use f='llvm/clang/lib/Parse/ParseDecl.cpp' l='1753' u='c' c='_ZN5clang6Parser16ParseDeclarationENS_17DeclaratorContextERNS_14SourceLocationERNS0_25ParsedAttributesWithRangeE'/>
<def f='llvm/clang/lib/Parse/ParseDeclCXX.cpp' l='58' ll='234' type='Parser::DeclGroupPtrTy clang::Parser::ParseNamespace(clang::DeclaratorContext Context, clang::SourceLocation &amp; DeclEnd, clang::SourceLocation InlineLoc = clang::SourceLocation())'/>
<doc f='llvm/clang/lib/Parse/ParseDeclCXX.cpp' l='31'>/// ParseNamespace - We know that the current token is a namespace keyword. This
/// may either be a top level namespace or a block-level namespace alias. If
/// there was an inline keyword, it has already been parsed.
///
///       namespace-definition: [C++: namespace.def]
///         named-namespace-definition
///         unnamed-namespace-definition
///         nested-namespace-definition
///
///       named-namespace-definition:
///         &apos;inline&apos;[opt] &apos;namespace&apos; attributes[opt] identifier &apos;{&apos;
///         namespace-body &apos;}&apos;
///
///       unnamed-namespace-definition:
///         &apos;inline&apos;[opt] &apos;namespace&apos; attributes[opt] &apos;{&apos; namespace-body &apos;}&apos;
///
///       nested-namespace-definition:
///         &apos;namespace&apos; enclosing-namespace-specifier &apos;::&apos; &apos;inline&apos;[opt]
///         identifier &apos;{&apos; namespace-body &apos;}&apos;
///
///       enclosing-namespace-specifier:
///         identifier
///         enclosing-namespace-specifier &apos;::&apos; &apos;inline&apos;[opt] identifier
///
///       namespace-alias-definition:  [C++ 7.3.2: namespace.alias]
///         &apos;namespace&apos; identifier &apos;=&apos; qualified-namespace-specifier &apos;;&apos;
///</doc>
