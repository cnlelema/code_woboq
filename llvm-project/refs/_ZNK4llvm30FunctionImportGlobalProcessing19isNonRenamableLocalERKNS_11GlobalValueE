<dec f='llvm/llvm/include/llvm/Transforms/Utils/FunctionImportUtils.h' l='58' type='bool llvm::FunctionImportGlobalProcessing::isNonRenamableLocal(const llvm::GlobalValue &amp; GV) const'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/FunctionImportUtils.h' l='55'>/// Check if the given value is a local that can&apos;t be renamed (promoted).
  /// Only used in assertion checking, and disabled under NDEBUG since the Used
  /// set will not be populated.</doc>
<use f='llvm/llvm/lib/Transforms/Utils/FunctionImportUtils.cpp' l='52' u='c' c='_ZN4llvm30FunctionImportGlobalProcessing26shouldPromoteLocalToGlobalEPKNS_11GlobalValueE'/>
<use f='llvm/llvm/lib/Transforms/Utils/FunctionImportUtils.cpp' l='72' u='c' c='_ZN4llvm30FunctionImportGlobalProcessing26shouldPromoteLocalToGlobalEPKNS_11GlobalValueE'/>
<def f='llvm/llvm/lib/Transforms/Utils/FunctionImportUtils.cpp' l='81' ll='91' type='bool llvm::FunctionImportGlobalProcessing::isNonRenamableLocal(const llvm::GlobalValue &amp; GV) const'/>
