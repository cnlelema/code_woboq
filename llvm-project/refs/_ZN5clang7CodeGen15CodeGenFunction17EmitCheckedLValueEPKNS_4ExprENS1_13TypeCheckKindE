<dec f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='3385' type='clang::CodeGen::LValue clang::CodeGen::CodeGenFunction::EmitCheckedLValue(const clang::Expr * E, clang::CodeGen::CodeGenFunction::TypeCheckKind TCK)'/>
<doc f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='3382'>/// Same as EmitLValue but additionally we generate checking code to
  /// guard against undefined behavior.  This is only suitable when we know
  /// that the address will be used to access the object.</doc>
<def f='llvm/clang/lib/CodeGen/CGExpr.cpp' l='2074' ll='2093' type='clang::CodeGen::LValue clang::CodeGen::CodeGenFunction::EmitCheckedLValue(const clang::Expr * E, clang::CodeGen::CodeGenFunction::TypeCheckKind TCK)'/>
<use f='llvm/clang/lib/CodeGen/CGExpr.cpp' l='4758' u='c' c='_ZN5clang7CodeGen15CodeGenFunction14EmitMemberExprEPKNS_10MemberExprE'/>
<use f='llvm/clang/lib/CodeGen/CGExpr.cpp' l='5450' u='c' c='_ZN5clang7CodeGen15CodeGenFunction24EmitBinaryOperatorLValueEPKNS_14BinaryOperatorE'/>
<use f='llvm/clang/lib/CodeGen/CGExprAgg.cpp' l='684' u='c' c='_ZN12_GLOBAL__N_114AggExprEmitter13VisitCastExprEPN5clang8CastExprE'/>
<use f='llvm/clang/lib/CodeGen/CGExprAgg.cpp' l='1138' u='c' c='_ZN12_GLOBAL__N_114AggExprEmitter14VisitBinAssignEPKN5clang14BinaryOperatorE'/>
<use f='llvm/clang/lib/CodeGen/CGExprScalar.cpp' l='261' u='c' c='_ZN12_GLOBAL__N_117ScalarExprEmitter17EmitCheckedLValueEPKN5clang4ExprENS1_7CodeGen15CodeGenFunction13TypeCheckKindE'/>
<use f='llvm/clang/lib/CodeGen/CGObjC.cpp' l='3068' u='c' c='_ZN12_GLOBAL__N_114ARCExprEmitter30visitBinAssignUnsafeUnretainedEPKN5clang14BinaryOperatorE'/>
