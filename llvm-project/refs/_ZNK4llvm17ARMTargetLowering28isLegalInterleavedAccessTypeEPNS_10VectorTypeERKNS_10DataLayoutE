<dec f='llvm/llvm/lib/Target/ARM/ARMISelLowering.h' l='584' type='bool llvm::ARMTargetLowering::isLegalInterleavedAccessType(llvm::VectorType * VecTy, const llvm::DataLayout &amp; DL) const'/>
<doc f='llvm/llvm/lib/Target/ARM/ARMISelLowering.h' l='581'>/// Returns true if \p VecTy is a legal interleaved access type. This
    /// function checks the vector element type and the overall width of the
    /// vector.</doc>
<def f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='14928' ll='14951' type='bool llvm::ARMTargetLowering::isLegalInterleavedAccessType(llvm::VectorType * VecTy, const llvm::DataLayout &amp; DL) const'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='14981' u='c' c='_ZNK4llvm17ARMTargetLowering20lowerInterleavedLoadEPNS_8LoadInstENS_8ArrayRefIPNS_17ShuffleVectorInstEEENS3_IjEEj'/>
<use f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='15117' u='c' c='_ZNK4llvm17ARMTargetLowering21lowerInterleavedStoreEPNS_9StoreInstEPNS_17ShuffleVectorInstEj'/>
<use f='llvm/llvm/lib/Target/ARM/ARMTargetTransformInfo.cpp' l='627' u='c' c='_ZN4llvm10ARMTTIImpl26getInterleavedMemoryOpCostEjPNS_4TypeEjNS_8ArrayRefIjEEjjbb'/>
