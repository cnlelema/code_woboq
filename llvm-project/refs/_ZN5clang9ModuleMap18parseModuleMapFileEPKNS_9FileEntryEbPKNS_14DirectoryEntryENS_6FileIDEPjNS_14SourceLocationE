<dec f='llvm/clang/include/clang/Lex/ModuleMap.h' l='675' type='bool clang::ModuleMap::parseModuleMapFile(const clang::FileEntry * File, bool IsSystem, const clang::DirectoryEntry * HomeDir, clang::FileID ID = clang::FileID(), unsigned int * Offset = nullptr, clang::SourceLocation ExternModuleLoc = clang::SourceLocation())'/>
<doc f='llvm/clang/include/clang/Lex/ModuleMap.h' l='655'>/// Parse the given module map file, and record any modules we
  /// encounter.
  ///
  /// \param File The file to be parsed.
  ///
  /// \param IsSystem Whether this module map file is in a system header
  /// directory, and therefore should be considered a system module.
  ///
  /// \param HomeDir The directory in which relative paths within this module
  ///        map file will be resolved.
  ///
  /// \param ID The FileID of the file to process, if we&apos;ve already entered it.
  ///
  /// \param Offset [inout] On input the offset at which to start parsing. On
  ///        output, the offset at which the module map terminated.
  ///
  /// \param ExternModuleLoc The location of the &quot;extern module&quot; declaration
  ///        that caused us to load this module map file, if any.
  ///
  /// \returns true if an error occurred, false otherwise.</doc>
<use f='llvm/clang/lib/Lex/HeaderSearch.cpp' l='1479' u='c' c='_ZN5clang12HeaderSearch21loadModuleMapFileImplEPKNS_9FileEntryEbPKNS_14DirectoryEntryENS_6FileIDEPj'/>
<use f='llvm/clang/lib/Lex/HeaderSearch.cpp' l='1486' u='c' c='_ZN5clang12HeaderSearch21loadModuleMapFileImplEPKNS_9FileEntryEbPKNS_14DirectoryEntryENS_6FileIDEPj'/>
<use f='llvm/clang/lib/Lex/ModuleMap.cpp' l='952' u='c' c='_ZN5clang9ModuleMap20inferFrameworkModuleEPKNS_14DirectoryEntryENS0_10AttributesEPNS_6ModuleE'/>
<use f='llvm/clang/lib/Lex/ModuleMap.cpp' l='2134' u='c' c='_ZN5clang15ModuleMapParser21parseExternModuleDeclEv'/>
<def f='llvm/clang/lib/Lex/ModuleMap.cpp' l='2953' ll='2999' type='bool clang::ModuleMap::parseModuleMapFile(const clang::FileEntry * File, bool IsSystem, const clang::DirectoryEntry * Dir, clang::FileID ID = clang::FileID(), unsigned int * Offset = nullptr, clang::SourceLocation ExternModuleLoc = clang::SourceLocation())'/>
