<dec f='llvm/llvm/include/llvm/CodeGen/RegisterPressure.h' l='555' type='void llvm::RegPressureTracker::bumpUpwardPressure(const llvm::MachineInstr * MI)'/>
<def f='llvm/llvm/lib/CodeGen/RegisterPressure.cpp' l='1025' ll='1061' type='void llvm::RegPressureTracker::bumpUpwardPressure(const llvm::MachineInstr * MI)'/>
<use f='llvm/llvm/lib/CodeGen/RegisterPressure.cpp' l='1087' u='c' c='_ZN4llvm18RegPressureTracker25getMaxUpwardPressureDeltaEPKNS_12MachineInstrEPNS_12PressureDiffERNS_16RegPressureDeltaENS_8ArrayRefINS_14PressureChangeEEENS8_IjEE'/>
<use f='llvm/llvm/lib/CodeGen/RegisterPressure.cpp' l='1356' u='c' c='_ZN4llvm18RegPressureTracker17getUpwardPressureEPKNS_12MachineInstrERSt6vectorIjSaIjEES7_'/>
<doc f='llvm/llvm/lib/CodeGen/RegisterPressure.cpp' l='1019'>/// Record the upward impact of a single instruction on current register
/// pressure. Unlike the advance/recede pressure tracking interface, this does
/// not discover live in/outs.
///
/// This is intended for speculative queries. It leaves pressure inconsistent
/// with the current position, so must be restored by the caller.</doc>
