<dec f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='558' type='std::pair&lt;Instruction *, Instruction *&gt; llvm::LoopAccessInfo::addRuntimeChecks(llvm::Instruction * Loc) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='552'>/// Add code that checks at runtime if the accessed arrays overlap.
  ///
  /// Returns a pair of instructions where the first element is the first
  /// instruction generated in possibly a sequence of instructions and the
  /// second value is the final comparator value or NULL if no check is needed.</doc>
<def f='llvm/llvm/lib/Analysis/LoopAccessAnalysis.cpp' l='2252' ll='2258' type='std::pair&lt;Instruction *, Instruction *&gt; llvm::LoopAccessInfo::addRuntimeChecks(llvm::Instruction * Loc) const'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='2624' u='c' c='_ZN4llvm19InnerLoopVectorizer20emitMemRuntimeChecksEPNS_4LoopEPNS_10BasicBlockE'/>
