<def f='llvm/llvm/include/llvm/IR/PatternMatch.h' l='363' ll='365' type='cst_pred_ty&lt;llvm::PatternMatch::is_zero_int&gt; llvm::PatternMatch::m_ZeroInt()'/>
<use f='llvm/llvm/include/llvm/IR/PatternMatch.h' l='1478' u='c' c='_ZN4llvm12PatternMatch22UAddWithOverflow_match5matchEPT_'/>
<use f='llvm/llvm/include/llvm/IR/PatternMatch.h' l='1483' u='c' c='_ZN4llvm12PatternMatch22UAddWithOverflow_match5matchEPT_'/>
<use f='llvm/llvm/include/llvm/IR/PatternMatch.h' l='1686' u='c' c='_ZN4llvm12PatternMatch5m_NegERKT_'/>
<doc f='llvm/llvm/include/llvm/IR/PatternMatch.h' l='361'>/// Match an integer 0 or a vector with all elements equal to 0.
/// For vectors, this includes constants with undefined elements.</doc>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4894' u='c' c='_ZN4llvm15isKnownNegationEPKNS_5ValueES2_b'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4895' u='c' c='_ZN4llvm15isKnownNegationEPKNS_5ValueES2_b'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4899' u='c' c='_ZN4llvm15isKnownNegationEPKNS_5ValueES2_b'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='4900' u='c' c='_ZN4llvm15isKnownNegationEPKNS_5ValueES2_b'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='5036' u='c' c='_ZL18matchSelectPatternN4llvm7CmpInst9PredicateENS_13FastMathFlagsEPNS_5ValueES4_S4_S4_RS4_S5_j'/>
<use f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='5037' u='c' c='_ZL18matchSelectPatternN4llvm7CmpInst9PredicateENS_13FastMathFlagsEPNS_5ValueES4_S4_S4_RS4_S5_j'/>
<use f='llvm/llvm/lib/Analysis/VectorUtils.cpp' l='317' u='c' c='_ZN4llvm13getSplatValueEPKNS_5ValueE'/>
<use f='llvm/llvm/lib/Analysis/VectorUtils.cpp' l='318' u='c' c='_ZN4llvm13getSplatValueEPKNS_5ValueE'/>
<use f='llvm/llvm/lib/CodeGen/CodeGenPrepare.cpp' l='1238' u='c' c='_ZL38matchUAddWithOverflowConstantEdgeCasesPN4llvm7CmpInstERPNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/CodeGen/CodeGenPrepare.cpp' l='1296' u='c' c='_ZN12_GLOBAL__N_114CodeGenPrepare25combineToUSubWithOverflowEPN4llvm7CmpInstERb'/>
<use f='llvm/llvm/lib/CodeGen/CodeGenPrepare.cpp' l='1301' u='c' c='_ZN12_GLOBAL__N_114CodeGenPrepare25combineToUSubWithOverflowEPN4llvm7CmpInstERb'/>
<use f='llvm/llvm/lib/Transforms/AggressiveInstCombine/AggressiveInstCombine.cpp' l='126' u='c' c='_ZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp' l='1581' u='c' c='_ZN4llvm12InstCombiner8visitSubERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp' l='667' u='c' c='_ZL19simplifyX86addcarryRKN4llvm13IntrinsicInstERNS_9IRBuilderINS_12TargetFolderENS_25IRBuilderCallbackInserterEEE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='1232' u='c' c='_ZN4llvm12InstCombiner17transformSExtICmpEPNS_8ICmpInstERNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp' l='973' u='c' c='_ZL19canonicalizeAbsNabsRN4llvm10SelectInstERNS_8ICmpInstERNS_9IRBuilderINS_12TargetFolderENS_25IRBuilderCallbackInserterEEE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp' l='1706' u='c' c='_ZL16foldSelectRotateRN4llvm10SelectInstE'/>
