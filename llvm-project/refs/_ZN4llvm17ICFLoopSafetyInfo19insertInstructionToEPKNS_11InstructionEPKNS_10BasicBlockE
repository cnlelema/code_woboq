<dec f='llvm/llvm/include/llvm/Analysis/MustExecute.h' l='155' type='void llvm::ICFLoopSafetyInfo::insertInstructionTo(const llvm::Instruction * Inst, const llvm::BasicBlock * BB)'/>
<doc f='llvm/llvm/include/llvm/Analysis/MustExecute.h' l='152'>/// Inform the safety info that we are planning to insert a new instruction
  /// \p Inst into the basic block \p BB. It will make all cache updates to keep
  /// it correct after this insertion.</doc>
<def f='llvm/llvm/lib/Analysis/MustExecute.cpp' l='85' ll='89' type='void llvm::ICFLoopSafetyInfo::insertInstructionTo(const llvm::Instruction * Inst, const llvm::BasicBlock * BB)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LICM.cpp' l='864' u='c' c='_ZN4llvm11hoistRegionEPNS_15DomTreeNodeBaseINS_10BasicBlockEEEPNS_9AAResultsEPNS_8LoopInfoEPNS_13DominatorTreeEPNS_17TargetLibraryInfoEPNS_4LoopEPNS_18226459'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LICM.cpp' l='870' u='c' c='_ZN4llvm11hoistRegionEPNS_15DomTreeNodeBaseINS_10BasicBlockEEEPNS_9AAResultsEPNS_8LoopInfoEPNS_13DominatorTreeEPNS_17TargetLibraryInfoEPNS_4LoopEPNS_18226459'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LICM.cpp' l='1421' u='c' c='_ZL21moveInstructionBeforeRN4llvm11InstructionES1_RNS_17ICFLoopSafetyInfoEPNS_16MemorySSAUpdaterE'/>
