<dec f='llvm/llvm/include/llvm/MC/MCDisassembler/MCSymbolizer.h' l='67' type='bool llvm::MCSymbolizer::tryAddingSymbolicOperand(llvm::MCInst &amp; Inst, llvm::raw_ostream &amp; cStream, int64_t Value, uint64_t Address, bool IsBranch, uint64_t Offset, uint64_t InstSize)'/>
<doc f='llvm/llvm/include/llvm/MC/MCDisassembler/MCSymbolizer.h' l='53'>/// Try to add a symbolic operand instead of \p Value to the MCInst.
  ///
  /// Instead of having a difficult to read immediate, a symbolic operand would
  /// represent this immediate in a more understandable way, for instance as a
  /// symbol or an offset from a symbol. Relocations can also be used to enrich
  /// the symbolic expression.
  /// \param Inst      - The MCInst where to insert the symbolic operand.
  /// \param cStream   - Stream to print comments and annotations on.
  /// \param Value     - Operand value, pc-adjusted by the caller if necessary.
  /// \param Address   - Load address of the instruction.
  /// \param IsBranch  - Is the instruction a branch?
  /// \param Offset    - Byte offset of the operand inside the inst.
  /// \param InstSize  - Size of the instruction in bytes.
  /// \return Whether a symbolic operand was added.</doc>
<use f='llvm/llvm/lib/MC/MCDisassembler/MCDisassembler.cpp' l='32' u='c' c='_ZNK4llvm14MCDisassembler24tryAddingSymbolicOperandERNS_6MCInstElmbmm'/>
<ovr f='llvm/llvm/lib/MC/MCDisassembler/MCExternalSymbolizer.cpp' l='34' c='_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/Disassembler/AMDGPUDisassembler.cpp' l='1075' c='_ZN4llvm16AMDGPUSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm'/>
