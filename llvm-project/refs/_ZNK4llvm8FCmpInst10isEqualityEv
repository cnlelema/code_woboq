<def f='llvm/llvm/include/llvm/IR/Instructions.h' l='1351' type='bool llvm::FCmpInst::isEquality() const'/>
<use f='llvm/llvm/include/llvm/IR/Instructions.h' l='1356' u='c' c='_ZNK4llvm8FCmpInst13isCommutativeEv'/>
<use f='llvm/llvm/include/llvm/IR/Instructions.h' l='1365' u='c' c='_ZNK4llvm8FCmpInst12isRelationalEv'/>
<doc f='llvm/llvm/include/llvm/IR/Instructions.h' l='1349'>/// @returns true if the predicate of this instruction is EQ or NE.
  /// Determine if this is an equality predicate.</doc>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='782' u='c' c='_ZN4llvm21BranchProbabilityInfo27calcFloatingPointHeuristicsEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/IR/Instructions.cpp' l='3584' u='c' c='_ZNK4llvm7CmpInst10isEqualityEv'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='5144' u='c' c='_ZN4llvm12InstCombiner20foldFCmpIntToFPConstERNS_8FCmpInstEPNS_11InstructionEPNS_8ConstantE'/>
