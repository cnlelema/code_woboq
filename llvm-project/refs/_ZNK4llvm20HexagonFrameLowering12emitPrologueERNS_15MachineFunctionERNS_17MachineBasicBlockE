<dec f='llvm/llvm/lib/Target/Hexagon/HexagonFrameLowering.h' l='38' type='void llvm::HexagonFrameLowering::emitPrologue(llvm::MachineFunction &amp; MF, llvm::MachineBasicBlock &amp; MBB) const'/>
<doc f='llvm/llvm/lib/Target/Hexagon/HexagonFrameLowering.h' l='35'>// All of the prolog/epilog functionality, including saving and restoring
  // callee-saved registers is handled in emitPrologue. This is to have the
  // logic for shrink-wrapping in one place.</doc>
<inh f='llvm/llvm/include/llvm/CodeGen/TargetFrameLowering.h' l='166' c='_ZNK4llvm19TargetFrameLowering12emitPrologueERNS_15MachineFunctionERNS_17MachineBasicBlockE'/>
<def f='llvm/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp' l='503' ll='550' type='void llvm::HexagonFrameLowering::emitPrologue(llvm::MachineFunction &amp; MF, llvm::MachineBasicBlock &amp; MBB) const'/>
<doc f='llvm/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp' l='498'>/// Perform most of the PEI work here:
/// - saving/restoring of the callee-saved registers,
/// - stack frame creation and destruction.
/// Normally, this work is distributed among various functions, but doing it
/// in one place allows shrink-wrapping of the stack frame.</doc>
