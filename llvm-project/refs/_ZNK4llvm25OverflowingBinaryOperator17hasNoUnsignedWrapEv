<def f='llvm/llvm/include/llvm/IR/Operator.h' l='89' ll='91' type='bool llvm::OverflowingBinaryOperator::hasNoUnsignedWrap() const'/>
<doc f='llvm/llvm/include/llvm/IR/Operator.h' l='87'>/// Test whether this operation is known to never
  /// undergo unsigned overflow, aka the nuw property.</doc>
<use f='llvm/llvm/lib/Analysis/DemandedBits.cpp' l='194' u='c' c='_ZN4llvm12DemandedBits24determineLiveOperandBitsEPKNS_11InstructionEPKNS_5ValueEjRKNS_5APIntERS7_RNS_9KnownBitsESC_Rb'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='4482' u='c' c='_ZN12_GLOBAL__N_18BinaryOpC1EPN4llvm8OperatorE'/>
<use f='llvm/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp' l='1385' u='c' c='_ZL20getOptimizationFlagsPKN4llvm5ValueE'/>
<use f='llvm/llvm/lib/CodeGen/MachineInstr.cpp' l='542' u='c' c='_ZN4llvm12MachineInstr24copyFlagsFromInstructionERKNS_11InstructionE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='3125' u='c' c='_ZN4llvm19SelectionDAGBuilder11visitBinaryERKNS_4UserEj'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='3179' u='c' c='_ZN4llvm19SelectionDAGBuilder10visitShiftERKNS_4UserEj'/>
<use f='llvm/llvm/lib/IR/AsmWriter.cpp' l='1270' u='c' c='_ZL21WriteOptimizationInfoRN4llvm11raw_ostreamEPKNS_4UserE'/>
<use f='llvm/llvm/lib/IR/Instruction.cpp' l='113' u='c' c='_ZNK4llvm11Instruction17hasNoUnsignedWrapEv'/>
<use f='llvm/llvm/lib/IR/Instruction.cpp' l='246' u='c' c='_ZN4llvm11Instruction11copyIRFlagsEPKNS_5ValueEb'/>
<use f='llvm/llvm/lib/IR/Instruction.cpp' l='269' u='c' c='_ZN4llvm11Instruction10andIRFlagsEPKNS_5ValueE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='41' u='c' c='_ZL25decomposeSimpleLinearExprPN4llvm5ValueERjRm'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='685' u='c' c='_ZN4llvm12InstCombiner20commonIDivTransformsERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='711' u='c' c='_ZN4llvm12InstCombiner20commonIDivTransformsERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='759' u='c' c='_ZN4llvm12InstCombiner20commonIDivTransformsERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp' l='482' u='c' c='_ZN4llvm12InstCombiner23SimplifyDemandedUseBitsEPNS_5ValueENS_5APIntERNS_9KnownBitsEjPNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp' l='1243' u='c' c='_ZN12_GLOBAL__N_17WidenIV28getExtendedOperandRecurrenceENS_14NarrowIVDefUseE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp' l='1407' u='c' c='_ZN12_GLOBAL__N_17WidenIV23widenWithVariantLoadUseENS_14NarrowIVDefUseE'/>
<use f='llvm/llvm/unittests/IR/IRBuilderTest.cpp' l='453' u='c' c='_ZN12_GLOBAL__N_128IRBuilderTest_WrapFlags_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/IRBuilderTest.cpp' l='455' u='c' c='_ZN12_GLOBAL__N_128IRBuilderTest_WrapFlags_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/IRBuilderTest.cpp' l='457' u='c' c='_ZN12_GLOBAL__N_128IRBuilderTest_WrapFlags_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/IR/IRBuilderTest.cpp' l='460' u='c' c='_ZN12_GLOBAL__N_128IRBuilderTest_WrapFlags_Test8TestBodyEv'/>
