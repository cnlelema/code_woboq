<dec f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.h' l='713' type='llvm::Constant * clang::CodeGen::CGOpenMPRuntime::getOrCreateThreadPrivateCache(const clang::VarDecl * VD)'/>
<doc f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.h' l='708'>/// If the specified mangled name is not in the module, create and
  /// return threadprivate cache object. This object is a pointer&apos;s worth of
  /// storage that&apos;s reserved for use by the OpenMP runtime.
  /// \param VD Threadprivate variable.
  /// \return Cache variable for the specified threadprivate.</doc>
<def f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='2561' ll='2569' type='llvm::Constant * clang::CodeGen::CGOpenMPRuntime::getOrCreateThreadPrivateCache(const clang::VarDecl * VD)'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='2584' u='c' c='_ZN5clang7CodeGen15CGOpenMPRuntime22getAddrOfThreadPrivateERNS0_15CodeGenFunctionEPKNS_7VarDeclENS0_7AddressENS_14SourceLocationE'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='2584' u='c' c='_ZN5clang7CodeGen15CGOpenMPRuntime22getAddrOfThreadPrivateERNS0_15CodeGenFunctionEPKNS_7VarDeclENS0_7AddressENS_14SourceLocationE'/>
