<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='930' type='bool llvm::ScalarEvolution::isMonotonicPredicate(const llvm::SCEVAddRecExpr * LHS, ICmpInst::Predicate Pred, bool &amp; Increasing)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='921'>/// Return true if, for all loop invariant X, the predicate &quot;LHS `Pred` X&quot;
  /// is monotonically increasing or decreasing.  In the former case set
  /// `Increasing` to true and in the latter case set `Increasing` to false.
  ///
  /// A predicate is said to be monotonically increasing if may go from being
  /// false to being true as the loop iterates, but never the other way
  /// around.  A predicate is said to be monotonically decreasing if may go
  /// from being true to being false as the loop iterates, but never the other
  /// way around.</doc>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='9142' ll='9161' type='bool llvm::ScalarEvolution::isMonotonicPredicate(const llvm::SCEVAddRecExpr * LHS, ICmpInst::Predicate Pred, bool &amp; Increasing)'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='9237' u='c' c='_ZN4llvm15ScalarEvolution24isLoopInvariantPredicateENS_7CmpInst9PredicateEPKNS_4SCEVES5_PKNS_4LoopERS2_RS5_SA_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopPredication.cpp' l='447' u='c' c='_ZL26isSafeToTruncateWideIVTypeRKN4llvm10DataLayoutERNS_15ScalarEvolutionEN12_GLOBAL__N_18LoopICmpEPNS_4TypeE'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopUnrollPeel.cpp' l='201' u='c' c='_ZL24countToEliminateComparesRN4llvm4LoopEjRNS_15ScalarEvolutionE'/>
