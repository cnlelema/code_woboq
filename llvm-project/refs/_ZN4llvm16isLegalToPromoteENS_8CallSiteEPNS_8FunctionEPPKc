<dec f='llvm/llvm/include/llvm/Transforms/Utils/CallPromotionUtils.h' l='28' type='bool llvm::isLegalToPromote(llvm::CallSite CS, llvm::Function * Callee, const char ** FailureReason = nullptr)'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUFixFunctionBitcasts.cpp' l='38' u='c' c='_ZN12_GLOBAL__N_125AMDGPUFixFunctionBitcasts13visitCallSiteEN4llvm8CallSiteE'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/CallPromotionUtils.h' l='21'>/// Return true if the given indirect call site can be made to call \p Callee.
///
/// This function ensures that the number and type of the call site&apos;s arguments
/// and return value match those of the given function. If the types do not
/// match exactly, they must at least be bitcast compatible. If \p FailureReason
/// is non-null and the indirect call cannot be promoted, the failure reason
/// will be stored in it.</doc>
<use f='llvm/llvm/lib/Transforms/IPO/SampleProfile.cpp' l='846' u='c' c='_ZN12_GLOBAL__N_119SampleProfileLoader18inlineHotFunctionsERN4llvm8FunctionERNS1_8DenseSetImNS1_12DenseMapInfoImEEEE'/>
<use f='llvm/llvm/lib/Transforms/Instrumentation/IndirectCallPromotion.cpp' l='278' u='c' c='_ZN12_GLOBAL__N_118ICallPromotionFunc33getPromotionCandidatesForCallSiteEPN4llvm11InstructionERKNS1_8ArrayRefI18InstrProfValueDataEEmj'/>
<def f='llvm/llvm/lib/Transforms/Utils/CallPromotionUtils.cpp' l='319' ll='363' type='bool llvm::isLegalToPromote(llvm::CallSite CS, llvm::Function * Callee, const char ** FailureReason = nullptr)'/>
