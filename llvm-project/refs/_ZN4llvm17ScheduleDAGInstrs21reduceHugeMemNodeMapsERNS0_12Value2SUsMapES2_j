<dec f='llvm/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h' l='200' type='void llvm::ScheduleDAGInstrs::reduceHugeMemNodeMaps(llvm::ScheduleDAGInstrs::Value2SUsMap &amp; stores, llvm::ScheduleDAGInstrs::Value2SUsMap &amp; loads, unsigned int N)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h' l='196'>/// Reduces maps in FIFO order, by N SUs. This is better than turning
    /// every Nth memory SU into BarrierChain in buildSchedGraph(), since
    /// it avoids unnecessary edges between seen SUs above the new BarrierChain,
    /// and those below it.</doc>
<use f='llvm/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp' l='968' u='c' c='_ZN4llvm17ScheduleDAGInstrs15buildSchedGraphEPNS_9AAResultsEPNS_18RegPressureTrackerEPNS_13PressureDiffsEPNS_13LiveIntervalsEb'/>
<use f='llvm/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp' l='973' u='c' c='_ZN4llvm17ScheduleDAGInstrs15buildSchedGraphEPNS_9AAResultsEPNS_18RegPressureTrackerEPNS_13PressureDiffsEPNS_13LiveIntervalsEb'/>
<def f='llvm/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp' l='1012' ll='1056' type='void llvm::ScheduleDAGInstrs::reduceHugeMemNodeMaps(llvm::ScheduleDAGInstrs::Value2SUsMap &amp; stores, llvm::ScheduleDAGInstrs::Value2SUsMap &amp; loads, unsigned int N)'/>
