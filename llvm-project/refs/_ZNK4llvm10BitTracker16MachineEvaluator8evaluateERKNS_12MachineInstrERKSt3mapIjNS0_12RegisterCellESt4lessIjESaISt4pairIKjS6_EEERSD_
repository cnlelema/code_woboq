<dec f='llvm/llvm/lib/Target/Hexagon/BitTracker.h' l='470' type='bool llvm::BitTracker::MachineEvaluator::evaluate(const llvm::MachineInstr &amp; MI, const CellMapType &amp; Inputs, CellMapType &amp; Outputs) const'/>
<def f='llvm/llvm/lib/Target/Hexagon/BitTracker.cpp' l='719' ll='763' type='bool llvm::BitTracker::MachineEvaluator::evaluate(const llvm::MachineInstr &amp; MI, const CellMapType &amp; Inputs, CellMapType &amp; Outputs) const'/>
<use f='llvm/llvm/lib/Target/Hexagon/BitTracker.cpp' l='850' u='c' c='_ZN4llvm10BitTracker14visitNonBranchERKNS_12MachineInstrE'/>
<doc f='llvm/llvm/lib/Target/Hexagon/BitTracker.h' l='467'>// Evaluate a non-branching machine instruction, given the cell map with
  // the input values. Place the results in the Outputs map. Return &quot;true&quot;
  // if evaluation succeeded, &quot;false&quot; otherwise.</doc>
<ovr f='llvm/llvm/lib/Target/Hexagon/HexagonBitTracker.cpp' l='187' c='_ZNK4llvm16HexagonEvaluator8evaluateERKNS_12MachineInstrERKSt3mapIjNS_10BitTracker12RegisterCellESt4lessIjESaISt4pairIKjS6_EEERSD_'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonBitTracker.cpp' l='974' u='c' c='_ZNK4llvm16HexagonEvaluator8evaluateERKNS_12MachineInstrERKSt3mapIjNS_10BitTracker12RegisterCellESt4lessIjESaISt4pairIKjS6_EEERSD_'/>
