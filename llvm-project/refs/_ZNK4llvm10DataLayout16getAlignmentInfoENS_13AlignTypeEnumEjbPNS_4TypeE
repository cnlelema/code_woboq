<dec f='llvm/llvm/include/llvm/IR/DataLayout.h' l='179' type='unsigned int llvm::DataLayout::getAlignmentInfo(llvm::AlignTypeEnum align_type, uint32_t bit_width, bool ABIAlign, llvm::Type * Ty) const'/>
<def f='llvm/llvm/lib/IR/DataLayout.cpp' l='548' ll='584' type='unsigned int llvm::DataLayout::getAlignmentInfo(llvm::AlignTypeEnum AlignType, uint32_t BitWidth, bool ABIInfo, llvm::Type * Ty) const'/>
<use f='llvm/llvm/lib/IR/DataLayout.cpp' l='745' u='c' c='_ZNK4llvm10DataLayout12getAlignmentEPNS_4TypeEb'/>
<use f='llvm/llvm/lib/IR/DataLayout.cpp' l='769' u='c' c='_ZNK4llvm10DataLayout12getAlignmentEPNS_4TypeEb'/>
<use f='llvm/llvm/lib/IR/DataLayout.cpp' l='779' u='c' c='_ZNK4llvm10DataLayout26getABIIntegerTypeAlignmentEj'/>
<doc f='llvm/llvm/lib/IR/DataLayout.cpp' l='546'>/// getAlignmentInfo - Return the alignment (either ABI if ABIInfo = true or
/// preferred if ABIInfo = false) the layout wants for the specified datatype.</doc>
