<dec f='llvm/llvm/tools/dsymutil/DwarfLinker.h' l='435' type='void llvm::dsymutil::DwarfLinker::patchFrameInfoForObject(const llvm::dsymutil::DebugMapObject &amp; , RangesTy &amp; Ranges, llvm::DWARFContext &amp; , unsigned int AddressSize)'/>
<def f='llvm/llvm/tools/dsymutil/DwarfLinker.cpp' l='2004' ll='2082' type='void llvm::dsymutil::DwarfLinker::patchFrameInfoForObject(const llvm::dsymutil::DebugMapObject &amp; DMO, RangesTy &amp; Ranges, llvm::DWARFContext &amp; OrigDwarf, unsigned int AddrSize)'/>
<use f='llvm/llvm/tools/dsymutil/DwarfLinker.cpp' l='2770' u='c' c='_ZN4llvm8dsymutil11DwarfLinker4linkERKNS0_8DebugMapE'/>
<doc f='llvm/llvm/tools/dsymutil/DwarfLinker.cpp' l='1998'>/// Read the frame info stored in the object, and emit the
/// patched frame descriptions for the linked binary.
///
/// This is actually pretty easy as the data of the CIEs and FDEs can
/// be considered as black boxes and moved as is. The only thing to do
/// is to patch the addresses in the headers.</doc>
<doc f='llvm/llvm/tools/dsymutil/DwarfLinker.h' l='434'>/// Patch the frame info for an object file and emit it.</doc>
