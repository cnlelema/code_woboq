<dec f='llvm/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.h' l='136' type='bool llvm::HexagonPacketizerList::restrictingDepExistInPacket(llvm::MachineInstr &amp; , unsigned int )'/>
<def f='llvm/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp' l='910' ll='936' type='bool llvm::HexagonPacketizerList::restrictingDepExistInPacket(llvm::MachineInstr &amp; MI, unsigned int DepReg)'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp' l='1003' u='c' c='_ZN4llvm21HexagonPacketizerList24arePredicatesComplementsERNS_12MachineInstrES2_'/>
<doc f='llvm/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp' l='897'>// Go through the packet instructions and search for an anti dependency between
// them and DepReg from MI. Consider this case:
// Trying to add
// a) %r1 = TFRI_cdNotPt %p3, 2
// to this packet:
// {
//   b) %p0 = C2_or killed %p3, killed %p0
//   c) %p3 = C2_tfrrp %r23
//   d) %r1 = C2_cmovenewit %p3, 4
//  }
// The P3 from a) and d) will be complements after
// a)&apos;s P3 is converted to .new form
// Anti-dep between c) and b) is irrelevant for this case</doc>
