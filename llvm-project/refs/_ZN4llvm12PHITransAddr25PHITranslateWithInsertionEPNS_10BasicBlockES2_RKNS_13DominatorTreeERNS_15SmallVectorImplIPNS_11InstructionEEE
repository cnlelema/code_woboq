<dec f='llvm/llvm/include/llvm/Analysis/PHITransAddr.h' l='91' type='llvm::Value * llvm::PHITransAddr::PHITranslateWithInsertion(llvm::BasicBlock * CurBB, llvm::BasicBlock * PredBB, const llvm::DominatorTree &amp; DT, SmallVectorImpl&lt;llvm::Instruction *&gt; &amp; NewInsts)'/>
<doc f='llvm/llvm/include/llvm/Analysis/PHITransAddr.h' l='84'>/// PHITranslateWithInsertion - PHI translate this value into the specified
  /// predecessor block, inserting a computation of the value if it is
  /// unavailable.
  ///
  /// All newly created instructions are added to the NewInsts list.  This
  /// returns null on failure.
  ///</doc>
<def f='llvm/llvm/lib/Analysis/PHITransAddr.cpp' l='340' ll='356' type='llvm::Value * llvm::PHITransAddr::PHITranslateWithInsertion(llvm::BasicBlock * CurBB, llvm::BasicBlock * PredBB, const llvm::DominatorTree &amp; DT, SmallVectorImpl&lt;llvm::Instruction *&gt; &amp; NewInsts)'/>
<doc f='llvm/llvm/lib/Analysis/PHITransAddr.cpp' l='333'>/// PHITranslateWithInsertion - PHI translate this value into the specified
/// predecessor block, inserting a computation of the value if it is
/// unavailable.
///
/// All newly created instructions are added to the NewInsts list.  This
/// returns null on failure.
///</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/GVN.cpp' l='1193' u='c' c='_ZN4llvm3GVN14PerformLoadPREEPNS_8LoadInstERNS_11SmallVectorINS_3gvn21AvailableValueInBlockELj64EEERNS3_IPNS_10BasicBlockELj64EEE'/>
