<dec f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.h' l='186' type='void llvm::HexagonInstrInfo::copyPhysReg(llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator I, const llvm::DebugLoc &amp; DL, unsigned int DestReg, unsigned int SrcReg, bool KillSrc) const'/>
<doc f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.h' l='178'>/// Emit instructions to copy a pair of physical registers.
  ///
  /// This function should support copies within any legal register class as
  /// well as any cross-class copies created during instruction selection.
  ///
  /// The source and destination registers may overlap, which may require a
  /// careful implementation when multiple copy instructions are required for
  /// large registers. See for example the ARM target.</doc>
<def f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='777' ll='872' type='void llvm::HexagonInstrInfo::copyPhysReg(llvm::MachineBasicBlock &amp; MBB, MachineBasicBlock::iterator I, const llvm::DebugLoc &amp; DL, unsigned int DestReg, unsigned int SrcReg, bool KillSrc) const'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='1039' u='c' c='_ZNK4llvm16HexagonInstrInfo18expandPostRAPseudoERNS_12MachineInstrE'/>
