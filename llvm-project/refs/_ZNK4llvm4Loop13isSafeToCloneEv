<dec f='llvm/llvm/include/llvm/Analysis/LoopInfo.h' l='704' type='bool llvm::Loop::isSafeToClone() const'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopInfo.h' l='703'>/// Return true if the loop body is safe to clone in practice.</doc>
<def f='llvm/llvm/lib/Analysis/LoopInfo.cpp' l='432' ll='445' type='bool llvm::Loop::isSafeToClone() const'/>
<doc f='llvm/llvm/lib/Analysis/LoopInfo.cpp' l='431'>// Routines that reform the loop CFG and split edges often fail on indirectbr.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopUnswitch.cpp' l='638' u='c' c='_ZN12_GLOBAL__N_112LoopUnswitch18processCurrentLoopEv'/>
<use f='llvm/llvm/lib/Transforms/Utils/LoopUnroll.cpp' l='293' u='c' c='_ZN4llvm10UnrollLoopEPNS_4LoopENS_17UnrollLoopOptionsEPNS_8LoopInfoEPNS_15ScalarEvolutionEPNS_13DominatorTreeEPNS_15AssumptionCacheEPNS_25OptimizationRemarkEmitterEbPS1_'/>
