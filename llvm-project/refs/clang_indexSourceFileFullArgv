<dec f='llvm/clang/include/clang-c/Index.h' l='6660' type='int clang_indexSourceFileFullArgv(CXIndexAction , CXClientData client_data, IndexerCallbacks * index_callbacks, unsigned int index_callbacks_size, unsigned int index_options, const char * source_filename, const char *const * command_line_args, int num_command_line_args, struct CXUnsavedFile * unsaved_files, unsigned int num_unsaved_files, CXTranslationUnit * out_TU, unsigned int TU_options)'/>
<doc f='llvm/clang/include/clang-c/Index.h' l='6655'>/**
 * Same as clang_indexSourceFile but requires a full command line
 * for \c command_line_args including argv[0]. This is useful if the standard
 * library paths are relative to the binary.
 */</doc>
<use f='llvm/clang/tools/libclang/Indexing.cpp' l='854' u='c' c='clang_indexSourceFile'/>
<def f='llvm/clang/tools/libclang/Indexing.cpp' l='860' ll='916' type='int clang_indexSourceFileFullArgv(CXIndexAction idxAction, CXClientData client_data, IndexerCallbacks * index_callbacks, unsigned int index_callbacks_size, unsigned int index_options, const char * source_filename, const char *const * command_line_args, int num_command_line_args, struct CXUnsavedFile * unsaved_files, unsigned int num_unsaved_files, CXTranslationUnit * out_TU, unsigned int TU_options)'/>
