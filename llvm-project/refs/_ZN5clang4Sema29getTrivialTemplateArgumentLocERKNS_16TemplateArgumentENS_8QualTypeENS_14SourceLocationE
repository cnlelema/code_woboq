<dec f='llvm/clang/include/clang/Sema/Sema.h' l='6485' type='clang::TemplateArgumentLoc clang::Sema::getTrivialTemplateArgumentLoc(const clang::TemplateArgument &amp; Arg, clang::QualType NTTPType, clang::SourceLocation Loc)'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='1010' u='c' c='_ZL34getTrivialIntegralTemplateArgumentRN5clang4SemaENS_14SourceLocationENS_8QualTypeEm'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='1015' u='c' c='_ZL30getTrivialTypeTemplateArgumentRN5clang4SemaENS_14SourceLocationENS_8QualTypeE'/>
<use f='llvm/clang/lib/Sema/SemaTemplate.cpp' l='3036' u='c' c='_ZL26checkBuiltinTemplateIdTypeRN5clang4SemaEPNS_19BuiltinTemplateDeclERKN4llvm15SmallVectorImplINS_16TemplateArgumentEEENS_14SourceLocationERNS_24Tem5153699'/>
<def f='llvm/clang/lib/Sema/SemaTemplateDeduction.cpp' l='2442' ll='2502' type='clang::TemplateArgumentLoc clang::Sema::getTrivialTemplateArgumentLoc(const clang::TemplateArgument &amp; Arg, clang::QualType NTTPType, clang::SourceLocation Loc)'/>
<use f='llvm/clang/lib/Sema/SemaTemplateDeduction.cpp' l='2519' u='c' c='_ZL30ConvertDeducedTemplateArgumentRN5clang4SemaEPNS_9NamedDeclENS_23DeducedTemplateArgumentES3_RNS_4sema21TemplateDeductionInfoEbRN4llvm15SmallVector15829192'/>
<doc f='llvm/clang/lib/Sema/SemaTemplateDeduction.cpp' l='2429'>/// Allocate a TemplateArgumentLoc where all locations have
/// been initialized to the given location.
///
/// \param Arg The template argument we are producing template argument
/// location information for.
///
/// \param NTTPType For a declaration template argument, the type of
/// the non-type template parameter that corresponds to this template
/// argument. Can be null if no type sugar is available to add to the
/// type from the template argument.
///
/// \param Loc The source location to use for the resulting template
/// argument.</doc>
<use f='llvm/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp' l='5382' u='c' c='_ZN5clang4Sema20FindInstantiatedDeclENS_14SourceLocationEPNS_9NamedDeclERKNS_30MultiLevelTemplateArgumentListEb'/>
