<dec f='llvm/llvm/lib/Target/ARM/ARMISelLowering.h' l='762' type='void llvm::ARMTargetLowering::HandleByVal(llvm::CCState * , unsigned int &amp; , unsigned int ) const'/>
<doc f='llvm/llvm/lib/Target/ARM/ARMISelLowering.h' l='761'>/// HandleByVal - Target-specific cleanup for ByVal support.</doc>
<inh f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3537' c='_ZNK4llvm14TargetLowering11HandleByValEPNS_7CCStateERjj'/>
<def f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='2215' ll='2263' type='void llvm::ARMTargetLowering::HandleByVal(llvm::CCState * State, unsigned int &amp; Size, unsigned int Align) const'/>
<doc f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='2211'>/// HandleByVal - Every parameter *after* a byval parameter is passed
/// on the stack.  Remember the next parameter register to allocate,
/// and then confiscate the rest of the parameter registers to insure
/// this.</doc>
