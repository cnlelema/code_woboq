<dec f='llvm/clang/include/clang/Sema/Sema.h' l='2162' type='void clang::Sema::computeNRVO(clang::Stmt * Body, sema::FunctionScopeInfo * Scope)'/>
<def f='llvm/clang/lib/Sema/SemaDecl.cpp' l='13223' ll='13232' type='void clang::Sema::computeNRVO(clang::Stmt * Body, clang::sema::FunctionScopeInfo * Scope)'/>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='13419' u='c' c='_ZN5clang4Sema23ActOnFinishFunctionBodyEPNS_4DeclEPNS_4StmtEb'/>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='13502' u='c' c='_ZN5clang4Sema23ActOnFinishFunctionBodyEPNS_4DeclEPNS_4StmtEb'/>
<doc f='llvm/clang/lib/Sema/SemaDecl.cpp' l='13211'>/// Given the set of return statements within a function body,
/// compute the variables that are subject to the named return value
/// optimization.
///
/// Each of the variables that is subject to the named return value
/// optimization will be marked as NRVO variables in the AST, and any
/// return statement that has a marked NRVO variable as its NRVO candidate can
/// use the named return value optimization.
///
/// This function applies a very simplistic algorithm for NRVO: if every return
/// statement in the scope of a variable has the same NRVO candidate, that
/// candidate is an NRVO variable.</doc>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='14142' u='c' c='_ZN5clang4Sema18ActOnBlockStmtExprENS_14SourceLocationEPNS_4StmtEPNS_5ScopeE'/>
