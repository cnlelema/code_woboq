<def f='llvm/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h' l='421' ll='440' type='int llvm::AArch64_AM::getFP64Imm(const llvm::APInt &amp; Imm)'/>
<use f='llvm/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h' l='443' u='c' c='_ZN4llvm10AArch64_AML10getFP64ImmERKNS_7APFloatE'/>
<doc f='llvm/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h' l='418'>/// getFP64Imm - Return an 8-bit floating-point version of the 64-bit
/// floating-point value. If the value cannot be represented as an 8-bit
/// floating-point value, then return -1.</doc>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='5479' u='c' c='_ZNK4llvm21AArch64TargetLowering12isFPImmLegalERKNS_7APFloatENS_3EVTEb'/>
<use f='llvm/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp' l='1006' u='c' c='_ZNK12_GLOBAL__N_114AArch64Operand7isFPImmEv'/>
<use f='llvm/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp' l='1688' u='c' c='_ZNK12_GLOBAL__N_114AArch64Operand16addFPImmOperandsERN4llvm6MCInstEj'/>
