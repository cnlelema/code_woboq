<dec f='llvm/llvm/lib/Target/Mips/MipsSEInstrInfo.h' l='65' type='unsigned int llvm::MipsSEInstrInfo::getOppositeBranchOpc(unsigned int Opc) const'/>
<inh f='llvm/llvm/lib/Target/Mips/MipsInstrInfo.h' l='107' c='_ZNK4llvm13MipsInstrInfo20getOppositeBranchOpcEj'/>
<def f='llvm/llvm/lib/Target/Mips/MipsSEInstrInfo.cpp' l='618' ll='706' type='unsigned int llvm::MipsSEInstrInfo::getOppositeBranchOpc(unsigned int Opc) const'/>
<doc f='llvm/llvm/lib/Target/Mips/MipsSEInstrInfo.cpp' l='616'>/// getOppositeBranchOpc - Return the inverse of the specified
/// opcode, e.g. turning BEQ to BNE.</doc>
