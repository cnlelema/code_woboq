<dec f='llvm/clang/include/clang/Sema/Sema.h' l='5600' type='bool clang::Sema::BuildCXXNestedNameSpecifier(clang::Scope * S, clang::Sema::NestedNameSpecInfo &amp; IdInfo, bool EnteringContext, clang::CXXScopeSpec &amp; SS, clang::NamedDecl * ScopeLookupResult, bool ErrorRecoveryLookup, bool * IsCorrectedToColon = nullptr, bool OnlyNamespace = false)'/>
<def f='llvm/clang/lib/Sema/SemaCXXScopeSpec.cpp' l='483' ll='831' type='bool clang::Sema::BuildCXXNestedNameSpecifier(clang::Scope * S, clang::Sema::NestedNameSpecInfo &amp; IdInfo, bool EnteringContext, clang::CXXScopeSpec &amp; SS, clang::NamedDecl * ScopeLookupResult, bool ErrorRecoveryLookup, bool * IsCorrectedToColon = nullptr, bool OnlyNamespace = false)'/>
<use f='llvm/clang/lib/Sema/SemaCXXScopeSpec.cpp' l='841' u='c' c='_ZN5clang4Sema27ActOnCXXNestedNameSpecifierEPNS_5ScopeERNS0_18NestedNameSpecInfoEbRNS_12CXXScopeSpecEbPbb'/>
<use f='llvm/clang/lib/Sema/SemaCXXScopeSpec.cpp' l='884' u='c' c='_ZN5clang4Sema25IsInvalidUnlessNestedNameEPNS_5ScopeERNS_12CXXScopeSpecERNS0_18NestedNameSpecInfoEb'/>
<doc f='llvm/clang/lib/Sema/SemaCXXScopeSpec.cpp' l='452'>/// Build a new nested-name-specifier for &quot;identifier::&quot;, as described
/// by ActOnCXXNestedNameSpecifier.
///
/// \param S Scope in which the nested-name-specifier occurs.
/// \param IdInfo Parser information about an identifier in the
///        nested-name-spec.
/// \param EnteringContext If true, enter the context specified by the
///        nested-name-specifier.
/// \param SS Optional nested name specifier preceding the identifier.
/// \param ScopeLookupResult Provides the result of name lookup within the
///        scope of the nested-name-specifier that was computed at template
///        definition time.
/// \param ErrorRecoveryLookup Specifies if the method is called to improve
///        error recovery and what kind of recovery is performed.
/// \param IsCorrectedToColon If not null, suggestion of replace &apos;::&apos; -&gt; &apos;:&apos;
///        are allowed.  The bool value pointed by this parameter is set to
///       &apos;true&apos; if the identifier is treated as if it was followed by &apos;:&apos;,
///        not &apos;::&apos;.
/// \param OnlyNamespace If true, only considers namespaces in lookup.
///
/// This routine differs only slightly from ActOnCXXNestedNameSpecifier, in
/// that it contains an extra parameter \p ScopeLookupResult, which provides
/// the result of name lookup within the scope of the nested-name-specifier
/// that was computed at template definition time.
///
/// If ErrorRecoveryLookup is true, then this call is used to improve error
/// recovery.  This means that it should not emit diagnostics, it should
/// just return true on failure.  It also means it should only return a valid
/// scope if it *knows* that the result is correct.  It should not return in a
/// dependent context, for example. Nor will it extend \p SS with the scope
/// specifier.</doc>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='857' u='c' c='_ZN5clang4Sema12ClassifyNameEPNS_5ScopeERNS_12CXXScopeSpecERPNS_14IdentifierInfoENS_14SourceLocationERKNS_5TokenEbPNS_27CorrectionCandidateCallbackE'/>
