<dec f='llvm/clang/include/clang/Parse/Parser.h' l='1943' type='StmtResult clang::Parser::ParseCompoundStatementBody(bool isStmtExpr = false)'/>
<use f='llvm/clang/lib/Parse/ParseExpr.cpp' l='3106' u='c' c='_ZN5clang6Parser27ParseBlockLiteralExpressionEv'/>
<use f='llvm/clang/lib/Parse/ParseExprCXX.cpp' l='1406' u='c' c='_ZN5clang6Parser36ParseLambdaExpressionAfterIntroducerERNS_16LambdaIntroducerE'/>
<use f='llvm/clang/lib/Parse/ParseObjc.cpp' l='2477' u='c' c='_ZN5clang6Parser25ParseObjCSynchronizedStmtENS_14SourceLocationE'/>
<use f='llvm/clang/lib/Parse/ParseObjc.cpp' l='2513' u='c' c='_ZN5clang6Parser16ParseObjCTryStmtENS_14SourceLocationE'/>
<use f='llvm/clang/lib/Parse/ParseObjc.cpp' l='2557' u='c' c='_ZN5clang6Parser16ParseObjCTryStmtENS_14SourceLocationE'/>
<use f='llvm/clang/lib/Parse/ParseObjc.cpp' l='2590' u='c' c='_ZN5clang6Parser16ParseObjCTryStmtENS_14SourceLocationE'/>
<use f='llvm/clang/lib/Parse/ParseObjc.cpp' l='2632' u='c' c='_ZN5clang6Parser28ParseObjCAutoreleasePoolStmtENS_14SourceLocationE'/>
<use f='llvm/clang/lib/Parse/ParseStmt.cpp' l='880' u='c' c='_ZN5clang6Parser22ParseCompoundStatementEbj'/>
<def f='llvm/clang/lib/Parse/ParseStmt.cpp' l='990' ll='1113' type='StmtResult clang::Parser::ParseCompoundStatementBody(bool isStmtExpr = false)'/>
<use f='llvm/clang/lib/Parse/ParseStmt.cpp' l='2070' u='c' c='_ZN5clang6Parser26ParseFunctionStatementBodyEPNS_4DeclERNS0_10ParseScopeE'/>
<doc f='llvm/clang/lib/Parse/ParseStmt.cpp' l='986'>/// ParseCompoundStatementBody - Parse a sequence of statements and invoke the
/// ActOnCompoundStmt action.  This expects the &apos;{&apos; to be the current token, and
/// consume the &apos;}&apos; at the end of the block.  It does not manipulate the scope
/// stack.</doc>
