<dec f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='143' type='bool llvm::RecursivelyDeleteTriviallyDeadInstructions(llvm::Value * V, const llvm::TargetLibraryInfo * TLI = nullptr, llvm::MemorySSAUpdater * MSSAU = nullptr)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='140'>/// If the specified value is a trivially dead instruction, delete it.
/// If that makes any of its operands trivially dead, delete them too,
/// recursively. Return true if any instructions were deleted.</doc>
<use f='llvm/llvm/lib/CodeGen/CodeGenPrepare.cpp' l='5039' u='c' c='_ZN12_GLOBAL__N_114CodeGenPrepare18optimizeMemoryInstEPN4llvm11InstructionEPNS1_5ValueEPNS1_4TypeEj'/>
<use f='llvm/llvm/lib/CodeGen/CodeGenPrepare.cpp' l='7051' u='c' c='_ZL14makeBitReverseRN4llvm11InstructionERKNS_10DataLayoutERKNS_14TargetLoweringE'/>
<use f='llvm/llvm/lib/CodeGen/HardwareLoops.cpp' l='386' u='c' c='_ZN12_GLOBAL__N_112HardwareLoop13InsertLoopDecEv'/>
<use f='llvm/llvm/lib/CodeGen/HardwareLoops.cpp' l='431' u='c' c='_ZN12_GLOBAL__N_112HardwareLoop12UpdateBranchEPN4llvm5ValueE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp' l='1475' u='c' c='_ZN12_GLOBAL__N_127PolynomialMultiplyRecognize15cleanupLoopBodyEPN4llvm10BasicBlockE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp' l='1826' u='c' c='_ZN12_GLOBAL__N_127PolynomialMultiplyRecognize9recognizeEv'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp' l='1857' u='c' c='_ZN12_GLOBAL__N_127PolynomialMultiplyRecognize9recognizeEv'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp' l='2058' u='c' c='_ZN12_GLOBAL__N_125HexagonLoopIdiomRecognize19processCopyingStoreEPN4llvm4LoopEPNS1_9StoreInstEPKNS1_4SCEVE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp' l='2062' u='c' c='_ZN12_GLOBAL__N_125HexagonLoopIdiomRecognize19processCopyingStoreEPN4llvm4LoopEPNS1_9StoreInstEPKNS1_4SCEVE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp' l='2286' u='c' c='_ZN12_GLOBAL__N_125HexagonLoopIdiomRecognize19processCopyingStoreEPN4llvm4LoopEPNS1_9StoreInstEPKNS1_4SCEVE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCLoopPreIncPrep.cpp' l='462' u='c' c='_ZN12_GLOBAL__N_117PPCLoopPreIncPrep9runOnLoopEPN4llvm4LoopE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCLoopPreIncPrep.cpp' l='510' u='c' c='_ZN12_GLOBAL__N_117PPCLoopPreIncPrep9runOnLoopEPN4llvm4LoopE'/>
<use f='llvm/llvm/lib/Transforms/CHERICap/FoldCapIntrinsics.cpp' l='386' u='c' c='_ZN12_GLOBAL__N_122CHERICapFoldIntrinsics25foldSetOffsetOrSetAddressEPN4llvm6ModuleEPNS1_8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/CHERICap/FoldCapIntrinsics.cpp' l='415' u='c' c='_ZN12_GLOBAL__N_122CHERICapFoldIntrinsics13foldIncOffsetEv'/>
<use f='llvm/llvm/lib/Transforms/CHERICap/PureCapABICalls.cpp' l='92' u='c' c='_ZN12_GLOBAL__N_119CHERICapDirectCalls13runOnFunctionERN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/IPO/StripSymbols.cpp' l='267' u='c' c='_ZN12_GLOBAL__N_117StripDebugDeclare11runOnModuleERN4llvm6ModuleE'/>
<use f='llvm/llvm/lib/Transforms/ObjCARC/ObjCARC.h' l='68' u='c' c='_ZN4llvm7objcarcL16EraseInstructionEPNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp' l='468' u='c' c='_ZN12_GLOBAL__N_114IndVarSimplify21handleFloatingPointIVEPN4llvm4LoopEPNS1_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp' l='472' u='c' c='_ZN12_GLOBAL__N_114IndVarSimplify21handleFloatingPointIVEPN4llvm4LoopEPNS1_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp' l='485' u='c' c='_ZN12_GLOBAL__N_114IndVarSimplify21handleFloatingPointIVEPN4llvm4LoopEPNS1_7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp' l='2684' u='c' c='_ZN12_GLOBAL__N_114IndVarSimplify3runEPN4llvm4LoopE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp' l='1028' u='c' c='_ZNK12_GLOBAL__N_118InferAddressSpaces27rewriteWithNewAddressSpacesERKN4llvm19TargetTransformInfoENS1_8ArrayRefINS1_14WeakTrackingVHEEERKNS1_8DenseMap9165710'/>
<use f='llvm/llvm/lib/Transforms/Scalar/InstSimplifyPass.cpp' l='58' u='c' c='_ZL7runImplRN4llvm8FunctionERKNS_13SimplifyQueryEPNS_25OptimizationRemarkEmitterE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopIdiomRecognize.cpp' l='924' u='c' c='_ZN12_GLOBAL__N_118LoopIdiomRecognize23processLoopStridedStoreEPN4llvm5ValueEjjS3_PNS1_11InstructionERNS1_15SmallPtrSetImplIS5_EEPKNS1_14SCEVAddRecExprEPKNS1_4SCEVEbb'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopIdiomRecognize.cpp' l='1043' u='c' c='_ZN12_GLOBAL__N_118LoopIdiomRecognize26processLoopStoreOfLoopLoadEPN4llvm9StoreInstEPKNS1_4SCEVE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopIdiomRecognize.cpp' l='1063' u='c' c='_ZN12_GLOBAL__N_118LoopIdiomRecognize26processLoopStoreOfLoopLoadEPN4llvm9StoreInstEPKNS1_4SCEVE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopIdiomRecognize.cpp' l='1064' u='c' c='_ZN12_GLOBAL__N_118LoopIdiomRecognize26processLoopStoreOfLoopLoadEPN4llvm9StoreInstEPKNS1_4SCEVE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopIdiomRecognize.cpp' l='1771' u='c' c='_ZN12_GLOBAL__N_118LoopIdiomRecognize23transformLoopToPopcountEPN4llvm10BasicBlockEPNS1_11InstructionEPNS1_7PHINodeEPNS1_5ValueE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopPredication.cpp' l='804' u='c' c='_ZN12_GLOBAL__N_115LoopPredication20widenGuardConditionsEPN4llvm13IntrinsicInstERNS1_12SCEVExpanderE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopPredication.cpp' l='837' u='c' c='_ZN12_GLOBAL__N_115LoopPredication35widenWidenableBranchGuardConditionsEPN4llvm10BranchInstERNS1_12SCEVExpanderE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/NaryReassociate.cpp' l='245' u='c' c='_ZN4llvm19NaryReassociatePass14doOneIterationERNS_8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp' l='989' u='c' c='_ZN12_GLOBAL__N_126SeparateConstOffsetFromGEP8splitGEPEPN4llvm17GetElementPtrInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp' l='990' u='c' c='_ZN12_GLOBAL__N_126SeparateConstOffsetFromGEP8splitGEPEPN4llvm17GetElementPtrInstE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp' l='1180' u='c' c='_ZN12_GLOBAL__N_126SeparateConstOffsetFromGEP11reuniteExtsEPN4llvm11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp' l='650' u='c' c='_ZN12_GLOBAL__N_126StraightLineStrengthReduce25rewriteCandidateWithBasisERKNS0_9CandidateES3_'/>
<use f='llvm/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp' l='734' u='c' c='_ZN12_GLOBAL__N_126StraightLineStrengthReduce13runOnFunctionERN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/Utils/BypassSlowDivision.cpp' l='471' u='c' c='_ZN4llvm18bypassSlowDivisionEPNS_10BasicBlockERKNS_8DenseMapIjjNS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjjEEEE'/>
<use f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='153' u='c' c='_ZN4llvm22ConstantFoldTerminatorEPNS_10BasicBlockEbPKNS_17TargetLibraryInfoEPNS_14DomTreeUpdaterE'/>
<use f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='258' u='c' c='_ZN4llvm22ConstantFoldTerminatorEPNS_10BasicBlockEbPKNS_17TargetLibraryInfoEPNS_14DomTreeUpdaterE'/>
<use f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='327' u='c' c='_ZN4llvm22ConstantFoldTerminatorEPNS_10BasicBlockEbPKNS_17TargetLibraryInfoEPNS_14DomTreeUpdaterE'/>
<def f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='434' ll='445' type='bool llvm::RecursivelyDeleteTriviallyDeadInstructions(llvm::Value * V, const llvm::TargetLibraryInfo * TLI = nullptr, llvm::MemorySSAUpdater * MSSAU = nullptr)'/>
<use f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='523' u='c' c='_ZN4llvm28RecursivelyDeleteDeadPHINodeEPNS_7PHINodeEPKNS_17TargetLibraryInfoE'/>
<use f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='530' u='c' c='_ZN4llvm28RecursivelyDeleteDeadPHINodeEPNS_7PHINodeEPKNS_17TargetLibraryInfoE'/>
<doc f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='430'>/// RecursivelyDeleteTriviallyDeadInstructions - If the specified value is a
/// trivially dead instruction, delete it.  If that makes any of its operands
/// trivially dead, delete them too, recursively.  Return true if any
/// instructions were deleted.</doc>
<use f='llvm/llvm/lib/Transforms/Utils/LoopUnroll.cpp' l='210' u='c' c='_ZN4llvm23simplifyLoopAfterUnrollEPNS_4LoopEbPNS_8LoopInfoEPNS_15ScalarEvolutionEPNS_13DominatorTreeEPNS_15AssumptionCacheE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyCFG.cpp' l='693' u='c' c='_ZL25EraseTerminatorAndDCECondPN4llvm11InstructionEPNS_16MemorySSAUpdaterE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyCFG.cpp' l='5909' u='c' c='_ZN12_GLOBAL__N_114SimplifyCFGOpt18SimplifyCondBranchEPN4llvm10BranchInstERNS1_9IRBuilderINS1_14ConstantFolderENS1_24IRBuilderDefaultInserterEEE'/>
<use f='llvm/llvm/unittests/Transforms/Utils/LocalTest.cpp' l='571' u='c' c='_ZN47SalvageDebugInfoTest_RecursiveInstDeletion_Test8TestBodyEv'/>
