<dec f='llvm/llvm/include/llvm/Analysis/InstructionSimplify.h' l='129' type='llvm::Value * llvm::SimplifySubInst(llvm::Value * LHS, llvm::Value * RHS, bool isNSW, bool isNUW, const llvm::SimplifyQuery &amp; Q)'/>
<doc f='llvm/llvm/include/llvm/Analysis/InstructionSimplify.h' l='128'>/// Given operands for a Sub, fold the result or return null.</doc>
<def f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='846' ll='849' type='llvm::Value * llvm::SimplifySubInst(llvm::Value * Op0, llvm::Value * Op1, bool isNSW, bool isNUW, const llvm::SimplifyQuery &amp; Q)'/>
<use f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='5116' u='c' c='_ZN4llvm19SimplifyInstructionEPNS_11InstructionERKNS_13SimplifyQueryEPNS_25OptimizationRemarkEmitterE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp' l='1530' u='c' c='_ZN4llvm12InstCombiner8visitSubERNS_14BinaryOperatorE'/>
