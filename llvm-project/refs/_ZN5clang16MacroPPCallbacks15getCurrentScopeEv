<dec f='llvm/clang/lib/CodeGen/MacroPPCallbacks.h' l='56' type='llvm::DIMacroFile * clang::MacroPPCallbacks::getCurrentScope()'/>
<doc f='llvm/clang/lib/CodeGen/MacroPPCallbacks.h' l='54'>/// Get current DIMacroFile scope.
  /// \return current DIMacroFile scope or nullptr if there is no such scope.</doc>
<def f='llvm/clang/lib/CodeGen/MacroPPCallbacks.cpp' l='76' ll='80' type='llvm::DIMacroFile * clang::MacroPPCallbacks::getCurrentScope()'/>
<use f='llvm/clang/lib/CodeGen/MacroPPCallbacks.cpp' l='131' u='c' c='_ZN5clang16MacroPPCallbacks11FileEnteredENS_14SourceLocationE'/>
<use f='llvm/clang/lib/CodeGen/MacroPPCallbacks.cpp' l='186' u='c' c='_ZN5clang16MacroPPCallbacks12MacroDefinedERKNS_5TokenEPKNS_14MacroDirectiveE'/>
<use f='llvm/clang/lib/CodeGen/MacroPPCallbacks.cpp' l='196' u='c' c='_ZN5clang16MacroPPCallbacks14MacroUndefinedERKNS_5TokenERKNS_15MacroDefinitionEPKNS_14MacroDirectiveE'/>
<doc f='llvm/clang/lib/CodeGen/MacroPPCallbacks.cpp' l='64'>// This is the expected flow of enter/exit compiler and user files:
// - Main File Enter
//   - &lt;built-in&gt; file enter
//     {Compiler macro definitions} - (Line=0, no scope)
//     - (Optional) &lt;command line&gt; file enter
//     {Command line macro definitions} - (Line=0, no scope)
//     - (Optional) &lt;command line&gt; file exit
//     {Command line file includes} - (Line=0, Main file scope)
//       {macro definitions and file includes} - (Line!=0, Parent scope)
//   - &lt;built-in&gt; file exit
//   {User code macro definitions and file includes} - (Line!=0, Parent scope)</doc>
