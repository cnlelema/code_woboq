<def f='llvm/llvm/include/llvm/CodeGen/SelectionDAGNodes.h' l='1314' ll='1325' type='unsigned int llvm::MemSDNode::getRawSubclassData() const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/SelectionDAGNodes.h' l='1308'>/// Return the SubclassData value, without HasDebugValue. This contains an
  /// encoding of the volatile flag, as well as bits used by subclasses. This
  /// function should only be used to compute a FoldingSetNodeID value.
  /// The HasDebugValue bit is masked out because CSE map needs to match
  /// nodes with debug info with nodes without debug info. Same is about
  /// isDivergent bit.</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='562' u='c' c='_ZL15AddNodeIDCustomRN4llvm16FoldingSetNodeIDEPKNS_6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='569' u='c' c='_ZL15AddNodeIDCustomRN4llvm16FoldingSetNodeIDEPKNS_6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='576' u='c' c='_ZL15AddNodeIDCustomRN4llvm16FoldingSetNodeIDEPKNS_6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='583' u='c' c='_ZL15AddNodeIDCustomRN4llvm16FoldingSetNodeIDEPKNS_6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='590' u='c' c='_ZL15AddNodeIDCustomRN4llvm16FoldingSetNodeIDEPKNS_6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='597' u='c' c='_ZL15AddNodeIDCustomRN4llvm16FoldingSetNodeIDEPKNS_6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='619' u='c' c='_ZL15AddNodeIDCustomRN4llvm16FoldingSetNodeIDEPKNS_6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='7124' u='c' c='_ZN4llvm12SelectionDAG15getIndexedStoreENS_7SDValueERKNS_5SDLocES1_S1_NS_3ISD14MemIndexedModeE'/>
