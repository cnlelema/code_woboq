<dec f='llvm/llvm/include/llvm/Transforms/Vectorize/SLPVectorizer.h' l='93' type='void llvm::SLPVectorizerPass::collectSeedInstructions(llvm::BasicBlock * BB)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Vectorize/SLPVectorizer.h' l='86'>/// Collect store and getelementptr instructions and organize them
  /// according to the underlying object of their pointer operands. We sort the
  /// instructions by their underlying objects to reduce the cost of
  /// consecutive access queries.
  ///
  /// TODO: We can further reduce this cost if we flush the chain creation
  ///       every time we run into a memory barrier.</doc>
<use f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='5041' u='c' c='_ZN4llvm17SLPVectorizerPass7runImplERNS_8FunctionEPNS_15ScalarEvolutionEPNS_19TargetTransformInfoEPNS_17TargetLibraryInfoEPNS_9AAResultsEPNS_8LoopInfo601853'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp' l='5210' ll='5243' type='void llvm::SLPVectorizerPass::collectSeedInstructions(llvm::BasicBlock * BB)'/>
