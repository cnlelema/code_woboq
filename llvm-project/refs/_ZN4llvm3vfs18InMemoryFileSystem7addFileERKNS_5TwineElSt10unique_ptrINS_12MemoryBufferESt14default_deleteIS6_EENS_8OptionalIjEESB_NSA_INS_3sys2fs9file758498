<dec f='llvm/llvm/include/llvm/Support/VirtualFileSystem.h' l='413' type='bool llvm::vfs::InMemoryFileSystem::addFile(const llvm::Twine &amp; Path, time_t ModificationTime, std::unique_ptr&lt;llvm::MemoryBuffer&gt; Buffer, Optional&lt;uint32_t&gt; User, Optional&lt;uint32_t&gt; Group, Optional&lt;llvm::sys::fs::file_type&gt; Type, Optional&lt;llvm::sys::fs::perms&gt; Perms, const detail::InMemoryFile * HardLinkTarget)'/>
<doc f='llvm/llvm/include/llvm/Support/VirtualFileSystem.h' l='411'>/// If HardLinkTarget is non-null, a hardlink is created to the To path which
  /// must be a file. If it is null then it adds the file as the public addFile.</doc>
<def f='llvm/llvm/lib/Support/VirtualFileSystem.cpp' l='689' ll='778' type='bool llvm::vfs::InMemoryFileSystem::addFile(const llvm::Twine &amp; P, time_t ModificationTime, std::unique_ptr&lt;llvm::MemoryBuffer&gt; Buffer, Optional&lt;uint32_t&gt; User, Optional&lt;uint32_t&gt; Group, Optional&lt;llvm::sys::fs::file_type&gt; Type, Optional&lt;llvm::sys::fs::perms&gt; Perms, const detail::InMemoryFile * HardLinkTarget)'/>
<use f='llvm/llvm/lib/Support/VirtualFileSystem.cpp' l='786' u='c' c='_ZN4llvm3vfs18InMemoryFileSystem7addFileERKNS_5TwineElSt10unique_ptrINS_12MemoryBufferESt14default_deleteIS6_EENS_8OptionalIjEESB_NSA_INS_3sys2fs9file15108719'/>
<use f='llvm/llvm/lib/Support/VirtualFileSystem.cpp' l='855' u='c' c='_ZN4llvm3vfs18InMemoryFileSystem11addHardLinkERKNS_5TwineES4_'/>
