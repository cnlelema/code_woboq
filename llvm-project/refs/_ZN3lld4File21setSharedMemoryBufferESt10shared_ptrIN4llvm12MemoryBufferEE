<def f='llvm/lld/include/lld/Core/File.h' l='209' ll='211' type='void lld::File::setSharedMemoryBuffer(std::shared_ptr&lt;MemoryBuffer&gt; mb)'/>
<doc f='llvm/lld/include/lld/Core/File.h' l='204'>// Usually each file owns a std::unique_ptr&lt;MemoryBuffer&gt;.
  // However, there&apos;s one special case. If a file is an archive file,
  // the archive file and its children all shares the same memory buffer.
  // This method is used by the ArchiveFile to give its children
  // co-ownership of the buffer.</doc>
<use f='llvm/lld/lib/ReaderWriter/FileArchive.cpp' l='164' u='c' c='_ZNK3lld12_GLOBAL__N_111FileArchive17instantiateMemberEN4llvm6object7Archive5ChildERSt10unique_ptrINS_4FileESt14default_deleteIS7_EE'/>
<use f='llvm/lld/lib/ReaderWriter/YAML/ReaderWriterYAML.cpp' l='1381' u='c' c='_ZNK3lld12_GLOBAL__N_110YAMLReader8loadFileESt10unique_ptrIN4llvm12MemoryBufferESt14default_deleteIS4_EERKNS_8RegistryE'/>
