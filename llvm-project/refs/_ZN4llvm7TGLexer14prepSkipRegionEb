<dec f='llvm/llvm/lib/TableGen/TGLexer.h' l='286' type='bool llvm::TGLexer::prepSkipRegion(bool MustNeverBeFalse)'/>
<doc f='llvm/llvm/lib/TableGen/TGLexer.h' l='274'>// Worker method for lexPreprocessor() to skip lines after some
  // preprocessing directive up to the buffer end or to the directive
  // that re-enables token processing.  The method returns true
  // upon processing the next directive that re-enables tokens
  // processing.  False is returned if an error was encountered.
  //
  // Note that prepSkipRegion() calls lexPreprocessor() to process
  // encountered preprocessing directives.  In this case, the second
  // parameter to lexPreprocessor() is set to false.  Being passed
  // false ReturnNextLiveToken, lexPreprocessor() must never call
  // prepSkipRegion().  We assert this by passing ReturnNextLiveToken
  // to prepSkipRegion() and checking that it is never set to false.</doc>
<use f='llvm/llvm/lib/TableGen/TGLexer.cpp' l='717' u='c' c='_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb'/>
<use f='llvm/llvm/lib/TableGen/TGLexer.cpp' l='746' u='c' c='_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb'/>
<def f='llvm/llvm/lib/TableGen/TGLexer.cpp' l='806' ll='866' type='bool llvm::TGLexer::prepSkipRegion(bool MustNeverBeFalse)'/>
