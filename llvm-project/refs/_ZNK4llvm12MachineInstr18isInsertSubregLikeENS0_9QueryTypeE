<def f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='797' ll='799' type='bool llvm::MachineInstr::isInsertSubregLike(llvm::MachineInstr::QueryType Type = IgnoreBundle) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='787'>/// Return true if this instruction behaves
  /// the same way as the generic INSERT_SUBREG instructions.
  /// E.g., on ARM,
  /// dX = VSETLNi32 dY, rZ, Imm
  /// is equivalent to a INSERT_SUBREG:
  /// dX = INSERT_SUBREG dY, rZ, translateImmToSubIdx(Imm)
  ///
  /// Note that for the optimizers to be able to take advantage of
  /// this property, TargetInstrInfo::getInsertSubregLikeInputs has to be
  /// override accordingly.</doc>
<use f='llvm/llvm/lib/CodeGen/PeepholeOptimizer.cpp' l='249' u='c' c='_ZN12_GLOBAL__N_117PeepholeOptimizer19isUncoalescableCopyERKN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/CodeGen/PeepholeOptimizer.cpp' l='1086' u='c' c='_ZL15getCopyRewriterRN4llvm12MachineInstrERKNS_15TargetInstrInfoE'/>
<use f='llvm/llvm/lib/CodeGen/PeepholeOptimizer.cpp' l='1914' u='c' c='_ZN12_GLOBAL__N_112ValueTracker29getNextSourceFromInsertSubregEv'/>
<use f='llvm/llvm/lib/CodeGen/PeepholeOptimizer.cpp' l='2057' u='c' c='_ZN12_GLOBAL__N_112ValueTracker17getNextSourceImplEv'/>
<use f='llvm/llvm/lib/CodeGen/TargetInstrInfo.cpp' l='1201' u='c' c='_ZNK4llvm15TargetInstrInfo21getInsertSubregInputsERKNS_12MachineInstrEjRNS0_13RegSubRegPairERNS0_19RegSubRegPairAndIdxE'/>
