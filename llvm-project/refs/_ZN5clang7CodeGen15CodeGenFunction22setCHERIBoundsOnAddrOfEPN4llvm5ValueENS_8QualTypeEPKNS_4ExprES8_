<dec f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='3913' type='llvm::Value * clang::CodeGen::CodeGenFunction::setCHERIBoundsOnAddrOf(llvm::Value * Ptr, clang::QualType Ty, const clang::Expr * E, const clang::Expr * LocExpr)'/>
<doc f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='3911'>/// LocExpr is the expression being bounded (i.e. __builtin_addressof() or
  // &apos;&amp;&apos;) and E is the expression that should have bounds set, i.e. the argument</doc>
<use f='llvm/clang/lib/CodeGen/CGBuiltin.cpp' l='3487' u='c' c='_ZN5clang7CodeGen15CodeGenFunction15EmitBuiltinExprENS_10GlobalDeclEjPKNS_8CallExprENS0_15ReturnValueSlotE'/>
<def f='llvm/clang/lib/CodeGen/CGExpr.cpp' l='799' ll='820' type='llvm::Value * clang::CodeGen::CodeGenFunction::setCHERIBoundsOnAddrOf(llvm::Value * Value, clang::QualType Ty, const clang::Expr * E, const clang::Expr * LocExpr)'/>
<use f='llvm/clang/lib/CodeGen/CGExprScalar.cpp' l='649' u='c' c='_ZN12_GLOBAL__N_117ScalarExprEmitter16VisitUnaryAddrOfEPKN5clang13UnaryOperatorE'/>
