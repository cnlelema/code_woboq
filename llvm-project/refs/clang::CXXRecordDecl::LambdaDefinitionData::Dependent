<dec f='llvm/clang/include/clang/AST/DeclCXX.h' l='615' type='unsigned int'/>
<use f='llvm/clang/include/clang/AST/DeclCXX.h' l='649' u='w' c='_ZN5clang13CXXRecordDecl20LambdaDefinitionDataC1EPS0_PNS_14TypeSourceInfoEbbNS_20LambdaCaptureDefaultE'/>
<use f='llvm/clang/include/clang/AST/DeclCXX.h' l='1980' u='r' c='_ZNK5clang13CXXRecordDecl17isDependentLambdaEv'/>
<offset>832</offset>
<doc f='llvm/clang/include/clang/AST/DeclCXX.h' l='607'>/// Whether this lambda is known to be dependent, even if its
    /// context isn&apos;t dependent.
    ///
    /// A lambda with a non-dependent context can be dependent if it occurs
    /// within the default argument of a function template, because the
    /// lambda will have been created with the enclosing context as its
    /// declaration context, rather than function. This is an unfortunate
    /// artifact of having to parse the default arguments before.</doc>
<use f='llvm/clang/lib/Serialization/ASTReaderDecl.cpp' l='1725' u='w' c='_ZN5clang13ASTDeclReader21ReadCXXDefinitionDataERNS_13CXXRecordDecl14DefinitionDataEPKS1_'/>
<use f='llvm/clang/lib/Serialization/ASTWriter.cpp' l='6158' u='r' c='_ZN5clang15ASTRecordWriter20AddCXXDefinitionDataEPKNS_13CXXRecordDeclE'/>
