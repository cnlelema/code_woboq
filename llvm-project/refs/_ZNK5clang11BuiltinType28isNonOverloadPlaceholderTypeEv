<def f='llvm/clang/include/clang/AST/Type.h' l='2504' ll='2506' type='bool clang::BuiltinType::isNonOverloadPlaceholderType() const'/>
<use f='llvm/clang/include/clang/AST/Type.h' l='6635' u='c' c='_ZNK5clang4Type28isNonOverloadPlaceholderTypeEv'/>
<doc f='llvm/clang/include/clang/AST/Type.h' l='2495'>/// Determines whether this type is a placeholder type other than
  /// Overload.  Most placeholder types require only syntactic
  /// information about their context in order to be resolved (e.g.
  /// whether it is a call expression), which means they can (and
  /// should) be resolved in an earlier &quot;phase&quot; of analysis.
  /// Overload expressions sometimes pick up further information
  /// from their context, like whether the context expects a
  /// specific function-pointer type, and so frequently need
  /// special treatment.</doc>
