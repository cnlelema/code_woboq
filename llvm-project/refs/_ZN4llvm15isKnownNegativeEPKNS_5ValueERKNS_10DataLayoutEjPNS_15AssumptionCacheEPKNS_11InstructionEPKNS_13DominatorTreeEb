<dec f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='134' type='bool llvm::isKnownNegative(const llvm::Value * V, const llvm::DataLayout &amp; DL, unsigned int Depth = 0, llvm::AssumptionCache * AC = nullptr, const llvm::Instruction * CxtI = nullptr, const llvm::DominatorTree * DT = nullptr, bool UseInstrInfo = true)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ValueTracking.h' l='132'>/// Returns true if the given value is known be negative (i.e. non-positive
  /// and non-zero).</doc>
<def f='llvm/llvm/lib/Analysis/ValueTracking.cpp' l='268' ll='274' type='bool llvm::isKnownNegative(const llvm::Value * V, const llvm::DataLayout &amp; DL, unsigned int Depth = 0, llvm::AssumptionCache * AC = nullptr, const llvm::Instruction * CxtI = nullptr, const llvm::DominatorTree * DT = nullptr, bool UseInstrInfo = true)'/>
