<dec f='llvm/llvm/include/llvm/Analysis/LoopInfo.h' l='577' type='static Optional&lt;Loop::LoopBounds&gt; llvm::Loop::LoopBounds::getBounds(const llvm::Loop &amp; L, llvm::PHINode &amp; IndVar, llvm::ScalarEvolution &amp; SE)'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopInfo.h' l='570'>/// Return the LoopBounds object if
    /// - the given \p IndVar is an induction variable
    /// - the initial value of the induction variable can be found
    /// - the step instruction of the induction variable can be found
    /// - the final value of the induction variable can be found
    ///
    /// Else None.</doc>
<def f='llvm/llvm/lib/Analysis/LoopInfo.cpp' l='197' ll='224' type='static Optional&lt;Loop::LoopBounds&gt; llvm::Loop::LoopBounds::getBounds(const llvm::Loop &amp; L, llvm::PHINode &amp; IndVar, llvm::ScalarEvolution &amp; SE)'/>
<use f='llvm/llvm/lib/Analysis/LoopInfo.cpp' l='285' u='c' c='_ZNK4llvm4Loop9getBoundsERNS_15ScalarEvolutionE'/>
