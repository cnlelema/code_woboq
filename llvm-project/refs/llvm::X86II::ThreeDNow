<dec f='llvm/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h' l='508' type='57344'/>
<doc f='llvm/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h' l='502'>/// ThreeDNow - This indicates that the instruction uses the
    /// wacky 0x0F 0x0F prefix for 3DNow! instructions.  The manual documents
    /// this as having a 0x0F prefix with a 0x0F opcode, and each instruction
    /// storing a classifier in the imm8 field.  To simplify our implementation,
    /// we handle this by storeing the classifier in the opcode field and using
    /// this flag to indicate that the encoder should do the wacky 3DNow! thing.</doc>
<use f='llvm/llvm/lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp' l='1192' c='_ZNK12_GLOBAL__N_116X86MCCodeEmitter16emitOpcodePrefixEmRjiRKN4llvm6MCInstERKNS2_11MCInstrDescERKNS2_15MCSubtargetInfoERNS2_11raw_ostreamE'/>
<use f='llvm/llvm/lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp' l='1288' u='r' c='_ZNK12_GLOBAL__N_116X86MCCodeEmitter17encodeInstructionERKN4llvm6MCInstERNS1_11raw_ostreamERNS1_15SmallVectorImplINS1_7MCFixupEEERKNS1_15MCSubtargetInfoE'/>
<use f='llvm/llvm/lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp' l='1633' u='r' c='_ZNK12_GLOBAL__N_116X86MCCodeEmitter17encodeInstructionERKN4llvm6MCInstERNS1_11raw_ostreamERNS1_15SmallVectorImplINS1_7MCFixupEEERKNS1_15MCSubtargetInfoE'/>
