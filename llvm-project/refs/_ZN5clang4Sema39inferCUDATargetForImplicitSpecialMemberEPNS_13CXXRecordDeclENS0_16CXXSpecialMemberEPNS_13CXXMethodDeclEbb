<dec f='llvm/clang/include/clang/Sema/Sema.h' l='10629' type='bool clang::Sema::inferCUDATargetForImplicitSpecialMember(clang::CXXRecordDecl * ClassDecl, clang::Sema::CXXSpecialMember CSM, clang::CXXMethodDecl * MemberDecl, bool ConstRHS, bool Diagnose)'/>
<doc f='llvm/clang/include/clang/Sema/Sema.h' l='10618'>/// Given a implicit special member, infer its CUDA target from the
  /// calls it needs to make to underlying base/field special members.
  /// \param ClassDecl the class for which the member is being created.
  /// \param CSM the kind of special member.
  /// \param MemberDecl the special member itself.
  /// \param ConstRHS true if this is a copy operation with a const object on
  ///        its RHS.
  /// \param Diagnose true if this call should emit diagnostics.
  /// \return true if there was an error inferring.
  /// The result of this call is implicit CUDA target attribute(s) attached to
  /// the member declaration.</doc>
<def f='llvm/clang/lib/Sema/SemaCUDA.cpp' l='265' ll='391' type='bool clang::Sema::inferCUDATargetForImplicitSpecialMember(clang::CXXRecordDecl * ClassDecl, clang::Sema::CXXSpecialMember CSM, clang::CXXMethodDecl * MemberDecl, bool ConstRHS, bool Diagnose)'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='7345' u='c' c='_ZN5clang4Sema25ShouldDeleteSpecialMemberEPNS_13CXXMethodDeclENS0_16CXXSpecialMemberEPNS0_24InheritedConstructorInfoEb'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='11916' u='c' c='_ZN5clang4Sema29DeclareImplicitCopyAssignmentEPNS_13CXXRecordDeclE'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='12236' u='c' c='_ZN5clang4Sema29DeclareImplicitMoveAssignmentEPNS_13CXXRecordDeclE'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='10364' u='c' c='_ZL17DiagnoseBadTargetRN5clang4SemaEPNS_17OverloadCandidateE'/>
