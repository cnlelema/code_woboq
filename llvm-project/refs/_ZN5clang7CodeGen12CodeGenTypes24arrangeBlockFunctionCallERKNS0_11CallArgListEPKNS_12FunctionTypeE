<dec f='llvm/clang/lib/CodeGen/CodeGenTypes.h' l='236' type='const clang::CodeGen::CGFunctionInfo &amp; clang::CodeGen::CodeGenTypes::arrangeBlockFunctionCall(const clang::CodeGen::CallArgList &amp; args, const clang::FunctionType * type)'/>
<use f='llvm/clang/lib/CodeGen/CGBlocks.cpp' l='1312' u='c' c='_ZN5clang7CodeGen15CodeGenFunction17EmitBlockCallExprEPKNS_8CallExprENS0_15ReturnValueSlotE'/>
<def f='llvm/clang/lib/CodeGen/CGCall.cpp' l='629' ll='634' type='const clang::CodeGen::CGFunctionInfo &amp; clang::CodeGen::CodeGenTypes::arrangeBlockFunctionCall(const clang::CodeGen::CallArgList &amp; args, const clang::FunctionType * fnType)'/>
<doc f='llvm/clang/lib/CodeGen/CGCall.cpp' l='627'>/// A block function is essentially a free function with an
/// extra implicit argument.</doc>
