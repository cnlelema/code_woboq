<dec f='llvm/clang/include/clang/AST/Type.h' l='1145' type='bool clang::QualType::isNonTrivialPrimitiveCType(const clang::ASTContext &amp; Ctx) const'/>
<doc f='llvm/clang/include/clang/AST/Type.h' l='1141'>/// Check if this is a non-trivial type that would cause a C struct
  /// transitively containing this type to be non-trivial. This function can be
  /// used to determine whether a field of this type can be declared inside a C
  /// union.</doc>
<def f='llvm/clang/lib/AST/Type.cpp' l='2364' ll='2375' type='bool clang::QualType::isNonTrivialPrimitiveCType(const clang::ASTContext &amp; Ctx) const'/>
