<def f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='269' ll='271' type='static bool llvm::TargetRegisterInfo::isStackSlot(unsigned int Reg)'/>
<use f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='275' u='c' c='_ZN4llvm18TargetRegisterInfo15stackSlot2IndexEj'/>
<use f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='288' u='c' c='_ZN4llvm18TargetRegisterInfo18isPhysicalRegisterEj'/>
<use f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='295' u='c' c='_ZN4llvm18TargetRegisterInfo17isVirtualRegisterEj'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetRegisterInfo.h' l='250'>// Register numbers can represent physical registers, virtual registers, and
  // sometimes stack slots. The unsigned values are divided into these ranges:
  //
  //   0           Not a register, can be used as a sentinel.
  //   [1;2^30)    Physical registers assigned by TableGen.
  //   [2^30;2^31) Stack slots. (Rarely used.)
  //   [2^31;2^32) Virtual registers assigned by MachineRegisterInfo.
  //
  // Further sentinels can be allocated from the small negative integers.
  // DenseMapInfo&lt;unsigned&gt; uses -1u and -2u.

  /// isStackSlot - Sometimes it is useful the be able to store a non-negative
  /// frame index in a variable that normally holds a register. isStackSlot()
  /// returns true if Reg is in the range used for stack slots.
  ///
  /// Note that isVirtualRegister() and isPhysicalRegister() cannot handle stack
  /// slots, so if a variable may contains a stack slot, always check
  /// isStackSlot() first.
  ///</doc>
<use f='llvm/llvm/lib/CodeGen/InlineSpiller.cpp' l='1122' u='c' c='_ZN12_GLOBAL__N_113InlineSpiller5spillERN4llvm13LiveRangeEditE'/>
<use f='llvm/llvm/lib/CodeGen/TargetRegisterInfo.cpp' l='94' u='c' c='_ZN4llvm8printRegEjPKNS_18TargetRegisterInfoEjPKNS_19MachineRegisterInfoE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp' l='243' u='c' c='_ZNK12_GLOBAL__N_121HexagonConstExtenders8Register6isVRegEv'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp' l='247' u='c' c='_ZNK12_GLOBAL__N_121HexagonConstExtenders8Register6isSlotEv'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp' l='254' u='c' c='_ZNK12_GLOBAL__N_121HexagonConstExtenders8RegistercvN4llvm14MachineOperandEEv'/>
<use f='llvm/llvm/lib/Target/Hexagon/RDFRegisters.h' l='102' u='c' c='_ZN4llvm3rdf20PhysicalRegisterInfo11isRegMaskIdEj'/>
