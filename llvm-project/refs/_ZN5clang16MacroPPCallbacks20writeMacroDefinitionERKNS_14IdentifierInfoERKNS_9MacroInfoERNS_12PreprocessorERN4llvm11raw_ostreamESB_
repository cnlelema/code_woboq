<dec f='llvm/clang/lib/CodeGen/MacroPPCallbacks.h' l='73' type='static void clang::MacroPPCallbacks::writeMacroDefinition(const clang::IdentifierInfo &amp; II, const clang::MacroInfo &amp; MI, clang::Preprocessor &amp; PP, llvm::raw_ostream &amp; Name, llvm::raw_ostream &amp; Value)'/>
<doc f='llvm/clang/lib/CodeGen/MacroPPCallbacks.h' l='64'>/// Use the passed preprocessor to write the macro name and value from the
  /// given macro info and identifier info into the given \p `Name` and \p
  /// `Value` output streams.
  ///
  /// \param II Identifier info, used to get the Macro name.
  /// \param MI Macro info, used to get the Macro argumets and values.
  /// \param PP Preprocessor.
  /// \param [out] Name Place holder for returned macro name and arguments.
  /// \param [out] Value Place holder for returned macro value.</doc>
<def f='llvm/clang/lib/CodeGen/MacroPPCallbacks.cpp' l='21' ll='59' type='static void clang::MacroPPCallbacks::writeMacroDefinition(const clang::IdentifierInfo &amp; II, const clang::MacroInfo &amp; MI, clang::Preprocessor &amp; PP, llvm::raw_ostream &amp; Name, llvm::raw_ostream &amp; Value)'/>
<use f='llvm/clang/lib/CodeGen/MacroPPCallbacks.cpp' l='185' u='c' c='_ZN5clang16MacroPPCallbacks12MacroDefinedERKNS_5TokenEPKNS_14MacroDirectiveE'/>
