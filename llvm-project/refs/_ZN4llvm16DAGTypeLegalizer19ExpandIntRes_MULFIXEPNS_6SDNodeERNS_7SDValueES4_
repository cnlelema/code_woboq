<dec f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.h' l='446' type='void llvm::DAGTypeLegalizer::ExpandIntRes_MULFIX(llvm::SDNode * N, llvm::SDValue &amp; Lo, llvm::SDValue &amp; Hi)'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp' l='1736' u='c' c='_ZN4llvm16DAGTypeLegalizer19ExpandIntegerResultEPNS_6SDNodeEj'/>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp' l='2791' ll='2987' type='void llvm::DAGTypeLegalizer::ExpandIntRes_MULFIX(llvm::SDNode * N, llvm::SDValue &amp; Lo, llvm::SDValue &amp; Hi)'/>
<doc f='llvm/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp' l='2786'>/// This performs an expansion of the integer result for a fixed point
/// multiplication. The default expansion performs rounding down towards
/// negative infinity, though targets that do care about rounding should specify
/// a target hook for rounding and provide their own expansion or lowering of
/// fixed point multiplication to be consistent with rounding.</doc>
