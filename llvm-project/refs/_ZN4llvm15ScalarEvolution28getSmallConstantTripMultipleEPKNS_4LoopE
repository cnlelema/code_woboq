<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='738' type='unsigned int llvm::ScalarEvolution::getSmallConstantTripMultiple(const llvm::Loop * L)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='732'>/// Returns the largest constant divisor of the trip count of the
  /// loop if it is a single-exit loop and we can compute a small maximum for
  /// that loop.
  ///
  /// Implemented in terms of the \c getSmallConstantTripMultiple overload with
  /// the single exiting block passed to it. See that routine for details.</doc>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='6522' ll='6528' type='unsigned int llvm::ScalarEvolution::getSmallConstantTripMultiple(const llvm::Loop * L)'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='11448' u='c' c='_ZL13PrintLoopInfoRN4llvm11raw_ostreamEPNS_15ScalarEvolutionEPKNS_4LoopE'/>
