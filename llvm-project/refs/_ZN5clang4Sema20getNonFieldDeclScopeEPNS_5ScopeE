<dec f='llvm/clang/include/clang/Sema/Sema.h' l='3136' type='clang::Scope * clang::Sema::getNonFieldDeclScope(clang::Scope * S)'/>
<def f='llvm/clang/lib/Sema/SemaDecl.cpp' l='1930' ll='1936' type='clang::Scope * clang::Sema::getNonFieldDeclScope(clang::Scope * S)'/>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='2224' u='c' c='_ZN5clang4Sema20MergeTypedefNameDeclEPNS_5ScopeEPNS_15TypedefNameDeclERNS_12LookupResultE'/>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='15108' u='c' c='_ZN5clang4Sema8ActOnTagEPNS_5ScopeEjNS0_10TagUseKindENS_14SourceLocationERNS_12CXXScopeSpecEPNS_14IdentifierInfoES4_RKNS_20ParsedAttributesViewENS_15A7284731'/>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='15162' u='c' c='_ZN5clang4Sema8ActOnTagEPNS_5ScopeEjNS0_10TagUseKindENS_14SourceLocationERNS_12CXXScopeSpecEPNS_14IdentifierInfoES4_RKNS_20ParsedAttributesViewENS_15A7284731'/>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='16782' u='c' c='_ZN5clang4Sema17ActOnEnumConstantEPNS_5ScopeEPNS_4DeclES4_NS_14SourceLocationEPNS_14IdentifierInfoERKNS_20ParsedAttributesViewES5_PNS_4ExprE'/>
<doc f='llvm/clang/lib/Sema/SemaDecl.cpp' l='1907'>/// getNonFieldDeclScope - Retrieves the innermost scope, starting
/// from S, where a non-field would be declared. This routine copes
/// with the difference between C and C++ scoping rules in structs and
/// unions. For example, the following code is well-formed in C but
/// ill-formed in C++:
/// @code
/// struct S6 {
///   enum { BAR } e;
/// };
///
/// void test_S6() {
///   struct S6 a;
///   a.e = BAR;
/// }
/// @endcode
/// For the declaration of BAR, this routine will return a different
/// scope. The scope S will be the scope of the unnamed enumeration
/// within S6. In C++, this routine will return the scope associated
/// with S6, because the enumeration&apos;s scope is a transparent
/// context but structures can contain non-field names. In C, this
/// routine will return the translation unit scope, since the
/// enumeration&apos;s scope is a transparent context and structures cannot
/// contain non-field names.</doc>
