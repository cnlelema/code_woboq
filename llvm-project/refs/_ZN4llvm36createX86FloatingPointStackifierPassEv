<dec f='llvm/llvm/lib/Target/X86/X86.h' l='46' type='llvm::FunctionPass * llvm::createX86FloatingPointStackifierPass()'/>
<doc f='llvm/llvm/lib/Target/X86/X86.h' l='43'>/// This function returns a pass which converts floating-point register
/// references and pseudo instructions into floating-point stack references and
/// physical instructions.</doc>
<def f='llvm/llvm/lib/Target/X86/X86FloatingPoint.cpp' l='310' type='llvm::FunctionPass * llvm::createX86FloatingPointStackifierPass()'/>
<use f='llvm/llvm/lib/Target/X86/X86TargetMachine.cpp' l='493' u='c' c='_ZN12_GLOBAL__N_113X86PassConfig15addPostRegAllocEv'/>
