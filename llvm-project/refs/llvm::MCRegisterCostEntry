<def f='llvm/llvm/include/llvm/MC/MCSchedule.h' l='142' ll='146'/>
<size>12</size>
<doc f='llvm/llvm/include/llvm/MC/MCSchedule.h' l='135'>/// Specify the cost of a register definition in terms of number of physical
/// register allocated at register renaming stage. For example, AMD Jaguar.
/// natively supports 128-bit data types, and operations on 256-bit registers
/// (i.e. YMM registers) are internally split into two COPs (complex operations)
/// and each COP updates a physical register. Basically, on Jaguar, a YMM
/// register write effectively consumes two physical registers. That means,
/// the cost of a YMM write in the BtVer2 model is 2.</doc>
<mbr r='llvm::MCRegisterCostEntry::RegisterClassID' o='0' t='unsigned int'/>
<mbr r='llvm::MCRegisterCostEntry::Cost' o='32' t='unsigned int'/>
<mbr r='llvm::MCRegisterCostEntry::AllowMoveElimination' o='64' t='bool'/>
