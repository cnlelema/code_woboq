<dec f='llvm/llvm/include/llvm/IR/BasicBlock.h' l='259' type='const llvm::BasicBlock * llvm::BasicBlock::getUniqueSuccessor() const'/>
<use f='llvm/llvm/include/llvm/IR/BasicBlock.h' l='262' u='c' c='_ZN4llvm10BasicBlock18getUniqueSuccessorEv'/>
<doc f='llvm/llvm/include/llvm/IR/BasicBlock.h' l='255'>/// Return the successor of this block if it has a unique successor.
  /// Otherwise return a null pointer.
  ///
  /// This method is analogous to getUniquePredecessor above.</doc>
<def f='llvm/llvm/lib/IR/BasicBlock.cpp' l='276' ll='288' type='const llvm::BasicBlock * llvm::BasicBlock::getUniqueSuccessor() const'/>
