<def f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='835' ll='840' type='llvm::MachineInstr * llvm::TargetInstrInfo::optimizeSelect(llvm::MachineInstr &amp; MI, SmallPtrSetImpl&lt;llvm::MachineInstr *&gt; &amp; NewMIs, bool PreferFalse = false) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetInstrInfo.h' l='820'>/// Given a select instruction that was understood by
  /// analyzeSelect and returned Optimizable = true, attempt to optimize MI by
  /// merging it with one of its operands. Returns NULL on failure.
  ///
  /// When successful, returns the new select instruction. The client is
  /// responsible for deleting MI.
  ///
  /// If both sides of the select can be optimized, PreferFalse is used to pick
  /// a side.
  ///
  /// @param MI          Optimizable select instruction.
  /// @param NewMIs     Set that record all MIs in the basic block up to \p
  /// MI. Has to be updated with any newly created MI or deleted ones.
  /// @param PreferFalse Try to optimize FalseOp instead of TrueOp.
  /// @returns Optimized instruction or NULL.</doc>
<use f='llvm/llvm/lib/CodeGen/PeepholeOptimizer.cpp' l='636' u='c' c='_ZN12_GLOBAL__N_117PeepholeOptimizer14optimizeSelectERN4llvm12MachineInstrERNS1_15SmallPtrSetImplIPS2_EE'/>
