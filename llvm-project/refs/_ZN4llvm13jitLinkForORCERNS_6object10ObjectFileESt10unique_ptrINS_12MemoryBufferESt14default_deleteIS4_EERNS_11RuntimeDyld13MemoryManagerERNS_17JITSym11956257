<dec f='llvm/llvm/include/llvm/ExecutionEngine/RuntimeDyld.h' l='270' type='void llvm::jitLinkForORC(object::ObjectFile &amp; Obj, std::unique_ptr&lt;MemoryBuffer&gt; UnderlyingBuffer, RuntimeDyld::MemoryManager &amp; MemMgr, llvm::JITSymbolResolver &amp; Resolver, bool ProcessAllSections, std::function&lt;Error (std::unique_ptr&lt;LoadedObjectInfo&gt;, std::map&lt;StringRef, JITEvaluatedSymbol&gt;)&gt; OnLoaded, std::function&lt;void (Error)&gt; OnEmitted)'/>
<use f='llvm/llvm/lib/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.cpp' l='138' u='c' c='_ZN4llvm3orc24RTDyldObjectLinkingLayer4emitENS0_29MaterializationResponsibilityESt10unique_ptrINS_12MemoryBufferESt14default_deleteIS4_EE'/>
<def f='llvm/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp' l='1394' ll='1420' type='void llvm::jitLinkForORC(object::ObjectFile &amp; Obj, std::unique_ptr&lt;MemoryBuffer&gt; UnderlyingBuffer, RuntimeDyld::MemoryManager &amp; MemMgr, llvm::JITSymbolResolver &amp; Resolver, bool ProcessAllSections, std::function&lt;Error (std::unique_ptr&lt;RuntimeDyld::LoadedObjectInfo&gt;, std::map&lt;StringRef, JITEvaluatedSymbol&gt;)&gt; OnLoaded, std::function&lt;void (Error)&gt; OnEmitted)'/>
<doc f='llvm/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp' l='1391'>// FIXME: Kill this with fire once we have a new JIT linker: this is only here
// so that we can re-use RuntimeDyld&apos;s implementation without twisting the
// interface any further for ORC&apos;s purposes.</doc>
