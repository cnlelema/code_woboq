<use f='llvm/clang/include/clang/Parse/Parser.h' l='2383' u='c' c='_ZN5clang6Parser29CheckProhibitedCXX11AttributeEv'/>
<dec f='llvm/clang/include/clang/Parse/Parser.h' l='2386' type='bool clang::Parser::DiagnoseProhibitedCXX11Attribute()'/>
<def f='llvm/clang/lib/Parse/ParseDecl.cpp' l='1613' ll='1637' type='bool clang::Parser::DiagnoseProhibitedCXX11Attribute()'/>
<doc f='llvm/clang/lib/Parse/ParseDecl.cpp' l='1605'>/// DiagnoseProhibitedCXX11Attribute - We have found the opening square brackets
/// of a C++11 attribute-specifier in a location where an attribute is not
/// permitted. By C++11 [dcl.attr.grammar]p6, this is ill-formed. Diagnose this
/// situation.
///
/// \return \c true if we skipped an attribute-like chunk of tokens, \c false if
/// this doesn&apos;t appear to actually be an attribute-specifier, and the caller
/// should try to parse it.</doc>
