<dec f='llvm/llvm/include/llvm/IR/Instructions.h' l='4937' type='void llvm::SIToFPInst::SIToFPInst(llvm::Value * S, llvm::Type * Ty, const llvm::Twine &amp; NameStr = &quot;&quot;, llvm::Instruction * InsertBefore = nullptr)'/>
<doc f='llvm/llvm/include/llvm/IR/Instructions.h' l='4936'>/// Constructor with insert-before-instruction semantics</doc>
<use f='llvm/llvm/lib/IR/Instructions.cpp' l='2774' u='c' c='_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_'/>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='3398' ll='3402' type='void llvm::SIToFPInst::SIToFPInst(llvm::Value * S, llvm::Type * Ty, const llvm::Twine &amp; Name = &quot;&quot;, llvm::Instruction * InsertBefore = nullptr)'/>
<use f='llvm/llvm/lib/IR/Instructions.cpp' l='4257' u='c' c='_ZNK4llvm10SIToFPInst9cloneImplEv'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp' l='1405' u='c' c='_ZN4llvm12InstCombiner9visitFAddERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp' l='1423' u='c' c='_ZN4llvm12InstCombiner9visitFAddERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp' l='482' u='c' c='_ZN12_GLOBAL__N_114IndVarSimplify21handleFloatingPointIVEPN4llvm4LoopEPNS1_7PHINodeE'/>
<use f='llvm/llvm/tools/llvm-stress/llvm-stress.cpp' l='597' u='c' c='_ZN4llvm12_GLOBAL__N_112CastModifier3ActEv'/>
