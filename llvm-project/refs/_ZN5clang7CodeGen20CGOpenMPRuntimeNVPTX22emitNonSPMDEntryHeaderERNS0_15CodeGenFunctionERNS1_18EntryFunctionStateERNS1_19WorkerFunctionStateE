<dec f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeNVPTX.h' l='70' type='void clang::CodeGen::CGOpenMPRuntimeNVPTX::emitNonSPMDEntryHeader(clang::CodeGen::CodeGenFunction &amp; CGF, clang::CodeGen::CGOpenMPRuntimeNVPTX::EntryFunctionState &amp; EST, clang::CodeGen::CGOpenMPRuntimeNVPTX::WorkerFunctionState &amp; WST)'/>
<use f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeNVPTX.cpp' l='1140' u='c' c='_ZZN5clang7CodeGen20CGOpenMPRuntimeNVPTX17emitNonSPMDKernelERKNS_22OMPExecutableDirectiveEN4llvm9StringRefERPNS5_8FunctionERPNS5_8ConstantEbRKNS0_15Re5841660'/>
<def f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeNVPTX.cpp' l='1177' ll='1217' type='void clang::CodeGen::CGOpenMPRuntimeNVPTX::emitNonSPMDEntryHeader(clang::CodeGen::CodeGenFunction &amp; CGF, clang::CodeGen::CGOpenMPRuntimeNVPTX::EntryFunctionState &amp; EST, clang::CodeGen::CGOpenMPRuntimeNVPTX::WorkerFunctionState &amp; WST)'/>
<doc f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeNVPTX.cpp' l='1176'>// Setup NVPTX threads for master-worker OpenMP scheme.</doc>
<doc f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeNVPTX.h' l='68'>/// Helper for non-SPMD target entry function. Guide the master and
  /// worker threads to their respective locations.</doc>
