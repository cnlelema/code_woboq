<def f='llvm/llvm/include/llvm/Passes/PassBuilder.h' l='498' ll='501' type='void llvm::PassBuilder::registerLateLoopOptimizationsEPCallback(const std::function&lt;void (LoopPassManager &amp;, OptimizationLevel)&gt; &amp; C)'/>
<doc f='llvm/llvm/include/llvm/Passes/PassBuilder.h' l='489'>/// Register a callback for a default optimizer pipeline extension
  /// point
  ///
  /// This extension point allows adding late loop canonicalization and
  /// simplification passes. This is the last point in the loop optimization
  /// pipeline before loop deletion. Each pass added
  /// here must be an instance of LoopPass.
  /// This is the place to add passes that can remove loops, such as target-
  /// specific loop idiom recognition.</doc>
<use f='llvm/llvm/tools/opt/NewPMDriver.cpp' l='148' u='c' c='_ZL19registerEPCallbacksRN4llvm11PassBuilderEbb'/>
