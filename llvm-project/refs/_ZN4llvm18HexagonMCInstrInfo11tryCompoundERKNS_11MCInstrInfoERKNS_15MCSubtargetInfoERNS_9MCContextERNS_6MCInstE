<dec f='llvm/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCInstrInfo.h' l='328' type='void llvm::HexagonMCInstrInfo::tryCompound(const llvm::MCInstrInfo &amp; MCII, const llvm::MCSubtargetInfo &amp; STI, llvm::MCContext &amp; Context, llvm::MCInst &amp; MCI)'/>
<doc f='llvm/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCInstrInfo.h' l='327'>// Attempt to find and replace compound pairs</doc>
<def f='llvm/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCCompound.cpp' l='398' ll='427' type='void llvm::HexagonMCInstrInfo::tryCompound(const llvm::MCInstrInfo &amp; MCII, const llvm::MCSubtargetInfo &amp; STI, llvm::MCContext &amp; Context, llvm::MCInst &amp; MCI)'/>
<doc f='llvm/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCCompound.cpp' l='394'>/// tryCompound - Given a bundle check for compound insns when one
/// is found update the contents fo the bundle with the compound insn.
/// If a compound instruction is found then the bundle will have one
/// additional slot.</doc>
<use f='llvm/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCInstrInfo.cpp' l='133' u='c' c='_ZN4llvm18HexagonMCInstrInfo18canonicalizePacketERKNS_11MCInstrInfoERKNS_15MCSubtargetInfoERNS_9MCContextERNS_6MCInstEPNS_16HexagonMCCheckerE'/>
