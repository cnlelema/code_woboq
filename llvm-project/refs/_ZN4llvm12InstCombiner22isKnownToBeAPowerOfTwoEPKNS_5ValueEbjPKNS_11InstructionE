<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='672' ll='676' type='bool llvm::InstCombiner::isKnownToBeAPowerOfTwo(const llvm::Value * V, bool OrZero = false, unsigned int Depth = 0, const llvm::Instruction * CxtI = nullptr)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='888' u='c' c='_ZN4llvm12InstCombiner29foldAndOrOfICmpsOfAndWithPow2EPNS_8ICmpInstES2_bRNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp' l='889' u='c' c='_ZN4llvm12InstCombiner29foldAndOrOfICmpsOfAndWithPow2EPNS_8ICmpInstES2_bRNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='5048' u='c' c='_ZN4llvm12InstCombiner13visitICmpInstERNS_8ICmpInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='71' u='c' c='_ZL25simplifyValueKnownNonZeroPN4llvm5ValueERNS_12InstCombinerERNS_11InstructionE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='1084' u='c' c='_ZN4llvm12InstCombiner9visitSDivERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='1309' u='c' c='_ZN4llvm12InstCombiner9visitURemERNS_14BinaryOperatorE'/>
