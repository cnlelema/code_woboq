<def f='llvm/llvm/include/llvm/Transforms/IPO/WholeProgramDevirt.h' l='151' type='uint64_t llvm::wholeprogramdevirt::VirtualCallTarget::minAfterBytes() const'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/WholeProgramDevirt.h' l='162' u='c' c='_ZNK4llvm18wholeprogramdevirt17VirtualCallTarget19allocatedAfterBytesEv'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/WholeProgramDevirt.h' l='173' u='c' c='_ZN4llvm18wholeprogramdevirt17VirtualCallTarget11setAfterBitEm'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/WholeProgramDevirt.h' l='174' u='c' c='_ZN4llvm18wholeprogramdevirt17VirtualCallTarget11setAfterBitEm'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/WholeProgramDevirt.h' l='190' u='c' c='_ZN4llvm18wholeprogramdevirt17VirtualCallTarget13setAfterBytesEmh'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/WholeProgramDevirt.h' l='192' u='c' c='_ZN4llvm18wholeprogramdevirt17VirtualCallTarget13setAfterBytesEmh'/>
<use f='llvm/llvm/include/llvm/Transforms/IPO/WholeProgramDevirt.h' l='194' u='c' c='_ZN4llvm18wholeprogramdevirt17VirtualCallTarget13setAfterBytesEmh'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/WholeProgramDevirt.h' l='146'>// The minimum byte offset after the address point. This covers the bytes in
  // the vtable object after the address point (e.g. the vtable for the current
  // class and any later base classes) and is equal to the size of the vtable
  // object minus the offset from the start of the vtable object to the address
  // point.</doc>
<use f='llvm/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp' l='130' u='c' c='_ZN4llvm18wholeprogramdevirt16findLowestOffsetENS_8ArrayRefINS0_17VirtualCallTargetEEEbm'/>
<use f='llvm/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp' l='159' u='c' c='_ZN4llvm18wholeprogramdevirt16findLowestOffsetENS_8ArrayRefINS0_17VirtualCallTargetEEEbm'/>
