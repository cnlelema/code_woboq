<dec f='llvm/llvm/include/llvm/ADT/Triple.h' l='358' type='void llvm::Triple::getiOSVersion(unsigned int &amp; Major, unsigned int &amp; Minor, unsigned int &amp; Micro) const'/>
<doc f='llvm/llvm/include/llvm/ADT/Triple.h' l='356'>/// getiOSVersion - Parse the version number as with getOSVersion.  This should
  /// only be called with IOS or generic triples.</doc>
<use f='llvm/clang/lib/Driver/ToolChains/Darwin.cpp' l='1571' u='c' c='_ZN12_GLOBAL__N_112getOSVersionEN4llvm6Triple6OSTypeERKS1_RKN5clang6driver6DriverE'/>
<use f='llvm/llvm/lib/MC/MCStreamer.cpp' l='1194' u='c' c='_ZN4llvm10MCStreamer20EmitVersionForTargetERKNS_6TripleERKNS_12VersionTupleE'/>
<use f='llvm/llvm/lib/MC/MCStreamer.cpp' l='1201' u='c' c='_ZN4llvm10MCStreamer20EmitVersionForTargetERKNS_6TripleERKNS_12VersionTupleE'/>
<def f='llvm/llvm/lib/Support/Triple.cpp' l='1150' ll='1174' type='void llvm::Triple::getiOSVersion(unsigned int &amp; Major, unsigned int &amp; Minor, unsigned int &amp; Micro) const'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64Subtarget.cpp' l='269' u='c' c='_ZNK4llvm16AArch64Subtarget29supportsAddressTopByteIgnoredEv'/>
<use f='llvm/llvm/unittests/ADT/TripleTest.cpp' l='1216' u='c' c='_ZN12_GLOBAL__N_128TripleTest_getOSVersion_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/ADT/TripleTest.cpp' l='1231' u='c' c='_ZN12_GLOBAL__N_128TripleTest_getOSVersion_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/ADT/TripleTest.cpp' l='1246' u='c' c='_ZN12_GLOBAL__N_128TripleTest_getOSVersion_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/ADT/TripleTest.cpp' l='1261' u='c' c='_ZN12_GLOBAL__N_128TripleTest_getOSVersion_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/ADT/TripleTest.cpp' l='1276' u='c' c='_ZN12_GLOBAL__N_128TripleTest_getOSVersion_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/ADT/TripleTest.cpp' l='1291' u='c' c='_ZN12_GLOBAL__N_128TripleTest_getOSVersion_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/ADT/TripleTest.cpp' l='1299' u='c' c='_ZN12_GLOBAL__N_128TripleTest_getOSVersion_Test8TestBodyEv'/>
