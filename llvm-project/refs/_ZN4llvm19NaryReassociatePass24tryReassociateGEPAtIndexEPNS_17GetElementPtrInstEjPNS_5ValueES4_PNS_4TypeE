<dec f='llvm/llvm/include/llvm/Transforms/Scalar/NaryReassociate.h' l='134' type='llvm::GetElementPtrInst * llvm::NaryReassociatePass::tryReassociateGEPAtIndex(llvm::GetElementPtrInst * GEP, unsigned int I, llvm::Value * LHS, llvm::Value * RHS, llvm::Type * IndexedType)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Scalar/NaryReassociate.h' l='132'>// Given GEP&apos;s I-th index = LHS + RHS, see whether &amp;Base[..][LHS][..] or
  // &amp;Base[..][RHS][..] can be CSE&apos;ed and rewrite GEP accordingly.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/NaryReassociate.cpp' l='353' u='c' c='_ZN4llvm19NaryReassociatePass24tryReassociateGEPAtIndexEPNS_17GetElementPtrInstEjPNS_4TypeE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/NaryReassociate.cpp' l='358' u='c' c='_ZN4llvm19NaryReassociatePass24tryReassociateGEPAtIndexEPNS_17GetElementPtrInstEjPNS_4TypeE'/>
<def f='llvm/llvm/lib/Transforms/Scalar/NaryReassociate.cpp' l='365' ll='434' type='llvm::GetElementPtrInst * llvm::NaryReassociatePass::tryReassociateGEPAtIndex(llvm::GetElementPtrInst * GEP, unsigned int I, llvm::Value * LHS, llvm::Value * RHS, llvm::Type * IndexedType)'/>
