<dec f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3849' type='llvm::SDValue llvm::TargetLowering::BuildSDIVPow2(llvm::SDNode * N, const llvm::APInt &amp; Divisor, llvm::SelectionDAG &amp; DAG, SmallVectorImpl&lt;llvm::SDNode *&gt; &amp; Created) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3845'>/// Targets may override this function to provide custom SDIV lowering for
  /// power-of-2 denominators.  If the target returns an empty SDValue, LLVM
  /// assumes SDIV is expensive and replaces it with a series of other integer
  /// operations.</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp' l='20022' u='c' c='_ZN12_GLOBAL__N_111DAGCombiner13BuildSDIVPow2EPN4llvm6SDNodeE'/>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp' l='4160' ll='4168' type='llvm::SDValue llvm::TargetLowering::BuildSDIVPow2(llvm::SDNode * N, const llvm::APInt &amp; Divisor, llvm::SelectionDAG &amp; DAG, SmallVectorImpl&lt;llvm::SDNode *&gt; &amp; Created) const'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='8977' c='_ZNK4llvm21AArch64TargetLowering13BuildSDIVPow2EPNS_6SDNodeERKNS_5APIntERNS_12SelectionDAGERNS_15SmallVectorImplIS2_EE'/>
<ovr f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='7806' c='_ZNK4llvm17ARMTargetLowering13BuildSDIVPow2EPNS_6SDNodeERKNS_5APIntERNS_12SelectionDAGERNS_15SmallVectorImplIS2_EE'/>
<ovr f='llvm/llvm/lib/Target/PowerPC/PPCISelLowering.cpp' l='13757' c='_ZNK4llvm17PPCTargetLowering13BuildSDIVPow2EPNS_6SDNodeERKNS_5APIntERNS_12SelectionDAGERNS_15SmallVectorImplIS2_EE'/>
