<dec f='llvm/llvm/include/llvm/CodeGen/MacroFusion.h' l='39' type='std::unique_ptr&lt;ScheduleDAGMutation&gt; llvm::createMacroFusionDAGMutation(ShouldSchedulePredTy shouldScheduleAdjacent)'/>
<def f='llvm/llvm/lib/CodeGen/MacroFusion.cpp' l='175' ll='181' type='std::unique_ptr&lt;ScheduleDAGMutation&gt; llvm::createMacroFusionDAGMutation(ShouldSchedulePredTy shouldScheduleAdjacent)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MacroFusion.h' l='35'>/// Create a DAG scheduling mutation to pair instructions back to back
/// for instructions that benefit according to the target-specific
/// shouldScheduleAdjacent predicate function.</doc>
<use f='llvm/llvm/lib/Target/AArch64/AArch64MacroFusion.cpp' l='409' u='c' c='_ZN4llvm35createAArch64MacroFusionDAGMutationEv'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUMacroFusion.cpp' l='64' u='c' c='_ZN4llvm34createAMDGPUMacroFusionDAGMutationEv'/>
<use f='llvm/llvm/lib/Target/ARM/ARMMacroFusion.cpp' l='66' u='c' c='_ZN4llvm31createARMMacroFusionDAGMutationEv'/>
