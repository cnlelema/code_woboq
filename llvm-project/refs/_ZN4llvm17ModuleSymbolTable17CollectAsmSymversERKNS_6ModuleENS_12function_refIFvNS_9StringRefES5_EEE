<dec f='llvm/llvm/include/llvm/Object/ModuleSymbolTable.h' l='66' type='static void llvm::ModuleSymbolTable::CollectAsmSymvers(const llvm::Module &amp; M, function_ref&lt;void (llvm::StringRef, llvm::StringRef)&gt; AsmSymver)'/>
<doc f='llvm/llvm/include/llvm/Object/ModuleSymbolTable.h' l='60'>/// Parse inline ASM and collect the symvers directives that are defined in
  /// the current module.
  ///
  /// For each found symbol, call \p AsmSymver with the name of the symbol and
  /// its alias.</doc>
<def f='llvm/llvm/lib/Object/ModuleSymbolTable.cpp' l='162' ll='169' type='static void llvm::ModuleSymbolTable::CollectAsmSymvers(const llvm::Module &amp; M, function_ref&lt;void (llvm::StringRef, llvm::StringRef)&gt; AsmSymver)'/>
<use f='llvm/llvm/lib/Transforms/IPO/ThinLTOBitcodeWriter.cpp' l='363' u='c' c='_ZN12_GLOBAL__N_127splitAndWriteThinLTOBitcodeERN4llvm11raw_ostreamEPS1_NS0_12function_refIFRNS0_9AAResultsERNS0_8FunctionEEEERNS0_6ModuleE'/>
