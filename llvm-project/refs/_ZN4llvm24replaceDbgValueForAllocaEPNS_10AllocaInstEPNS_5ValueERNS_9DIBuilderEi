<dec f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='336' type='void llvm::replaceDbgValueForAlloca(llvm::AllocaInst * AI, llvm::Value * NewAllocaAddress, llvm::DIBuilder &amp; Builder, int Offset = 0)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='331'>/// Replaces multiple llvm.dbg.value instructions when the alloca it describes
/// is replaced with a new value. If Offset is non-zero, a constant displacement
/// is added to the expression (after the mandatory Deref). Offset can be
/// negative. New llvm.dbg.value instructions are inserted at the locations of
/// the instructions they replace.</doc>
<use f='llvm/llvm/lib/CodeGen/SafeStack.cpp' l='596' u='c' c='_ZN12_GLOBAL__N_19SafeStack30moveStaticAllocasToUnsafeStackERN4llvm9IRBuilderINS1_14ConstantFolderENS1_24IRBuilderDefaultInserterEEERNS1_8FunctionENS1430051'/>
<def f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='1610' ll='1619' type='void llvm::replaceDbgValueForAlloca(llvm::AllocaInst * AI, llvm::Value * NewAllocaAddress, llvm::DIBuilder &amp; Builder, int Offset = 0)'/>
