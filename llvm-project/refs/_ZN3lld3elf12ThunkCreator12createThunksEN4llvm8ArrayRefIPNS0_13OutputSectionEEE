<dec f='llvm/lld/ELF/Relocations.h' l='132' type='bool lld::elf::ThunkCreator::createThunks(ArrayRef&lt;lld::elf::OutputSection *&gt; OutputSections)'/>
<doc f='llvm/lld/ELF/Relocations.h' l='131'>// Return true if Thunks have been added to OutputSections</doc>
<def f='llvm/lld/ELF/Relocations.cpp' l='1816' ll='1883' type='bool lld::elf::ThunkCreator::createThunks(ArrayRef&lt;lld::elf::OutputSection *&gt; OutputSections)'/>
<doc f='llvm/lld/ELF/Relocations.cpp' l='1791'>// Process all relocations from the InputSections that have been assigned
// to InputSectionDescriptions and redirect through Thunks if needed. The
// function should be called iteratively until it returns false.
//
// PreConditions:
// All InputSections that may need a Thunk are reachable from
// OutputSectionCommands.
//
// All OutputSections have an address and all InputSections have an offset
// within the OutputSection.
//
// The offsets between caller (relocation place) and callee
// (relocation target) will not be modified outside of createThunks().
//
// PostConditions:
// If return value is true then ThunkSections have been inserted into
// OutputSections. All relocations that needed a Thunk based on the information
// available to createThunks() on entry have been redirected to a Thunk. Note
// that adding Thunks changes offsets between caller and callee so more Thunks
// may be required.
//
// If return value is false then no more Thunks are needed, and createThunks has
// made no changes. If the target requires range extension thunks, currently
// ARM, then any future change in offset between caller and callee risks a
// relocation out of range error.</doc>
<use f='llvm/lld/ELF/Writer.cpp' l='1641' u='c' c='_ZN12_GLOBAL__N_16Writer31finalizeAddressDependentContentEv'/>
