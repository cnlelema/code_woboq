<dec f='llvm/clang/include/clang/Parse/Parser.h' l='2990' type='clang::NamedDecl * clang::Parser::ParseTemplateParameter(unsigned int Depth, unsigned int Position)'/>
<use f='llvm/clang/lib/Parse/ParseTemplate.cpp' l='371' u='c' c='_ZN5clang6Parser26ParseTemplateParameterListEjRN4llvm15SmallVectorImplIPNS_9NamedDeclEEE'/>
<def f='llvm/clang/lib/Parse/ParseTemplate.cpp' l='486' ll='510' type='clang::NamedDecl * clang::Parser::ParseTemplateParameter(unsigned int Depth, unsigned int Position)'/>
<doc f='llvm/clang/lib/Parse/ParseTemplate.cpp' l='471'>/// ParseTemplateParameter - Parse a template-parameter (C++ [temp.param]).
///
///       template-parameter: [C++ temp.param]
///         type-parameter
///         parameter-declaration
///
///       type-parameter: (see below)
///         &apos;class&apos; ...[opt] identifier[opt]
///         &apos;class&apos; identifier[opt] &apos;=&apos; type-id
///         &apos;typename&apos; ...[opt] identifier[opt]
///         &apos;typename&apos; identifier[opt] &apos;=&apos; type-id
///         &apos;template&apos; &apos;&lt;&apos; template-parameter-list &apos;&gt;&apos;
///               &apos;class&apos; ...[opt] identifier[opt]
///         &apos;template&apos; &apos;&lt;&apos; template-parameter-list &apos;&gt;&apos; &apos;class&apos; identifier[opt]
///               = id-expression</doc>
