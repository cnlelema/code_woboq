<def f='llvm/llvm/include/llvm/CodeGen/SelectionDAGTargetInfo.h' l='51' ll='57' type='llvm::SDValue llvm::SelectionDAGTargetInfo::EmitTargetCodeForMemcpy(llvm::SelectionDAG &amp; DAG, const llvm::SDLoc &amp; dl, llvm::SDValue Chain, llvm::SDValue Op1, llvm::SDValue Op2, llvm::SDValue Op3, unsigned int Align, bool isVolatile, bool AlwaysInline, bool MustPreserveCheriCapabilities, llvm::MachinePointerInfo DstPtrInfo, llvm::MachinePointerInfo SrcPtrInfo) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/SelectionDAGTargetInfo.h' l='38'>/// Emit target-specific code that performs a memcpy.
  /// This can be used by targets to provide code sequences for cases
  /// that don&apos;t fit the target&apos;s parameters for simple loads/stores and can be
  /// more efficient than using a library call. This function can return a null
  /// SDValue if the target declines to use custom code and a different
  /// lowering strategy should be used.
  ///
  /// If AlwaysInline is true, the size is constant and the target should not
  /// emit any calls and is strongly encouraged to attempt to emit inline code
  /// even if it is beyond the usual threshold because this intrinsic is being
  /// expanded in a place where calls are not feasible (e.g. within the prologue
  /// for another call). If the target chooses to decline an AlwaysInline
  /// request here, legalize will resort to using simple loads and stores.</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp' l='6360' u='c' c='_ZN4llvm12SelectionDAG9getMemcpyENS_7SDValueERKNS_5SDLocES1_S1_S1_jbbbbNS_18MachinePointerInfoES5_NS_9StringRefE'/>
<ovr f='llvm/llvm/lib/Target/ARM/ARMSelectionDAGInfo.cpp' l='127' c='_ZNK4llvm19ARMSelectionDAGInfo23EmitTargetCodeForMemcpyERNS_12SelectionDAGERKNS_5SDLocENS_7SDValueES6_S6_S6_jbbbNS_18MachinePointerInfoES7_'/>
<ovr f='llvm/llvm/lib/Target/BPF/BPFSelectionDAGInfo.cpp' l='20' c='_ZNK4llvm19BPFSelectionDAGInfo23EmitTargetCodeForMemcpyERNS_12SelectionDAGERKNS_5SDLocENS_7SDValueES6_S6_S6_jbbbNS_18MachinePointerInfoES7_'/>
<ovr f='llvm/llvm/lib/Target/Hexagon/HexagonSelectionDAGInfo.cpp' l='19' c='_ZNK4llvm23HexagonSelectionDAGInfo23EmitTargetCodeForMemcpyERNS_12SelectionDAGERKNS_5SDLocENS_7SDValueES6_S6_S6_jbbbNS_18MachinePointerInfoES7_'/>
<ovr f='llvm/llvm/lib/Target/Lanai/LanaiSelectionDAGInfo.cpp' l='21' c='_ZNK4llvm21LanaiSelectionDAGInfo23EmitTargetCodeForMemcpyERNS_12SelectionDAGERKNS_5SDLocENS_7SDValueES6_S6_S6_jbbbNS_18MachinePointerInfoES7_'/>
<ovr f='llvm/llvm/lib/Target/Mips/MipsSelectionDAGInfo.cpp' l='95' c='_ZNK4llvm20MipsSelectionDAGInfo23EmitTargetCodeForMemcpyERNS_12SelectionDAGERKNS_5SDLocENS_7SDValueES6_S6_S6_jbbbNS_18MachinePointerInfoES7_'/>
<ovr f='llvm/llvm/lib/Target/SystemZ/SystemZSelectionDAGInfo.cpp' l='48' c='_ZNK4llvm23SystemZSelectionDAGInfo23EmitTargetCodeForMemcpyERNS_12SelectionDAGERKNS_5SDLocENS_7SDValueES6_S6_S6_jbbbNS_18MachinePointerInfoES7_'/>
<ovr f='llvm/llvm/lib/Target/WebAssembly/WebAssemblySelectionDAGInfo.cpp' l='21' c='_ZNK4llvm27WebAssemblySelectionDAGInfo23EmitTargetCodeForMemcpyERNS_12SelectionDAGERKNS_5SDLocENS_7SDValueES6_S6_S6_jbbbNS_18MachinePointerInfoES7_'/>
<ovr f='llvm/llvm/lib/Target/X86/X86SelectionDAGInfo.cpp' l='291' c='_ZNK4llvm19X86SelectionDAGInfo23EmitTargetCodeForMemcpyERNS_12SelectionDAGERKNS_5SDLocENS_7SDValueES6_S6_S6_jbbbNS_18MachinePointerInfoES7_'/>
<ovr f='llvm/llvm/lib/Target/XCore/XCoreSelectionDAGInfo.cpp' l='18' c='_ZNK4llvm21XCoreSelectionDAGInfo23EmitTargetCodeForMemcpyERNS_12SelectionDAGERKNS_5SDLocENS_7SDValueES6_S6_S6_jbbbNS_18MachinePointerInfoES7_'/>
