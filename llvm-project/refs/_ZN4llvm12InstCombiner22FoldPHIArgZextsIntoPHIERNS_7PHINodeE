<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='828' type='llvm::Instruction * llvm::InstCombiner::FoldPHIArgZextsIntoPHI(llvm::PHINode &amp; PN)'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='650' ll='719' type='llvm::Instruction * llvm::InstCombiner::FoldPHIArgZextsIntoPHI(llvm::PHINode &amp; Phi)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='1126' u='c' c='_ZN4llvm12InstCombiner12visitPHINodeERNS_7PHINodeE'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp' l='647'>/// TODO: This function could handle other cast types, but then it might
/// require special-casing a cast from the &apos;i1&apos; type. See the comment in
/// FoldPHIArgOpIntoPHI() about pessimizing illegal integer types.</doc>
