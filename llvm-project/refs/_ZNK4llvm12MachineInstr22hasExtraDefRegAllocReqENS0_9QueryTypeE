<def f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='939' ll='941' type='bool llvm::MachineInstr::hasExtraDefRegAllocReq(llvm::MachineInstr::QueryType Type = AnyInBundle) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='933'>/// Returns true if this instruction def operands
  /// have special register allocation requirements that are not captured by the
  /// operand register classes. e.g. ARM::LDRD&apos;s two def registers must be an
  /// even / odd pair, ARM::LDM registers have to be in ascending order.
  /// Post-register allocation passes should not attempt to change allocations
  /// for definitions of instructions with this flag.</doc>
<use f='llvm/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp' l='389' u='c' c='_ZN4llvm24AggressiveAntiDepBreaker18PrescanInstructionERNS_12MachineInstrEjRSt3setIjSt4lessIjESaIjEE'/>
<use f='llvm/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp' l='603' u='c' c='_ZN4llvm22CriticalAntiDepBreaker21BreakAntiDependenciesERKSt6vectorINS_5SUnitESaIS2_EENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEES9_jRS1_7404272'/>
<use f='llvm/llvm/lib/CodeGen/MachineOperand.cpp' l='127' u='c' c='_ZNK4llvm14MachineOperand11isRenamableEv'/>
