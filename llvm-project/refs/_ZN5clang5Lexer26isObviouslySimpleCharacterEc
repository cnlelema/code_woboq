<use f='llvm/clang/include/clang/Lex/Lexer.h' l='532' u='c' c='_ZN5clang5Lexer20getCharAndSizeNoWarnEPKcRjRKNS_11LangOptionsE'/>
<def f='llvm/clang/include/clang/Lex/Lexer.h' l='603' ll='605' type='static bool clang::Lexer::isObviouslySimpleCharacter(char C)'/>
<use f='llvm/clang/include/clang/Lex/Lexer.h' l='614' u='c' c='_ZN5clang5Lexer17getAndAdvanceCharERPKcRNS_5TokenE'/>
<use f='llvm/clang/include/clang/Lex/Lexer.h' l='645' u='c' c='_ZN5clang5Lexer14getCharAndSizeEPKcRj'/>
<doc f='llvm/clang/include/clang/Lex/Lexer.h' l='581'>//===--------------------------------------------------------------------===//
  // Lexer character reading interfaces.

  // This lexer is built on two interfaces for reading characters, both of which
  // automatically provide phase 1/2 translation.  getAndAdvanceChar is used
  // when we know that we will be reading a character from the input buffer and
  // that this character will be part of the result token. This occurs in (f.e.)
  // string processing, because we know we need to read until we find the
  // closing &apos;&quot;&apos; character.
  //
  // The second interface is the combination of getCharAndSize with
  // ConsumeChar.  getCharAndSize reads a phase 1/2 translated character,
  // returning it and its size.  If the lexer decides that this character is
  // part of the current token, it calls ConsumeChar on it.  This two stage
  // approach allows us to emit diagnostics for characters (e.g. warnings about
  // trigraphs), knowing that they only are emitted if the character is
  // consumed.

  /// isObviouslySimpleCharacter - Return true if the specified character is
  /// obviously the same in translation phase 1 and translation phase 3.  This
  /// can return false for characters that end up being the same, but it will
  /// never return true for something that needs to be mapped.</doc>
<use f='llvm/clang/lib/Lex/Lexer.cpp' l='720' u='c' c='_ZN5clang5Lexer20getTokenPrefixLengthENS_14SourceLocationEjRKNS_13SourceManagerERKNS_11LangOptionsE'/>
<use f='llvm/clang/lib/Lex/Lexer.cpp' l='728' u='c' c='_ZN5clang5Lexer20getTokenPrefixLengthENS_14SourceLocationEjRKNS_13SourceManagerERKNS_11LangOptionsE'/>
<use f='llvm/clang/lib/Lex/Lexer.cpp' l='749' u='c' c='_ZN5clang5Lexer20getTokenPrefixLengthENS_14SourceLocationEjRKNS_13SourceManagerERKNS_11LangOptionsE'/>
