<dec f='llvm/llvm/include/llvm/CodeGen/FastISel.h' l='499' type='bool llvm::FastISel::canFoldAddIntoGEP(const llvm::User * GEP, const llvm::Value * Add)'/>
<def f='llvm/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp' l='2383' ll='2397' type='bool llvm::FastISel::canFoldAddIntoGEP(const llvm::User * GEP, const llvm::Value * Add)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/FastISel.h' l='492'>/// Check if \c Add is an add that can be safely folded into \c GEP.
  ///
  /// \c Add can be folded into \c GEP if:
  /// - \c Add is an add,
  /// - \c Add&apos;s size matches \c GEP&apos;s,
  /// - \c Add is in the same basic block as \c GEP, and
  /// - \c Add has a constant operand.</doc>
<use f='llvm/llvm/lib/Target/AArch64/AArch64FastISel.cpp' l='612' u='c' c='_ZN12_GLOBAL__N_115AArch64FastISel14computeAddressEPKN4llvm5ValueERNS0_7AddressEPNS1_4TypeE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMFastISel.cpp' l='775' u='c' c='_ZN12_GLOBAL__N_111ARMFastISel17ARMComputeAddressEPKN4llvm5ValueERNS_7AddressE'/>
<use f='llvm/llvm/lib/Target/Mips/MipsFastISel.cpp' l='509' u='c' c='_ZN12_GLOBAL__N_112MipsFastISel14computeAddressEPKN4llvm5ValueERNS0_7AddressE'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCFastISel.cpp' l='365' u='c' c='_ZN12_GLOBAL__N_111PPCFastISel17PPCComputeAddressEPKN4llvm5ValueERNS_7AddressE'/>
<use f='llvm/llvm/lib/Target/WebAssembly/WebAssemblyFastISel.cpp' l='291' u='c' c='_ZN12_GLOBAL__N_119WebAssemblyFastISel14computeAddressEPKN4llvm5ValueERNS0_7AddressE'/>
<use f='llvm/llvm/lib/Target/X86/X86FastISel.cpp' l='922' u='c' c='_ZN12_GLOBAL__N_111X86FastISel16X86SelectAddressEPKN4llvm5ValueERNS1_14X86AddressModeE'/>
