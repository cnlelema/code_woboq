<dec f='llvm/clang/include/clang/Lex/LiteralSupport.h' l='103' type='bool clang::NumericLiteralParser::GetIntegerValue(llvm::APInt &amp; Val)'/>
<doc f='llvm/clang/include/clang/Lex/LiteralSupport.h' l='99'>/// GetIntegerValue - Convert this numeric literal value to an APInt that
  /// matches Val&apos;s input width.  If there is an overflow (i.e., if the unsigned
  /// value read is larger than the APInt&apos;s bits will hold), set Val to the low
  /// bits of the result and return true.  Otherwise, return false.</doc>
<def f='llvm/clang/lib/Lex/LiteralSupport.cpp' l='982' ll='1037' type='bool clang::NumericLiteralParser::GetIntegerValue(llvm::APInt &amp; Val)'/>
<doc f='llvm/clang/lib/Lex/LiteralSupport.cpp' l='979'>/// GetIntegerValue - Convert this numeric literal value to an APInt that
/// matches Val&apos;s input width.  If there is an overflow, set Val to the low bits
/// of the result and return true.  Otherwise, return false.</doc>
<use f='llvm/clang/lib/Lex/PPExpressions.cpp' l='305' u='c' c='_ZL13EvaluateValueRN12_GLOBAL__N_17PPValueERN5clang5TokenER14DefinedTrackerbRNS2_12PreprocessorE'/>
<use f='llvm/clang/lib/Lex/Preprocessor.cpp' l='1349' u='c' c='_ZN5clang12Preprocessor25parseSimpleIntegerLiteralERNS_5TokenERm'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='3612' u='c' c='_ZN5clang4Sema20ActOnNumericConstantERKNS_5TokenEPNS_5ScopeE'/>
