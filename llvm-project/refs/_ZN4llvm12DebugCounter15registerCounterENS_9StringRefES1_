<def f='llvm/llvm/include/llvm/Support/DebugCounter.h' l='70' ll='72' type='static unsigned int llvm::DebugCounter::registerCounter(llvm::StringRef Name, llvm::StringRef Desc)'/>
<use f='llvm/llvm/lib/CodeGen/MachineCopyPropagation.cpp' l='71' macro='1' u='c'/>
<doc f='llvm/llvm/include/llvm/Support/DebugCounter.h' l='65'>// Register a counter with the specified name.
  //
  // FIXME: Currently, counter registration is required to happen before command
  // line option parsing. The main reason to register counters is to produce a
  // nice list of them on the command line, but i&apos;m not sure this is worth it.</doc>
<use f='llvm/llvm/lib/Target/AArch64/AArch64FalkorHWPFFix.cpp' l='63' macro='1' u='c'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp' l='64' macro='1' u='c'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp' l='66' macro='1' u='c'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp' l='68' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='121' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/Scalar/ConstantProp.cpp' l='37' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/Scalar/DCE.cpp' l='34' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/Scalar/DivRemPairs.cpp' l='32' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/Scalar/EarlyCSE.cpp' l='75' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/Scalar/NewGVN.cpp' l='142' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/Scalar/NewGVN.cpp' l='144' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/Scalar/PartiallyInlineLibCalls.cpp' l='27' macro='1' u='c'/>
<use f='llvm/llvm/lib/Transforms/Utils/PredicateInfo.cpp' l='52' macro='1' u='c'/>
<use f='llvm/llvm/unittests/Support/DebugCounterTest.cpp' l='17' macro='1' u='c'/>
