<dec f='llvm/llvm/include/llvm/Analysis/PhiValues.h' l='111' type='void llvm::PhiValues::processPhi(const llvm::PHINode * PN, SmallVector&lt;const llvm::PHINode *, 8&gt; &amp; Stack)'/>
<doc f='llvm/llvm/include/llvm/Analysis/PhiValues.h' l='109'>/// Process a phi so that its entries in the depth and reachable maps are
  /// fully populated.</doc>
<def f='llvm/llvm/lib/Analysis/PhiValues.cpp' l='49' ll='111' type='void llvm::PhiValues::processPhi(const llvm::PHINode * Phi, SmallVector&lt;const llvm::PHINode *, 8&gt; &amp; Stack)'/>
<use f='llvm/llvm/lib/Analysis/PhiValues.cpp' l='63' u='c' c='_ZN4llvm9PhiValues10processPhiEPKNS_7PHINodeERNS_11SmallVectorIS3_Lj8EEE'/>
<use f='llvm/llvm/lib/Analysis/PhiValues.cpp' l='116' u='c' c='_ZN4llvm9PhiValues15getValuesForPhiEPKNS_7PHINodeE'/>
<doc f='llvm/llvm/lib/Analysis/PhiValues.cpp' l='33'>// The goal here is to find all of the non-phi values reachable from this phi,
// and to do the same for all of the phis reachable from this phi, as doing so
// is necessary anyway in order to get the values for this phi. We do this using
// Tarjan&apos;s algorithm with Nuutila&apos;s improvements to find the strongly connected
// components of the phi graph rooted in this phi:
//  * All phis in a strongly connected component will have the same reachable
//    non-phi values. The SCC may not be the maximal subgraph for that set of
//    reachable values, but finding out that isn&apos;t really necessary (it would
//    only reduce the amount of memory needed to store the values).
//  * Tarjan&apos;s algorithm completes components in a bottom-up manner, i.e. it
//    never completes a component before the components reachable from it have
//    been completed. This means that when we complete a component we have
//    everything we need to collect the values reachable from that component.
//  * We collect both the non-phi values reachable from each SCC, as that&apos;s what
//    we&apos;re ultimately interested in, and all of the reachable values, i.e.
//    including phis, as that makes invalidateValue easier.</doc>
