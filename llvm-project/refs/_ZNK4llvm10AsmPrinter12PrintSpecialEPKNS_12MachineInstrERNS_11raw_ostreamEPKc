<dec f='llvm/llvm/include/llvm/CodeGen/AsmPrinter.h' l='591' type='void llvm::AsmPrinter::PrintSpecial(const llvm::MachineInstr * MI, llvm::raw_ostream &amp; OS, const char * Code) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/AsmPrinter.h' l='578'>//===------------------------------------------------------------------===//
  // Inline Asm Support
  //===------------------------------------------------------------------===//

  // These are hooks that targets can override to implement inline asm
  // support.  These should probably be moved out of AsmPrinter someday.

  /// Print information related to the specified machine instr that is
  /// independent of the operand, and may be independent of the instr itself.
  /// This can be useful for portably encoding the comment character or other
  /// bits of target-specific knowledge into the asmstrings.  The syntax used is
  /// ${:comment}.  Targets can override this to add support for their own
  /// strange codes.</doc>
<use f='llvm/llvm/lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp' l='222' u='c' c='_ZL18EmitMSInlineAsmStrPKcPKN4llvm12MachineInstrEPNS1_17MachineModuleInfoEPNS1_10AsmPrinterEjRNS1_11raw_ostreamE'/>
<use f='llvm/llvm/lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp' l='364' u='c' c='_ZL19EmitGCCInlineAsmStrPKcPKN4llvm12MachineInstrEPNS1_17MachineModuleInfoEiPNS1_10AsmPrinterEjRNS1_11raw_ostreamE'/>
<def f='llvm/llvm/lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp' l='575' ll='600' type='void llvm::AsmPrinter::PrintSpecial(const llvm::MachineInstr * MI, llvm::raw_ostream &amp; OS, const char * Code) const'/>
<doc f='llvm/llvm/lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp' l='569'>/// PrintSpecial - Print information related to the specified machine instr
/// that is independent of the operand, and may be independent of the instr
/// itself.  This can be useful for portably encoding the comment character
/// or other bits of target-specific knowledge into the asmstrings.  The
/// syntax used is ${:comment}.  Targets can override this to add support
/// for their own strange codes.</doc>
