<dec f='llvm/llvm/lib/Target/AArch64/MCTargetDesc/AArch64FixupKinds.h' l='26' type='130'/>
<use f='llvm/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AsmBackend.cpp' l='124' c='_ZL20getFixupKindNumBytesj'/>
<use f='llvm/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AsmBackend.cpp' l='179' c='_ZL16adjustFixupValueRKN4llvm7MCFixupERKNS_7MCValueEmRNS_9MCContextERKNS_6TripleEb'/>
<use f='llvm/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AsmBackend.cpp' l='352' c='_ZNK12_GLOBAL__N_117AArch64AsmBackend33getFixupKindContainereSizeInBytesEj'/>
<doc f='llvm/llvm/lib/Target/AArch64/MCTargetDesc/AArch64FixupKinds.h' l='24'>// 12-bit fixup for add/sub instructions. No alignment adjustment. All value
  // bits are encoded.</doc>
<use f='llvm/llvm/lib/Target/AArch64/MCTargetDesc/AArch64ELFObjectWriter.cpp' l='205' c='_ZNK12_GLOBAL__N_122AArch64ELFObjectWriter12getRelocTypeERN4llvm9MCContextERKNS1_7MCValueERKNS1_7MCFixupEb'/>
<use f='llvm/llvm/lib/Target/AArch64/MCTargetDesc/AArch64MCCodeEmitter.cpp' l='276' u='r' c='_ZNK12_GLOBAL__N_120AArch64MCCodeEmitter19getAddSubImmOpValueERKN4llvm6MCInstEjRNS1_15SmallVectorImplINS1_7MCFixupEEERKNS1_15MCSubtargetInfoE'/>
<use f='llvm/llvm/lib/Target/AArch64/MCTargetDesc/AArch64MachObjectWriter.cpp' l='77' c='_ZN12_GLOBAL__N_123AArch64MachObjectWriter28getAArch64FixupKindMachOInfoERKN4llvm7MCFixupERjPKNS1_15MCSymbolRefExprES5_RKNS1_11MCAssemblerE'/>
<use f='llvm/llvm/lib/Target/AArch64/MCTargetDesc/AArch64WinCOFFObjectWriter.cpp' l='76' c='_ZNK12_GLOBAL__N_126AArch64WinCOFFObjectWriter12getRelocTypeERN4llvm9MCContextERKNS1_7MCValueERKNS1_7MCFixupEbRKNS1_12MCAsmBackendE'/>
