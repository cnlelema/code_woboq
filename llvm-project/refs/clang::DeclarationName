<def f='llvm/clang/include/clang/AST/DeclarationName.h' l='145' ll='534'/>
<size>8</size>
<doc f='llvm/clang/include/clang/AST/DeclarationName.h' l='139'>/// The name of a declaration. In the common case, this just stores
/// an IdentifierInfo pointer to a normal name. However, it also provides
/// encodings for Objective-C selectors (optimizing zero- and one-argument
/// selectors, which make up 78% percent of all selectors in Cocoa.h),
/// special C++ names for constructors, destructors, and conversion functions,
/// and C++ overloaded operators.</doc>
<mbr r='clang::DeclarationName::Ptr' o='0' t='uintptr_t'/>
<fun r='_ZNK5clang15DeclarationName17getStoredNameKindEv'/>
<fun r='_ZNK5clang15DeclarationName6getPtrEv'/>
<fun r='_ZN5clang15DeclarationName13setPtrAndKindEPKvNS0_14StoredNameKindE'/>
<fun r='_ZN5clang15DeclarationNameC1EPNS_6detail20DeclarationNameExtraE'/>
<fun r='_ZN5clang15DeclarationNameC1EPNS_6detail19CXXSpecialNameExtraENS0_14StoredNameKindE'/>
<fun r='_ZN5clang15DeclarationNameC1EPNS_6detail17CXXOperatorIdNameE'/>
<fun r='_ZNK5clang15DeclarationName20castAsIdentifierInfoEv'/>
<fun r='_ZNK5clang15DeclarationName11castAsExtraEv'/>
<fun r='_ZNK5clang15DeclarationName25castAsCXXSpecialNameExtraEv'/>
<fun r='_ZNK5clang15DeclarationName23castAsCXXOperatorIdNameEv'/>
<fun r='_ZNK5clang15DeclarationName32castAsCXXDeductionGuideNameExtraEv'/>
<fun r='_ZNK5clang15DeclarationName30castAsCXXLiteralOperatorIdNameEv'/>
<fun r='_ZNK5clang15DeclarationName18getFETokenInfoSlowEv'/>
<fun r='_ZN5clang15DeclarationName18setFETokenInfoSlowEPv'/>
<fun r='_ZN5clang15DeclarationNameC1Ev'/>
<fun r='_ZN5clang15DeclarationNameC1EPKNS_14IdentifierInfoE'/>
<fun r='_ZN5clang15DeclarationNameC1ENS_8SelectorE'/>
<fun r='_ZN5clang15DeclarationName21getUsingDirectiveNameEv'/>
<fun r='_ZNK5clang15DeclarationNamecvbEv'/>
<fun r='_ZNK5clang15DeclarationName7isEmptyEv'/>
<fun r='_ZNK5clang15DeclarationName12isIdentifierEv'/>
<fun r='_ZNK5clang15DeclarationName21isObjCZeroArgSelectorEv'/>
<fun r='_ZNK5clang15DeclarationName20isObjCOneArgSelectorEv'/>
<fun r='_ZNK5clang15DeclarationName11getNameKindEv'/>
<fun r='_ZNK5clang15DeclarationName15isDependentNameEv'/>
<fun r='_ZNK5clang15DeclarationName11getAsStringEv'/>
<fun r='_ZNK5clang15DeclarationName19getAsIdentifierInfoEv'/>
<fun r='_ZNK5clang15DeclarationName18getAsOpaqueIntegerEv'/>
<fun r='_ZNK5clang15DeclarationName14getAsOpaquePtrEv'/>
<fun r='_ZN5clang15DeclarationName16getFromOpaquePtrEPv'/>
<fun r='_ZN5clang15DeclarationName20getFromOpaqueIntegerEm'/>
<fun r='_ZNK5clang15DeclarationName14getCXXNameTypeEv'/>
<fun r='_ZNK5clang15DeclarationName28getCXXDeductionGuideTemplateEv'/>
<fun r='_ZNK5clang15DeclarationName24getCXXOverloadedOperatorEv'/>
<fun r='_ZNK5clang15DeclarationName23getCXXLiteralIdentifierEv'/>
<fun r='_ZNK5clang15DeclarationName15getObjCSelectorEv'/>
<fun r='_ZNK5clang15DeclarationName14getFETokenInfoEv'/>
<fun r='_ZN5clang15DeclarationName14setFETokenInfoEPv'/>
<fun r='_ZN5clang15DeclarationName14getEmptyMarkerEv'/>
<fun r='_ZN5clang15DeclarationName18getTombstoneMarkerEv'/>
<fun r='_ZN5clang15DeclarationName7compareES0_S0_'/>
<fun r='_ZN5clang15DeclarationName5printERN4llvm11raw_ostreamERKNS_14PrintingPolicyE'/>
<fun r='_ZNK5clang15DeclarationName4dumpEv'/>
