<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='332' type='llvm::SmallBitVector'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='341' u='m' c='_ZN4llvm15LegalizeRuleSet7typeIdxEj'/>
<use f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='347' u='m' c='_ZN4llvm15LegalizeRuleSet24markAllTypeIdxsAsCoveredEv'/>
<offset>1344</offset>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h' l='325'>/// If bit I is set, this rule set contains a rule that may handle (predicate
  /// or perform an action upon (or both)) the type index I. The uncertainty
  /// comes from free-form rules executing user-provided lambda functions. We
  /// conservatively assume such rules do the right thing and cover all type
  /// indices. The bitset is intentionally 1 bit wider than it absolutely needs
  /// to be to distinguish such cases from the cases where all type indices are
  /// individually handled.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerInfo.cpp' l='211' u='m' c='_ZNK4llvm15LegalizeRuleSet22verifyTypeIdxsCoverageEj'/>
