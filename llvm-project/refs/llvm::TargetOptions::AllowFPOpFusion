<dec f='llvm/llvm/include/llvm/Target/TargetOptions.h' l='279' type='FPOpFusion::FPOpFusionMode'/>
<offset>256</offset>
<doc f='llvm/llvm/include/llvm/Target/TargetOptions.h' l='263'>/// AllowFPOpFusion - This flag is set by the -fuse-fp-ops=xxx option.
    /// This controls the creation of fused FP ops that store intermediate
    /// results in higher precision than IEEE allows (E.g. FMAs).
    ///
    /// Fast mode - allows formation of fused FP ops whenever they&apos;re
    /// profitable.
    /// Standard mode - allow fusion only for &apos;blessed&apos; FP ops. At present the
    /// only blessed op is the fmuladd intrinsic. In the future more blessed ops
    /// may be added.
    /// Strict mode - allow fusion only if/when it can be proven that the excess
    /// precision won&apos;t effect the result.
    ///
    /// Note: This option only controls formation of fused ops by the
    /// optimizers.  Fused operations that are explicitly specified (e.g. FMA
    /// via the llvm.fma.* intrinsic) will always be honored, regardless of
    /// the value of this option.</doc>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='447' u='w' c='_ZL17initTargetOptionsRN4llvm13TargetOptionsERKN5clang14CodeGenOptionsERKNS2_13TargetOptionsERKNS2_11LangOptionsERKNS2_19HeaderSearchOptionsE'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='450' u='w' c='_ZL17initTargetOptionsRN4llvm13TargetOptionsERKN5clang14CodeGenOptionsERKNS2_13TargetOptionsERKNS2_11LangOptionsERKNS2_19HeaderSearchOptionsE'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='453' u='w' c='_ZL17initTargetOptionsRN4llvm13TargetOptionsERKN5clang14CodeGenOptionsERKNS2_13TargetOptionsERKNS2_11LangOptionsERKNS2_19HeaderSearchOptionsE'/>
<use f='llvm/llvm/include/llvm/CodeGen/CommandFlags.inc' l='278' u='w' c='_ZL33InitTargetOptionsFromCodeGenFlagsv'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp' l='11197' u='r' c='_ZN12_GLOBAL__N_111DAGCombiner22visitFADDForFMACombineEPN4llvm6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp' l='11408' u='r' c='_ZN12_GLOBAL__N_111DAGCombiner22visitFSUBForFMACombineEPN4llvm6SDNodeE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp' l='11696' u='r' c='_ZN12_GLOBAL__N_111DAGCombiner34visitFMULForFMADistributiveCombineEPN4llvm6SDNodeE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='8209' u='r' c='_ZNK4llvm21AArch64TargetLowering19isProfitableToHoistEPNS_11InstructionE'/>
<use f='llvm/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp' l='3426' u='r' c='_ZL25isCombineInstrCandidateFPRKN4llvm12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIISelLowering.cpp' l='8786' u='r' c='_ZNK4llvm16SITargetLowering14getFusedOpcodeERKNS_12SelectionDAGEPKNS_6SDNodeES6_'/>
<use f='llvm/llvm/lib/Target/AMDGPU/SIISelLowering.cpp' l='9084' u='r' c='_ZNK4llvm16SITargetLowering17performFMACombineEPNS_6SDNodeERNS_14TargetLowering15DAGCombinerInfoE'/>
<use f='llvm/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp' l='4315' u='r' c='_ZNK4llvm19NVPTXTargetLowering8allowFMAERNS_15MachineFunctionENS_10CodeGenOpt5LevelE'/>
<use f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='8434' u='r' c='_ZL20isFMAddSubOrFMSubAddRKN4llvm12X86SubtargetERNS_12SelectionDAGERNS_7SDValueES6_S6_j'/>
