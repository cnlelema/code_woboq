<def f='llvm/lld/COFF/Chunks.h' l='55' ll='143'/>
<ovr f='llvm/lld/COFF/Chunks.h' l='145' c='lld::coff::NonSectionChunk'/>
<ovr f='llvm/lld/COFF/Chunks.h' l='181' c='lld::coff::SectionChunk'/>
<size>8</size>
<doc f='llvm/lld/COFF/Chunks.h' l='51'>// A Chunk represents a chunk of data that will occupy space in the
// output (if the resolver chose that). It may or may not be backed by
// a section of an input file. It could be linker-created data, or
// doesn&apos;t even have actual data (if common or bss).</doc>
<fun r='_ZNK3lld4coff5Chunk4kindEv'/>
<fun r='_ZNK3lld4coff5Chunk7getSizeEv'/>
<fun r='_ZNK3lld4coff5Chunk12getAlignmentEv'/>
<fun r='_ZN3lld4coff5Chunk12setAlignmentEj'/>
<fun r='_ZNK3lld4coff5Chunk7writeToEPh'/>
<fun r='_ZNK3lld4coff5Chunk6getRVAEv'/>
<fun r='_ZN3lld4coff5Chunk6setRVAEm'/>
<fun r='_ZNK3lld4coff5Chunk7hasDataEv'/>
<fun r='_ZNK3lld4coff5Chunk24getOutputCharacteristicsEv'/>
<fun r='_ZNK3lld4coff5Chunk14getSectionNameEv'/>
<fun r='_ZN3lld4coff5Chunk19setOutputSectionIdxEt'/>
<fun r='_ZNK3lld4coff5Chunk19getOutputSectionIdxEv'/>
<fun r='_ZNK3lld4coff5Chunk16getOutputSectionEv'/>
<fun r='_ZN3lld4coff5Chunk11getBaserelsEPSt6vectorINS0_7BaserelESaIS3_EE'/>
<fun r='_ZNK3lld4coff5Chunk12getDebugNameEv'/>
<fun r='_ZNK3lld4coff5Chunk14isHotPatchableEv'/>
<fun r='_ZN3lld4coff5ChunkC1ENS1_4KindE'/>
<mbr r='lld::coff::Chunk::ChunkKind' o='0' t='const lld::coff::Chunk::Kind'/>
<mbr r='lld::coff::Chunk::HasData' o='8' t='uint8_t'/>
<mbr r='lld::coff::Chunk::P2Align' o='9' t='uint8_t'/>
<mbr r='lld::coff::Chunk::OSIdx' o='16' t='uint16_t'/>
<mbr r='lld::coff::Chunk::RVA' o='32' t='uint32_t'/>
<fun r='_ZNK3lld4coff5Chunk7getSizeEv'/>
<fun r='_ZNK3lld4coff5Chunk24getOutputCharacteristicsEv'/>
<fun r='_ZNK3lld4coff5Chunk7writeToEPh'/>
<fun r='_ZNK3lld4coff5Chunk14getSectionNameEv'/>
<fun r='_ZN3lld4coff5Chunk11getBaserelsEPSt6vectorINS0_7BaserelESaIS3_EE'/>
<fun r='_ZNK3lld4coff5Chunk12getDebugNameEv'/>
<fun r='_ZNK3lld4coff5Chunk14isHotPatchableEv'/>
