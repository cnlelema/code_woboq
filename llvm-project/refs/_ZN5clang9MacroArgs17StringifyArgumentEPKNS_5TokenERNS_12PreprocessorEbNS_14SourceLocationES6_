<dec f='llvm/clang/include/clang/Lex/MacroArgs.h' l='134' type='static clang::Token clang::MacroArgs::StringifyArgument(const clang::Token * ArgToks, clang::Preprocessor &amp; PP, bool Charify, clang::SourceLocation ExpansionLocStart, clang::SourceLocation ExpansionLocEnd)'/>
<def f='llvm/clang/lib/Lex/MacroArgs.cpp' l='210' ll='309' type='static clang::Token clang::MacroArgs::StringifyArgument(const clang::Token * ArgToks, clang::Preprocessor &amp; PP, bool Charify, clang::SourceLocation ExpansionLocStart, clang::SourceLocation ExpansionLocEnd)'/>
<use f='llvm/clang/lib/Lex/MacroArgs.cpp' l='322' u='c' c='_ZN5clang9MacroArgs22getStringifiedArgumentEjRNS_12PreprocessorENS_14SourceLocationES3_'/>
<doc f='llvm/clang/lib/Lex/MacroArgs.cpp' l='205'>/// StringifyArgument - Implement C99 6.10.3.2p2, converting a sequence of
/// tokens into the literal string token that should be produced by the C #
/// preprocessor operator.  If Charify is true, then it should be turned into
/// a character literal for the Microsoft charize (#@) extension.
///</doc>
<doc f='llvm/clang/include/clang/Lex/MacroArgs.h' l='129'>/// StringifyArgument - Implement C99 6.10.3.2p2, converting a sequence of
  /// tokens into the literal string token that should be produced by the C #
  /// preprocessor operator.  If Charify is true, then it should be turned into
  /// a character literal for the Microsoft charize (#@) extension.
  ///</doc>
<use f='llvm/clang/lib/Lex/TokenLexer.cpp' l='227' u='c' c='_ZN5clang10TokenLexer22stringifyVAOPTContentsERN4llvm15SmallVectorImplINS_5TokenEEERKNS_21VAOptExpansionContextENS_14SourceLocationE'/>
<use f='llvm/clang/lib/Lex/TokenLexer.cpp' l='393' u='c' c='_ZN5clang10TokenLexer23ExpandFunctionArgumentsEv'/>
