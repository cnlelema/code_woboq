<dec f='llvm/llvm/lib/Target/AMDGPU/AMDKernelCodeT.h' l='161' type='17'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDKernelCodeT.h' l='163' u='r'/>
<doc f='llvm/llvm/lib/Target/AMDGPU/AMDKernelCodeT.h' l='140'>/// The interleave (swizzle) element size in bytes required by the
  /// code for private memory. This must be 2, 4, 8 or 16. This value
  /// is provided to the finalizer when it is invoked and is recorded
  /// here. The hardware will interleave the memory requests of each
  /// lane of a wavefront by this element size to ensure each
  /// work-item gets a distinct memory memory location. Therefore, the
  /// finalizer ensures that all load and store operations done to
  /// private memory do not exceed this size. For example, if the
  /// element size is 4 (32-bits or dword) and a 64-bit value must be
  /// loaded, the finalizer will generate two 32-bit loads. This
  /// ensures that the interleaving will get the work-item
  /// specific dword for both halves of the 64-bit value. If it just
  /// did a 64-bit load then it would get one dword which belonged to
  /// its own work-item, but the second dword would belong to the
  /// adjacent lane work-item since the interleaving is in dwords.
  ///
  /// The value used must match the value that the runtime configures
  /// the GPU flat scratch (SH_STATIC_MEM_CONFIG.ELEMENT_SIZE). This
  /// is generally DWORD.
  ///
  /// uSE VALUES FROM THE AMD_ELEMENT_BYTE_SIZE_T ENUM.</doc>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUAsmPrinter.cpp' l='1120' macro='1' u='r'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUAsmPrinter.cpp' l='1120' macro='1' u='r'/>
<use f='llvm/llvm/lib/Target/AMDGPU/Utils/AMDKernelCodeTInfo.h' l='113' macro='1' u='r'/>
<use f='llvm/llvm/lib/Target/AMDGPU/Utils/AMDKernelCodeTInfo.h' l='113' macro='1' u='r'/>
<use f='llvm/llvm/lib/Target/AMDGPU/Utils/AMDKernelCodeTInfo.h' l='113' macro='1' u='r'/>
<use f='llvm/llvm/lib/Target/AMDGPU/Utils/AMDKernelCodeTInfo.h' l='113' macro='1' u='r'/>
