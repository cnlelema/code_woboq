<def f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='523' type='bool llvm::LoopAccessInfo::canVectorizeMemory() const'/>
<doc f='llvm/llvm/include/llvm/Analysis/LoopAccessAnalysis.h' l='521'>/// Return true we can analyze the memory accesses in the loop and there are
  /// no memory dependence cycles.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopDistribute.cpp' l='685' u='c' c='_ZN12_GLOBAL__N_121LoopDistributeForLoop11processLoopERSt8functionIFRKN4llvm14LoopAccessInfoERNS2_4LoopEEE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp' l='834' u='c' c='_ZN4llvm25LoopVectorizationLegality18canVectorizeMemoryEv'/>
