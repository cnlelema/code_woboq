<dec f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='576' type='bool llvm::TreePredicateFn::isAtomicOrderingSequentiallyConsistent() const'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='928' u='c' c='_ZNK4llvm15TreePredicateFn11getPredCodeEv'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='948' u='c' c='_ZNK4llvm15TreePredicateFn11getPredCodeEv'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='986' u='c' c='_ZNK4llvm15TreePredicateFn11getPredCodeEv'/>
<def f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='1136' ll='1139' type='bool llvm::TreePredicateFn::isAtomicOrderingSequentiallyConsistent() const'/>
<doc f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='575'>/// Is this predicate the predefined sequentially consistent atomic predicate?</doc>
<use f='llvm/llvm/utils/TableGen/GlobalISelEmitter.cpp' l='243' u='c' c='_ZN12_GLOBAL__N_1L17explainPredicatesEPKN4llvm15TreePatternNodeE'/>
<use f='llvm/llvm/utils/TableGen/GlobalISelEmitter.cpp' l='319' u='c' c='_ZN12_GLOBAL__N_1L21isTrivialOperatorNodeEPKN4llvm15TreePatternNodeE'/>
<use f='llvm/llvm/utils/TableGen/GlobalISelEmitter.cpp' l='3283' u='c' c='_ZN12_GLOBAL__N_117GlobalISelEmitter28createAndImportSelDAGMatcherERNS_11RuleMatcherERNS_18InstructionMatcherEPKN4llvm15TreePatternNodeERj'/>
