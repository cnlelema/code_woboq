<def f='llvm/llvm/lib/CodeGen/RegisterCoalescer.h' l='26' ll='108'/>
<size>40</size>
<doc f='llvm/llvm/lib/CodeGen/RegisterCoalescer.h' l='23'>/// A helper class for register coalescers. When deciding if
  /// two registers can be coalesced, CoalescerPair can determine if a copy
  /// instruction would become an identity copy after coalescing.</doc>
<mbr r='llvm::CoalescerPair::TRI' o='0' t='const llvm::TargetRegisterInfo &amp;'/>
<mbr r='llvm::CoalescerPair::DstReg' o='64' t='unsigned int'/>
<mbr r='llvm::CoalescerPair::SrcReg' o='96' t='unsigned int'/>
<mbr r='llvm::CoalescerPair::DstIdx' o='128' t='unsigned int'/>
<mbr r='llvm::CoalescerPair::SrcIdx' o='160' t='unsigned int'/>
<mbr r='llvm::CoalescerPair::Partial' o='192' t='bool'/>
<mbr r='llvm::CoalescerPair::CrossClass' o='200' t='bool'/>
<mbr r='llvm::CoalescerPair::Flipped' o='208' t='bool'/>
<mbr r='llvm::CoalescerPair::NewRC' o='256' t='const llvm::TargetRegisterClass *'/>
<fun r='_ZN4llvm13CoalescerPairC1ERKNS_18TargetRegisterInfoE'/>
<fun r='_ZN4llvm13CoalescerPairC1EjjRKNS_18TargetRegisterInfoE'/>
<fun r='_ZN4llvm13CoalescerPair12setRegistersEPKNS_12MachineInstrE'/>
<fun r='_ZN4llvm13CoalescerPair4flipEv'/>
<fun r='_ZNK4llvm13CoalescerPair13isCoalescableEPKNS_12MachineInstrE'/>
<fun r='_ZNK4llvm13CoalescerPair6isPhysEv'/>
<fun r='_ZNK4llvm13CoalescerPair9isPartialEv'/>
<fun r='_ZNK4llvm13CoalescerPair12isCrossClassEv'/>
<fun r='_ZNK4llvm13CoalescerPair9isFlippedEv'/>
<fun r='_ZNK4llvm13CoalescerPair9getDstRegEv'/>
<fun r='_ZNK4llvm13CoalescerPair9getSrcRegEv'/>
<fun r='_ZNK4llvm13CoalescerPair9getDstIdxEv'/>
<fun r='_ZNK4llvm13CoalescerPair9getSrcIdxEv'/>
<fun r='_ZNK4llvm13CoalescerPair8getNewRCEv'/>
