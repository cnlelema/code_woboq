<dec f='llvm/llvm/utils/unittest/googletest/src/gtest-internal-inl.h' l='633' type='testing::TestCase * testing::internal::UnitTestImpl::GetTestCase(const char * test_case_name, const char * type_param, Test::SetUpTestCaseFunc set_up_tc, Test::TearDownTestCaseFunc tear_down_tc)'/>
<use f='llvm/llvm/utils/unittest/googletest/src/gtest-internal-inl.h' l='661' u='c' c='_ZN7testing8internal12UnitTestImpl11AddTestInfoEPFvvES3_PNS_8TestInfoE'/>
<def f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='4502' ll='4535' type='testing::TestCase * testing::internal::UnitTestImpl::GetTestCase(const char * test_case_name, const char * type_param, Test::SetUpTestCaseFunc set_up_tc, Test::TearDownTestCaseFunc tear_down_tc)'/>
<doc f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='4490'>// Finds and returns a TestCase with the given name.  If one doesn&apos;t
// exist, creates one and returns it.  It&apos;s the CALLER&apos;S
// RESPONSIBILITY to ensure that this function is only called WHEN THE
// TESTS ARE NOT SHUFFLED.
//
// Arguments:
//
//   test_case_name: name of the test case
//   type_param:     the name of the test case&apos;s type parameter, or NULL if
//                   this is not a typed or a type-parameterized test case.
//   set_up_tc:      pointer to the function that sets up the test case
//   tear_down_tc:   pointer to the function that tears down the test case</doc>
<doc f='llvm/llvm/utils/unittest/googletest/src/gtest-internal-inl.h' l='623'>// Finds and returns a TestCase with the given name.  If one doesn&apos;t
  // exist, creates one and returns it.
  //
  // Arguments:
  //
  //   test_case_name: name of the test case
  //   type_param:     the name of the test&apos;s type parameter, or NULL if
  //                   this is not a typed or a type-parameterized test.
  //   set_up_tc:      pointer to the function that sets up the test case
  //   tear_down_tc:   pointer to the function that tears down the test case</doc>
