<def f='llvm/llvm/include/llvm/ADT/EquivalenceClasses.h' l='207' ll='210' type='llvm::EquivalenceClasses::member_iterator llvm::EquivalenceClasses::findLeader(iterator I) const'/>
<doc f='llvm/llvm/include/llvm/ADT/EquivalenceClasses.h' l='203'>/// findLeader - Given a value in the set, return a member iterator for the
  /// equivalence class it is in.  This does the path-compression part that
  /// makes union-find &quot;union findy&quot;.  This returns an end iterator if the value
  /// is not in the equivalence class.</doc>
<use f='llvm/llvm/lib/Transforms/Utils/SplitModule.cpp' l='200' u='c' c='_ZL14findPartitionsPN4llvm6ModuleERNS_8DenseMapIPKNS_11GlobalValueEjNS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_jEEEEj'/>
