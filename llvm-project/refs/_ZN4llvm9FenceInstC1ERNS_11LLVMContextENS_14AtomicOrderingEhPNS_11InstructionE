<dec f='llvm/llvm/include/llvm/IR/Instructions.h' l='466' type='void llvm::FenceInst::FenceInst(llvm::LLVMContext &amp; C, llvm::AtomicOrdering Ordering, SyncScope::ID SSID = SyncScope::System, llvm::Instruction * InsertBefore = nullptr)'/>
<doc f='llvm/llvm/include/llvm/IR/Instructions.h' l='464'>// Ordering may only be Acquire, Release, AcquireRelease, or
  // SequentiallyConsistent.</doc>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='7139' u='c' c='_ZN4llvm8LLParser10ParseFenceERPNS_11InstructionERNS0_16PerFunctionStateE'/>
<use f='llvm/llvm/lib/Bitcode/Reader/BitcodeReader.cpp' l='4701' u='c' c='_ZN12_GLOBAL__N_113BitcodeReader17parseFunctionBodyEPN4llvm8FunctionE'/>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='1566' ll='1572' type='void llvm::FenceInst::FenceInst(llvm::LLVMContext &amp; C, llvm::AtomicOrdering Ordering, SyncScope::ID SSID = SyncScope::System, llvm::Instruction * InsertBefore = nullptr)'/>
<use f='llvm/llvm/lib/IR/Instructions.cpp' l='4229' u='c' c='_ZNK4llvm9FenceInst9cloneImplEv'/>
<doc f='llvm/llvm/lib/IR/Instructions.cpp' l='1562'>//===----------------------------------------------------------------------===//
//                       FenceInst Implementation
//===----------------------------------------------------------------------===//</doc>
