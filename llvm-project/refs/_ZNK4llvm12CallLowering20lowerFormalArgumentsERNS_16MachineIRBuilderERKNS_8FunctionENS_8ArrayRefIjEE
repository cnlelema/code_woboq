<def f='llvm/llvm/include/llvm/CodeGen/GlobalISel/CallLowering.h' l='192' ll='196' type='bool llvm::CallLowering::lowerFormalArguments(llvm::MachineIRBuilder &amp; MIRBuilder, const llvm::Function &amp; F, ArrayRef&lt;unsigned int&gt; VRegs) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/CallLowering.h' l='183'>/// This hook must be implemented to lower the incoming (formal)
  /// arguments, described by \p Args, for GlobalISel. Each argument
  /// must end up in the related virtual register described by VRegs.
  /// In other words, the first argument should end up in VRegs[0],
  /// the second in VRegs[1], and so on.
  /// \p MIRBuilder is set to the proper insertion for the argument
  /// lowering.
  ///
  /// \return True if the lowering succeeded, false otherwise.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp' l='1899' u='c' c='_ZN4llvm12IRTranslator20runOnMachineFunctionERNS_15MachineFunctionE'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64CallLowering.cpp' l='353' c='_ZNK4llvm19AArch64CallLowering20lowerFormalArgumentsERNS_16MachineIRBuilderERKNS_8FunctionENS_8ArrayRefIjEE'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/AMDGPUCallLowering.cpp' l='196' c='_ZNK4llvm18AMDGPUCallLowering20lowerFormalArgumentsERNS_16MachineIRBuilderERKNS_8FunctionENS_8ArrayRefIjEE'/>
<ovr f='llvm/llvm/lib/Target/ARM/ARMCallLowering.cpp' l='422' c='_ZNK4llvm15ARMCallLowering20lowerFormalArgumentsERNS_16MachineIRBuilderERKNS_8FunctionENS_8ArrayRefIjEE'/>
<ovr f='llvm/llvm/lib/Target/Mips/MipsCallLowering.cpp' l='445' c='_ZNK4llvm16MipsCallLowering20lowerFormalArgumentsERNS_16MachineIRBuilderERKNS_8FunctionENS_8ArrayRefIjEE'/>
<ovr f='llvm/llvm/lib/Target/X86/X86CallLowering.cpp' l='322' c='_ZNK4llvm15X86CallLowering20lowerFormalArgumentsERNS_16MachineIRBuilderERKNS_8FunctionENS_8ArrayRefIjEE'/>
