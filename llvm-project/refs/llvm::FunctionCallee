<def f='llvm/llvm/include/llvm/IR/DerivedTypes.h' l='164' ll='190'/>
<size>16</size>
<doc f='llvm/llvm/include/llvm/IR/DerivedTypes.h' l='160'>/// A handy container for a FunctionType+Callee-pointer pair, which can be
/// passed around as a single entity. This assists in replacing the use of
/// PointerType::getElementType() to access the function&apos;s type, since that&apos;s
/// slated for removal as part of the [opaque pointer types] project.</doc>
<fun r='_ZN4llvm14FunctionCalleeC1EPT_'/>
<fun r='_ZN4llvm14FunctionCalleeC1EPNS_12FunctionTypeEPNS_5ValueE'/>
<fun r='_ZN4llvm14FunctionCalleeC1EDn'/>
<fun r='_ZN4llvm14FunctionCalleeC1Ev'/>
<fun r='_ZN4llvm14FunctionCallee15getFunctionTypeEv'/>
<fun r='_ZN4llvm14FunctionCallee9getCalleeEv'/>
<fun r='_ZN4llvm14FunctionCalleecvbEv'/>
<mbr r='llvm::FunctionCallee::FnTy' o='0' t='llvm::FunctionType *'/>
<mbr r='llvm::FunctionCallee::Callee' o='64' t='llvm::Value *'/>
