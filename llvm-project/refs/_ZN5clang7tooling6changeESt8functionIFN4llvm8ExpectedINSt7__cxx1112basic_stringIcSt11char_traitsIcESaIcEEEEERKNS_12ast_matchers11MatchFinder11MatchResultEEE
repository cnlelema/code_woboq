<def f='llvm/clang/include/clang/Tooling/Refactoring/Transformer.h' l='192' ll='194' type='clang::tooling::ASTEdit clang::tooling::change(TextGenerator Replacement)'/>
<doc f='llvm/clang/include/clang/Tooling/Refactoring/Transformer.h' l='186'>/// Replaces the entirety of a RewriteRule&apos;s match with \p Replacement.  For
/// example, to replace a function call, one could write:
/// \code
///   makeRule(callExpr(callee(functionDecl(hasName(&quot;foo&quot;)))),
///            change(text(&quot;bar()&quot;)))
/// \endcode</doc>
<use f='llvm/clang/unittests/Tooling/TransformerTest.cpp' l='150' u='c' c='_ZN12_GLOBAL__N_1L14ruleStrlenSizeEv'/>
<use f='llvm/clang/unittests/Tooling/TransformerTest.cpp' l='469' u='c' c='_ZN12_GLOBAL__N_122ruleStrlenSizeDistinctEv'/>
<use f='llvm/clang/unittests/Tooling/TransformerTest.cpp' l='576' u='c' c='_ZN12_GLOBAL__N_146TransformerTest_ErrorOccurredMatchSkipped_Test8TestBodyEv'/>
