<dec f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.h' l='459' type='HexagonII::SubInstructionGroup llvm::HexagonInstrInfo::getDuplexCandidateGroup(const llvm::MachineInstr &amp; MI) const'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='2133' u='c' c='_ZNK4llvm16HexagonInstrInfo12isDuplexPairERKNS_12MachineInstrES3_'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='2134' u='c' c='_ZNK4llvm16HexagonInstrInfo12isDuplexPairERKNS_12MachineInstrES3_'/>
<def f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='3714' ll='4058' type='HexagonII::SubInstructionGroup llvm::HexagonInstrInfo::getDuplexCandidateGroup(const llvm::MachineInstr &amp; MI) const'/>
<doc f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='3712'>// See if instruction could potentially be a duplex candidate.
// If so, return its group. Zero otherwise.</doc>
