<dec f='llvm/llvm/include/llvm/Support/TargetOpcodes.def' l='67' type='11'/>
<use f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='1052' u='r' c='_ZNK4llvm12MachineInstr13isSubregToRegEv'/>
<use f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='1118' c='_ZNK4llvm12MachineInstr11isTransientEv'/>
<doc f='llvm/llvm/include/llvm/Support/TargetOpcodes.def' l='59'>/// SUBREG_TO_REG - Assert the value of bits in a super register.
/// The result of this instruction is the value of the second operand inserted
/// into the subregister specified by the third operand. All other bits are
/// assumed to be equal to the bits in the immediate integer constant in the
/// first operand. This instruction just communicates information; No code
/// should be generated.
/// This is typically used after an instruction where the write to a subregister
/// implicitly cleared the bits in the super registers.</doc>
<use f='llvm/llvm/lib/CodeGen/ExpandPostRAPseudos.cpp' l='210' c='_ZN12_GLOBAL__N_112ExpandPostRA20runOnMachineFunctionERN4llvm15MachineFunctionE'/>
<use f='llvm/llvm/lib/CodeGen/PeepholeOptimizer.cpp' l='530' u='r' c='_ZN12_GLOBAL__N_117PeepholeOptimizer16optimizeExtInstrERN4llvm12MachineInstrERNS1_17MachineBasicBlockERNS1_15SmallPtrSetImplIPS2_EE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/InstrEmitter.cpp' l='550' u='r' c='_ZN4llvm12InstrEmitter14EmitSubregNodeEPNS_6SDNodeERNS_8DenseMapINS_7SDValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEEbb'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/InstrEmitter.cpp' l='584' u='r' c='_ZN4llvm12InstrEmitter14EmitSubregNodeEPNS_6SDNodeERNS_8DenseMapINS_7SDValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEEbb'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/InstrEmitter.cpp' l='791' u='r' c='_ZN4llvm12InstrEmitter15EmitMachineNodeEPNS_6SDNodeEbbRNS_8DenseMapINS_7SDValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp' l='259' c='_ZN4llvm21ResourcePriorityQueue19isResourceAvailableEPNS_5SUnitE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp' l='298' c='_ZN4llvm21ResourcePriorityQueue16reserveResourcesEPNS_5SUnitE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp' l='2034' u='r' c='_ZNK12_GLOBAL__N_118RegReductionPQBase15getNodePriorityEPKN4llvm5SUnitE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp' l='2251' u='r' c='_ZN12_GLOBAL__N_118RegReductionPQBase15unscheduledNodeEPN4llvm5SUnitE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp' l='2279' u='r' c='_ZN12_GLOBAL__N_118RegReductionPQBase15unscheduledNodeEPN4llvm5SUnitE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp' l='2714' u='r' c='_ZL19canEnableCoalescingPN4llvm5SUnitE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp' l='3106' u='r' c='_ZN12_GLOBAL__N_118RegReductionPQBase20AddPseudoTwoAddrDepsEv'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='2324' c='_ZNK4llvm16HexagonInstrInfo17isLateResultInstrERKNS_12MachineInstrE'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonMachineScheduler.cpp' l='110' c='_ZN4llvm17VLIWResourceModel19isResourceAvailableEPNS_5SUnitEb'/>
<use f='llvm/llvm/lib/Target/Hexagon/HexagonMachineScheduler.cpp' l='163' c='_ZN4llvm17VLIWResourceModel16reserveResourcesEPNS_5SUnitEb'/>
<use f='llvm/llvm/lib/Target/PowerPC/PPCVSXSwapRemoval.cpp' l='389' c='_ZN12_GLOBAL__N_117PPCVSXSwapRemoval24gatherVectorInstructionsEv'/>
<use f='llvm/llvm/lib/Target/X86/X86CmovConversion.cpp' l='323' u='r' c='_ZN12_GLOBAL__N_120X86CmovConverterPass21collectCmovCandidatesEN4llvm8ArrayRefIPNS1_17MachineBasicBlockEEERNS1_11SmallVectorINS6_IPNS1_12MachineInstrELj2EEELj2EEEb'/>
<use f='llvm/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp' l='1137' u='r' c='_ZN12_GLOBAL__N_115X86DAGToDAGISel18PostprocessISelDAGEv'/>
<use f='llvm/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp' l='1216' c='_ZL15isDataInvariantRN4llvm12MachineInstrE'/>
