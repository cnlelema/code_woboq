<def f='llvm/llvm/include/llvm/Analysis/PtrUseVisitor.h' l='108' ll='111' type='void llvm::detail::PtrUseVisitorBase::PtrInfo::setEscapedAndAborted(llvm::Instruction * I = nullptr)'/>
<doc f='llvm/llvm/include/llvm/Analysis/PtrUseVisitor.h' l='104'>/// Mark the pointer as escaped, and the visit as aborted. Intended
    /// for use in a void return.
    /// \param I The instruction which both escapes the pointer and aborts the
    /// visit, if available.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/SROA.cpp' l='788' u='c' c='_ZN4llvm4sroa12AllocaSlices12SliceBuilder14visitStoreInstERNS_9StoreInstE'/>
