<use f='llvm/clang/include/clang/Basic/DiagnosticIDs.h' l='214' u='c' c='_ZN5clang13DiagnosticIDs22isBuiltinExtensionDiagEj'/>
<dec f='llvm/clang/include/clang/Basic/DiagnosticIDs.h' l='224' type='static bool clang::DiagnosticIDs::isBuiltinExtensionDiag(unsigned int DiagID, bool &amp; EnabledByDefault)'/>
<doc f='llvm/clang/include/clang/Basic/DiagnosticIDs.h' l='217'>/// Determine whether the given built-in diagnostic ID is for an
  /// extension of some sort, and whether it is enabled by default.
  ///
  /// This also returns EnabledByDefault, which is set to indicate whether the
  /// diagnostic is ignored by default (in which case -pedantic enables it) or
  /// treated as a warning/error by default.
  ///</doc>
<def f='llvm/clang/lib/Basic/DiagnosticIDs.cpp' l='354' ll='363' type='static bool clang::DiagnosticIDs::isBuiltinExtensionDiag(unsigned int DiagID, bool &amp; EnabledByDefault)'/>
<use f='llvm/clang/lib/Basic/DiagnosticIDs.cpp' l='446' u='c' c='_ZNK5clang13DiagnosticIDs21getDiagnosticSeverityEjNS_14SourceLocationERKNS_17DiagnosticsEngineE'/>
<doc f='llvm/clang/lib/Basic/DiagnosticIDs.cpp' l='349'>/// isBuiltinExtensionDiag - Determine whether the given built-in diagnostic
/// ID is for an extension of some sort.  This also returns EnabledByDefault,
/// which is set to indicate whether the diagnostic is ignored by default (in
/// which case -pedantic enables it) or treated as a warning/error by default.
///</doc>
