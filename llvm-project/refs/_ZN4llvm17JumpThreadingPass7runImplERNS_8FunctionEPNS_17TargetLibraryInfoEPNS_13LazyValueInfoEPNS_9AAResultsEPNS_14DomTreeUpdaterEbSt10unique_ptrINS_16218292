<dec f='llvm/llvm/include/llvm/Transforms/Scalar/JumpThreading.h' l='98' type='bool llvm::JumpThreadingPass::runImpl(llvm::Function &amp; F, llvm::TargetLibraryInfo * TLI_, llvm::LazyValueInfo * LVI_, AliasAnalysis * AA_, llvm::DomTreeUpdater * DTU_, bool HasProfileData_, std::unique_ptr&lt;BlockFrequencyInfo&gt; BFI_, std::unique_ptr&lt;BranchProbabilityInfo&gt; BPI_)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Scalar/JumpThreading.h' l='97'>// Glue for old PM.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='299' u='c' c='_ZN12_GLOBAL__N_113JumpThreading13runOnFunctionERN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='326' u='c' c='_ZN4llvm17JumpThreadingPass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE'/>
<def f='llvm/llvm/lib/Transforms/Scalar/JumpThreading.cpp' l='338' ll='425' type='bool llvm::JumpThreadingPass::runImpl(llvm::Function &amp; F, llvm::TargetLibraryInfo * TLI_, llvm::LazyValueInfo * LVI_, AliasAnalysis * AA_, llvm::DomTreeUpdater * DTU_, bool HasProfileData_, std::unique_ptr&lt;BlockFrequencyInfo&gt; BFI_, std::unique_ptr&lt;BranchProbabilityInfo&gt; BPI_)'/>
