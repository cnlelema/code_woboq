<def f='llvm/llvm/include/llvm/CodeGen/RegisterClassInfo.h' l='106' ll='108' type='bool llvm::RegisterClassInfo::isProperSubClass(const llvm::TargetRegisterClass * RC) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/RegisterClassInfo.h' l='100'>/// isProperSubClass - Returns true if RC has a legal super-class with more
  /// allocatable registers.
  ///
  /// Register classes like GR32_NOSP are not proper sub-classes because %esp
  /// is not allocatable.  Similarly, tGPR is not a proper sub-class in Thumb
  /// mode because the GPR super-class is not legal.</doc>
<use f='llvm/llvm/lib/CodeGen/RegAllocGreedy.cpp' l='1690' u='c' c='_ZN12_GLOBAL__N_18RAGreedy17splitAroundRegionERN4llvm13LiveRangeEditENS1_8ArrayRefIjEE'/>
<use f='llvm/llvm/lib/CodeGen/RegAllocGreedy.cpp' l='2023' u='c' c='_ZN12_GLOBAL__N_18RAGreedy13tryBlockSplitERN4llvm12LiveIntervalERNS1_15AllocationOrderERNS1_15SmallVectorImplIjEE'/>
<use f='llvm/llvm/lib/CodeGen/RegAllocGreedy.cpp' l='2090' u='c' c='_ZN12_GLOBAL__N_18RAGreedy19tryInstructionSplitERN4llvm12LiveIntervalERNS1_15AllocationOrderERNS1_15SmallVectorImplIjEE'/>
<use f='llvm/llvm/lib/CodeGen/RegisterCoalescer.cpp' l='1911' u='c' c='_ZN12_GLOBAL__N_117RegisterCoalescer8joinCopyEPN4llvm12MachineInstrERb'/>
