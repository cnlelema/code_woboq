<dec f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='896' type='StringMap&lt;std::pair&lt;Record *, unsigned int&gt; &gt;'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='2806' u='m' c='_ZN4llvm11TreePattern16ParseTreePatternEPNS_4InitENS_9StringRefE'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='2807' u='m' c='_ZN4llvm11TreePattern16ParseTreePatternEPNS_4InitENS_9StringRefE'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='2812' u='m' c='_ZN4llvm11TreePattern16ParseTreePatternEPNS_4InitENS_9StringRefE'/>
<offset>832</offset>
<doc f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='891'>/// It&apos;s important that the usage of operands in ComplexPatterns is
  /// consistent: each named operand can be defined by at most one
  /// ComplexPattern. This records the ComplexPattern instance and the operand
  /// number for each operand encountered in a ComplexPattern to aid in that
  /// check.</doc>
