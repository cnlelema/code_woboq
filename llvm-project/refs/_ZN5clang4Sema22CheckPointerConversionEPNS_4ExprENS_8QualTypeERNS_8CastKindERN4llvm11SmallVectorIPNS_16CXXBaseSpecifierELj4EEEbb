<dec f='llvm/clang/include/clang/Sema/Sema.h' l='2710' type='bool clang::Sema::CheckPointerConversion(clang::Expr * From, clang::QualType ToType, clang::CastKind &amp; Kind, CXXCastPath &amp; BasePath, bool IgnoreBaseAccess, bool Diagnose = true)'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='8555' u='c' c='_ZN5clang4Sema32CheckSingleAssignmentConstraintsENS_8QualTypeERNS_12ActionResultIPNS_4ExprELb1EEEbbb'/>
<use f='llvm/clang/lib/Sema/SemaExprCXX.cpp' l='4087' u='c' c='_ZN5clang4Sema25PerformImplicitConversionEPNS_4ExprENS_8QualTypeERKNS_26StandardConversionSequenceENS0_16AssignmentActionENS0_21CheckedConversionKindE'/>
<def f='llvm/clang/lib/Sema/SemaOverload.cpp' l='2907' ll='2986' type='bool clang::Sema::CheckPointerConversion(clang::Expr * From, clang::QualType ToType, clang::CastKind &amp; Kind, CXXCastPath &amp; BasePath, bool IgnoreBaseAccess, bool Diagnose = true)'/>
<doc f='llvm/clang/lib/Sema/SemaOverload.cpp' l='2901'>/// CheckPointerConversion - Check the pointer conversion from the
/// expression From to the type ToType. This routine checks for
/// ambiguous or inaccessible derived-to-base pointer
/// conversions for which IsPointerConversion has already returned
/// true. It returns true and produces a diagnostic if there was an
/// error, or returns false otherwise.</doc>
