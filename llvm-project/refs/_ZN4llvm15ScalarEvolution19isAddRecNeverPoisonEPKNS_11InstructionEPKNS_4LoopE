<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1813' type='bool llvm::ScalarEvolution::isAddRecNeverPoison(const llvm::Instruction * I, const llvm::Loop * L)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1809'>/// This is like \c isSCEVExprNeverPoison but it specifically works for
  /// instructions that will get mapped to SCEV add recurrences.  Return true
  /// if \p I will never generate poison under the assumption that \p I is an
  /// add recurrence on the loop \p L.</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='4993' u='c' c='_ZN4llvm15ScalarEvolution24createSimpleAffineAddRecEPNS_7PHINodeEPNS_5ValueES4_'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5115' u='c' c='_ZN4llvm15ScalarEvolution19createAddRecFromPHIEPNS_7PHINodeE'/>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='6010' ll='6070' type='bool llvm::ScalarEvolution::isAddRecNeverPoison(const llvm::Instruction * I, const llvm::Loop * L)'/>
