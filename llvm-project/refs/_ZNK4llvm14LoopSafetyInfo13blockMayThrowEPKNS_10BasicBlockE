<dec f='llvm/llvm/include/llvm/Analysis/MustExecute.h' l='64' type='bool llvm::LoopSafetyInfo::blockMayThrow(const llvm::BasicBlock * BB) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/MustExecute.h' l='62'>/// Returns true iff the block \p BB potentially may throw exception. It can
  /// be false-positive in cases when we want to avoid complex analysis.</doc>
<ovr f='llvm/llvm/lib/Analysis/MustExecute.cpp' l='35' c='_ZNK4llvm20SimpleLoopSafetyInfo13blockMayThrowEPKNS_10BasicBlockE'/>
<ovr f='llvm/llvm/lib/Analysis/MustExecute.cpp' l='63' c='_ZNK4llvm17ICFLoopSafetyInfo13blockMayThrowEPKNS_10BasicBlockE'/>
<use f='llvm/llvm/lib/Analysis/MustExecute.cpp' l='205' u='c' c='_ZNK4llvm14LoopSafetyInfo23allLoopPathsLeadToBlockEPKNS_4LoopEPKNS_10BasicBlockEPKNS_13DominatorTreeE'/>
