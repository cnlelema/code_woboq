<dec f='llvm/clang/include/clang/Tooling/Tooling.h' l='466' type='std::string clang::tooling::getAbsolutePath(llvm::StringRef File)'/>
<doc f='llvm/clang/include/clang/Tooling/Tooling.h' l='454'>/// Returns the absolute path of \c File, by prepending it with
/// the current directory if \c File is not absolute.
///
/// Otherwise returns \c File.
/// If &apos;File&apos; starts with &quot;./&quot;, the returned path will not contain the &quot;./&quot;.
/// Otherwise, the returned path will contain the literal path-concatenation of
/// the current directory and \c File.
///
/// The difference to llvm::sys::fs::make_absolute is the canonicalization this
/// does by removing &quot;./&quot; and computing native paths.
///
/// \param File Either an absolute or relative path.</doc>
<use f='llvm/clang/lib/Tooling/CompilationDatabase.cpp' l='108' u='c' c='_ZN5clang7tooling19CompilationDatabase20autoDetectFromSourceEN4llvm9StringRefERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='llvm/clang/lib/Tooling/CompilationDatabase.cpp' l='123' u='c' c='_ZN5clang7tooling19CompilationDatabase23autoDetectFromDirectoryEN4llvm9StringRefERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<def f='llvm/clang/lib/Tooling/Tooling.cpp' l='216' ll='218' type='std::string clang::tooling::getAbsolutePath(llvm::StringRef File)'/>
