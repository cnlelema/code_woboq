<def f='llvm/clang/include/clang/AST/DeclCXX.h' l='1577' ll='1584' type='bool clang::CXXRecordDecl::isLiteral() const'/>
<doc f='llvm/clang/include/clang/AST/DeclCXX.h' l='1560'>/// Determine whether this class is a literal type.
  ///
  /// C++11 [basic.types]p10:
  ///   A class type that has all the following properties:
  ///     - it has a trivial destructor
  ///     - every constructor call and full-expression in the
  ///       brace-or-equal-intializers for non-static data members (if any) is
  ///       a constant expression.
  ///     - it is an aggregate type or has at least one constexpr constructor
  ///       or constructor template that is not a copy or move constructor, and
  ///     - all of its non-static data members and base classes are of literal
  ///       types
  ///
  /// We resolve DR1361 by ignoring the second bullet. We resolve DR1452 by
  /// treating types with trivial default constructors as literal types.
  ///
  /// Only in C++17 and beyond, are lambdas literal types.</doc>
<use f='llvm/clang/lib/AST/JSONNodeDumper.cpp' l='371' u='c' c='_ZN5clang14JSONNodeDumper29createCXXRecordDefinitionDataEPKNS_13CXXRecordDeclE'/>
<use f='llvm/clang/lib/AST/TextNodeDumper.cpp' l='1542' u='c' c='_ZN5clang14TextNodeDumper18VisitCXXRecordDeclEPKNS_13CXXRecordDeclE'/>
<use f='llvm/clang/lib/AST/Type.cpp' l='2464' u='c' c='_ZNK5clang4Type13isLiteralTypeERKNS_10ASTContextE'/>
<use f='llvm/clang/lib/CodeGen/CGExpr.cpp' l='1423' u='c' c='_ZN5clang7CodeGen15CodeGenFunction21canTightenCheriBoundsEPN4llvm5ValueENS_8QualTypeEPKNS_4ExprENS0_19SubObjectBoundsKindE'/>
<use f='llvm/clang/lib/Sema/SemaDeclCXX.cpp' l='6453' u='c' c='_ZL33defaultedSpecialMemberIsConstexprRN5clang4SemaEPNS_13CXXRecordDeclENS0_16CXXSpecialMemberEbPNS_18CXXConstructorDeclEPNS0_24InheritedConstructorInfoE'/>
