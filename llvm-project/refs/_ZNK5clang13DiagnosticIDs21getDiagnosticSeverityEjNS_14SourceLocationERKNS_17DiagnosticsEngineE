<dec f='llvm/clang/include/clang/Basic/DiagnosticIDs.h' l='319' type='diag::Severity clang::DiagnosticIDs::getDiagnosticSeverity(unsigned int DiagID, clang::SourceLocation Loc, const clang::DiagnosticsEngine &amp; Diag) const'/>
<use f='llvm/clang/include/clang/Basic/Diagnostic.h' l='821' u='c' c='_ZNK5clang17DiagnosticsEngine9isIgnoredEjNS_14SourceLocationE'/>
<use f='llvm/clang/lib/Basic/DiagnosticIDs.cpp' l='411' u='c' c='_ZNK5clang13DiagnosticIDs18getDiagnosticLevelEjNS_14SourceLocationERKNS_17DiagnosticsEngineE'/>
<def f='llvm/clang/lib/Basic/DiagnosticIDs.cpp' l='420' ll='502' type='diag::Severity clang::DiagnosticIDs::getDiagnosticSeverity(unsigned int DiagID, clang::SourceLocation Loc, const clang::DiagnosticsEngine &amp; Diag) const'/>
<doc f='llvm/clang/lib/Basic/DiagnosticIDs.cpp' l='414'>/// Based on the way the client configured the Diagnostic
/// object, classify the specified diagnostic ID into a Level, consumable by
/// the DiagnosticClient.
///
/// \param Loc The source location we are interested in finding out the
/// diagnostic state. Can be null in order to query the latest state.</doc>
