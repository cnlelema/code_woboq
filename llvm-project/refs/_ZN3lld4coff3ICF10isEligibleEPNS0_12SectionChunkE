<dec f='llvm/lld/COFF/ICF.cpp' l='54' type='bool lld::coff::ICF::isEligible(lld::coff::SectionChunk * C)'/>
<def f='llvm/lld/COFF/ICF.cpp' l='79' ll='100' type='bool lld::coff::ICF::isEligible(lld::coff::SectionChunk * C)'/>
<use f='llvm/lld/COFF/ICF.cpp' l='250' u='c' c='_ZN3lld4coff3ICF3runEN4llvm8ArrayRefIPNS0_5ChunkEEE'/>
<doc f='llvm/lld/COFF/ICF.cpp' l='68'>// Returns true if section S is subject of ICF.
//
// Microsoft&apos;s documentation
// (https://msdn.microsoft.com/en-us/library/bxwfs976.aspx; visited April
// 2017) says that /opt:icf folds both functions and read-only data.
// Despite that, the MSVC linker folds only functions. We found
// a few instances of programs that are not safe for data merging.
// Therefore, we merge only functions just like the MSVC tool. However, we also
// merge read-only sections in a couple of cases where the address of the
// section is insignificant to the user program and the behaviour matches that
// of the Visual C++ linker.</doc>
