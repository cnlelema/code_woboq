<dec f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='569' type='static llvm::CastInst * llvm::CastInst::CreateIntegerCast(llvm::Value * S, llvm::Type * Ty, bool isSigned, const llvm::Twine &amp; Name, llvm::BasicBlock * InsertAtEnd)'/>
<doc f='llvm/llvm/include/llvm/IR/InstrTypes.h' l='568'>/// Create a ZExt, BitCast, or Trunc for int -&gt; int casts.</doc>
<use f='llvm/llvm/lib/IR/Instructions.cpp' l='548' u='c' c='_ZL12createMallocPN4llvm11InstructionEPNS_10BasicBlockEPNS_4TypeES5_PNS_5ValueES7_NS_8ArrayRefINS_17OperandBundleDefTIS7_EEEEPNS_8FunctionERKNS_5TwineE'/>
<def f='llvm/llvm/lib/IR/Instructions.cpp' l='2941' ll='2953' type='static llvm::CastInst * llvm::CastInst::CreateIntegerCast(llvm::Value * C, llvm::Type * Ty, bool isSigned, const llvm::Twine &amp; Name, llvm::BasicBlock * InsertAtEnd)'/>
