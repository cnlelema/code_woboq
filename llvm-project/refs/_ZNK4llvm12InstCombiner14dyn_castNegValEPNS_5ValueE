<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='411' type='llvm::Value * llvm::InstCombiner::dyn_castNegVal(llvm::Value * V) const'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp' l='1544' u='c' c='_ZN4llvm12InstCombiner8visitSubERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp' l='1734' u='c' c='_ZN4llvm12InstCombiner8visitSubERNS_14BinaryOperatorE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='2731' u='c' c='_ZN4llvm12InstCombiner33foldICmpBinOpEqualityWithConstantERNS_8ICmpInstEPNS_14BinaryOperatorERKNS_5APIntE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='2733' u='c' c='_ZN4llvm12InstCombiner33foldICmpBinOpEqualityWithConstantERNS_8ICmpInstEPNS_14BinaryOperatorERKNS_5APIntE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='4925' u='c' c='_ZN4llvm12InstCombiner13visitICmpInstERNS_8ICmpInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp' l='4929' u='c' c='_ZN4llvm12InstCombiner13visitICmpInstERNS_8ICmpInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp' l='261' u='c' c='_ZN4llvm12InstCombiner8visitMulERNS_14BinaryOperatorE'/>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='758' ll='787' type='llvm::Value * llvm::InstCombiner::dyn_castNegVal(llvm::Value * V) const'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='756'>/// Given a &apos;sub&apos; instruction, return the RHS of the instruction if the LHS is a
/// constant zero (which is the &apos;negate&apos; form).</doc>
