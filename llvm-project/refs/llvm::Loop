<inh f='llvm/llvm/include/llvm/Analysis/LoopInfo.h' l='463' c='llvm::LoopBase'/>
<def f='llvm/llvm/include/llvm/Analysis/LoopInfo.h' l='467' ll='771'/>
<size>168</size>
<doc f='llvm/llvm/include/llvm/Analysis/LoopInfo.h' l='465'>/// Represents a single loop in the control flow graph.  Note that not all SCCs
/// in the CFG are necessarily loops.</doc>
<fun r='_ZNK4llvm4Loop15isLoopInvariantEPKNS_5ValueE'/>
<fun r='_ZNK4llvm4Loop24hasLoopInvariantOperandsEPKNS_11InstructionE'/>
<fun r='_ZNK4llvm4Loop17makeLoopInvariantEPNS_5ValueERbPNS_11InstructionEPNS_16MemorySSAUpdaterE'/>
<fun r='_ZNK4llvm4Loop17makeLoopInvariantEPNS_11InstructionERbS2_PNS_16MemorySSAUpdaterE'/>
<fun r='_ZNK4llvm4Loop29getCanonicalInductionVariableEv'/>
<fun r='_ZNK4llvm4Loop22getIncomingAndBackEdgeERPNS_10BasicBlockES3_'/>
<fun r='_ZNK4llvm4Loop9getBoundsERNS_15ScalarEvolutionE'/>
<fun r='_ZNK4llvm4Loop20getInductionVariableERNS_15ScalarEvolutionE'/>
<fun r='_ZNK4llvm4Loop22getInductionDescriptorERNS_15ScalarEvolutionERNS_19InductionDescriptorE'/>
<fun r='_ZNK4llvm4Loop28isAuxiliaryInductionVariableERNS_7PHINodeERNS_15ScalarEvolutionE'/>
<fun r='_ZNK4llvm4Loop11isCanonicalERNS_15ScalarEvolutionE'/>
<fun r='_ZNK4llvm4Loop11isLCSSAFormERNS_13DominatorTreeE'/>
<fun r='_ZNK4llvm4Loop22isRecursivelyLCSSAFormERNS_13DominatorTreeERKNS_8LoopInfoE'/>
<fun r='_ZNK4llvm4Loop18isLoopSimplifyFormEv'/>
<fun r='_ZNK4llvm4Loop13isSafeToCloneEv'/>
<fun r='_ZNK4llvm4Loop19isAnnotatedParallelEv'/>
<fun r='_ZNK4llvm4Loop9getLoopIDEv'/>
<fun r='_ZNK4llvm4Loop9setLoopIDEPNS_6MDNodeE'/>
<fun r='_ZN4llvm4Loop22setLoopAlreadyUnrolledEv'/>
<fun r='_ZNK4llvm4Loop4dumpEv'/>
<fun r='_ZNK4llvm4Loop11dumpVerboseEv'/>
<fun r='_ZNK4llvm4Loop11getStartLocEv'/>
<fun r='_ZNK4llvm4Loop11getLocRangeEv'/>
<fun r='_ZNK4llvm4Loop7getNameEv'/>
<fun r='_ZN4llvm4LoopC1Ev'/>
<fun r='_ZN4llvm4LoopC1EPNS_10BasicBlockE'/>
<fun r='_ZN4llvm4LoopD1Ev'/>
