<dec f='llvm/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.h' l='136' type='llvm::SDValue llvm::AMDGPUTargetLowering::LowerDIVREM24(llvm::SDValue Op, llvm::SelectionDAG &amp; DAG, bool sign) const'/>
<def f='llvm/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp' l='1567' ll='1671' type='llvm::SDValue llvm::AMDGPUTargetLowering::LowerDIVREM24(llvm::SDValue Op, llvm::SelectionDAG &amp; DAG, bool Sign) const'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp' l='1895' u='c' c='_ZNK4llvm20AMDGPUTargetLowering12LowerUDIVREMENS_7SDValueERNS_12SelectionDAGE'/>
<use f='llvm/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp' l='2010' u='c' c='_ZNK4llvm20AMDGPUTargetLowering12LowerSDIVREMENS_7SDValueERNS_12SelectionDAGE'/>
<doc f='llvm/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp' l='1564'>// This is a shortcut for integer division because we have fast i32&lt;-&gt;f32
// conversions, and fast f32 reciprocal instructions. The fractional part of a
// float is enough to accurately represent up to a 24-bit signed integer.</doc>
