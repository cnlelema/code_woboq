<inh f='llvm/clang/include/clang/Analysis/ConstructionContext.h' l='366' c='clang::ConstructorInitializerConstructionContext'/>
<def f='llvm/clang/include/clang/Analysis/ConstructionContext.h' l='413' ll='433'/>
<size>24</size>
<doc f='llvm/clang/include/clang/Analysis/ConstructionContext.h' l='403'>/// Represents construction into a field or a base class within a bigger object
/// via a constructor initializer, with a single constructor, eg.
/// T(): field(Field(123)) { ... }. Such construction context may only appear
/// in C++17 because previously it was split into a temporary object constructor
/// and an elidable simple constructor-initializer copy-constructor and we were
/// producing separate construction contexts for these constructors. In C++17
/// we have a single construction context that combines both. Note that if the
/// object has trivial destructor, then this code is indistinguishable from
/// a simple constructor-initializer constructor on the AST level; in this case
/// we provide a simple constructor-initializer construction context.</doc>
<mbr r='clang::CXX17ElidedCopyConstructorInitializerConstructionContext::BTE' o='128' t='const clang::CXXBindTemporaryExpr *'/>
<fun r='_ZN5clang56CXX17ElidedCopyConstructorInitializerConstructionContextC1EPKNS_18CXXCtorInitializerEPKNS_20CXXBindTemporaryExprE'/>
<fun r='_ZNK5clang56CXX17ElidedCopyConstructorInitializerConstructionContext23getCXXBindTemporaryExprEv'/>
<fun r='_ZN5clang56CXX17ElidedCopyConstructorInitializerConstructionContext7classofEPKNS_19ConstructionContextE'/>
