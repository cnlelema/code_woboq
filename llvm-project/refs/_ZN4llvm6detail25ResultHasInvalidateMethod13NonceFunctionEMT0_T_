<dec f='llvm/llvm/include/llvm/IR/PassManagerInternal.h' l='135' type='static llvm::detail::ResultHasInvalidateMethod::DisabledType llvm::detail::ResultHasInvalidateMethod::NonceFunction(T U::* )'/>
<doc f='llvm/llvm/include/llvm/IR/PassManagerInternal.h' l='131'>// First we define an overload that can only be taken if there is no
  // invalidate member. We do this by taking the address of an invalidate
  // member in an adjacent base class of a derived class. This would be
  // ambiguous if there were an invalidate member in the result type.</doc>
