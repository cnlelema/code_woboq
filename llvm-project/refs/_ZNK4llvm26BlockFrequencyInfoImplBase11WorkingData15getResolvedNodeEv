<def f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='304' ll='307' type='llvm::BlockFrequencyInfoImplBase::BlockNode llvm::BlockFrequencyInfoImplBase::WorkingData::getResolvedNode() const'/>
<use f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='332' u='c' c='_ZNK4llvm26BlockFrequencyInfoImplBase11WorkingData10isPackagedEv'/>
<doc f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='291'>/// Resolve a node to its representative.
    ///
    /// Get the node currently representing Node, which could be a containing
    /// loop.
    ///
    /// This function should only be called when distributing mass.  As long as
    /// there are no irreducible edges to Node, then it will have complexity
    /// O(1) in this context.
    ///
    /// In general, the complexity is O(L), where L is the number of loop
    /// headers Node has been packaged into.  Since this method is called in
    /// the context of distributing mass, L will be the number of loop headers
    /// an early exit edge jumps out of.</doc>
<use f='llvm/llvm/lib/Analysis/BlockFrequencyInfoImpl.cpp' l='302' u='c' c='_ZN4llvm26BlockFrequencyInfoImplBase9addToDistERNS0_12DistributionEPKNS0_8LoopDataERKNS0_9BlockNodeES8_m'/>
