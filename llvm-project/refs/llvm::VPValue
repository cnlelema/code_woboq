<def f='llvm/llvm/lib/Transforms/Vectorize/VPlanValue.h' l='38' ll='122'/>
<ovr f='llvm/llvm/lib/Transforms/Vectorize/VPlanValue.h' l='131' c='llvm::VPUser'/>
<size>40</size>
<doc f='llvm/llvm/lib/Transforms/Vectorize/VPlanValue.h' l='34'>// This is the base class of the VPlan Def/Use graph, used for modeling the data
// flow into, within and out of the VPlan. VPValues can stand for live-ins
// coming from the input IR, instructions which VPlan will generate if executed
// and live-outs which the VPlan will need to fix accordingly.</doc>
<mbr r='llvm::VPValue::SubclassID' o='0' t='const unsigned char'/>
<mbr r='llvm::VPValue::Users' o='64' t='SmallVector&lt;llvm::VPUser *, 1&gt;'/>
<mbr r='llvm::VPValue::UnderlyingVal' o='256' t='llvm::Value *'/>
<fun r='_ZN4llvm7VPValueC1EhPNS_5ValueE'/>
<fun r='_ZN4llvm7VPValue18getUnderlyingValueEv'/>
<fun r='_ZN4llvm7VPValue18setUnderlyingValueEPNS_5ValueE'/>
<fun r='_ZN4llvm7VPValueC1EPNS_5ValueE'/>
<fun r='_ZN4llvm7VPValueC1ERKS0_'/>
<fun r='_ZN4llvm7VPValueaSERKS0_'/>
<fun r='_ZNK4llvm7VPValue12getVPValueIDEv'/>
<fun r='_ZNK4llvm7VPValue14printAsOperandERNS_11raw_ostreamE'/>
<fun r='_ZNK4llvm7VPValue11getNumUsersEv'/>
<fun r='_ZN4llvm7VPValue7addUserERNS_6VPUserE'/>
<fun r='_ZN4llvm7VPValue10user_beginEv'/>
<fun r='_ZNK4llvm7VPValue10user_beginEv'/>
<fun r='_ZN4llvm7VPValue8user_endEv'/>
<fun r='_ZNK4llvm7VPValue8user_endEv'/>
<fun r='_ZN4llvm7VPValue5usersEv'/>
<fun r='_ZNK4llvm7VPValue5usersEv'/>
<fun r='_ZN4llvm7VPValue24hasMoreThanOneUniqueUserEv'/>
<fun r='_ZN4llvm7VPValue18replaceAllUsesWithEPS0_'/>
