<dec f='llvm/llvm/include/llvm/Transforms/Utils/FunctionComparator.h' l='345' type='int llvm::FunctionComparator::cmpGEPs(const llvm::GEPOperator * GEPL, const llvm::GEPOperator * GEPR) const'/>
<use f='llvm/llvm/include/llvm/Transforms/Utils/FunctionComparator.h' l='348' u='c' c='_ZNK4llvm18FunctionComparator7cmpGEPsEPKNS_17GetElementPtrInstES3_'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/FunctionComparator.h' l='337'>/// Compare two GEPs for equivalent pointer arithmetic.
  /// Parts to be compared for each comparison stage,
  /// most significant stage first:
  /// 1. Address space. As numbers.
  /// 2. Constant offset, (using GEPOperator::accumulateConstantOffset method).
  /// 3. Pointer operand type (using cmpType method).
  /// 4. Number of operands.
  /// 5. Compare operands, using cmpValues method.</doc>
<def f='llvm/llvm/lib/Transforms/Utils/FunctionComparator.cpp' l='649' ll='678' type='int llvm::FunctionComparator::cmpGEPs(const llvm::GEPOperator * GEPL, const llvm::GEPOperator * GEPR) const'/>
<doc f='llvm/llvm/lib/Transforms/Utils/FunctionComparator.cpp' l='647'>// Determine whether two GEP operations perform the same underlying arithmetic.
// Read method declaration comments for more details.</doc>
