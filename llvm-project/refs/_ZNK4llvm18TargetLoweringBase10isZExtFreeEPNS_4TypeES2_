<use f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='2334' u='c' c='_ZNK4llvm18TargetLoweringBase9isExtFreeEPKNS_11InstructionE'/>
<def f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='2384' ll='2386' type='bool llvm::TargetLoweringBase::isZExtFree(llvm::Type * FromTy, llvm::Type * ToTy) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='2374'>/// Return true if any actual instruction that defines a value of type FromTy
  /// implicitly zero-extends the value to ToTy in the result register.
  ///
  /// The function should return true when it is likely that the truncate can
  /// be freely folded with an instruction defining a value of FromTy. If
  /// the defining instruction is unknown (because you&apos;re looking at a
  /// function argument, PHI, etc.) then the target may require an
  /// explicit truncate, which is not necessarily free, but this function
  /// does not deal with those cases.
  /// Targets must return false when FromTy &gt;= ToTy.</doc>
<use f='llvm/llvm/include/llvm/CodeGen/BasicTTIImpl.h' l='416' u='c' c='_ZN4llvm16BasicTTIImplBase16getOperationCostEjPNS_4TypeES2_'/>
<use f='llvm/llvm/lib/CodeGen/CodeGenPrepare.cpp' l='5120' u='c' c='_ZL13hasSameExtUsePN4llvm5ValueERKNS_14TargetLoweringE'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp' l='8215' c='_ZNK4llvm21AArch64TargetLowering10isZExtFreeEPNS_4TypeES2_'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp' l='838' c='_ZNK4llvm20AMDGPUTargetLowering10isZExtFreeEPNS_4TypeES2_'/>
<ovr f='llvm/llvm/lib/Target/MSP430/MSP430ISelLowering.cpp' l='1388' c='_ZNK4llvm20MSP430TargetLowering10isZExtFreeEPNS_4TypeES2_'/>
<ovr f='llvm/llvm/lib/Target/X86/X86ISelLowering.cpp' l='28509' c='_ZNK4llvm17X86TargetLowering10isZExtFreeEPNS_4TypeES2_'/>
