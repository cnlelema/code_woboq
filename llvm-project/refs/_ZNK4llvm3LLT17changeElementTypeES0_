<def f='llvm/llvm/include/llvm/Support/LowLevelTypeImpl.h' l='126' ll='128' type='llvm::LLT llvm::LLT::changeElementType(llvm::LLT NewEltTy) const'/>
<doc f='llvm/llvm/include/llvm/Support/LowLevelTypeImpl.h' l='124'>/// If this type is a vector, return a vector with the same number of elements
  /// but the new element type. Otherwise, return the new element type.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizeMutations.cpp' l='34' u='c' c='_ZN4llvm17LegalizeMutations15changeElementToEjj'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizeMutations.cpp' l='42' u='c' c='_ZN4llvm17LegalizeMutations15changeElementToEjNS_3LLTE'/>
<use f='llvm/llvm/unittests/CodeGen/LowLevelTypeTest.cpp' l='122' u='c' c='_ZN12_GLOBAL__N_139LowLevelTypeTest_ChangeElementType_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/LowLevelTypeTest.cpp' l='123' u='c' c='_ZN12_GLOBAL__N_139LowLevelTypeTest_ChangeElementType_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/LowLevelTypeTest.cpp' l='128' u='c' c='_ZN12_GLOBAL__N_139LowLevelTypeTest_ChangeElementType_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/LowLevelTypeTest.cpp' l='129' u='c' c='_ZN12_GLOBAL__N_139LowLevelTypeTest_ChangeElementType_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/LowLevelTypeTest.cpp' l='134' u='c' c='_ZN12_GLOBAL__N_139LowLevelTypeTest_ChangeElementType_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/LowLevelTypeTest.cpp' l='135' u='c' c='_ZN12_GLOBAL__N_139LowLevelTypeTest_ChangeElementType_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/LowLevelTypeTest.cpp' l='137' u='c' c='_ZN12_GLOBAL__N_139LowLevelTypeTest_ChangeElementType_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/CodeGen/LowLevelTypeTest.cpp' l='138' u='c' c='_ZN12_GLOBAL__N_139LowLevelTypeTest_ChangeElementType_Test8TestBodyEv'/>
