<def f='llvm/llvm/include/llvm/Transforms/Utils/SSAUpdater.h' l='38' ll='126'/>
<size>56</size>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/SSAUpdater.h' l='32'>/// Helper class for SSA formation on a set of values defined in
/// multiple blocks.
///
/// This is used when code duplication or another unstructured
/// transformation wants to rewrite a set of uses of one value with uses of a
/// set of values.</doc>
<mbr r='llvm::SSAUpdater::AV' o='0' t='void *'/>
<mbr r='llvm::SSAUpdater::ProtoType' o='64' t='llvm::Type *'/>
<mbr r='llvm::SSAUpdater::ProtoName' o='128' t='std::string'/>
<mbr r='llvm::SSAUpdater::InsertedPHIs' o='384' t='SmallVectorImpl&lt;llvm::PHINode *&gt; *'/>
<fun r='_ZN4llvm10SSAUpdaterC1EPNS_15SmallVectorImplIPNS_7PHINodeEEE'/>
<fun r='_ZN4llvm10SSAUpdaterC1ERKS0_'/>
<fun r='_ZN4llvm10SSAUpdateraSERKS0_'/>
<fun r='_ZN4llvm10SSAUpdaterD1Ev'/>
<fun r='_ZN4llvm10SSAUpdater10InitializeEPNS_4TypeENS_9StringRefE'/>
<fun r='_ZN4llvm10SSAUpdater17AddAvailableValueEPNS_10BasicBlockEPNS_5ValueE'/>
<fun r='_ZNK4llvm10SSAUpdater16HasValueForBlockEPNS_10BasicBlockE'/>
<fun r='_ZNK4llvm10SSAUpdater17FindValueForBlockEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm10SSAUpdater20GetValueAtEndOfBlockEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm10SSAUpdater23GetValueInMiddleOfBlockEPNS_10BasicBlockE'/>
<fun r='_ZN4llvm10SSAUpdater10RewriteUseERNS_3UseE'/>
<fun r='_ZN4llvm10SSAUpdater25RewriteUseAfterInsertionsERNS_3UseE'/>
<fun r='_ZN4llvm10SSAUpdater28GetValueAtEndOfBlockInternalEPNS_10BasicBlockE'/>
