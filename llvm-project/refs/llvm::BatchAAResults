<def f='llvm/llvm/include/llvm/Analysis/AliasAnalysis.h' l='777' ll='808'/>
<size>872</size>
<doc f='llvm/llvm/include/llvm/Analysis/AliasAnalysis.h' l='771'>/// This class is a wrapper over an AAResults, and it is intended to be used
/// only when there are no IR changes inbetween queries. BatchAAResults is
/// reusing the same `AAQueryInfo` to preserve the state across queries,
/// esentially making AA work in &quot;batch mode&quot;. The internal state cannot be
/// cleared, so to go &quot;out-of-batch-mode&quot;, the user must either use AAResults,
/// or create a new BatchAAResults.</doc>
<mbr r='llvm::BatchAAResults::AA' o='0' t='llvm::AAResults &amp;'/>
<mbr r='llvm::BatchAAResults::AAQI' o='64' t='llvm::AAQueryInfo'/>
<fun r='_ZN4llvm14BatchAAResultsC1ERNS_9AAResultsE'/>
<fun r='_ZN4llvm14BatchAAResults5aliasERKNS_14MemoryLocationES3_'/>
<fun r='_ZN4llvm14BatchAAResults22pointsToConstantMemoryERKNS_14MemoryLocationEb'/>
<fun r='_ZN4llvm14BatchAAResults13getModRefInfoEPKNS_8CallBaseERKNS_14MemoryLocationE'/>
<fun r='_ZN4llvm14BatchAAResults13getModRefInfoEPKNS_8CallBaseES3_'/>
<fun r='_ZN4llvm14BatchAAResults13getModRefInfoEPKNS_11InstructionERKNS_8OptionalINS_14MemoryLocationEEE'/>
<fun r='_ZN4llvm14BatchAAResults13getModRefInfoEPNS_11InstructionEPKNS_8CallBaseE'/>
<fun r='_ZN4llvm14BatchAAResults16getArgModRefInfoEPKNS_8CallBaseEj'/>
<fun r='_ZN4llvm14BatchAAResults17getModRefBehaviorEPKNS_8CallBaseE'/>
