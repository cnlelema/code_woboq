<dec f='llvm/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h' l='68' type='bool llvm::EliminateUnreachableBlocks(llvm::Function &amp; F, llvm::DomTreeUpdater * DTU = nullptr, bool KeepOneInputPHIs = false)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h' l='65'>/// Delete all basic blocks from \p F that are not reachable from its entry
/// node. If \p KeepOneInputPHIs is true, one-input Phis in successors of
/// blocks being deleted will be preserved.</doc>
<use f='llvm/llvm/lib/CodeGen/UnreachableBlockElim.cpp' l='46' u='c' c='_ZN12_GLOBAL__N_130UnreachableBlockElimLegacyPass13runOnFunctionERN4llvm8FunctionE'/>
<use f='llvm/llvm/lib/CodeGen/UnreachableBlockElim.cpp' l='71' u='c' c='_ZN4llvm24UnreachableBlockElimPass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE'/>
<use f='llvm/llvm/lib/Transforms/Coroutines/CoroSplit.cpp' l='780' u='c' c='_ZL14splitCoroutineRN4llvm8FunctionERNS_9CallGraphERNS_12CallGraphSCCE'/>
<def f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='117' ll='137' type='bool llvm::EliminateUnreachableBlocks(llvm::Function &amp; F, llvm::DomTreeUpdater * DTU = nullptr, bool KeepOneInputPHIs = false)'/>
<use f='llvm/llvm/unittests/Transforms/Utils/BasicBlockUtilsTest.cpp' l='52' u='c' c='_ZN47BasicBlockUtils_EliminateUnreachableBlocks_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Transforms/Utils/BasicBlockUtilsTest.cpp' l='80' u='c' c='_ZN51BasicBlockUtils_NoUnreachableBlocksToEliminate_Test8TestBodyEv'/>
