<use f='llvm/clang/include/clang/Lex/TokenLexer.h' l='120' u='c' c='_ZN5clang10TokenLexerC1EPKNS_5TokenEjbbbRNS_12PreprocessorE'/>
<dec f='llvm/clang/include/clang/Lex/TokenLexer.h' l='139' type='void clang::TokenLexer::Init(const clang::Token * TokArray, unsigned int NumToks, bool DisableMacroExpansion, bool OwnsTokens, bool IsReinject)'/>
<doc f='llvm/clang/include/clang/Lex/TokenLexer.h' l='134'>/// Initialize this TokenLexer with the specified token stream.
  /// This does not take ownership of the specified token vector.
  ///
  /// DisableExpansion is true when macro expansion of tokens lexed from this
  /// stream should be disabled.</doc>
<use f='llvm/clang/lib/Lex/PPLexerChange.cpp' l='187' u='c' c='_ZN5clang12Preprocessor16EnterTokenStreamEPKNS_5TokenEjbbb'/>
<def f='llvm/clang/lib/Lex/TokenLexer.cpp' l='94' ll='122' type='void clang::TokenLexer::Init(const clang::Token * TokArray, unsigned int NumToks, bool disableMacroExpansion, bool ownsTokens, bool isReinject)'/>
<doc f='llvm/clang/lib/Lex/TokenLexer.cpp' l='92'>/// Create a TokenLexer for the specified token stream.  This does not
/// take ownership of the specified token vector.</doc>
