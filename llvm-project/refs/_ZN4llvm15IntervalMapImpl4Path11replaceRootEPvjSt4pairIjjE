<dec f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='867' type='void llvm::IntervalMapImpl::Path::replaceRoot(void * Root, unsigned int Size, IdxPair Offsets)'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1754' u='c' c='_ZN4llvm11IntervalMap8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefET_'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1798' u='c' c='_ZN4llvm11IntervalMap8iterator6insertET_S2_T0_'/>
<doc f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='862'>/// replaceRoot - Replace the current root node with two new entries after the
  /// tree height has increased.
  /// @param Root The new root node.
  /// @param Size Number of entries in the new root.
  /// @param Offsets Offsets into the root and first branch nodes.</doc>
<def f='llvm/llvm/lib/Support/IntervalMap.cpp' l='18' ll='22' type='void llvm::IntervalMapImpl::Path::replaceRoot(void * Root, unsigned int Size, IdxPair Offsets)'/>
