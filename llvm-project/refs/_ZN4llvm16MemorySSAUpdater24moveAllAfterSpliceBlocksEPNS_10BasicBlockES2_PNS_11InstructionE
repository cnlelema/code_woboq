<dec f='llvm/llvm/include/llvm/Analysis/MemorySSAUpdater.h' l='157' type='void llvm::MemorySSAUpdater::moveAllAfterSpliceBlocks(llvm::BasicBlock * From, llvm::BasicBlock * To, llvm::Instruction * Start)'/>
<doc f='llvm/llvm/include/llvm/Analysis/MemorySSAUpdater.h' l='144'>/// `From` block was spliced into `From` and `To`. There is a CFG edge from
  /// `From` to `To`. Move all accesses from `From` to `To` starting at
  /// instruction `Start`. `To` is newly created BB, so empty of
  /// MemorySSA::MemoryAccesses. Edges are already updated, so successors of
  /// `To` with MPhi nodes need to update incoming block.
  /// |------|        |------|
  /// | From |        | From |
  /// |      |        |------|
  /// |      |           ||
  /// |      |   =&gt;      \/
  /// |      |        |------|  &lt;- Start
  /// |      |        |  To  |
  /// |------|        |------|</doc>
<def f='llvm/llvm/lib/Analysis/MemorySSAUpdater.cpp' l='1087' ll='1096' type='void llvm::MemorySSAUpdater::moveAllAfterSpliceBlocks(llvm::BasicBlock * From, llvm::BasicBlock * To, llvm::Instruction * Start)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp' l='2387' u='c' c='_ZL19turnGuardIntoBranchPN4llvm13IntrinsicInstERNS_4LoopERNS_15SmallVectorImplIPNS_10BasicBlockEEERNS_13DominatorTreeERNS_8LoopInfoEPNS_16MemorySSAUpdaterE'/>
<use f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='393' u='c' c='_ZN4llvm10SplitBlockEPNS_10BasicBlockEPNS_11InstructionEPNS_13DominatorTreeEPNS_8LoopInfoEPNS_16MemorySSAUpdaterE'/>
