<dec f='llvm/llvm/lib/Target/Mips/MipsISelLowering.h' l='861' type='llvm::MachineBasicBlock * llvm::MipsTargetLowering::emitAtomicCmpSwap(llvm::MachineInstr &amp; MI, llvm::MachineBasicBlock * BB) const'/>
<def f='llvm/llvm/lib/Target/Mips/MipsISelLowering.cpp' l='2044' ll='2144' type='llvm::MachineBasicBlock * llvm::MipsTargetLowering::emitAtomicCmpSwap(llvm::MachineInstr &amp; MI, llvm::MachineBasicBlock * BB) const'/>
<doc f='llvm/llvm/lib/Target/Mips/MipsISelLowering.cpp' l='2039'>// Lower atomic compare and swap to a pseudo instruction, taking care to
// define a scratch register for the pseudo instruction&apos;s expansion. The
// instruction is expanded after the register allocator as to prevent
// the insertion of stores between the linked load and the store conditional.</doc>
