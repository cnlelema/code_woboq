<dec f='llvm/clang/include/clang/Format/Format.h' l='1121' type='bool'/>
<use f='llvm/clang/include/clang/Format/Format.h' l='1935' u='r' c='_ZNK5clang6format11FormatStyleeqERKS1_'/>
<use f='llvm/clang/include/clang/Format/Format.h' l='1935' u='r' c='_ZNK5clang6format11FormatStyleeqERKS1_'/>
<use f='llvm/clang/lib/Format/FormatToken.h' l='501' u='r' c='_ZNK5clang6format11FormatToken25opensBlockOrBlockTypeListERKNS0_11FormatStyleE'/>
<offset>1216</offset>
<doc f='llvm/clang/include/clang/Format/Format.h' l='1101'>/// If ``true``, format braced lists as best suited for C++11 braced
  /// lists.
  ///
  /// Important differences:
  /// - No spaces inside the braced list.
  /// - No line break before the closing brace.
  /// - Indentation with the continuation indent, not with the block indent.
  ///
  /// Fundamentally, C++11 braced lists are formatted exactly like function
  /// calls would be formatted in their place. If the braced list follows a name
  /// (e.g. a type or variable name), clang-format formats as if the ``{}`` were
  /// the parentheses of a function call with that name. If there is no name,
  /// a zero-length name is assumed.
  /// \code
  ///    true:                                  false:
  ///    vector&lt;int&gt; x{1, 2, 3, 4};     vs.     vector&lt;int&gt; x{ 1, 2, 3, 4 };
  ///    vector&lt;T&gt; x{{}, {}, {}, {}};           vector&lt;T&gt; x{ {}, {}, {}, {} };
  ///    f(MyMap[{composite, key}]);            f(MyMap[{ composite, key }]);
  ///    new int[3]{1, 2, 3};                   new int[3]{ 1, 2, 3 };
  /// \endcode</doc>
<use f='llvm/clang/lib/Format/Format.cpp' l='434' u='a' c='_ZN4llvm4yaml13MappingTraitsIN5clang6format11FormatStyleEE7mappingERNS0_2IOERS4_'/>
<use f='llvm/clang/lib/Format/Format.cpp' l='700' u='w' c='_ZN5clang6format12getLLVMStyleENS0_11FormatStyle12LanguageKindE'/>
<use f='llvm/clang/lib/Format/Format.cpp' l='876' u='w' c='_ZN5clang6format14getGoogleStyleENS0_11FormatStyle12LanguageKindE'/>
<use f='llvm/clang/lib/Format/Format.cpp' l='950' u='w' c='_ZN5clang6format15getMozillaStyleEv'/>
<use f='llvm/clang/lib/Format/Format.cpp' l='970' u='w' c='_ZN5clang6format14getWebKitStyleEv'/>
<use f='llvm/clang/lib/Format/Format.cpp' l='989' u='w' c='_ZN5clang6format11getGNUStyleEv'/>
<use f='llvm/clang/lib/Format/FormatToken.cpp' l='160' u='r' c='_ZN5clang6format18CommaSeparatedList25precomputeFormattingInfosEPKNS0_11FormatTokenE'/>
<use f='llvm/clang/lib/Format/FormatToken.cpp' l='199' u='r' c='_ZN5clang6format18CommaSeparatedList25precomputeFormattingInfosEPKNS0_11FormatTokenE'/>
<use f='llvm/clang/lib/Format/TokenAnnotator.cpp' l='2159' u='r' c='_ZN5clang6format14TokenAnnotator30calculateFormattingInformationERNS0_13AnnotatedLineE'/>
<use f='llvm/clang/lib/Format/TokenAnnotator.cpp' l='2420' u='r' c='_ZN5clang6format14TokenAnnotator12splitPenaltyERKNS0_13AnnotatedLineERKNS0_11FormatTokenEb'/>
<use f='llvm/clang/lib/Format/TokenAnnotator.cpp' l='2517' u='r' c='_ZN5clang6format14TokenAnnotator20spaceRequiredBetweenERKNS0_13AnnotatedLineERKNS0_11FormatTokenES7_'/>
<use f='llvm/clang/lib/Format/TokenAnnotator.cpp' l='2567' u='r' c='_ZN5clang6format14TokenAnnotator20spaceRequiredBetweenERKNS0_13AnnotatedLineERKNS0_11FormatTokenES7_'/>
<use f='llvm/clang/lib/Format/TokenAnnotator.cpp' l='2597' u='r' c='_ZN5clang6format14TokenAnnotator20spaceRequiredBetweenERKNS0_13AnnotatedLineERKNS0_11FormatTokenES7_'/>
<use f='llvm/clang/lib/Format/TokenAnnotator.cpp' l='2685' u='r' c='_ZN5clang6format14TokenAnnotator19spaceRequiredBeforeERKNS0_13AnnotatedLineERKNS0_11FormatTokenE'/>
<use f='llvm/clang/lib/Format/TokenAnnotator.cpp' l='2854' u='r' c='_ZN5clang6format14TokenAnnotator19spaceRequiredBeforeERKNS0_13AnnotatedLineERKNS0_11FormatTokenE'/>
<use f='llvm/clang/lib/Format/TokenAnnotator.cpp' l='3374' u='r' c='_ZN5clang6format14TokenAnnotator14canBreakBeforeERKNS0_13AnnotatedLineERKNS0_11FormatTokenE'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='7752' u='w' c='_ZN5clang6format12_GLOBAL__N_144FormatTest_LayoutCxx11BraceInitializers_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='11529' u='w' c='_ZN5clang6format12_GLOBAL__N_140FormatTest_ParsesConfigurationBools_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='11529' u='r' c='_ZN5clang6format12_GLOBAL__N_140FormatTest_ParsesConfigurationBools_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTest.cpp' l='11529' u='r' c='_ZN5clang6format12_GLOBAL__N_140FormatTest_ParsesConfigurationBools_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTestJava.cpp' l='257' u='w' c='_ZN5clang6format37FormatTestJava_ArrayInitializers_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Format/FormatTestTextProto.cpp' l='524' u='w' c='_ZN5clang6format56FormatTestTextProto_FormatsRepeatedListInitializers_Test8TestBodyEv'/>
