<dec f='llvm/clang/include/clang/Tooling/Refactoring/AtomicChange.h' l='101' type='llvm::Error clang::tooling::AtomicChange::insert(const clang::SourceManager &amp; SM, clang::SourceLocation Loc, llvm::StringRef Text, bool InsertAfter = true)'/>
<def f='llvm/clang/lib/Tooling/Refactoring/AtomicChange.cpp' l='263' ll='284' type='llvm::Error clang::tooling::AtomicChange::insert(const clang::SourceManager &amp; SM, clang::SourceLocation Loc, llvm::StringRef Text, bool InsertAfter = true)'/>
<doc f='llvm/clang/include/clang/Tooling/Refactoring/AtomicChange.h' l='93'>/// Adds a replacement that inserts \p Text at \p Loc. If this
  /// insertion conflicts with an existing insertion (at the same position),
  /// this will be inserted before/after the existing insertion depending on
  /// \p InsertAfter. Users should use `replace` with `Length=0` instead if they
  /// do not want conflict resolving by default. If the conflicting replacement
  /// is not an insertion, an error is returned.
  ///
  /// \returns An llvm::Error carrying ReplacementError on error.</doc>
<use f='llvm/clang/lib/Tooling/Refactoring/Extract/Extract.cpp' l='170' u='c' c='_ZN5clang7tooling15ExtractFunction24createSourceReplacementsERNS0_22RefactoringRuleContextE'/>
<use f='llvm/clang/unittests/Tooling/RefactoringTest.cpp' l='1111' u='c' c='_ZN5clang7tooling40AtomicChangeTest_AtomicChangeToYAML_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/RefactoringTest.cpp' l='1113' u='c' c='_ZN5clang7tooling40AtomicChangeTest_AtomicChangeToYAML_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/RefactoringTest.cpp' l='1162' u='c' c='_ZN5clang7tooling40AtomicChangeTest_YAMLToAtomicChange_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/RefactoringTest.cpp' l='1165' u='c' c='_ZN5clang7tooling40AtomicChangeTest_YAMLToAtomicChange_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/RefactoringTest.cpp' l='1224' u='c' c='_ZN5clang7tooling34AtomicChangeTest_InsertBefore_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/RefactoringTest.cpp' l='1229' u='c' c='_ZN5clang7tooling34AtomicChangeTest_InsertBefore_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/RefactoringTest.cpp' l='1238' u='c' c='_ZN5clang7tooling33AtomicChangeTest_InsertAfter_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/RefactoringTest.cpp' l='1243' u='c' c='_ZN5clang7tooling33AtomicChangeTest_InsertAfter_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/RefactoringTest.cpp' l='1253' u='c' c='_ZN5clang7tooling53AtomicChangeTest_InsertBeforeWithInvalidLocation_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/RefactoringTest.cpp' l='1257' u='c' c='_ZN5clang7tooling53AtomicChangeTest_InsertBeforeWithInvalidLocation_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/RefactoringTest.cpp' l='1269' u='c' c='_ZN5clang7tooling45AtomicChangeTest_InsertBeforeToWrongFile_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/RefactoringTest.cpp' l='1275' u='c' c='_ZN5clang7tooling45AtomicChangeTest_InsertBeforeToWrongFile_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/RefactoringTest.cpp' l='1285' u='c' c='_ZN5clang7tooling52AtomicChangeTest_InsertAfterWithInvalidLocation_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/RefactoringTest.cpp' l='1289' u='c' c='_ZN5clang7tooling52AtomicChangeTest_InsertAfterWithInvalidLocation_Test8TestBodyEv'/>
