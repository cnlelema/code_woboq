<def f='llvm/llvm/lib/Transforms/ObjCARC/ProvenanceAnalysis.h' l='51' ll='80'/>
<size>72</size>
<doc f='llvm/llvm/lib/Transforms/ObjCARC/ProvenanceAnalysis.h' l='42'>/// This is similar to BasicAliasAnalysis, and it uses many of the same
/// techniques, except it uses special ObjC-specific reasoning about pointer
/// relationships.
///
/// In this context ``Provenance&apos;&apos; is defined as the history of an object&apos;s
/// ownership. Thus ``Provenance Analysis&apos;&apos; is defined by using the notion of
/// an ``independent provenance source&apos;&apos; of a pointer to determine whether or
/// not two pointers have the same provenance source and thus could
/// potentially be related.</doc>
<mbr r='llvm::objcarc::ProvenanceAnalysis::AA' o='0' t='AliasAnalysis *'/>
<mbr r='llvm::objcarc::ProvenanceAnalysis::CachedResults' o='64' t='CachedResultsTy'/>
<mbr r='llvm::objcarc::ProvenanceAnalysis::UnderlyingObjCPtrCache' o='320' t='DenseMap&lt;const llvm::Value *, llvm::WeakTrackingVH&gt;'/>
<fun r='_ZN4llvm7objcarc18ProvenanceAnalysis12relatedCheckEPKNS_5ValueES4_RKNS_10DataLayoutE'/>
<fun r='_ZN4llvm7objcarc18ProvenanceAnalysis13relatedSelectEPKNS_10SelectInstEPKNS_5ValueE'/>
<fun r='_ZN4llvm7objcarc18ProvenanceAnalysis10relatedPHIEPKNS_7PHINodeEPKNS_5ValueE'/>
<fun r='_ZN4llvm7objcarc18ProvenanceAnalysisC1Ev'/>
<fun r='_ZN4llvm7objcarc18ProvenanceAnalysisC1ERKS1_'/>
<fun r='_ZN4llvm7objcarc18ProvenanceAnalysisaSERKS1_'/>
<fun r='_ZN4llvm7objcarc18ProvenanceAnalysis5setAAEPNS_9AAResultsE'/>
<fun r='_ZNK4llvm7objcarc18ProvenanceAnalysis5getAAEv'/>
<fun r='_ZN4llvm7objcarc18ProvenanceAnalysis7relatedEPKNS_5ValueES4_RKNS_10DataLayoutE'/>
<fun r='_ZN4llvm7objcarc18ProvenanceAnalysis5clearEv'/>
