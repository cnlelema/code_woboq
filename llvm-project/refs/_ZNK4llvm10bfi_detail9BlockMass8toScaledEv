<dec f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='137' type='ScaledNumber&lt;uint64_t&gt; llvm::bfi_detail::BlockMass::toScaled() const'/>
<doc f='llvm/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h' l='133'>/// Convert to scaled number.
  ///
  /// Convert to \a ScaledNumber.  \a isFull() gives 1.0, while \a isEmpty()
  /// gives slightly above 0.0.</doc>
<def f='llvm/llvm/lib/Analysis/BlockFrequencyInfoImpl.cpp' l='43' ll='47' type='ScaledNumber&lt;uint64_t&gt; llvm::bfi_detail::BlockMass::toScaled() const'/>
<use f='llvm/llvm/lib/Analysis/BlockFrequencyInfoImpl.cpp' l='391' u='c' c='_ZN4llvm26BlockFrequencyInfoImplBase16computeLoopScaleERNS0_8LoopDataE'/>
<use f='llvm/llvm/lib/Analysis/BlockFrequencyInfoImpl.cpp' l='503' u='c' c='_ZL10unwrapLoopRN4llvm26BlockFrequencyInfoImplBaseERNS0_8LoopDataE'/>
<use f='llvm/llvm/lib/Analysis/BlockFrequencyInfoImpl.cpp' l='524' u='c' c='_ZN4llvm26BlockFrequencyInfoImplBase11unwrapLoopsEv'/>
