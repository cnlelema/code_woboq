<dec f='llvm/clang/include/clang/Lex/HeaderSearch.h' l='583' type='bool clang::HeaderSearch::loadModuleMapFile(const clang::FileEntry * File, bool IsSystem, clang::FileID ID = clang::FileID(), unsigned int * Offset = nullptr, llvm::StringRef OriginalModuleMapFile = llvm::StringRef())'/>
<doc f='llvm/clang/include/clang/Lex/HeaderSearch.h' l='570'>/// Read the contents of the given module map file.
  ///
  /// \param File The module map file.
  /// \param IsSystem Whether this file is in a system header directory.
  /// \param ID If the module map file is already mapped (perhaps as part of
  ///        processing a preprocessed module), the ID of the file.
  /// \param Offset [inout] An offset within ID to start parsing. On exit,
  ///        filled by the end of the parsed contents (either EOF or the
  ///        location of an end-of-module-map pragma).
  /// \param OriginalModuleMapFile The original path to the module map file,
  ///        used to resolve paths within the module (this is required when
  ///        building the module from preprocessed source).
  /// \returns true if an error occurred, false otherwise.</doc>
<use f='llvm/clang/lib/Frontend/FrontendAction.cpp' l='436' u='c' c='_ZL27loadModuleMapForModuleBuildRN5clang16CompilerInstanceEbbRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERj'/>
<use f='llvm/clang/lib/Frontend/FrontendAction.cpp' l='796' u='c' c='_ZN5clang14FrontendAction15BeginSourceFileERNS_16CompilerInstanceERKNS_17FrontendInputFileE'/>
<def f='llvm/clang/lib/Lex/HeaderSearch.cpp' l='1423' ll='1465' type='bool clang::HeaderSearch::loadModuleMapFile(const clang::FileEntry * File, bool IsSystem, clang::FileID ID = clang::FileID(), unsigned int * Offset = nullptr, llvm::StringRef OriginalModuleMapFile = llvm::StringRef())'/>
