<dec f='llvm/llvm/include/llvm/IR/Constants.h' l='731' type='static llvm::Constant * llvm::ConstantDataArray::getFP(llvm::LLVMContext &amp; Context, ArrayRef&lt;uint16_t&gt; Elts)'/>
<doc f='llvm/llvm/include/llvm/IR/Constants.h' l='726'>/// getFP() constructors - Return a constant with array type with an element
  /// count and element type of float with precision matching the number of
  /// bits in the ArrayRef passed in. (i.e. half for 16bits, float for 32bits,
  /// double for 64bits) Note that this can return a ConstantAggregateZero
  /// object.</doc>
<use f='llvm/llvm/lib/Bitcode/Reader/BitcodeReader.cpp' l='2350' u='c' c='_ZN12_GLOBAL__N_113BitcodeReader14parseConstantsEv'/>
<def f='llvm/llvm/lib/IR/Constants.cpp' l='2567' ll='2572' type='static llvm::Constant * llvm::ConstantDataArray::getFP(llvm::LLVMContext &amp; Context, ArrayRef&lt;uint16_t&gt; Elts)'/>
<doc f='llvm/llvm/lib/IR/Constants.cpp' l='2562'>/// getFP() constructors - Return a constant with array type with an element
/// count and element type of float with precision matching the number of
/// bits in the ArrayRef passed in. (i.e. half for 16bits, float for 32bits,
/// double for 64bits) Note that this can return a ConstantAggregateZero
/// object.</doc>
