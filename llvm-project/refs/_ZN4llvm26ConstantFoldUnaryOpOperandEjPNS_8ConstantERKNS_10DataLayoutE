<dec f='llvm/llvm/include/llvm/Analysis/ConstantFolding.h' l='77' type='llvm::Constant * llvm::ConstantFoldUnaryOpOperand(unsigned int Opcode, llvm::Constant * Op, const llvm::DataLayout &amp; DL)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ConstantFolding.h' l='74'>/// Attempt to constant fold a unary operation with the specified
/// operand. If it fails, it returns a constant expression of the specified
/// operands.</doc>
<use f='llvm/llvm/lib/Analysis/ConstantFolding.cpp' l='1006' u='c' c='_ZN12_GLOBAL__N_128ConstantFoldInstOperandsImplEPKN4llvm5ValueEjNS0_8ArrayRefIPNS0_8ConstantEEERKNS0_10DataLayoutEPKNS0_17TargetLibraryInfoE'/>
<def f='llvm/llvm/lib/Analysis/ConstantFolding.cpp' l='1270' ll='1275' type='llvm::Constant * llvm::ConstantFoldUnaryOpOperand(unsigned int Opcode, llvm::Constant * Op, const llvm::DataLayout &amp; DL)'/>
<use f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='4305' u='c' c='_ZL12foldConstantN4llvm11Instruction8UnaryOpsERPNS_5ValueERKNS_13SimplifyQueryE'/>
