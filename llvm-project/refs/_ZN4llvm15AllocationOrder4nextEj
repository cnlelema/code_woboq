<def f='llvm/llvm/lib/CodeGen/AllocationOrder.h' l='54' ll='67' type='unsigned int llvm::AllocationOrder::next(unsigned int Limit = 0)'/>
<doc f='llvm/llvm/lib/CodeGen/AllocationOrder.h' l='51'>/// Return the next physical register in the allocation order, or 0.
  /// It is safe to call next() again after it returned 0, it will keep
  /// returning 0 until rewind() is called.</doc>
<use f='llvm/llvm/lib/CodeGen/RegAllocBasic.cpp' l='263' u='c' c='_ZN12_GLOBAL__N_17RABasic13selectOrSplitERN4llvm12LiveIntervalERNS1_15SmallVectorImplIjEE'/>
<use f='llvm/llvm/lib/CodeGen/RegAllocGreedy.cpp' l='768' u='c' c='_ZN12_GLOBAL__N_18RAGreedy9tryAssignERN4llvm12LiveIntervalERNS1_15AllocationOrderERNS1_15SmallVectorImplIjEERKNS1_8SmallSetIjLj16ESt4lessIjEEE'/>
<use f='llvm/llvm/lib/CodeGen/RegAllocGreedy.cpp' l='812' u='c' c='_ZN12_GLOBAL__N_18RAGreedy11canReassignERN4llvm12LiveIntervalEj'/>
<use f='llvm/llvm/lib/CodeGen/RegAllocGreedy.cpp' l='1145' u='c' c='_ZN12_GLOBAL__N_18RAGreedy8tryEvictERN4llvm12LiveIntervalERNS1_15AllocationOrderERNS1_15SmallVectorImplIjEEjRKNS1_8SmallSetIjLj16ESt4lessIjEEE'/>
<use f='llvm/llvm/lib/CodeGen/RegAllocGreedy.cpp' l='1879' u='c' c='_ZN12_GLOBAL__N_18RAGreedy24calculateRegionSplitCostERN4llvm12LiveIntervalERNS1_15AllocationOrderERNS1_14BlockFrequencyERjbPb'/>
<use f='llvm/llvm/lib/CodeGen/RegAllocGreedy.cpp' l='2319' u='c' c='_ZN12_GLOBAL__N_18RAGreedy13tryLocalSplitERN4llvm12LiveIntervalERNS1_15AllocationOrderERNS1_15SmallVectorImplIjEE'/>
<use f='llvm/llvm/lib/CodeGen/RegAllocGreedy.cpp' l='2634' u='c' c='_ZN12_GLOBAL__N_18RAGreedy23tryLastChanceRecoloringERN4llvm12LiveIntervalERNS1_15AllocationOrderERNS1_15SmallVectorImplIjEERNS1_8SmallSetIjLj16ESt4lessIjEEEj'/>
