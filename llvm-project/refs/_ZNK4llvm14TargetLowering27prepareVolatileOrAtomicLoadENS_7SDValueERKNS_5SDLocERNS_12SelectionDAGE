<def f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3636' ll='3639' type='llvm::SDValue llvm::TargetLowering::prepareVolatileOrAtomicLoad(llvm::SDValue Chain, const llvm::SDLoc &amp; DL, llvm::SelectionDAG &amp; DAG) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='3629'>/// This callback is used to prepare for a volatile or atomic load.
  /// It takes a chain node as input and returns the chain for the load itself.
  ///
  /// Having a callback like this is necessary for targets like SystemZ,
  /// which allows a CPU to reuse the result of a previous load indefinitely,
  /// even if a cache-coherent store is performed by another CPU.  The default
  /// implementation does nothing.</doc>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='4081' u='c' c='_ZN4llvm19SelectionDAGBuilder9visitLoadERKNS_8LoadInstE'/>
<use f='llvm/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp' l='4681' u='c' c='_ZN4llvm19SelectionDAGBuilder15visitAtomicLoadERKNS_8LoadInstE'/>
