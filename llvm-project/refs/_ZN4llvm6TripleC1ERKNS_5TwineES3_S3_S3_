<dec f='llvm/llvm/include/llvm/ADT/Triple.h' l='269' type='void llvm::Triple::Triple(const llvm::Twine &amp; ArchStr, const llvm::Twine &amp; VendorStr, const llvm::Twine &amp; OSStr, const llvm::Twine &amp; EnvironmentStr)'/>
<use f='llvm/clang/lib/Basic/Targets/AArch64.cpp' l='611' u='c' c='_ZN5clang7targets24RenderScript64TargetInfoC1ERKN4llvm6TripleERKNS_13TargetOptionsE'/>
<use f='llvm/clang/lib/Basic/Targets/ARM.cpp' l='1144' u='c' c='_ZN5clang7targets24RenderScript32TargetInfoC1ERKN4llvm6TripleERKNS_13TargetOptionsE'/>
<def f='llvm/llvm/lib/Support/Triple.cpp' l='816' ll='828' type='void llvm::Triple::Triple(const llvm::Twine &amp; ArchStr, const llvm::Twine &amp; VendorStr, const llvm::Twine &amp; OSStr, const llvm::Twine &amp; EnvironmentStr)'/>
<doc f='llvm/llvm/lib/Support/Triple.cpp' l='811'>/// Construct a triple from string representations of the architecture,
/// vendor, OS, and environment.
///
/// This joins each argument into a canonical string representation and parses
/// them into enum members.</doc>
