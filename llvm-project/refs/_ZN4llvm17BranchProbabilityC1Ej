<def f='llvm/llvm/include/llvm/Support/BranchProbability.h' l='40' type='void llvm::BranchProbability::BranchProbability(uint32_t n)'/>
<use f='llvm/llvm/include/llvm/Support/BranchProbability.h' l='49' u='c' c='_ZN4llvm17BranchProbability7getZeroEv'/>
<use f='llvm/llvm/include/llvm/Support/BranchProbability.h' l='50' u='c' c='_ZN4llvm17BranchProbability6getOneEv'/>
<use f='llvm/llvm/include/llvm/Support/BranchProbability.h' l='51' u='c' c='_ZN4llvm17BranchProbability10getUnknownEv'/>
<use f='llvm/llvm/include/llvm/Support/BranchProbability.h' l='54' u='c' c='_ZN4llvm17BranchProbability6getRawEj'/>
<use f='llvm/llvm/include/llvm/Support/BranchProbability.h' l='69' u='c' c='_ZNK4llvm17BranchProbability8getComplEv'/>
<doc f='llvm/llvm/include/llvm/Support/BranchProbability.h' l='38'>// Construct a BranchProbability with only numerator assuming the denominator
  // is 1&lt;&lt;31. For internal use only.</doc>
