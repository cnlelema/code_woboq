<dec f='llvm/llvm/lib/Target/NVPTX/NVPTXInstrInfo.h' l='56' type='bool llvm::NVPTXInstrInfo::analyzeBranch(llvm::MachineBasicBlock &amp; MBB, llvm::MachineBasicBlock *&amp; TBB, llvm::MachineBasicBlock *&amp; FBB, SmallVectorImpl&lt;llvm::MachineOperand&gt; &amp; Cond, bool AllowModify) const'/>
<doc f='llvm/llvm/lib/Target/NVPTX/NVPTXInstrInfo.h' l='55'>// Branch analysis.</doc>
<def f='llvm/llvm/lib/Target/NVPTX/NVPTXInstrInfo.cpp' l='95' ll='152' type='bool llvm::NVPTXInstrInfo::analyzeBranch(llvm::MachineBasicBlock &amp; MBB, llvm::MachineBasicBlock *&amp; TBB, llvm::MachineBasicBlock *&amp; FBB, SmallVectorImpl&lt;llvm::MachineOperand&gt; &amp; Cond, bool AllowModify) const'/>
<doc f='llvm/llvm/lib/Target/NVPTX/NVPTXInstrInfo.cpp' l='72'>/// AnalyzeBranch - Analyze the branching code at the end of MBB, returning
/// true if it cannot be understood (e.g. it&apos;s a switch dispatch or isn&apos;t
/// implemented for a target).  Upon success, this returns false and returns
/// with the following information in various cases:
///
/// 1. If this block ends with no branches (it just falls through to its succ)
///    just return false, leaving TBB/FBB null.
/// 2. If this block ends with only an unconditional branch, it sets TBB to be
///    the destination block.
/// 3. If this block ends with an conditional branch and it falls through to
///    an successor block, it sets TBB to be the branch destination block and a
///    list of operands that evaluate the condition. These
///    operands can be passed to other TargetInstrInfo methods to create new
///    branches.
/// 4. If this block ends with an conditional branch and an unconditional
///    block, it returns the &apos;true&apos; destination in TBB, the &apos;false&apos; destination
///    in FBB, and a list of operands that evaluate the condition. These
///    operands can be passed to other TargetInstrInfo methods to create new
///    branches.
///
/// Note that removeBranch and insertBranch must be implemented to support
/// cases where this method returns success.
///</doc>
