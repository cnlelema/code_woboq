<def f='llvm/llvm/lib/CodeGen/LiveRangeCalc.h' l='256' ll='259' type='void llvm::LiveRangeCalc::setLiveOutValue(llvm::MachineBasicBlock * MBB, llvm::VNInfo * VNI)'/>
<doc f='llvm/llvm/lib/CodeGen/LiveRangeCalc.h' l='237'>//===--------------------------------------------------------------------===//
  // Low-level interface.
  //===--------------------------------------------------------------------===//
  //
  // These functions can be used to compute live ranges where the live-in and
  // live-out blocks are already known, but the SSA value in each block is
  // unknown.
  //
  // After calling reset(), add known live-out values and known live-in blocks.
  // Then call calculateValues() to compute the actual value that is
  // live-in to each block, and add liveness to the live ranges.
  //

  /// setLiveOutValue - Indicate that VNI is live out from MBB.  The
  /// calculateValues() function will not add liveness for MBB, the caller
  /// should take care of that.
  ///
  /// VNI may be null only if MBB is a live-through block also passed to
  /// addLiveInBlock().</doc>
<use f='llvm/llvm/lib/CodeGen/LiveRangeCalc.cpp' l='406' u='c' c='_ZN4llvm13LiveRangeCalc16findReachingDefsERNS_9LiveRangeERNS_17MachineBasicBlockENS_9SlotIndexEjNS_8ArrayRefIS5_EE'/>
<use f='llvm/llvm/lib/CodeGen/SplitKit.cpp' l='1185' u='c' c='_ZN4llvm11SplitEditor14transferValuesEv'/>
<use f='llvm/llvm/lib/CodeGen/SplitKit.cpp' l='1203' u='c' c='_ZN4llvm11SplitEditor14transferValuesEv'/>
<use f='llvm/llvm/lib/CodeGen/SplitKit.cpp' l='1212' u='c' c='_ZN4llvm11SplitEditor14transferValuesEv'/>
