<def f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='1276' ll='1290' type='void clang::CodeGen::CodeGenFunction::OpenMPCancelExitStack::emitExit(clang::CodeGen::CodeGenFunction &amp; CGF, clang::OpenMPDirectiveKind Kind, const llvm::function_ref&lt;void (CodeGenFunction &amp;)&gt; CodeGen)'/>
<doc f='llvm/clang/lib/CodeGen/CodeGenFunction.h' l='1274'>/// Emits exit block with special codegen procedure specific for the related
    /// OpenMP construct + emits code for normal construct cleanup.</doc>
<use f='llvm/clang/lib/CodeGen/CGStmtOpenMP.cpp' l='1887' u='c' c='_ZN5clang7CodeGen15CodeGenFunction16EmitOMPOuterLoopEbbRKNS_16OMPLoopDirectiveERNS1_15OMPPrivateScopeERKNS1_16OMPLoopArgumentsERKN4llvm12function_refI6190539'/>
<use f='llvm/clang/lib/CodeGen/CGStmtOpenMP.cpp' l='2401' u='c' c='_ZN5clang7CodeGen15CodeGenFunction22EmitOMPWorksharingLoopERKNS_16OMPLoopDirectiveEPNS_4ExprERKN4llvm12function_refIFSt4pairINS0_6LValueESA_ERS1_RKNS_2192858'/>
<use f='llvm/clang/lib/CodeGen/CGStmtOpenMP.cpp' l='2635' u='c' c='_ZN5clang7CodeGen15CodeGenFunction12EmitSectionsERKNS_22OMPExecutableDirectiveE'/>
