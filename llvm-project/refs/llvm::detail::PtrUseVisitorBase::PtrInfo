<def f='llvm/llvm/include/llvm/Analysis/PtrUseVisitor.h' l='62' ll='115'/>
<size>16</size>
<doc f='llvm/llvm/include/llvm/Analysis/PtrUseVisitor.h' l='57'>/// This class provides information about the result of a visit.
  ///
  /// After walking all the users (recursively) of a pointer, the basic
  /// infrastructure records some commonly useful information such as escape
  /// analysis and whether the visit completed or aborted early.</doc>
<fun r='_ZN4llvm6detail17PtrUseVisitorBase7PtrInfoC1Ev'/>
<fun r='_ZN4llvm6detail17PtrUseVisitorBase7PtrInfo5resetEv'/>
<fun r='_ZNK4llvm6detail17PtrUseVisitorBase7PtrInfo9isAbortedEv'/>
<fun r='_ZNK4llvm6detail17PtrUseVisitorBase7PtrInfo9isEscapedEv'/>
<fun r='_ZNK4llvm6detail17PtrUseVisitorBase7PtrInfo15getAbortingInstEv'/>
<fun r='_ZNK4llvm6detail17PtrUseVisitorBase7PtrInfo15getEscapingInstEv'/>
<fun r='_ZN4llvm6detail17PtrUseVisitorBase7PtrInfo10setAbortedEPNS_11InstructionE'/>
<fun r='_ZN4llvm6detail17PtrUseVisitorBase7PtrInfo10setEscapedEPNS_11InstructionE'/>
<fun r='_ZN4llvm6detail17PtrUseVisitorBase7PtrInfo20setEscapedAndAbortedEPNS_11InstructionE'/>
<mbr r='llvm::detail::PtrUseVisitorBase::PtrInfo::AbortedInfo' o='0' t='PointerIntPair&lt;llvm::Instruction *, 1, bool&gt;'/>
<mbr r='llvm::detail::PtrUseVisitorBase::PtrInfo::EscapedInfo' o='64' t='PointerIntPair&lt;llvm::Instruction *, 1, bool&gt;'/>
