<def f='llvm/clang/include/clang/Analysis/ConstructionContext.h' l='487' ll='489' type='const clang::MaterializeTemporaryExpr * clang::TemporaryObjectConstructionContext::getMaterializedTemporaryExpr() const'/>
<doc f='llvm/clang/include/clang/Analysis/ConstructionContext.h' l='482'>/// MaterializeTemporaryExpr is non-null as long as the temporary is actually
  /// used after construction, eg. by binding to a reference (lifetime
  /// extension), accessing a field, calling a method, or passing it into
  /// a function (an elidable copy or move constructor would be a common
  /// example) by reference.</doc>
<use f='llvm/clang/lib/Analysis/CFG.cpp' l='5223' u='c' c='_ZL26print_construction_contextRN4llvm11raw_ostreamERN12_GLOBAL__N_117StmtPrinterHelperEPKN5clang19ConstructionContextE'/>
<use f='llvm/clang/lib/Analysis/CFG.cpp' l='5229' u='c' c='_ZL26print_construction_contextRN4llvm11raw_ostreamERN12_GLOBAL__N_117StmtPrinterHelperEPKN5clang19ConstructionContextE'/>
