<dec f='llvm/lld/include/lld/Common/Filesystem.h' l='17' type='std::error_code lld::tryCreateFile(llvm::StringRef Path)'/>
<use f='llvm/lld/COFF/Driver.cpp' l='1634' u='c' c='_ZN3lld4coff12LinkerDriver4linkEN4llvm8ArrayRefIPKcEE'/>
<def f='llvm/lld/Common/Filesystem.cpp' l='93' ll='99' type='std::error_code lld::tryCreateFile(llvm::StringRef Path)'/>
<doc f='llvm/lld/Common/Filesystem.cpp' l='81'>// Simulate file creation to see if Path is writable.
//
// Determining whether a file is writable or not is amazingly hard,
// and after all the only reliable way of doing that is to actually
// create a file. But we don&apos;t want to do that in this function
// because LLD shouldn&apos;t update any file if it will end in a failure.
// We also don&apos;t want to reimplement heuristics to determine if a
// file is writable. So we&apos;ll let FileOutputBuffer do the work.
//
// FileOutputBuffer doesn&apos;t touch a desitnation file until commit()
// is called. We use that class without calling commit() to predict
// if the given file is writable.</doc>
<use f='llvm/lld/ELF/Driver.cpp' l='1759' u='c' c='_ZN3lld3elf12LinkerDriver4linkERN4llvm3opt12InputArgListE'/>
<use f='llvm/lld/ELF/Driver.cpp' l='1761' u='c' c='_ZN3lld3elf12LinkerDriver4linkERN4llvm3opt12InputArgListE'/>
