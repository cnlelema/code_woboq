<def f='llvm/llvm/lib/Analysis/AliasAnalysisSummary.h' l='111' ll='114'/>
<size>8</size>
<doc f='llvm/llvm/lib/Analysis/AliasAnalysisSummary.h' l='103'>/// We use InterfaceValue to describe parameters/return value, as well as
/// potential memory locations that are pointed to by parameters/return value,
/// of a function.
/// Index is an integer which represents a single parameter or a return value.
/// When the index is 0, it refers to the return value. Non-zero index i refers
/// to the i-th parameter.
/// DerefLevel indicates the number of dereferences one must perform on the
/// parameter/return value to get this InterfaceValue.</doc>
<mbr r='llvm::cflaa::InterfaceValue::Index' o='0' t='unsigned int'/>
<mbr r='llvm::cflaa::InterfaceValue::DerefLevel' o='32' t='unsigned int'/>
