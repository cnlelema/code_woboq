<def f='llvm/llvm/include/llvm/ProfileData/Coverage/CoverageMapping.h' l='90' ll='141'/>
<size>8</size>
<doc f='llvm/llvm/include/llvm/ProfileData/Coverage/CoverageMapping.h' l='88'>/// A Counter is an abstract value that describes how to compute the
/// execution count for a region of code using the collected profile count data.</doc>
<smbr r='llvm::coverage::Counter::EncodingTagBits' t='const unsigned int'/>
<smbr r='llvm::coverage::Counter::EncodingTagMask' t='const unsigned int'/>
<smbr r='llvm::coverage::Counter::EncodingCounterTagAndExpansionRegionTagBits' t='const unsigned int'/>
<mbr r='llvm::coverage::Counter::Kind' o='0' t='llvm::coverage::Counter::CounterKind'/>
<mbr r='llvm::coverage::Counter::ID' o='32' t='unsigned int'/>
<fun r='_ZN4llvm8coverage7CounterC1ENS1_11CounterKindEj'/>
<fun r='_ZN4llvm8coverage7CounterC1Ev'/>
<fun r='_ZNK4llvm8coverage7Counter7getKindEv'/>
<fun r='_ZNK4llvm8coverage7Counter6isZeroEv'/>
<fun r='_ZNK4llvm8coverage7Counter12isExpressionEv'/>
<fun r='_ZNK4llvm8coverage7Counter12getCounterIDEv'/>
<fun r='_ZNK4llvm8coverage7Counter15getExpressionIDEv'/>
<fun r='_ZN4llvm8coverage7Counter7getZeroEv'/>
<fun r='_ZN4llvm8coverage7Counter10getCounterEj'/>
<fun r='_ZN4llvm8coverage7Counter13getExpressionEj'/>
