<dec f='llvm/clang/lib/Sema/SemaTemplateDeduction.cpp' l='100' type='32'/>
<use f='llvm/clang/lib/Sema/SemaTemplateDeduction.cpp' l='1464' u='r' c='_ZL34DeduceTemplateArgumentsByTypeMatchRN5clang4SemaEPNS_21TemplateParameterListENS_8QualTypeES4_RNS_4sema21TemplateDeductionInfoERN4llvm15SmallVector11610061'/>
<use f='llvm/clang/lib/Sema/SemaTemplateDeduction.cpp' l='1477' u='r' c='_ZL34DeduceTemplateArgumentsByTypeMatchRN5clang4SemaEPNS_21TemplateParameterListENS_8QualTypeES4_RNS_4sema21TemplateDeductionInfoERN4llvm15SmallVector11610061'/>
<use f='llvm/clang/lib/Sema/SemaTemplateDeduction.cpp' l='1694' u='r' c='_ZL34DeduceTemplateArgumentsByTypeMatchRN5clang4SemaEPNS_21TemplateParameterListENS_8QualTypeES4_RNS_4sema21TemplateDeductionInfoERN4llvm15SmallVector11610061'/>
<use f='llvm/clang/lib/Sema/SemaTemplateDeduction.cpp' l='4072' u='r' c='_ZN5clang4Sema23DeduceTemplateArgumentsEPNS_20FunctionTemplateDeclEPNS_24TemplateArgumentListInfoENS_8QualTypeERPNS_12FunctionDeclERNS_4sema21TemplateDeductionInfoEb'/>
<doc f='llvm/clang/lib/Sema/SemaTemplateDeduction.cpp' l='93'>/// Within template argument deduction from overload resolution per
    /// C++ [over.over] allow matching function types that are compatible in
    /// terms of noreturn and default calling convention adjustments, or
    /// similarly matching a declared template specialization against a
    /// possible template, per C++ [temp.deduct.decl]. In either case, permit
    /// deduction where the parameter is a function type that can be converted
    /// to the argument type.</doc>
