<dec f='llvm/llvm/include/llvm/ExecutionEngine/RuntimeDyld.h' l='200' type='std::map&lt;StringRef, JITEvaluatedSymbol&gt; llvm::RuntimeDyld::getSymbolTable() const'/>
<doc f='llvm/llvm/include/llvm/ExecutionEngine/RuntimeDyld.h' l='195'>/// Returns a copy of the symbol table. This can be used by on-finalized
  /// callbacks to extract the symbol table before throwing away the
  /// RuntimeDyld instance. Because the map keys (StringRefs) are backed by
  /// strings inside the RuntimeDyld instance, the map should be processed
  /// before the RuntimeDyld instance is discarded.</doc>
<def f='llvm/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp' l='1340' ll='1344' type='std::map&lt;StringRef, JITEvaluatedSymbol&gt; llvm::RuntimeDyld::getSymbolTable() const'/>
<use f='llvm/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp' l='1415' u='c' c='_ZN4llvm13jitLinkForORCERNS_6object10ObjectFileESt10unique_ptrINS_12MemoryBufferESt14default_deleteIS4_EERNS_11RuntimeDyld13MemoryManagerERNS_17JITSym11956257'/>
