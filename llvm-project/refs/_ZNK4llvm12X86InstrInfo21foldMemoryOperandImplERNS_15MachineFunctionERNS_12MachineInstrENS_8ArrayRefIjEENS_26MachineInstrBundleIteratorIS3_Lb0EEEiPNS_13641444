<dec f='llvm/llvm/lib/Target/X86/X86InstrInfo.h' l='350' type='llvm::MachineInstr * llvm::X86InstrInfo::foldMemoryOperandImpl(llvm::MachineFunction &amp; MF, llvm::MachineInstr &amp; MI, ArrayRef&lt;unsigned int&gt; Ops, MachineBasicBlock::iterator InsertPt, int FrameIndex, llvm::LiveIntervals * LIS = nullptr, llvm::VirtRegMap * VRM = nullptr) const'/>
<doc f='llvm/llvm/lib/Target/X86/X86InstrInfo.h' l='343'>/// foldMemoryOperand - If this target supports it, fold a load or store of
  /// the specified stack slot into the specified machine instruction for the
  /// specified operand(s).  If this is possible, the target should perform the
  /// folding and return true, otherwise it should return false.  If it folds
  /// the instruction, it is likely that the MachineInstruction the iterator
  /// references has been changed.</doc>
<def f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='4783' ll='4838' type='llvm::MachineInstr * llvm::X86InstrInfo::foldMemoryOperandImpl(llvm::MachineFunction &amp; MF, llvm::MachineInstr &amp; MI, ArrayRef&lt;unsigned int&gt; Ops, MachineBasicBlock::iterator InsertPt, int FrameIndex, llvm::LiveIntervals * LIS = nullptr, llvm::VirtRegMap * VRM = nullptr) const'/>
<use f='llvm/llvm/lib/Target/X86/X86InstrInfo.cpp' l='4989' u='c' c='_ZNK4llvm12X86InstrInfo21foldMemoryOperandImplERNS_15MachineFunctionERNS_12MachineInstrENS_8ArrayRefIjEENS_26MachineInstrBundleIteratorIS3_Lb0EEES4_PNS_13LiveIntervalsE'/>
