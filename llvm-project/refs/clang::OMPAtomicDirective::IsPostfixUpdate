<dec f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='2197' type='bool'/>
<use f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='2209' u='w' c='_ZN5clang18OMPAtomicDirectiveC1ENS_14SourceLocationES1_j'/>
<use f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='2219' u='w' c='_ZN5clang18OMPAtomicDirectiveC1Ej'/>
<use f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='2286' u='r' c='_ZNK5clang18OMPAtomicDirective15isPostfixUpdateEv'/>
<offset>264</offset>
<doc f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='2189'>/// Used for &apos;atomic update&apos; or &apos;atomic capture&apos; constructs. They may
  /// have atomic expressions of forms
  /// \code
  /// v = x; &lt;update x&gt;;
  /// &lt;update x&gt;; v = x;
  /// \endcode
  /// This field is true for the first(postfix) form of the expression and false
  /// otherwise.</doc>
<use f='llvm/clang/lib/AST/StmtOpenMP.cpp' l='678' u='w' c='_ZN5clang18OMPAtomicDirective6CreateERKNS_10ASTContextENS_14SourceLocationES4_N4llvm8ArrayRefIPNS_9OMPClauseEEEPNS_4StmtEPNS_4ExprESD_SD_SD_bb'/>
<use f='llvm/clang/lib/Serialization/ASTReaderStmt.cpp' l='2175' u='w' c='_ZN5clang13ASTStmtReader23VisitOMPAtomicDirectiveEPNS_18OMPAtomicDirectiveE'/>
