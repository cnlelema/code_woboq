<dec f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='307' type='bool llvm::LazyCallGraph::EdgeSequence::removeEdgeInternal(llvm::LazyCallGraph::Node &amp; ChildN)'/>
<doc f='llvm/llvm/include/llvm/Analysis/LazyCallGraph.h' l='306'>/// Internal helper to remove the edge to the given function.</doc>
<def f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='52' ll='60' type='bool llvm::LazyCallGraph::EdgeSequence::removeEdgeInternal(llvm::LazyCallGraph::Node &amp; TargetN)'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='1121' u='c' c='_ZN4llvm13LazyCallGraph6RefSCC18removeOutgoingEdgeERNS0_4NodeES3_'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='1150' u='c' c='_ZN4llvm13LazyCallGraph6RefSCC21removeInternalRefEdgeERNS0_4NodeENS_8ArrayRefIPS2_EE'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='1486' u='c' c='_ZN4llvm13LazyCallGraph10removeEdgeERNS0_4NodeES2_'/>
<use f='llvm/llvm/lib/Analysis/LazyCallGraph.cpp' l='1511' u='c' c='_ZN4llvm13LazyCallGraph18removeDeadFunctionERNS_8FunctionE'/>
