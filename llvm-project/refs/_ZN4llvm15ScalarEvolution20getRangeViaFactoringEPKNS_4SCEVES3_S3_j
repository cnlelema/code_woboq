<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1455' type='llvm::ConstantRange llvm::ScalarEvolution::getRangeViaFactoring(const llvm::SCEV * Start, const llvm::SCEV * Stop, const llvm::SCEV * MaxBECount, unsigned int BitWidth)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='1452'>/// Try to compute a range for the affine SCEVAddRecExpr {\p Start,+,\p
  /// Stop} by &quot;factoring out&quot; a ternary expression from the add recurrence.
  /// Helper called by \c getRange.</doc>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5662' u='c' c='_ZN4llvm15ScalarEvolution11getRangeRefEPKNS_4SCEVENS0_13RangeSignHintE'/>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='5823' ll='5936' type='llvm::ConstantRange llvm::ScalarEvolution::getRangeViaFactoring(const llvm::SCEV * Start, const llvm::SCEV * Step, const llvm::SCEV * MaxBECount, unsigned int BitWidth)'/>
