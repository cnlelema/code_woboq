<dec f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='234' type='bool llvm::FoldBranchToCommonDest(llvm::BranchInst * BI, llvm::MemorySSAUpdater * MSSAU = nullptr, unsigned int BonusInstThreshold = 1)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='231'>/// If this basic block is ONLY a setcc and a branch, and if a predecessor
/// branches to us and one of our successors, fold the setcc into the
/// predecessor and use logical operations to pick the right destination.</doc>
<use f='llvm/llvm/lib/Transforms/Utils/LoopSimplify.cpp' l='663' u='c' c='_ZL15simplifyOneLoopPN4llvm4LoopERNS_15SmallVectorImplIS1_EEPNS_13DominatorTreeEPNS_8LoopInfoEPNS_15ScalarEvolutionEPNS_15AssumptionCacheEPNS_16MemorySSAUpdaterEb'/>
<def f='llvm/llvm/lib/Transforms/Utils/SimplifyCFG.cpp' l='2564' ll='2867' type='bool llvm::FoldBranchToCommonDest(llvm::BranchInst * BI, llvm::MemorySSAUpdater * MSSAU = nullptr, unsigned int BonusInstThreshold = 1)'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyCFG.cpp' l='5852' u='c' c='_ZN12_GLOBAL__N_114SimplifyCFGOpt20SimplifyUncondBranchEPN4llvm10BranchInstERNS1_9IRBuilderINS1_14ConstantFolderENS1_24IRBuilderDefaultInserterEEE'/>
<use f='llvm/llvm/lib/Transforms/Utils/SimplifyCFG.cpp' l='5916' u='c' c='_ZN12_GLOBAL__N_114SimplifyCFGOpt18SimplifyCondBranchEPN4llvm10BranchInstERNS1_9IRBuilderINS1_14ConstantFolderENS1_24IRBuilderDefaultInserterEEE'/>
<doc f='llvm/llvm/lib/Transforms/Utils/SimplifyCFG.cpp' l='2561'>/// If this basic block is simple enough, and if a predecessor branches to us
/// and one of our successors, fold the block into the predecessor and use
/// logical operations to pick the right destination.</doc>
