<def f='llvm/clang/include/clang/Sema/TemplateDeduction.h' l='276' ll='296'/>
<size>64</size>
<doc f='llvm/clang/include/clang/Sema/TemplateDeduction.h' l='269'>/// TemplateSpecCandidate - This is a generalization of OverloadCandidate
/// which keeps track of template argument deduction failure info, when
/// handling explicit specializations (and instantiations) of templates
/// beyond function overloading.
/// For now, assume that the candidates are non-matching specializations.
/// TODO: In the future, we may need to unify/generalize this with
/// OverloadCandidate.</doc>
<mbr r='clang::TemplateSpecCandidate::FoundDecl' o='0' t='clang::DeclAccessPair'/>
<mbr r='clang::TemplateSpecCandidate::Specialization' o='64' t='clang::Decl *'/>
<mbr r='clang::TemplateSpecCandidate::DeductionFailure' o='128' t='clang::DeductionFailureInfo'/>
<fun r='_ZN5clang21TemplateSpecCandidate3setENS_14DeclAccessPairEPNS_4DeclENS_20DeductionFailureInfoE'/>
<fun r='_ZN5clang21TemplateSpecCandidate20NoteDeductionFailureERNS_4SemaEb'/>
