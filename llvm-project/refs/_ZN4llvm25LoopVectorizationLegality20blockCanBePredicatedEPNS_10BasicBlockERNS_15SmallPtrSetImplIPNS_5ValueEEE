<dec f='llvm/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h' l='366' type='bool llvm::LoopVectorizationLegality::blockCanBePredicated(llvm::BasicBlock * BB, SmallPtrSetImpl&lt;llvm::Value *&gt; &amp; SafePtrs)'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp' l='875' ll='918' type='bool llvm::LoopVectorizationLegality::blockCanBePredicated(llvm::BasicBlock * BB, SmallPtrSetImpl&lt;llvm::Value *&gt; &amp; SafePtrs)'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp' l='956' u='c' c='_ZN4llvm25LoopVectorizationLegality25canVectorizeWithIfConvertEv'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp' l='1204' u='c' c='_ZN4llvm25LoopVectorizationLegality20canFoldTailByMaskingEv'/>
<doc f='llvm/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h' l='363'>/// Return true if all of the instructions in the block can be speculatively
  /// executed. \p SafePtrs is a list of addresses that are known to be legal
  /// and we know that we can read from them without segfault.</doc>
