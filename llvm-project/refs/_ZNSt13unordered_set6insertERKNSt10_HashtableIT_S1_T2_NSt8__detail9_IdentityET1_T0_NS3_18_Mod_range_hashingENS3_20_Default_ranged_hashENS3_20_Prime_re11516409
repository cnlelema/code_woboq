<def f='include/c++/7/bits/unordered_set.h' l='418' ll='420' type='std::pair&lt;iterator, bool&gt; std::unordered_set::insert(const value_type &amp; __x)'/>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='1387' u='c' c='_ZL17runThinLTOBackendPN4llvm18ModuleSummaryIndexEPNS_6ModuleERKN5clang19HeaderSearchOptionsERKNS4_14CodeGenOptionsERKNS4_13TargetOptionsERKNS4_11Lang4113160'/>
<doc f='include/c++/7/bits/unordered_set.h' l='405'>/**
       *  @brief Attempts to insert an element into the %unordered_set.
       *  @param  __x  Element to be inserted.
       *  @return  A pair, of which the first element is an iterator that points
       *           to the possibly inserted element, and the second is a bool
       *           that is true if the element was actually inserted.
       *
       *  This function attempts to insert an element into the %unordered_set.
       *  An %unordered_set relies on unique keys and thus an element is only
       *  inserted if it is not already present in the %unordered_set.
       *
       *  Insertion requires amortized constant time.
       */</doc>
<use f='llvm/llvm/lib/DebugInfo/PDB/PDBSymbolFunc.cpp' l='44' u='c' c='_ZN12_GLOBAL__N_121FunctionArgEnumeratorC1ERKN4llvm3pdb11IPDBSessionERKNS2_13PDBSymbolFuncE'/>
<use f='llvm/llvm/lib/Transforms/IPO/FunctionImport.cpp' l='494' u='c' c='_ZL24computeImportForFunctionRKN4llvm15FunctionSummaryERKNS_18ModuleSummaryIndexEjRKNS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6de2809806'/>
<use f='llvm/llvm/lib/Transforms/IPO/FunctionImport.cpp' l='498' u='c' c='_ZL24computeImportForFunctionRKN4llvm15FunctionSummaryERKNS_18ModuleSummaryIndexEjRKNS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6de2809806'/>
<use f='llvm/llvm/lib/Transforms/IPO/FunctionImport.cpp' l='726' u='c' c='_ZN4llvm42ComputeCrossModuleImportForModuleFromIndexENS_9StringRefERKNS_18ModuleSummaryIndexERNS_9StringMapISt13unordered_setImSt4hashImESt8equal_toIm3857835'/>
<use f='llvm/llvm/tools/llvm-config/llvm-config.cpp' l='640' u='c' c='main'/>
