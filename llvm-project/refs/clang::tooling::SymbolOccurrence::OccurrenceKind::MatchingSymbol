<dec f='llvm/clang/include/clang/Tooling/Refactoring/Rename/SymbolOccurrences.h' l='60' type='0'/>
<doc f='llvm/clang/include/clang/Tooling/Refactoring/Rename/SymbolOccurrences.h' l='42'>/// This occurrence is an exact match and can be renamed automatically.
    ///
    /// Note:
    /// Symbol occurrences in macro arguments that expand to different
    /// declarations get marked as exact matches, and thus the renaming engine
    /// will rename them e.g.:
    ///
    /// \code
    ///   #define MACRO(x) x + ns::x
    ///   int foo(int var) {
    ///     return MACRO(var); // var is renamed automatically here when
    ///                        // either var or ns::var is renamed.
    ///   };
    /// \endcode
    ///
    /// The user will have to fix their code manually after performing such a
    /// rename.
    /// FIXME: The rename verifier should notify user about this issue.</doc>
<use f='llvm/clang/lib/Tooling/Refactoring/Rename/USRLocFinder.cpp' l='99' u='a' c='_ZN5clang7tooling12_GLOBAL__N_123USRLocFindingASTVisitor19checkAndAddLocationENS_14SourceLocationE'/>
<use f='llvm/clang/unittests/Tooling/RefactoringActionRulesTest.cpp' l='214' u='r' c='_ZZN12_GLOBAL__N_155RefactoringActionRulesTest_ReturnSymbolOccurrences_Test8TestBodyEvEN15FindOccurrences21findSymbolOccurrencesERN5clang7tooling22RefactoringRuleContextE'/>
<use f='llvm/clang/unittests/Tooling/RefactoringActionRulesTest.cpp' l='232' u='r' c='_ZN12_GLOBAL__N_155RefactoringActionRulesTest_ReturnSymbolOccurrences_Test8TestBodyEv'/>
