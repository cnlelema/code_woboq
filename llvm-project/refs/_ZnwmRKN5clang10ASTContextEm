<dec f='llvm/clang/include/clang/AST/ASTContextAllocate.h' l='26' type='void * operator new(size_t Bytes, const clang::ASTContext &amp; C, size_t Alignment = 8)'/>
<use f='llvm/clang/include/clang/AST/Attr.h' l='71' u='c' c='_ZN5clang4AttrnwEmRNS_10ASTContextEm'/>
<def f='llvm/clang/include/clang/AST/ASTContext.h' l='3155' ll='3158' type='void * operator new(size_t Bytes, const clang::ASTContext &amp; C, size_t Alignment = 8)'/>
<doc f='llvm/clang/include/clang/AST/ASTContext.h' l='3125'>// operator new and delete aren&apos;t allowed inside namespaces.

/// Placement new for using the ASTContext&apos;s allocator.
///
/// This placement form of operator new uses the ASTContext&apos;s allocator for
/// obtaining memory.
///
/// IMPORTANT: These are also declared in clang/AST/ASTContextAllocate.h!
/// Any changes here need to also be made there.
///
/// We intentionally avoid using a nothrow specification here so that the calls
/// to this operator will not perform a null check on the result -- the
/// underlying allocator never returns null pointers.
///
/// Usage looks like this (assuming there&apos;s an ASTContext &apos;Context&apos; in scope):
/// @code
/// // Default alignment (8)
/// IntegerLiteral *Ex = new (Context) IntegerLiteral(arguments);
/// // Specific alignment
/// IntegerLiteral *Ex2 = new (Context, 4) IntegerLiteral(arguments);
/// @endcode
/// Memory allocated through this placement new operator does not need to be
/// explicitly freed, as ASTContext will free all of this memory when it gets
/// destroyed. Please note that you cannot use delete on the pointer.
///
/// @param Bytes The number of bytes to allocate. Calculated by the compiler.
/// @param C The ASTContext that provides the allocator.
/// @param Alignment The alignment of the allocated memory (if the underlying
///                  allocator supports it).
/// @return The allocated memory. Could be nullptr.</doc>
<doc f='llvm/clang/include/clang/AST/ASTContextAllocate.h' l='25'>// Defined in ASTContext.h</doc>
<use f='llvm/clang/lib/AST/DeclBase.cpp' l='104' u='c' c='_ZN5clang4DeclnwEmRKNS_10ASTContextEPNS_11DeclContextEm'/>
<use f='llvm/clang/lib/AST/DeclBase.cpp' l='110' u='c' c='_ZN5clang4DeclnwEmRKNS_10ASTContextEPNS_11DeclContextEm'/>
<use f='llvm/clang/lib/AST/Stmt.cpp' l='74' u='c' c='_ZN5clang4StmtnwEmRKNS_10ASTContextEj'/>
