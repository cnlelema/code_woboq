<dec f='llvm/llvm/include/llvm/Analysis/BranchProbabilityInfo.h' l='196' type='bool llvm::BranchProbabilityInfo::calcLoopBranchHeuristics(const llvm::BasicBlock * BB, const llvm::LoopInfo &amp; LI, llvm::BranchProbabilityInfo::SccInfo &amp; SccI)'/>
<def f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='567' ll='650' type='bool llvm::BranchProbabilityInfo::calcLoopBranchHeuristics(const llvm::BasicBlock * BB, const llvm::LoopInfo &amp; LI, llvm::BranchProbabilityInfo::SccInfo &amp; SccI)'/>
<use f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='984' u='c' c='_ZN4llvm21BranchProbabilityInfo9calculateERKNS_8FunctionERKNS_8LoopInfoEPKNS_17TargetLibraryInfoE'/>
<doc f='llvm/llvm/lib/Analysis/BranchProbabilityInfo.cpp' l='565'>// Calculate Edge Weights using &quot;Loop Branch Heuristics&quot;. Predict backedges
// as taken, exiting edges as not-taken.</doc>
