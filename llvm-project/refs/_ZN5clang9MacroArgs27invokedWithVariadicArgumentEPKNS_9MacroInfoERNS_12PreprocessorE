<dec f='llvm/clang/include/clang/Lex/MacroArgs.h' l='127' type='bool clang::MacroArgs::invokedWithVariadicArgument(const clang::MacroInfo *const MI, clang::Preprocessor &amp; PP)'/>
<def f='llvm/clang/lib/Lex/MacroArgs.cpp' l='138' ll='144' type='bool clang::MacroArgs::invokedWithVariadicArgument(const clang::MacroInfo *const MI, clang::Preprocessor &amp; PP)'/>
<doc f='llvm/clang/include/clang/Lex/MacroArgs.h' l='114'>/// Returns true if the macro was defined with a variadic (ellipsis) parameter
  /// AND was invoked with at least one token supplied as a variadic argument
  /// (after pre-expansion).
  ///
  /// \code
  ///   #define F(a)  a
  ///   #define V(a, ...) __VA_OPT__(a)
  ///   F()     &lt;-- returns false on this invocation.
  ///   V(,a)   &lt;-- returns true on this invocation.
  ///   V(,)    &lt;-- returns false on this invocation.
  ///   V(,F()) &lt;-- returns false on this invocation.
  /// \endcode
  ///</doc>
<use f='llvm/clang/lib/Lex/TokenLexer.cpp' l='300' u='c' c='_ZN5clang10TokenLexer23ExpandFunctionArgumentsEv'/>
