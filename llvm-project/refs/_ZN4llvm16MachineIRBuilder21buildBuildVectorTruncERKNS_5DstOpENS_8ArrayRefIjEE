<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='768' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildBuildVectorTrunc(const llvm::DstOp &amp; Res, ArrayRef&lt;unsigned int&gt; Ops)'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='755'>/// Build and insert \p Res = G_BUILD_VECTOR_TRUNC \p Op0, ...
  ///
  /// G_BUILD_VECTOR_TRUNC creates a vector value from multiple scalar registers
  /// which have types larger than the destination vector element type, and
  /// truncates the values to fit.
  ///
  /// If the operands given are already the same size as the vector elt type,
  /// then this method will instead create a G_BUILD_VECTOR instruction.
  ///
  /// \pre setBasicBlock or setMI must have been called.
  /// \pre The type of all \p Ops registers must be identical.
  ///
  /// \return a MachineInstrBuilder for the newly created instruction.</doc>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='594' ll='602' type='llvm::MachineInstrBuilder llvm::MachineIRBuilder::buildBuildVectorTrunc(const llvm::DstOp &amp; Res, ArrayRef&lt;unsigned int&gt; Ops)'/>
