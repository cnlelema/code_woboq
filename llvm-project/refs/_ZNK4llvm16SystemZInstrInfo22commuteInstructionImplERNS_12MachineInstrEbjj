<dec f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.h' l='189' type='llvm::MachineInstr * llvm::SystemZInstrInfo::commuteInstructionImpl(llvm::MachineInstr &amp; MI, bool NewMI, unsigned int CommuteOpIdx1, unsigned int CommuteOpIdx2) const'/>
<doc f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.h' l='178'>/// Commutes the operands in the given instruction by changing the operands
  /// order and/or changing the instruction&apos;s opcode and/or the immediate value
  /// operand.
  ///
  /// The arguments &apos;CommuteOpIdx1&apos; and &apos;CommuteOpIdx2&apos; specify the operands
  /// to be commuted.
  ///
  /// Do not call this method for a non-commutable instruction or
  /// non-commutable operands.
  /// Even though the instruction is commutable, the method may still
  /// fail to commute the operands, null pointer is returned in such cases.</doc>
<def f='llvm/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp' l='302' ll='328' type='llvm::MachineInstr * llvm::SystemZInstrInfo::commuteInstructionImpl(llvm::MachineInstr &amp; MI, bool NewMI, unsigned int OpIdx1, unsigned int OpIdx2) const'/>
