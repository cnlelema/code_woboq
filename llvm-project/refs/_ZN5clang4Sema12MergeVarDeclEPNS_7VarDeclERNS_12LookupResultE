<dec f='llvm/clang/include/clang/Sema/Sema.h' l='2640' type='void clang::Sema::MergeVarDecl(clang::VarDecl * New, clang::LookupResult &amp; Previous)'/>
<def f='llvm/clang/lib/Sema/SemaDecl.cpp' l='3825' ll='4057' type='void clang::Sema::MergeVarDecl(clang::VarDecl * New, clang::LookupResult &amp; Previous)'/>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='7636' u='c' c='_ZN5clang4Sema24CheckVariableDeclarationEPNS_7VarDeclERNS_12LookupResultE'/>
<doc f='llvm/clang/lib/Sema/SemaDecl.cpp' l='3817'>/// MergeVarDecl - We just parsed a variable &apos;New&apos; which has the same name
/// and scope as a previous declaration &apos;Old&apos;.  Figure out how to resolve this
/// situation, merging decls or emitting diagnostics as appropriate.
///
/// Tentative definition rules (C99 6.9.2p2) are checked by
/// FinalizeDeclaratorGroup. Unfortunately, we can&apos;t analyze tentative
/// definitions here, since the initializer hasn&apos;t been attached.
///</doc>
<use f='llvm/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp' l='4808' u='c' c='_ZN5clang4Sema29InstantiateVariableDefinitionENS_14SourceLocationEPNS_7VarDeclEbbb'/>
