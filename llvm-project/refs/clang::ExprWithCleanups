<inh f='llvm/clang/include/clang/AST/Expr.h' l='928' c='clang::FullExpr'/>
<inh f='llvm/llvm/include/llvm/Support/TrailingObjects.h' l='233' c='llvm::TrailingObjects'/>
<def f='llvm/clang/include/clang/AST/ExprCXX.h' l='3207' ll='3268'/>
<size>24</size>
<doc f='llvm/clang/include/clang/AST/ExprCXX.h' l='3197'>/// Represents an expression -- generally a full-expression -- that
/// introduces cleanups to be run at the end of the sub-expression&apos;s
/// evaluation.  The most common source of expression-introduced
/// cleanups is temporary objects in C++, but several other kinds of
/// expressions can create cleanups, including basically every
/// call in ARC that returns an Objective-C pointer.
///
/// This expression also tracks whether the sub-expression contains a
/// potentially-evaluated block literal.  The lifetime of a block
/// literal is the extent of the enclosing scope.</doc>
<fun r='_ZN5clang16ExprWithCleanupsC1ENS_4Stmt10EmptyShellEj'/>
<fun r='_ZN5clang16ExprWithCleanupsC1EPNS_4ExprEbN4llvm8ArrayRefIPNS_9BlockDeclEEE'/>
<fun r='_ZN5clang16ExprWithCleanups6CreateERKNS_10ASTContextENS_4Stmt10EmptyShellEj'/>
<fun r='_ZN5clang16ExprWithCleanups6CreateERKNS_10ASTContextEPNS_4ExprEbN4llvm8ArrayRefIPNS_9BlockDeclEEE'/>
<fun r='_ZNK5clang16ExprWithCleanups10getObjectsEv'/>
<fun r='_ZNK5clang16ExprWithCleanups13getNumObjectsEv'/>
<fun r='_ZNK5clang16ExprWithCleanups9getObjectEj'/>
<fun r='_ZNK5clang16ExprWithCleanups23cleanupsHaveSideEffectsEv'/>
<fun r='_ZNK5clang16ExprWithCleanups11getBeginLocEv'/>
<fun r='_ZNK5clang16ExprWithCleanups9getEndLocEv'/>
<fun r='_ZN5clang16ExprWithCleanups7classofEPKNS_4StmtE'/>
<fun r='_ZN5clang16ExprWithCleanups8childrenEv'/>
<fun r='_ZNK5clang16ExprWithCleanups8childrenEv'/>
