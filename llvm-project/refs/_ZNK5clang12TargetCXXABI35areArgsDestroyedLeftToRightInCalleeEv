<def f='llvm/clang/include/clang/Basic/TargetCXXABI.h' l='208' ll='210' type='bool clang::TargetCXXABI::areArgsDestroyedLeftToRightInCallee() const'/>
<doc f='llvm/clang/include/clang/Basic/TargetCXXABI.h' l='201'>/// Are arguments to a call destroyed left to right in the callee?
  /// This is a fundamental language change, since it implies that objects
  /// passed by value do *not* live to the end of the full expression.
  /// Temporaries passed to a function taking a const reference live to the end
  /// of the full expression as usual.  Both the caller and the callee must
  /// have access to the destructor, while only the caller needs the
  /// destructor if this is false.</doc>
<use f='llvm/clang/lib/CodeGen/CGCall.cpp' l='2625' u='c' c='_ZN5clang7CodeGen15CodeGenFunction18EmitFunctionPrologERKNS0_14CGFunctionInfoEPN4llvm8FunctionERKNS0_15FunctionArgListE'/>
<use f='llvm/clang/lib/CodeGen/CGCall.cpp' l='3478' u='c' c='_ZN5clang7CodeGen15CodeGenFunction12EmitCallArgsERNS0_11CallArgListEN4llvm8ArrayRefINS_8QualTypeEEENS4_14iterator_rangeINS_17ConstStmtIteratorEEENS1_113657558'/>
<use f='llvm/clang/lib/CodeGen/CGClass.cpp' l='2079' u='c' c='_ZL23canEmitDelegateCallArgsRN5clang7CodeGen15CodeGenFunctionEPKNS_18CXXConstructorDeclENS_11CXXCtorTypeERNS0_11CallArgListE'/>
