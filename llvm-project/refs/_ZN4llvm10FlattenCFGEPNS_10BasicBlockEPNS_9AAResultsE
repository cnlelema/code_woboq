<dec f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='229' type='bool llvm::FlattenCFG(llvm::BasicBlock * BB, AliasAnalysis * AA = nullptr)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='226'>/// This function is used to flatten a CFG. For example, it uses parallel-and
/// and parallel-or mode to collapse if-conditions and merge if-regions with
/// identical statements.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/FlattenCFGPass.cpp' l='61' u='c' c='_ZL21iterativelyFlattenCFGRN4llvm8FunctionEPNS_9AAResultsE'/>
<def f='llvm/llvm/lib/Transforms/Utils/FlattenCFG.cpp' l='489' ll='491' type='bool llvm::FlattenCFG(llvm::BasicBlock * BB, AliasAnalysis * AA = nullptr)'/>
<doc f='llvm/llvm/lib/Transforms/Utils/FlattenCFG.cpp' l='486'>/// FlattenCFG - This function is used to flatten a CFG.  For
/// example, it uses parallel-and and parallel-or mode to collapse
/// if-conditions and merge if-regions with identical statements.</doc>
