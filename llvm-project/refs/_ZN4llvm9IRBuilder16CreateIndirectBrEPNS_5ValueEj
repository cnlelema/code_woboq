<def f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='894' ll='896' type='llvm::IndirectBrInst * llvm::IRBuilder::CreateIndirectBr(llvm::Value * Addr, unsigned int NumDests = 10)'/>
<doc f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='891'>/// Create an indirect branch instruction with the specified address
  /// operand, with an optional hint for the number of destinations that will be
  /// added (for efficient allocation).</doc>
<use f='llvm/clang/lib/CodeGen/CodeGenFunction.cpp' l='1744' u='c' c='_ZN5clang7CodeGen15CodeGenFunction20GetIndirectGotoBlockEv'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='3095' u='c' c='LLVMBuildIndirectBr'/>
