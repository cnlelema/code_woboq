<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='200' u='c' c='_ZN4llvm15TypeSetByHwModeC1ENS_17ValueTypeByHwModeE'/>
<dec f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='201' type='void llvm::TypeSetByHwMode::TypeSetByHwMode(ArrayRef&lt;llvm::ValueTypeByHwMode&gt; VTList)'/>
<def f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='69' ll='74' type='void llvm::TypeSetByHwMode::TypeSetByHwMode(ArrayRef&lt;llvm::ValueTypeByHwMode&gt; VTList)'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='1484' u='c' c='_ZNK4llvm16SDTypeConstraint19ApplyTypeConstraintEPNS_15TreePatternNodeERKNS_10SDNodeInfoERNS_11TreePatternE'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='1610' u='c' c='_ZN4llvm15TreePatternNode22UpdateNodeTypeFromInstEjPNS_6RecordERNS_11TreePatternE'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='2074' u='c' c='_ZL15getImplicitTypePN4llvm6RecordEjbbRNS_11TreePatternE'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='2090' u='c' c='_ZL15getImplicitTypePN4llvm6RecordEjbbRNS_11TreePatternE'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='2104' u='c' c='_ZL15getImplicitTypePN4llvm6RecordEjbbRNS_11TreePatternE'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='2966' u='c' c='_ZN4llvm18CodeGenDAGPatternsC1ERNS_12RecordKeeperESt8functionIFvPNS_11TreePatternEEE'/>
<doc f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='63'>// --- TypeSetByHwMode

// This is a parameterized type-set class. For each mode there is a list
// of types that are currently possible for a given tree node. Type
// inference will apply to each mode separately.</doc>
