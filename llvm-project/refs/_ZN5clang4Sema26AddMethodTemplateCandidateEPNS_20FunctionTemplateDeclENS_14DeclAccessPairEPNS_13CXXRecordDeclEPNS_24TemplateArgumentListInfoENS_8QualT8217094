<dec f='llvm/clang/include/clang/Sema/Sema.h' l='2910' type='void clang::Sema::AddMethodTemplateCandidate(clang::FunctionTemplateDecl * MethodTmpl, clang::DeclAccessPair FoundDecl, clang::CXXRecordDecl * ActingContext, clang::TemplateArgumentListInfo * ExplicitTemplateArgs, clang::QualType ObjectType, Expr::Classification ObjectClassification, ArrayRef&lt;clang::Expr *&gt; Args, clang::OverloadCandidateSet &amp; CandidateSet, bool SuppressUserConversions = false, bool PartialOverloading = false)'/>
<def f='llvm/clang/lib/Sema/SemaOverload.cpp' l='6717' ll='6780' type='void clang::Sema::AddMethodTemplateCandidate(clang::FunctionTemplateDecl * MethodTmpl, clang::DeclAccessPair FoundDecl, clang::CXXRecordDecl * ActingContext, clang::TemplateArgumentListInfo * ExplicitTemplateArgs, clang::QualType ObjectType, Expr::Classification ObjectClassification, ArrayRef&lt;clang::Expr *&gt; Args, clang::OverloadCandidateSet &amp; CandidateSet, bool SuppressUserConversions = false, bool PartialOverloading = false)'/>
<doc f='llvm/clang/lib/Sema/SemaOverload.cpp' l='6714'>/// Add a C++ member function template as a candidate to the candidate
/// set, using template argument deduction to produce an appropriate member
/// function template specialization.</doc>
