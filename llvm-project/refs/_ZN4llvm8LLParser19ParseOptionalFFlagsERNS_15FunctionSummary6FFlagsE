<dec f='llvm/llvm/lib/AsmParser/LLParser.h' l='356' type='bool llvm::LLParser::ParseOptionalFFlags(FunctionSummary::FFlags &amp; FFlags)'/>
<use f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='7962' u='c' c='_ZN4llvm8LLParser20ParseFunctionSummaryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmj'/>
<def f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='8109' ll='8159' type='bool llvm::LLParser::ParseOptionalFFlags(FunctionSummary::FFlags &amp; FFlags)'/>
<doc f='llvm/llvm/lib/AsmParser/LLParser.cpp' l='8104'>/// OptionalFFlags
///   := &apos;funcFlags&apos; &apos;:&apos; &apos;(&apos; [&apos;readNone&apos; &apos;:&apos; Flag]?
///        [&apos;,&apos; &apos;readOnly&apos; &apos;:&apos; Flag]? [&apos;,&apos; &apos;noRecurse&apos; &apos;:&apos; Flag]?
///        [&apos;,&apos; &apos;returnDoesNotAlias&apos; &apos;:&apos; Flag]? &apos;)&apos;
///        [&apos;,&apos; &apos;noInline&apos; &apos;:&apos; Flag]? &apos;)&apos;</doc>
