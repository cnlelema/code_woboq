<dec f='llvm/llvm/include/llvm/Transforms/Utils/VNCoercion.h' l='82' type='llvm::Value * llvm::VNCoercion::getStoreValueForLoad(llvm::Value * SrcVal, unsigned int Offset, llvm::Type * LoadTy, llvm::Instruction * InsertPt, const llvm::DataLayout &amp; DL)'/>
<use f='llvm/llvm/lib/Transforms/Scalar/GVN.cpp' l='775' u='c' c='_ZNK4llvm3gvn14AvailableValue24MaterializeAdjustedValueEPNS_8LoadInstEPNS_11InstructionERNS_3GVNE'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/VNCoercion.h' l='79'>/// If analyzeLoadFromClobberingStore returned an offset, this function can be
/// used to actually perform the extraction of the bits from the store. It
/// inserts instructions to do so at InsertPt, and returns the extracted value.</doc>
<def f='llvm/llvm/lib/Transforms/Utils/VNCoercion.cpp' l='429' ll='435' type='llvm::Value * llvm::VNCoercion::getStoreValueForLoad(llvm::Value * SrcVal, unsigned int Offset, llvm::Type * LoadTy, llvm::Instruction * InsertPt, const llvm::DataLayout &amp; DL)'/>
<use f='llvm/llvm/lib/Transforms/Utils/VNCoercion.cpp' l='499' u='c' c='_ZN4llvm10VNCoercion19getLoadValueForLoadEPNS_8LoadInstEjPNS_4TypeEPNS_11InstructionERKNS_10DataLayoutERNS_3GVNE'/>
<doc f='llvm/llvm/lib/Transforms/Utils/VNCoercion.cpp' l='425'>/// This function is called when we have a memdep query of a load that ends up
/// being a clobbering store.  This means that the store provides bits used by
/// the load but the pointers don&apos;t must-alias.  Check this case to see if
/// there is anything more we can do before we give up.</doc>
