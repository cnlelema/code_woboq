<dec f='llvm/clang/include/clang/Sema/Sema.h' l='1739' type='bool clang::Sema::RequireCompleteType(clang::SourceLocation Loc, clang::QualType T, clang::Sema::TypeDiagnoser &amp; Diagnoser)'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='16957' u='c' c='_ZN5clang4Sema19CheckCallReturnTypeENS_8QualTypeENS_14SourceLocationEPNS_8CallExprEPNS_12FunctionDeclE'/>
<use f='llvm/clang/lib/Sema/SemaOverload.cpp' l='5825' u='c' c='_ZN5clang4Sema35PerformContextualImplicitConversionENS_14SourceLocationEPNS_4ExprERNS0_27ContextualImplicitConverterE'/>
<use f='llvm/clang/lib/Sema/SemaType.cpp' l='7999' u='c' c='_ZN5clang4Sema23RequireCompleteExprTypeEPNS_4ExprERNS0_13TypeDiagnoserE'/>
<def f='llvm/clang/lib/Sema/SemaType.cpp' l='8024' ll='8035' type='bool clang::Sema::RequireCompleteType(clang::SourceLocation Loc, clang::QualType T, clang::Sema::TypeDiagnoser &amp; Diagnoser)'/>
<use f='llvm/clang/lib/Sema/SemaType.cpp' l='8339' u='c' c='_ZN5clang4Sema19RequireCompleteTypeENS_14SourceLocationENS_8QualTypeEj'/>
<doc f='llvm/clang/lib/Sema/SemaType.cpp' l='8007'>/// Ensure that the type T is a complete type.
///
/// This routine checks whether the type @p T is complete in any
/// context where a complete type is required. If @p T is a complete
/// type, returns false. If @p T is a class template specialization,
/// this routine then attempts to perform class template
/// instantiation. If instantiation fails, or if @p T is incomplete
/// and cannot be completed, issues the diagnostic @p diag (giving it
/// the type @p T) and returns true.
///
/// @param Loc  The location in the source that the incomplete type
/// diagnostic should refer to.
///
/// @param T  The type that this routine is examining for completeness.
///
/// @returns @c true if @p T is incomplete and a diagnostic was emitted,
/// @c false otherwise.</doc>
