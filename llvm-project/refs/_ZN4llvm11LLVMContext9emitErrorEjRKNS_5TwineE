<dec f='llvm/llvm/include/llvm/IR/LLVMContext.h' l='310' type='void llvm::LLVMContext::emitError(unsigned int LocCookie, const llvm::Twine &amp; ErrorStr)'/>
<doc f='llvm/llvm/include/llvm/IR/LLVMContext.h' l='305'>/// emitError - Emit an error message to the currently installed error handler
  /// with optional location information.  This function returns, so code should
  /// be prepared to drop the erroneous construct on the floor and &quot;not crash&quot;.
  /// The generated code need not be correct.  The error message will be
  /// implicitly prefixed with &quot;error: &quot; and should not end with a &quot;.&quot;.</doc>
<use f='llvm/llvm/lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp' l='274' u='c' c='_ZL18EmitMSInlineAsmStrPKcPKN4llvm12MachineInstrEPNS1_17MachineModuleInfoEPNS1_10AsmPrinterEjRNS1_11raw_ostreamE'/>
<use f='llvm/llvm/lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp' l='455' u='c' c='_ZL19EmitGCCInlineAsmStrPKcPKN4llvm12MachineInstrEPNS1_17MachineModuleInfoEiPNS1_10AsmPrinterEjRNS1_11raw_ostreamE'/>
<use f='llvm/llvm/lib/CodeGen/MachineInstr.cpp' l='2009' u='c' c='_ZNK4llvm12MachineInstr9emitErrorENS_9StringRefE'/>
<def f='llvm/llvm/lib/IR/LLVMContext.cpp' l='257' ll='259' type='void llvm::LLVMContext::emitError(unsigned int LocCookie, const llvm::Twine &amp; ErrorStr)'/>
