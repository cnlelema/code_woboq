<dec f='llvm/clang/include/clang/Sema/Sema.h' l='4323' type='clang::DeclRefExpr * clang::Sema::BuildDeclRefExpr(clang::ValueDecl * D, clang::QualType Ty, clang::ExprValueKind VK, const clang::DeclarationNameInfo &amp; NameInfo, clang::NestedNameSpecifierLoc NNS, clang::NamedDecl * FoundD = nullptr, clang::SourceLocation TemplateKWLoc = clang::SourceLocation(), const clang::TemplateArgumentListInfo * TemplateArgs = nullptr)'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='1795' u='c' c='_ZN5clang4Sema16BuildDeclRefExprEPNS_9ValueDeclENS_8QualTypeENS_13ExprValueKindERKNS_19DeclarationNameInfoEPKNS_12CXXScopeSpecEPNS_9NamedDeclENS_14Sou11200164'/>
<def f='llvm/clang/lib/Sema/SemaExpr.cpp' l='1822' ll='1859' type='clang::DeclRefExpr * clang::Sema::BuildDeclRefExpr(clang::ValueDecl * D, clang::QualType Ty, clang::ExprValueKind VK, const clang::DeclarationNameInfo &amp; NameInfo, clang::NestedNameSpecifierLoc NNS, clang::NamedDecl * FoundD = nullptr, clang::SourceLocation TemplateKWLoc = clang::SourceLocation(), const clang::TemplateArgumentListInfo * TemplateArgs = nullptr)'/>
<doc f='llvm/clang/lib/Sema/SemaExpr.cpp' l='1820'>/// BuildDeclRefExpr - Build an expression that references a
/// declaration that does not require a closure capture.</doc>
