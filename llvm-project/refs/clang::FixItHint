<def f='llvm/clang/include/clang/Basic/Diagnostic.h' l='65' ll='140'/>
<size>64</size>
<doc f='llvm/clang/include/clang/Basic/Diagnostic.h' l='56'>/// Annotates a diagnostic with some code that should be
/// inserted, removed, or replaced to fix the problem.
///
/// This kind of hint should be used when we are certain that the
/// introduction, removal, or modification of a particular (small!)
/// amount of code will correct a compilation error. The compiler
/// should also provide full recovery from such errors, such that
/// suppressing the diagnostic output can still result in successful
/// compilation.</doc>
<mbr r='clang::FixItHint::RemoveRange' o='0' t='clang::CharSourceRange'/>
<mbr r='clang::FixItHint::InsertFromRange' o='96' t='clang::CharSourceRange'/>
<mbr r='clang::FixItHint::CodeToInsert' o='192' t='std::string'/>
<mbr r='clang::FixItHint::BeforePreviousInsertions' o='448' t='bool'/>
<fun r='_ZN5clang9FixItHintC1Ev'/>
<fun r='_ZNK5clang9FixItHint6isNullEv'/>
<fun r='_ZN5clang9FixItHint15CreateInsertionENS_14SourceLocationEN4llvm9StringRefEb'/>
<fun r='_ZN5clang9FixItHint24CreateInsertionFromRangeENS_14SourceLocationENS_15CharSourceRangeEb'/>
<fun r='_ZN5clang9FixItHint13CreateRemovalENS_15CharSourceRangeE'/>
<fun r='_ZN5clang9FixItHint13CreateRemovalENS_11SourceRangeE'/>
<fun r='_ZN5clang9FixItHint17CreateReplacementENS_15CharSourceRangeEN4llvm9StringRefE'/>
<fun r='_ZN5clang9FixItHint17CreateReplacementENS_11SourceRangeEN4llvm9StringRefE'/>
