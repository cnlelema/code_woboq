<dec f='llvm/clang/include/clang/Serialization/ASTReader.h' l='2031' type='void clang::ASTReader::SetGloballyVisibleDecls(clang::IdentifierInfo * II, const SmallVectorImpl&lt;uint32_t&gt; &amp; DeclIDs, SmallVectorImpl&lt;clang::Decl *&gt; * Decls = nullptr)'/>
<use f='llvm/clang/lib/Serialization/ASTReader.cpp' l='1016' u='c' c='_ZN5clang13serialization6reader24ASTIdentifierLookupTrait8ReadDataERKN4llvm9StringRefEPKhj'/>
<def f='llvm/clang/lib/Serialization/ASTReader.cpp' l='8401' ll='8432' type='void clang::ASTReader::SetGloballyVisibleDecls(clang::IdentifierInfo * II, const SmallVectorImpl&lt;uint32_t&gt; &amp; DeclIDs, SmallVectorImpl&lt;clang::Decl *&gt; * Decls = nullptr)'/>
<use f='llvm/clang/lib/Serialization/ASTReader.cpp' l='9355' u='c' c='_ZN5clang9ASTReader20finishPendingActionsEv'/>
<doc f='llvm/clang/lib/Serialization/ASTReader.cpp' l='8385'>/// Set the globally-visible declarations associated with the given
/// identifier.
///
/// If the AST reader is currently in a state where the given declaration IDs
/// cannot safely be resolved, they are queued until it is safe to resolve
/// them.
///
/// \param II an IdentifierInfo that refers to one or more globally-visible
/// declarations.
///
/// \param DeclIDs the set of declaration IDs with the name @p II that are
/// visible at global scope.
///
/// \param Decls if non-null, this vector will be populated with the set of
/// deserialized declarations. These declarations will not be pushed into
/// scope.</doc>
