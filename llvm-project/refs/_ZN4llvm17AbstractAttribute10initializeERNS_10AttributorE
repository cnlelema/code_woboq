<def f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='450' type='void llvm::AbstractAttribute::initialize(llvm::Attributor &amp; A)'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/Attributor.h' l='442'>/// Initialize the state with the information in the Attributor \p A.
  ///
  /// This function is called by the Attributor once all abstract attributes
  /// have been identified. It can and shall be used for task like:
  ///  - identify existing knowledge in the IR and use it for the &quot;known state&quot;
  ///  - perform any work that is not going to change over time, e.g., determine
  ///    a subset of the IR, or attributes in-flight, that have to be looked at
  ///    in the `updateImpl` method.</doc>
<use f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='251' u='c' c='_ZN4llvm10Attributor3runEv'/>
