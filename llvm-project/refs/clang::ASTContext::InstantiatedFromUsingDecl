<dec f='llvm/clang/include/clang/AST/ASTContext.h' l='499' type='llvm::DenseMap&lt;NamedDecl *, NamedDecl *&gt;'/>
<doc f='llvm/clang/include/clang/AST/ASTContext.h' l='476'>/// Keeps track of the declaration from which a using declaration was
  /// created during instantiation.
  ///
  /// The source and target declarations are always a UsingDecl, an
  /// UnresolvedUsingValueDecl, or an UnresolvedUsingTypenameDecl.
  ///
  /// For example:
  /// \code
  /// template&lt;typename T&gt;
  /// struct A {
  ///   void f();
  /// };
  ///
  /// template&lt;typename T&gt;
  /// struct B : A&lt;T&gt; {
  ///   using A&lt;T&gt;::f;
  /// };
  ///
  /// template struct B&lt;int&gt;;
  /// \endcode
  ///
  /// This mapping will contain an entry that maps from the UsingDecl in
  /// B&lt;int&gt; to the UnresolvedUsingDecl in B&lt;T&gt;.</doc>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='1419' u='m' c='_ZN5clang10ASTContext28getInstantiatedFromUsingDeclEPNS_9NamedDeclE'/>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='1420' u='m' c='_ZN5clang10ASTContext28getInstantiatedFromUsingDeclEPNS_9NamedDeclE'/>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='1436' u='m' c='_ZN5clang10ASTContext28setInstantiatedFromUsingDeclEPNS_9NamedDeclES2_'/>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='1437' u='m' c='_ZN5clang10ASTContext28setInstantiatedFromUsingDeclEPNS_9NamedDeclES2_'/>
<use f='llvm/clang/lib/AST/ASTContext.cpp' l='10346' u='r' c='_ZNK5clang10ASTContext27getSideTableAllocatedMemoryEv'/>
