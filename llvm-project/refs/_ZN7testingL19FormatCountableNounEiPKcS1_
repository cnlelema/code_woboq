<def f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='2809' ll='2814' type='std::string testing::FormatCountableNoun(int count, const char * singular_form, const char * plural_form)'/>
<use f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='2818' u='c' c='_ZN7testingL15FormatTestCountEi'/>
<use f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='2823' u='c' c='_ZN7testingL19FormatTestCaseCountEi'/>
<use f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='3100' u='c' c='_ZN7testing8internal27PrettyUnitTestResultPrinter15OnTestCaseStartERKNS_8TestCaseE'/>
<use f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='3153' u='c' c='_ZN7testing8internal27PrettyUnitTestResultPrinter13OnTestCaseEndERKNS_8TestCaseE'/>
<doc f='llvm/llvm/utils/unittest/googletest/src/gtest.cc' l='2804'>// Formats a countable noun.  Depending on its quantity, either the
// singular form or the plural form is used. e.g.
//
// FormatCountableNoun(1, &quot;formula&quot;, &quot;formuli&quot;) returns &quot;1 formula&quot;.
// FormatCountableNoun(5, &quot;book&quot;, &quot;books&quot;) returns &quot;5 books&quot;.</doc>
