<inh f='llvm/llvm/include/llvm/Pass.h' l='80' c='llvm::Pass'/>
<def f='llvm/llvm/include/llvm/Pass.h' l='224' ll='248'/>
<ovr f='llvm/llvm/include/llvm/Pass.h' l='255' c='llvm::ImmutablePass'/>
<size>32</size>
<doc f='llvm/llvm/include/llvm/Pass.h' l='219'>//===----------------------------------------------------------------------===//
/// ModulePass class - This class is used to implement unstructured
/// interprocedural optimizations and analyses.  ModulePasses may do anything
/// they want to the program.
///</doc>
<fun r='_ZN4llvm10ModulePassC1ERc'/>
<fun r='_ZN4llvm10ModulePassD1Ev'/>
<fun r='_ZNK4llvm10ModulePass17createPrinterPassERNS_11raw_ostreamERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<fun r='_ZN4llvm10ModulePass11runOnModuleERNS_6ModuleE'/>
<fun r='_ZN4llvm10ModulePass17assignPassManagerERNS_7PMStackENS_15PassManagerTypeE'/>
<fun r='_ZNK4llvm10ModulePass27getPotentialPassManagerTypeEv'/>
<fun r='_ZNK4llvm10ModulePass10skipModuleERNS_6ModuleE'/>
<ovr f='llvm/llvm/include/llvm/Analysis/CallGraph.h' l='324' c='llvm::CallGraphWrapperPass'/>
<ovr f='llvm/llvm/include/llvm/Analysis/GlobalsModRef.h' l='133' c='llvm::GlobalsAAWrapperPass'/>
<ovr f='llvm/llvm/include/llvm/IR/LegacyPassManagers.h' l='466' c='llvm::FPPassManager'/>
<ovr f='llvm/llvm/lib/Analysis/CallGraph.cpp' l='300' c='(anonymousnamespace)::CallGraphPrinterLegacyPass'/>
<ovr f='llvm/llvm/lib/Analysis/CallGraphSCCPass.cpp' l='56' c='(anonymousnamespace)::CGPassManager'/>
<ovr f='llvm/llvm/include/llvm/Analysis/DOTGraphTraitsPass.h' l='127' c='llvm::DOTGraphTraitsModuleViewer'/>
<ovr f='llvm/llvm/include/llvm/Analysis/DOTGraphTraitsPass.h' l='153' c='llvm::DOTGraphTraitsModulePrinter'/>
<ovr f='llvm/llvm/lib/Analysis/ModuleDebugInfoPrinter.cpp' l='26' c='(anonymousnamespace)::ModuleDebugInfoPrinter'/>
<ovr f='llvm/llvm/include/llvm/Analysis/ModuleSummaryAnalysis.h' l='54' c='llvm::ModuleSummaryIndexWrapperPass'/>
<ovr f='llvm/llvm/include/llvm/Analysis/StackSafetyAnalysis.h' l='101' c='llvm::StackSafetyGlobalInfoWrapperPass'/>
<ovr f='llvm/llvm/lib/Bitcode/Writer/BitcodeWriterPass.cpp' l='30' c='(anonymousnamespace)::WriteBitcodePass'/>
<ovr f='llvm/llvm/lib/CodeGen/LowerEmuTLS.cpp' l='30' c='(anonymousnamespace)::LowerEmuTLS'/>
<ovr f='llvm/llvm/lib/CodeGen/MachineOutliner.cpp' l='832' c='(anonymousnamespace)::MachineOutliner'/>
<ovr f='llvm/llvm/lib/CodeGen/PreISelIntrinsicLowering.cpp' l='188' c='(anonymousnamespace)::PreISelIntrinsicLoweringLegacyPass'/>
<ovr f='llvm/llvm/lib/IR/IRPrintingPasses.cpp' l='58' c='(anonymousnamespace)::PrintModulePassWrapper'/>
<ovr f='llvm/llvm/lib/Target/AArch64/AArch64PromoteConstant.cpp' l='93' c='(anonymousnamespace)::AArch64PromoteConstant'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/AMDGPUAlwaysInlinePass.cpp' l='32' c='(anonymousnamespace)::AMDGPUAlwaysInline'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/AMDGPUFixFunctionBitcasts.cpp' l='25' c='(anonymousnamespace)::AMDGPUFixFunctionBitcasts'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/AMDGPULowerIntrinsics.cpp' l='27' c='(anonymousnamespace)::AMDGPULowerIntrinsics'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/AMDGPULowerKernelAttributes.cpp' l='43' c='(anonymousnamespace)::AMDGPULowerKernelAttributes'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/AMDGPUOpenCLEnqueuedBlockLowering.cpp' l='54' c='(anonymousnamespace)::AMDGPUOpenCLEnqueuedBlockLowering'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/AMDGPUUnifyMetadata.cpp' l='40' c='(anonymousnamespace)::AMDGPUUnifyMetadata'/>
<ovr f='llvm/llvm/lib/Target/AMDGPU/R600OpenCLImageTypeLoweringPass.cpp' l='155' c='(anonymousnamespace)::R600OpenCLImageTypeLoweringPass'/>
<ovr f='llvm/llvm/lib/Target/Mips/CheriPureCapABI.cpp' l='361' c='(anonymousnamespace)::CheriPureCapABI'/>
<ovr f='llvm/llvm/lib/Target/Mips/Mips16HardFloat.cpp' l='28' c='(anonymousnamespace)::Mips16HardFloat'/>
<ovr f='llvm/llvm/lib/Target/Mips/MipsOs16.cpp' l='31' c='(anonymousnamespace)::MipsOs16'/>
<ovr f='llvm/llvm/lib/Target/NVPTX/NVPTXAssignValidGlobalNames.cpp' l='31' c='(anonymousnamespace)::NVPTXAssignValidGlobalNames'/>
<ovr f='llvm/llvm/lib/Target/NVPTX/NVPTXGenericToNVVM.cpp' l='36' c='(anonymousnamespace)::GenericToNVVM'/>
<ovr f='llvm/llvm/lib/Target/WebAssembly/WebAssemblyAddMissingPrototypes.cpp' l='35' c='(anonymousnamespace)::WebAssemblyAddMissingPrototypes'/>
<ovr f='llvm/llvm/lib/Target/WebAssembly/WebAssemblyFixFunctionBitcasts.cpp' l='39' c='(anonymousnamespace)::FixFunctionBitcasts'/>
<ovr f='llvm/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp' l='229' c='(anonymousnamespace)::WebAssemblyLowerEmscriptenEHSjLj'/>
<ovr f='llvm/llvm/lib/Target/WebAssembly/WebAssemblyLowerGlobalDtors.cpp' l='34' c='(anonymousnamespace)::LowerGlobalDtors'/>
<ovr f='llvm/llvm/lib/Target/WebAssembly/WebAssemblyTargetMachine.cpp' l='170' c='(anonymousnamespace)::CoalesceFeaturesAndStripAtomics'/>
<ovr f='llvm/llvm/lib/Target/XCore/XCoreLowerThreadLocal.cpp' l='41' c='(anonymousnamespace)::XCoreLowerThreadLocal'/>
<ovr f='llvm/llvm/lib/Transforms/CHERICap/FoldCapIntrinsics.cpp' l='43' c='(anonymousnamespace)::CHERICapFoldIntrinsics'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/Attributor.cpp' l='502' c='(anonymousnamespace)::AttributorLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/BarrierNoopPass.cpp' l='30' c='(anonymousnamespace)::BarrierNoop'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/BlockExtractor.cpp' l='40' c='(anonymousnamespace)::BlockExtractor'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/CalledValuePropagation.cpp' l='410' c='(anonymousnamespace)::CalledValuePropagationLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/ConstantMerge.cpp' l='262' c='(anonymousnamespace)::ConstantMergeLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/CrossDSOCFI.cpp' l='42' c='(anonymousnamespace)::CrossDSOCFI'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/DeadArgumentElimination.cpp' l='63' c='(anonymousnamespace)::DAE'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/ElimAvailExtern.cpp' l='75' c='(anonymousnamespace)::EliminateAvailableExternallyLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/ExtractGV.cpp' l='54' c='(anonymousnamespace)::GVExtractorPass'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/ForceFunctionAttrs.cpp' l='102' c='(anonymousnamespace)::ForceFunctionAttrsLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/FunctionAttrs.cpp' l='1463' c='(anonymousnamespace)::ReversePostOrderFunctionAttrsLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/FunctionImport.cpp' l='1276' c='(anonymousnamespace)::FunctionImportLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/GlobalDCE.cpp' l='38' c='(anonymousnamespace)::GlobalDCELegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/GlobalOpt.cpp' l='2979' c='(anonymousnamespace)::GlobalOptLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/GlobalSplit.cpp' l='163' c='(anonymousnamespace)::GlobalSplit'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/HotColdSplitting.cpp' l='197' c='(anonymousnamespace)::HotColdSplittingLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/IPConstantPropagation.cpp' l='36' c='(anonymousnamespace)::IPCP'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/InferFunctionAttrs.cpp' l='48' c='(anonymousnamespace)::InferFunctionAttrsLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/Internalize.cpp' l='248' c='(anonymousnamespace)::InternalizeLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/LowerTypeTests.cpp' l='453' c='(anonymousnamespace)::LowerTypeTests'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/MergeFunctions.cpp' l='198' c='(anonymousnamespace)::MergeFunctions'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/PartialInlining.cpp' l='346' c='(anonymousnamespace)::PartialInlinerLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/SCCP.cpp' l='38' c='(anonymousnamespace)::IPSCCPLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/SampleProfile.cpp' l='331' c='(anonymousnamespace)::SampleProfileLoaderLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/StripDeadPrototypes.cpp' l='64' c='(anonymousnamespace)::StripDeadPrototypesLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/StripSymbols.cpp' l='36' c='(anonymousnamespace)::StripSymbols'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/StripSymbols.cpp' l='52' c='(anonymousnamespace)::StripNonDebugSymbols'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/StripSymbols.cpp' l='67' c='(anonymousnamespace)::StripDebugDeclare'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/StripSymbols.cpp' l='82' c='(anonymousnamespace)::StripDeadDebugInfo'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/ThinLTOBitcodeWriter.cpp' l='462' c='(anonymousnamespace)::WriteThinLTOBitcode'/>
<ovr f='llvm/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp' l='545' c='(anonymousnamespace)::WholeProgramDevirt'/>
<ovr f='llvm/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp' l='540' c='(anonymousnamespace)::ASanGlobalsMetadataWrapperPass'/>
<ovr f='llvm/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp' l='814' c='(anonymousnamespace)::ModuleAddressSanitizerLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp' l='279' c='(anonymousnamespace)::DataFlowSanitizer'/>
<ovr f='llvm/llvm/lib/Transforms/Instrumentation/GCOVProfiling.cpp' l='138' c='(anonymousnamespace)::GCOVProfilerLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/Instrumentation/IndirectCallPromotion.cpp' l='118' c='(anonymousnamespace)::PGOIndirectCallPromotionLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/Instrumentation/InstrOrderFile.cpp' l='174' c='(anonymousnamespace)::InstrOrderFileLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp' l='145' c='(anonymousnamespace)::InstrProfilingLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/Instrumentation/PGOInstrumentation.cpp' l='396' c='(anonymousnamespace)::PGOInstrumentationGenLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/Instrumentation/PGOInstrumentation.cpp' l='418' c='(anonymousnamespace)::PGOInstrumentationUseLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/Instrumentation/PGOInstrumentation.cpp' l='446' c='(anonymousnamespace)::PGOInstrumentationGenCreateVarLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/Instrumentation/SanitizerCoverage.cpp' l='181' c='(anonymousnamespace)::SanitizerCoverageModule'/>
<ovr f='llvm/llvm/lib/Transforms/ObjCARC/ObjCARCAPElim.cpp' l='39' c='(anonymousnamespace)::ObjCARCAPElim'/>
<ovr f='llvm/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp' l='162' c='(anonymousnamespace)::RewriteStatepointsForGCLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/Utils/CanonicalizeAliases.cpp' l='70' c='(anonymousnamespace)::CanonicalizeAliasesLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/Utils/MetaRenamer.cpp' l='71' c='(anonymousnamespace)::MetaRenamer'/>
<ovr f='llvm/llvm/lib/Transforms/Utils/NameAnonGlobals.cpp' l='86' c='(anonymousnamespace)::NameAnonGlobalLegacyPass'/>
<ovr f='llvm/llvm/lib/Transforms/Utils/StripNonLineTableDebugInfo.cpp' l='19' c='(anonymousnamespace)::StripNonLineTableDebugInfo'/>
<ovr f='llvm/llvm/lib/Transforms/Utils/SymbolRewriter.cpp' l='520' c='(anonymousnamespace)::RewriteSymbolsLegacyPass'/>
<ovr f='llvm/llvm/tools/bugpoint-passes/TestPasses.cpp' l='80' c='(anonymousnamespace)::CrashOnDeclFunc'/>
<ovr f='llvm/llvm/tools/bugpoint-passes/TestPasses.cpp' l='104' c='(anonymousnamespace)::CrashOnTooManyCUs'/>
<ovr f='llvm/llvm/tools/opt/AnalysisWrappers.cpp' l='31' c='(anonymousnamespace)::ExternalFunctionsPassedConstants'/>
<ovr f='llvm/llvm/tools/opt/BreakpointPrinter.cpp' l='24' c='(anonymousnamespace)::BreakpointPrinter'/>
<ovr f='llvm/llvm/tools/opt/Debugify.cpp' l='309' c='(anonymousnamespace)::DebugifyModulePass'/>
<ovr f='llvm/llvm/tools/opt/Debugify.cpp' l='344' c='(anonymousnamespace)::CheckDebugifyModulePass'/>
<ovr f='llvm/llvm/tools/opt/PassPrinters.cpp' l='101' c='(anonymousnamespace)::ModulePassPrinter'/>
<ovr f='llvm/llvm/tools/opt/PrintSCC.cpp' l='48' c='(anonymousnamespace)::CallGraphSCC'/>
<ovr f='llvm/llvm/unittests/IR/LegacyPassManagerTest.cpp' l='46' c='llvm::(anonymousnamespace)::ModuleNDNM'/>
<ovr f='llvm/llvm/unittests/IR/LegacyPassManagerTest.cpp' l='62' c='llvm::(anonymousnamespace)::ModuleNDM'/>
<ovr f='llvm/llvm/unittests/IR/LegacyPassManagerTest.cpp' l='75' c='llvm::(anonymousnamespace)::ModuleNDM2'/>
<ovr f='llvm/llvm/unittests/IR/LegacyPassManagerTest.cpp' l='88' c='llvm::(anonymousnamespace)::ModuleDNM'/>
<ovr f='llvm/llvm/unittests/IR/LegacyPassManagerTest.cpp' l='263' c='llvm::(anonymousnamespace)::OnTheFlyTest'/>
<ovr f='llvm/llvm/unittests/IR/LegacyPassManagerTest.cpp' l='412' c='llvm::(anonymousnamespace)::ModuleOpt'/>
<ovr f='llvm/llvm/unittests/IR/ModuleTest.cpp' l='53' c='DummyPass'/>
<ovr f='llvm/llvm/unittests/IR/TimePassesTest.cpp' l='30' c='llvm::(anonymousnamespace)::Pass1'/>
<ovr f='llvm/llvm/unittests/IR/TimePassesTest.cpp' l='43' c='llvm::(anonymousnamespace)::Pass2'/>
