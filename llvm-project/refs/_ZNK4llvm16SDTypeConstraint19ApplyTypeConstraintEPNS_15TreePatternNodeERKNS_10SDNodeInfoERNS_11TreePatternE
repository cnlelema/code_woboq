<dec f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='419' type='bool llvm::SDTypeConstraint::ApplyTypeConstraint(llvm::TreePatternNode * N, const llvm::SDNodeInfo &amp; NodeInfo, llvm::TreePattern &amp; TP) const'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='1322' u='c' c='_ZNK4llvm10SDNodeInfo20ApplyTypeConstraintsEPNS_15TreePatternNodeERNS_11TreePatternE'/>
<def f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='1460' ll='1576' type='bool llvm::SDTypeConstraint::ApplyTypeConstraint(llvm::TreePatternNode * N, const llvm::SDNodeInfo &amp; NodeInfo, llvm::TreePattern &amp; TP) const'/>
<doc f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='1457'>/// ApplyTypeConstraint - Given a node in a pattern, apply this type
/// constraint to the nodes operands.  This returns true if it makes a
/// change, false otherwise.  If a type contradiction is found, flag an error.</doc>
<doc f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='415'>/// ApplyTypeConstraint - Given a node in a pattern, apply this type
  /// constraint to the nodes operands.  This returns true if it makes a
  /// change, false otherwise.  If a type contradiction is found, an error
  /// is flagged.</doc>
