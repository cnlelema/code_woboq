<dec f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.h' l='454' type='int llvm::HexagonInstrInfo::getDotNewPredJumpOp(const llvm::MachineInstr &amp; MI, const llvm::MachineBranchProbabilityInfo * MBPI) const'/>
<def f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='3562' ll='3645' type='int llvm::HexagonInstrInfo::getDotNewPredJumpOp(const llvm::MachineInstr &amp; MI, const llvm::MachineBranchProbabilityInfo * MBPI) const'/>
<doc f='llvm/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp' l='3557'>// Returns the opcode to use when converting MI, which is a conditional jump,
// into a conditional instruction which uses the .new value of the predicate.
// We also use branch probabilities to add a hint to the jump.
// If MBPI is null, all edges will be treated as equally likely for the
// purposes of establishing a predication hint.</doc>
