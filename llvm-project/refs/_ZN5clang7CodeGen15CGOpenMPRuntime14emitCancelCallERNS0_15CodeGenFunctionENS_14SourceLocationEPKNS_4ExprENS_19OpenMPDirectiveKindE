<dec f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.h' l='1377' type='void clang::CodeGen::CGOpenMPRuntime::emitCancelCall(clang::CodeGen::CodeGenFunction &amp; CGF, clang::SourceLocation Loc, const clang::Expr * IfCond, clang::OpenMPDirectiveKind CancelRegion)'/>
<doc f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.h' l='1372'>/// Emit code for &apos;cancel&apos; construct.
  /// \param IfCond Condition in the associated &apos;if&apos; clause, if it was
  /// specified, nullptr otherwise.
  /// \param CancelRegion Region kind for which the cancel must be emitted.
  ///</doc>
<def f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='6398' ll='6438' type='void clang::CodeGen::CGOpenMPRuntime::emitCancelCall(clang::CodeGen::CodeGenFunction &amp; CGF, clang::SourceLocation Loc, const clang::Expr * IfCond, clang::OpenMPDirectiveKind CancelRegion)'/>
<ovr f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.cpp' l='10677' c='_ZN5clang7CodeGen19CGOpenMPSIMDRuntime14emitCancelCallERNS0_15CodeGenFunctionENS_14SourceLocationEPKNS_4ExprENS_19OpenMPDirectiveKindE'/>
<use f='llvm/clang/lib/CodeGen/CGStmtOpenMP.cpp' l='4530' u='c' c='_ZN5clang7CodeGen15CodeGenFunction22EmitOMPCancelDirectiveERKNS_18OMPCancelDirectiveE'/>
