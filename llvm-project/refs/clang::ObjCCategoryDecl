<inh f='llvm/clang/include/clang/AST/DeclObjC.h' l='968' c='clang::ObjCContainerDecl'/>
<def f='llvm/clang/include/clang/AST/DeclObjC.h' l='2279' ll='2422'/>
<size>1</size>
<doc f='llvm/clang/include/clang/AST/DeclObjC.h' l='2263'>/// ObjCCategoryDecl - Represents a category declaration. A category allows
/// you to add methods to an existing class (without subclassing or modifying
/// the original class interface or implementation:-). Categories don&apos;t allow
/// you to add instance data. The following example adds &quot;myMethod&quot; to all
/// NSView&apos;s within a process:
///
/// \@interface NSView (MyViewMethods)
/// - myMethod;
/// \@end
///
/// Categories also allow you to split the implementation of a class across
/// several files (a feature more naturally supported in C++).
///
/// Categories were originally inspired by dynamic languages such as Common
/// Lisp and Smalltalk.  More traditional class-based languages (C++, Java)
/// don&apos;t support this level of dynamism, which is both powerful and dangerous.</doc>
<mbr r='clang::ObjCCategoryDecl::ClassInterface' t='clang::ObjCInterfaceDecl *'/>
<mbr r='clang::ObjCCategoryDecl::TypeParamList' t='clang::ObjCTypeParamList *'/>
<mbr r='clang::ObjCCategoryDecl::ReferencedProtocols' t='clang::ObjCProtocolList'/>
<mbr r='clang::ObjCCategoryDecl::NextClassCategory' t='clang::ObjCCategoryDecl *'/>
<mbr r='clang::ObjCCategoryDecl::CategoryNameLoc' t='clang::SourceLocation'/>
<mbr r='clang::ObjCCategoryDecl::IvarLBraceLoc' t='clang::SourceLocation'/>
<mbr r='clang::ObjCCategoryDecl::IvarRBraceLoc' t='clang::SourceLocation'/>
<fun r='_ZN5clang16ObjCCategoryDeclC1EPNS_11DeclContextENS_14SourceLocationES3_S3_PNS_14IdentifierInfoEPNS_17ObjCInterfaceDeclEPNS_17ObjCTypeParamListES3_S3_'/>
<fun r='_ZN5clang16ObjCCategoryDecl6anchorEv'/>
<fun r='_ZN5clang16ObjCCategoryDecl6CreateERNS_10ASTContextEPNS_11DeclContextENS_14SourceLocationES5_S5_PNS_14IdentifierInfoEPNS_17ObjCInterfaceDeclEPNS_17Obj5181329'/>
<fun r='_ZN5clang16ObjCCategoryDecl18CreateDeserializedERNS_10ASTContextEj'/>
<fun r='_ZN5clang16ObjCCategoryDecl17getClassInterfaceEv'/>
<fun r='_ZNK5clang16ObjCCategoryDecl17getClassInterfaceEv'/>
<fun r='_ZNK5clang16ObjCCategoryDecl16getTypeParamListEv'/>
<fun r='_ZN5clang16ObjCCategoryDecl16setTypeParamListEPNS_17ObjCTypeParamListE'/>
<fun r='_ZNK5clang16ObjCCategoryDecl17getImplementationEv'/>
<fun r='_ZN5clang16ObjCCategoryDecl17setImplementationEPNS_20ObjCCategoryImplDeclE'/>
<fun r='_ZN5clang16ObjCCategoryDecl15setProtocolListEPKPNS_16ObjCProtocolDeclEjPKNS_14SourceLocationERNS_10ASTContextE'/>
<fun r='_ZNK5clang16ObjCCategoryDecl22getReferencedProtocolsEv'/>
<fun r='_ZNK5clang16ObjCCategoryDecl9protocolsEv'/>
<fun r='_ZNK5clang16ObjCCategoryDecl14protocol_beginEv'/>
<fun r='_ZNK5clang16ObjCCategoryDecl12protocol_endEv'/>
<fun r='_ZNK5clang16ObjCCategoryDecl13protocol_sizeEv'/>
<fun r='_ZNK5clang16ObjCCategoryDecl13protocol_locsEv'/>
<fun r='_ZNK5clang16ObjCCategoryDecl18protocol_loc_beginEv'/>
<fun r='_ZNK5clang16ObjCCategoryDecl16protocol_loc_endEv'/>
<fun r='_ZNK5clang16ObjCCategoryDecl20getNextClassCategoryEv'/>
<fun r='_ZNK5clang16ObjCCategoryDecl23getNextClassCategoryRawEv'/>
<fun r='_ZNK5clang16ObjCCategoryDecl16IsClassExtensionEv'/>
<fun r='_ZNK5clang16ObjCCategoryDecl5ivarsEv'/>
<fun r='_ZNK5clang16ObjCCategoryDecl10ivar_beginEv'/>
<fun r='_ZNK5clang16ObjCCategoryDecl8ivar_endEv'/>
<fun r='_ZNK5clang16ObjCCategoryDecl9ivar_sizeEv'/>
<fun r='_ZNK5clang16ObjCCategoryDecl10ivar_emptyEv'/>
<fun r='_ZNK5clang16ObjCCategoryDecl18getCategoryNameLocEv'/>
<fun r='_ZN5clang16ObjCCategoryDecl18setCategoryNameLocENS_14SourceLocationE'/>
<fun r='_ZN5clang16ObjCCategoryDecl16setIvarLBraceLocENS_14SourceLocationE'/>
<fun r='_ZNK5clang16ObjCCategoryDecl16getIvarLBraceLocEv'/>
<fun r='_ZN5clang16ObjCCategoryDecl16setIvarRBraceLocENS_14SourceLocationE'/>
<fun r='_ZNK5clang16ObjCCategoryDecl16getIvarRBraceLocEv'/>
<fun r='_ZN5clang16ObjCCategoryDecl7classofEPKNS_4DeclE'/>
<fun r='_ZN5clang16ObjCCategoryDecl11classofKindENS_4Decl4KindE'/>
