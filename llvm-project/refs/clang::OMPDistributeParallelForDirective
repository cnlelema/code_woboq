<inh f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='361' c='clang::OMPLoopDirective'/>
<def f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='3122' ll='3191'/>
<size>40</size>
<doc f='llvm/clang/include/clang/AST/StmtOpenMP.h' l='3113'>/// This represents &apos;#pragma omp distribute parallel for&apos; composite
///  directive.
///
/// \code
/// #pragma omp distribute parallel for private(a,b)
/// \endcode
/// In this example directive &apos;#pragma omp distribute parallel for&apos; has clause
/// &apos;private&apos; with the variables &apos;a&apos; and &apos;b&apos;
///</doc>
<mbr r='clang::OMPDistributeParallelForDirective::HasCancel' o='288' t='bool'/>
<fun r='_ZN5clang33OMPDistributeParallelForDirectiveC1ENS_14SourceLocationES1_jj'/>
<fun r='_ZN5clang33OMPDistributeParallelForDirectiveC1Ejj'/>
<fun r='_ZN5clang33OMPDistributeParallelForDirective12setHasCancelEb'/>
<fun r='_ZN5clang33OMPDistributeParallelForDirective6CreateERKNS_10ASTContextENS_14SourceLocationES4_jN4llvm8ArrayRefIPNS_9OMPClauseEEEPNS_4StmtERKNS_16OMPLoo5003437'/>
<fun r='_ZN5clang33OMPDistributeParallelForDirective11CreateEmptyERKNS_10ASTContextEjjNS_4Stmt10EmptyShellE'/>
<fun r='_ZNK5clang33OMPDistributeParallelForDirective9hasCancelEv'/>
<fun r='_ZN5clang33OMPDistributeParallelForDirective7classofEPKNS_4StmtE'/>
