<def f='llvm/llvm/include/llvm/ADT/ImmutableSet.h' l='1031' ll='1034' type='ImmutableSet&lt;ValT, ValInfo&gt; llvm::ImmutableSet::Factory::remove(ImmutableSet&lt;ValT, ValInfo&gt; Old, value_type_ref V)'/>
<use f='llvm/clang/lib/Analysis/LiveVariables.cpp' l='266' u='c' c='_ZN12_GLOBAL__N_117TransferFunctions5VisitEPN5clang4StmtE'/>
<use f='llvm/clang/lib/Analysis/LiveVariables.cpp' l='387' u='c' c='_ZN12_GLOBAL__N_117TransferFunctions19VisitBinaryOperatorEPN5clang14BinaryOperatorE'/>
<use f='llvm/clang/lib/Analysis/LiveVariables.cpp' l='448' u='c' c='_ZN12_GLOBAL__N_117TransferFunctions26VisitObjCForCollectionStmtEPN5clang21ObjCForCollectionStmtE'/>
<doc f='llvm/llvm/include/llvm/ADT/ImmutableSet.h' l='1024'>/// remove - Creates a new immutable set that contains all of the values
    ///  of the original set with the exception of the specified value.  If
    ///  the original set did not contain the value, the original set is
    ///  returned and no memory is allocated.  The time and space complexity
    ///  of this operation is logarithmic in the size of the original set.
    ///  The memory allocated to represent the set is released when the
    ///  factory object that created the set is destroyed.</doc>
<use f='llvm/llvm/unittests/ADT/ImmutableSetTest.cpp' l='122' u='c' c='_ZN12_GLOBAL__N_138ImmutableSetTest_RemoveIntSetTest_Test8TestBodyEv'/>
