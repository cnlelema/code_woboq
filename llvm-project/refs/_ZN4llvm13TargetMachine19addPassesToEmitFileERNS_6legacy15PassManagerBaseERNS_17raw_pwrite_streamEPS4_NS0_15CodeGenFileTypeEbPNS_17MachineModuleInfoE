<def f='llvm/llvm/include/llvm/Target/TargetMachine.h' l='289' ll='294' type='bool llvm::TargetMachine::addPassesToEmitFile(llvm::legacy::PassManagerBase &amp; , llvm::raw_pwrite_stream &amp; , llvm::raw_pwrite_stream * , llvm::TargetMachine::CodeGenFileType , bool  = true, llvm::MachineModuleInfo * MMI = nullptr)'/>
<doc f='llvm/llvm/include/llvm/Target/TargetMachine.h' l='283'>/// Add passes to the specified pass manager to get the specified file
  /// emitted.  Typically this will involve several steps of code generation.
  /// This method should return true if emission of this file type is not
  /// supported, or false on success.
  /// \p MMI is an optional parameter that, if set to non-nullptr,
  /// will be used to set the MachineModuloInfo for this PM.</doc>
<use f='llvm/clang/lib/CodeGen/BackendUtil.cpp' l='812' u='c' c='_ZN12_GLOBAL__N_118EmitAssemblyHelper13AddEmitPassesERN4llvm6legacy11PassManagerEN5clang13BackendActionERNS1_17raw_pwrite_streamEPS7_'/>
<ovr f='llvm/llvm/lib/CodeGen/LLVMTargetMachine.cpp' l='191' c='_ZN4llvm17LLVMTargetMachine19addPassesToEmitFileERNS_6legacy15PassManagerBaseERNS_17raw_pwrite_streamEPS4_NS_13TargetMachine15CodeGenFileTypeEbPNS_17MachineModuleInfoE'/>
<use f='llvm/llvm/lib/CodeGen/ParallelCG.cpp' l='32' u='c' c='_ZL7codegenPN4llvm6ModuleERNS_17raw_pwrite_streamENS_12function_refIFSt10unique_ptrINS_13TargetMachineESt14default_deleteIS6_EEvEEENS6_15CodeGenFileTypeE'/>
<use f='llvm/llvm/lib/LTO/LTOBackend.cpp' l='337' u='c' c='_ZN12_GLOBAL__N_17codegenERN4llvm3lto6ConfigEPNS0_13TargetMachineESt8functionIFSt10unique_ptrINS1_18NativeObjectStreamESt14default_deleteIS8_EEjEEjRNS0_6ModuleE'/>
<use f='llvm/llvm/lib/LTO/ThinLTOCodeGenerator.cpp' l='289' u='c' c='_ZN12_GLOBAL__N_113codegenModuleERN4llvm6ModuleERNS0_13TargetMachineE'/>
<use f='llvm/llvm/lib/Target/TargetMachineC.cpp' l='207' u='c' c='_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc'/>
<use f='llvm/llvm/tools/llc/llc.cpp' l='585' u='c' c='_ZL13compileModulePPcRN4llvm11LLVMContextE'/>
<use f='llvm/llvm/tools/llvm-isel-fuzzer/llvm-isel-fuzzer.cpp' l='101' u='c' c='LLVMFuzzerTestOneInput'/>
