<dec f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='466' type='llvm::Instruction * llvm::InstCombiner::transformZExtICmp(llvm::ICmpInst * ICI, llvm::ZExtInst &amp; CI, bool DoTransform = true)'/>
<doc f='llvm/llvm/lib/Transforms/InstCombine/InstCombineInternal.h' l='454'>/// Transform (zext icmp) to bitwise / integer operations in order to
  /// eliminate it.
  ///
  /// \param ICI The icmp of the (zext icmp) pair we are interested in.
  /// \parem CI The zext of the (zext icmp) pair we are interested in.
  /// \param DoTransform Pass false to just test whether the given (zext icmp)
  /// would be transformed. Pass true to actually perform the transformation.
  ///
  /// \return null if the transformation cannot be performed. If the
  /// transformation can be performed the new instruction that replaces the
  /// (zext icmp) pair will be returned (if \p DoTransform is false the
  /// unmodified \p ICI will be returned in this case).</doc>
<def f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='846' ll='962' type='llvm::Instruction * llvm::InstCombiner::transformZExtICmp(llvm::ICmpInst * ICI, llvm::ZExtInst &amp; CI, bool DoTransform = true)'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='1176' u='c' c='_ZN4llvm12InstCombiner9visitZExtERNS_8ZExtInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='1186' u='c' c='_ZN4llvm12InstCombiner9visitZExtERNS_8ZExtInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='1187' u='c' c='_ZN4llvm12InstCombiner9visitZExtERNS_8ZExtInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='1195' u='c' c='_ZN4llvm12InstCombiner9visitZExtERNS_8ZExtInstE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp' l='1197' u='c' c='_ZN4llvm12InstCombiner9visitZExtERNS_8ZExtInstE'/>
