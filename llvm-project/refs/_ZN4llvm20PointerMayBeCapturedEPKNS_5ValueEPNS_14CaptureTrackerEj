<dec f='llvm/llvm/include/llvm/Analysis/CaptureTracking.h' l='93' type='void llvm::PointerMayBeCaptured(const llvm::Value * V, llvm::CaptureTracker * Tracker, unsigned int MaxUsesToExplore = DefaultMaxUsesToExplore)'/>
<doc f='llvm/llvm/include/llvm/Analysis/CaptureTracking.h' l='88'>/// PointerMayBeCaptured - Visit the value and the values derived from it and
  /// find values which appear to be capturing the pointer value. This feeds
  /// results into and is controlled by the CaptureTracker object.
  /// MaxUsesToExplore specifies how many uses should the analysis explore for
  /// one value before giving up due too &quot;too many uses&quot;.</doc>
<use f='llvm/llvm/lib/Analysis/CaptureTracking.cpp' l='172' u='c' c='_ZN4llvm20PointerMayBeCapturedEPKNS_5ValueEbbj'/>
<use f='llvm/llvm/lib/Analysis/CaptureTracking.cpp' l='205' u='c' c='_ZN4llvm26PointerMayBeCapturedBeforeEPKNS_5ValueEbbPKNS_11InstructionEPKNS_13DominatorTreeEbPNS_17OrderedBasicBlockEj'/>
<def f='llvm/llvm/lib/Analysis/CaptureTracking.cpp' l='212' ll='383' type='void llvm::PointerMayBeCaptured(const llvm::Value * V, llvm::CaptureTracker * Tracker, unsigned int MaxUsesToExplore = DefaultMaxUsesToExplore)'/>
<use f='llvm/llvm/lib/Transforms/IPO/FunctionAttrs.cpp' l='697' u='c' c='_ZL16addArgumentAttrsRKN4llvm14SmallSetVectorIPNS_8FunctionELj8EEE'/>
