<inh f='llvm/llvm/include/llvm/Analysis/AliasAnalysis.h' l='944' c='llvm::AAResultBase'/>
<def f='llvm/llvm/include/llvm/Analysis/BasicAliasAnalysis.h' l='54' ll='219'/>
<size>336</size>
<doc f='llvm/llvm/include/llvm/Analysis/BasicAliasAnalysis.h' l='48'>/// This is the AA result object for the basic, local, and stateless alias
/// analysis. It implements the AA query interface in an entirely stateless
/// manner. As one consequence, it is never invalidated due to IR changes.
/// While it does retain some storage, that is used as an optimization and not
/// to preserve information from query to query. However it does retain handles
/// to various other analyses and must be recomputed when those analyses are.</doc>
<mbr r='llvm::BasicAAResult::DL' o='64' t='const llvm::DataLayout &amp;'/>
<mbr r='llvm::BasicAAResult::F' o='128' t='const llvm::Function &amp;'/>
<mbr r='llvm::BasicAAResult::TLI' o='192' t='const llvm::TargetLibraryInfo &amp;'/>
<mbr r='llvm::BasicAAResult::AC' o='256' t='llvm::AssumptionCache &amp;'/>
<mbr r='llvm::BasicAAResult::DT' o='320' t='llvm::DominatorTree *'/>
<mbr r='llvm::BasicAAResult::LI' o='384' t='llvm::LoopInfo *'/>
<mbr r='llvm::BasicAAResult::PV' o='448' t='llvm::PhiValues *'/>
<fun r='_ZN4llvm13BasicAAResultC1ERKNS_10DataLayoutERKNS_8FunctionERKNS_17TargetLibraryInfoERNS_15AssumptionCacheEPNS_13DominatorTreeEPNS_8LoopInfoEPNS_9PhiValuesE'/>
<fun r='_ZN4llvm13BasicAAResultC1ERKS0_'/>
<fun r='_ZN4llvm13BasicAAResultC1EOS0_'/>
<fun r='_ZN4llvm13BasicAAResult10invalidateERNS_8FunctionERKNS_17PreservedAnalysesERNS_15AnalysisManagerIS1_JEE11InvalidatorE'/>
<fun r='_ZN4llvm13BasicAAResult5aliasERKNS_14MemoryLocationES3_RNS_11AAQueryInfoE'/>
<fun r='_ZN4llvm13BasicAAResult13getModRefInfoEPKNS_8CallBaseERKNS_14MemoryLocationERNS_11AAQueryInfoE'/>
<fun r='_ZN4llvm13BasicAAResult13getModRefInfoEPKNS_8CallBaseES3_RNS_11AAQueryInfoE'/>
<fun r='_ZN4llvm13BasicAAResult22pointsToConstantMemoryERKNS_14MemoryLocationERNS_11AAQueryInfoEb'/>
<fun r='_ZN4llvm13BasicAAResult16getArgModRefInfoEPKNS_8CallBaseEj'/>
<fun r='_ZN4llvm13BasicAAResult17getModRefBehaviorEPKNS_8CallBaseE'/>
<fun r='_ZN4llvm13BasicAAResult17getModRefBehaviorEPKNS_8FunctionE'/>
<mbr r='llvm::BasicAAResult::VisitedPhiBBs' o='512' t='SmallPtrSet&lt;const llvm::BasicBlock *, 8&gt;'/>
<mbr r='llvm::BasicAAResult::Visited' o='1344' t='SmallPtrSet&lt;const llvm::Value *, 16&gt;'/>
<fun r='_ZN4llvm13BasicAAResult19GetLinearExpressionEPKNS_5ValueERNS_5APIntES5_RjS6_RKNS_10DataLayoutEjPNS_15AssumptionCacheEPNS_13DominatorTreeERbSE_'/>
<fun r='_ZN4llvm13BasicAAResult22DecomposeGEPExpressionEPKNS_5ValueERNS0_13DecomposedGEPERKNS_10DataLayoutEPNS_15AssumptionCacheEPNS_13DominatorTreeE'/>
<fun r='_ZN4llvm13BasicAAResult25isGEPBaseAtNegativeOffsetEPKNS_11GEPOperatorERKNS0_13DecomposedGEPES6_NS_12LocationSizeE'/>
<fun r='_ZN4llvm13BasicAAResult23constantOffsetHeuristicERKNS_15SmallVectorImplINS0_16VariableGEPIndexEEENS_12LocationSizeES6_NS_5APIntEPNS_15AssumptionCacheEPNS_13DominatorTreeE'/>
<fun r='_ZN4llvm13BasicAAResult29isValueEqualInPotentialCyclesEPKNS_5ValueES3_'/>
<fun r='_ZN4llvm13BasicAAResult18GetIndexDifferenceERNS_15SmallVectorImplINS0_16VariableGEPIndexEEERKS3_'/>
<fun r='_ZN4llvm13BasicAAResult8aliasGEPEPKNS_11GEPOperatorENS_12LocationSizeERKNS_9AAMDNodesEPKNS_5ValueES4_S7_SA_SA_RNS_11AAQueryInfoE'/>
<fun r='_ZN4llvm13BasicAAResult8aliasPHIEPKNS_7PHINodeENS_12LocationSizeERKNS_9AAMDNodesEPKNS_5ValueES4_S7_SA_RNS_11AAQueryInfoE'/>
<fun r='_ZN4llvm13BasicAAResult11aliasSelectEPKNS_10SelectInstENS_12LocationSizeERKNS_9AAMDNodesEPKNS_5ValueES4_S7_SA_RNS_11AAQueryInfoE'/>
<fun r='_ZN4llvm13BasicAAResult10aliasCheckEPKNS_5ValueENS_12LocationSizeENS_9AAMDNodesES3_S4_S5_RNS_11AAQueryInfoES3_S3_'/>
