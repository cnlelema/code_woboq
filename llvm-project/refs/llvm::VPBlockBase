<def f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='333' ll='564'/>
<ovr f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='982' c='llvm::VPBasicBlock'/>
<ovr f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='1067' c='llvm::VPRegionBlock'/>
<size>120</size>
<doc f='llvm/llvm/lib/Transforms/Vectorize/VPlan.h' l='331'>/// VPBlockBase is the building block of the Hierarchical Control-Flow Graph.
/// A VPBlockBase can be either a VPBasicBlock or a VPRegionBlock.</doc>
<mbr r='llvm::VPBlockBase::SubclassID' o='64' t='const unsigned char'/>
<mbr r='llvm::VPBlockBase::Name' o='128' t='std::string'/>
<mbr r='llvm::VPBlockBase::Parent' o='384' t='llvm::VPRegionBlock *'/>
<mbr r='llvm::VPBlockBase::Predecessors' o='448' t='SmallVector&lt;llvm::VPBlockBase *, 1&gt;'/>
<mbr r='llvm::VPBlockBase::Successors' o='640' t='SmallVector&lt;llvm::VPBlockBase *, 1&gt;'/>
<mbr r='llvm::VPBlockBase::CondBit' o='832' t='llvm::VPValue *'/>
<mbr r='llvm::VPBlockBase::Predicate' o='896' t='llvm::VPValue *'/>
<fun r='_ZN4llvm11VPBlockBase15appendSuccessorEPS0_'/>
<fun r='_ZN4llvm11VPBlockBase17appendPredecessorEPS0_'/>
<fun r='_ZN4llvm11VPBlockBase17removePredecessorEPS0_'/>
<fun r='_ZN4llvm11VPBlockBase15removeSuccessorEPS0_'/>
<fun r='_ZN4llvm11VPBlockBaseC1EhRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<fun r='_ZN4llvm11VPBlockBaseD1Ev'/>
<fun r='_ZNK4llvm11VPBlockBase7getNameEv'/>
<fun r='_ZN4llvm11VPBlockBase7setNameERKNS_5TwineE'/>
<fun r='_ZNK4llvm11VPBlockBase12getVPBlockIDEv'/>
<fun r='_ZN4llvm11VPBlockBase9getParentEv'/>
<fun r='_ZNK4llvm11VPBlockBase9getParentEv'/>
<fun r='_ZN4llvm11VPBlockBase9setParentEPNS_13VPRegionBlockE'/>
<fun r='_ZNK4llvm11VPBlockBase18getEntryBasicBlockEv'/>
<fun r='_ZN4llvm11VPBlockBase18getEntryBasicBlockEv'/>
<fun r='_ZNK4llvm11VPBlockBase17getExitBasicBlockEv'/>
<fun r='_ZN4llvm11VPBlockBase17getExitBasicBlockEv'/>
<fun r='_ZNK4llvm11VPBlockBase13getSuccessorsEv'/>
<fun r='_ZN4llvm11VPBlockBase13getSuccessorsEv'/>
<fun r='_ZNK4llvm11VPBlockBase15getPredecessorsEv'/>
<fun r='_ZN4llvm11VPBlockBase15getPredecessorsEv'/>
<fun r='_ZNK4llvm11VPBlockBase18getSingleSuccessorEv'/>
<fun r='_ZNK4llvm11VPBlockBase20getSinglePredecessorEv'/>
<fun r='_ZNK4llvm11VPBlockBase16getNumSuccessorsEv'/>
<fun r='_ZNK4llvm11VPBlockBase18getNumPredecessorsEv'/>
<fun r='_ZN4llvm11VPBlockBase31getEnclosingBlockWithSuccessorsEv'/>
<fun r='_ZN4llvm11VPBlockBase33getEnclosingBlockWithPredecessorsEv'/>
<fun r='_ZN4llvm11VPBlockBase25getHierarchicalSuccessorsEv'/>
<fun r='_ZN4llvm11VPBlockBase30getSingleHierarchicalSuccessorEv'/>
<fun r='_ZN4llvm11VPBlockBase27getHierarchicalPredecessorsEv'/>
<fun r='_ZN4llvm11VPBlockBase32getSingleHierarchicalPredecessorEv'/>
<fun r='_ZN4llvm11VPBlockBase10getCondBitEv'/>
<fun r='_ZNK4llvm11VPBlockBase10getCondBitEv'/>
<fun r='_ZN4llvm11VPBlockBase10setCondBitEPNS_7VPValueE'/>
<fun r='_ZN4llvm11VPBlockBase12getPredicateEv'/>
<fun r='_ZNK4llvm11VPBlockBase12getPredicateEv'/>
<fun r='_ZN4llvm11VPBlockBase12setPredicateEPNS_7VPValueE'/>
<fun r='_ZN4llvm11VPBlockBase15setOneSuccessorEPS0_'/>
<fun r='_ZN4llvm11VPBlockBase16setTwoSuccessorsEPS0_S1_PNS_7VPValueE'/>
<fun r='_ZN4llvm11VPBlockBase15setPredecessorsENS_8ArrayRefIPS0_EE'/>
<fun r='_ZN4llvm11VPBlockBase17clearPredecessorsEv'/>
<fun r='_ZN4llvm11VPBlockBase15clearSuccessorsEv'/>
<fun r='_ZN4llvm11VPBlockBase7executeEPNS_16VPTransformStateE'/>
<fun r='_ZN4llvm11VPBlockBase9deleteCFGEPS0_'/>
<fun r='_ZNK4llvm11VPBlockBase14printAsOperandERNS_11raw_ostreamEb'/>
<fun r='_ZNK4llvm11VPBlockBase5printERNS_11raw_ostreamE'/>
<fun r='_ZN4llvm11VPBlockBase18isLegalToHoistIntoEv'/>
