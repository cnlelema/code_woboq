<dec f='llvm/clang/include/clang/Parse/Parser.h' l='1883' type='ExprResult clang::Parser::ParseBlockLiteralExpression()'/>
<doc f='llvm/clang/include/clang/Parse/Parser.h' l='1880'>//===--------------------------------------------------------------------===//
  // clang Expressions</doc>
<doc f='llvm/clang/include/clang/Parse/Parser.h' l='1883'>// ^{...}</doc>
<use f='llvm/clang/lib/Parse/ParseExpr.cpp' l='1440' u='c' c='_ZN5clang6Parser19ParseCastExpressionEbbRbNS0_13TypeCastStateEb'/>
<def f='llvm/clang/lib/Parse/ParseExpr.cpp' l='3018' ll='3113' type='ExprResult clang::Parser::ParseBlockLiteralExpression()'/>
<doc f='llvm/clang/lib/Parse/ParseExpr.cpp' l='3008'>/// ParseBlockLiteralExpression - Parse a block literal, which roughly looks
/// like ^(int x){ return x+1; }
///
/// \verbatim
///         block-literal:
/// [clang]   &apos;^&apos; block-args[opt] compound-statement
/// [clang]   &apos;^&apos; block-id compound-statement
/// [clang] block-args:
/// [clang]   &apos;(&apos; parameter-list &apos;)&apos;
/// \endverbatim</doc>
