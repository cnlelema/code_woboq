<dec f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeNVPTX.h' l='247' type='llvm::Function * clang::CodeGen::CGOpenMPRuntimeNVPTX::emitTeamsOutlinedFunction(const clang::OMPExecutableDirective &amp; D, const clang::VarDecl * ThreadIDVar, clang::OpenMPDirectiveKind InnermostKind, const clang::CodeGen::RegionCodeGenTy &amp; CodeGen)'/>
<inh f='llvm/clang/lib/CodeGen/CGOpenMPRuntime.h' l='821' c='_ZN5clang7CodeGen15CGOpenMPRuntime25emitTeamsOutlinedFunctionERKNS_22OMPExecutableDirectiveEPKNS_7VarDeclENS_19OpenMPDirectiveKindERKNS0_15RegionCodeGenTyE'/>
<def f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeNVPTX.cpp' l='1988' ll='2061' type='llvm::Function * clang::CodeGen::CGOpenMPRuntimeNVPTX::emitTeamsOutlinedFunction(const clang::OMPExecutableDirective &amp; D, const clang::VarDecl * ThreadIDVar, clang::OpenMPDirectiveKind InnermostKind, const clang::CodeGen::RegionCodeGenTy &amp; CodeGen)'/>
<doc f='llvm/clang/lib/CodeGen/CGOpenMPRuntimeNVPTX.h' l='237'>/// Emits inlined function for the specified OpenMP teams
  //  directive.
  /// \a D. This outlined function has type void(*)(kmp_int32 *ThreadID,
  /// kmp_int32 BoundID, struct context_vars*).
  /// \param D OpenMP directive.
  /// \param ThreadIDVar Variable for thread id in the current OpenMP region.
  /// \param InnermostKind Kind of innermost directive (for simple directives it
  /// is a directive itself, for combined - its innermost directive).
  /// \param CodeGen Code generation sequence for the \a D directive.</doc>
