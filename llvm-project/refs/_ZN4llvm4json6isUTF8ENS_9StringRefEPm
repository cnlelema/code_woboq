<dec f='llvm/llvm/include/llvm/Support/JSON.h' l='77' type='bool llvm::json::isUTF8(llvm::StringRef S, size_t * ErrOffset = nullptr)'/>
<use f='llvm/llvm/include/llvm/Support/JSON.h' l='309' u='c' c='_ZN4llvm4json5ValueC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='llvm/llvm/include/llvm/Support/JSON.h' l='321' u='c' c='_ZN4llvm4json5ValueC1ENS_9StringRefE'/>
<use f='llvm/llvm/include/llvm/Support/JSON.h' l='494' u='c' c='_ZN4llvm4json9ObjectKeyC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='llvm/llvm/include/llvm/Support/JSON.h' l='501' u='c' c='_ZN4llvm4json9ObjectKeyC1ENS_9StringRefE'/>
<doc f='llvm/llvm/include/llvm/Support/JSON.h' l='60'>// === String encodings ===
//
// JSON strings are character sequences (not byte sequences like std::string).
// We need to know the encoding, and for simplicity only support UTF-8.
//
//   - When parsing, invalid UTF-8 is a syntax error like any other
//
//   - When creating Values from strings, callers must ensure they are UTF-8.
//        with asserts on, invalid UTF-8 will crash the program
//        with asserts off, we&apos;ll substitute the replacement character (U+FFFD)
//     Callers can use json::isUTF8() and json::fixUTF8() for validation.
//
//   - When retrieving strings from Values (e.g. asString()), the result will
//     always be valid UTF-8.

/// Returns true if \p S is valid UTF-8, which is required for use as JSON.
/// If it returns false, \p Offset is set to a byte offset near the first error.</doc>
<use f='llvm/llvm/lib/Support/JSON.cpp' l='210' u='c' c='_ZN4llvm4json12_GLOBAL__N_16Parser9checkUTF8Ev'/>
<def f='llvm/llvm/lib/Support/JSON.cpp' l='532' ll='544' type='bool llvm::json::isUTF8(llvm::StringRef S, size_t * ErrOffset = nullptr)'/>
<use f='llvm/llvm/lib/Support/JSON.cpp' l='690' u='c' c='_ZN4llvm4json7OStream14attributeBeginENS_9StringRefE'/>
<use f='llvm/llvm/unittests/Support/JSONTest.cpp' l='204' u='c' c='_ZN4llvm4json12_GLOBAL__N_118JSONTest_UTF8_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Support/JSONTest.cpp' l='216' u='c' c='_ZN4llvm4json12_GLOBAL__N_118JSONTest_UTF8_Test8TestBodyEv'/>
