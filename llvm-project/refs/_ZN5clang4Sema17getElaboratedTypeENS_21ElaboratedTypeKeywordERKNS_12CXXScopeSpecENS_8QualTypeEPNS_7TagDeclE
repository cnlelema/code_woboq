<dec f='llvm/clang/include/clang/Sema/Sema.h' l='1772' type='clang::QualType clang::Sema::getElaboratedType(clang::ElaboratedTypeKeyword Keyword, const clang::CXXScopeSpec &amp; SS, clang::QualType T, clang::TagDecl * OwnedTagDecl = nullptr)'/>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='510' u='c' c='_ZN5clang4Sema11getTypeNameERKNS_14IdentifierInfoENS_14SourceLocationEPNS_5ScopeEPNS_12CXXScopeSpecEbbNS_9OpaquePtrINS_8QualTypeEEEbbbPPS1_'/>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='516' u='c' c='_ZN5clang4Sema11getTypeNameERKNS_14IdentifierInfoENS_14SourceLocationEPNS_5ScopeEPNS_12CXXScopeSpecEbbNS_9OpaquePtrINS_8QualTypeEEEbbbPPS1_'/>
<use f='llvm/clang/lib/Sema/SemaDecl.cpp' l='841' u='c' c='_ZL15buildNestedTypeRN5clang4SemaERNS_12CXXScopeSpecENS_8QualTypeENS_14SourceLocationE'/>
<use f='llvm/clang/lib/Sema/SemaExpr.cpp' l='2481' u='c' c='_ZN5clang4Sema33BuildQualifiedDeclarationNameExprERNS_12CXXScopeSpecERKNS_19DeclarationNameInfoEbPKNS_5ScopeEPPNS_14TypeSourceInfoE'/>
<use f='llvm/clang/lib/Sema/SemaType.cpp' l='1541' u='c' c='_ZL21ConvertDeclSpecToTypeRN12_GLOBAL__N_119TypeProcessingStateE'/>
<def f='llvm/clang/lib/Sema/SemaType.cpp' l='8464' ll='8478' type='clang::QualType clang::Sema::getElaboratedType(clang::ElaboratedTypeKeyword Keyword, const clang::CXXScopeSpec &amp; SS, clang::QualType T, clang::TagDecl * OwnedTagDecl = nullptr)'/>
<doc f='llvm/clang/lib/Sema/SemaType.cpp' l='8461'>/// Retrieve a version of the type &apos;T&apos; that is elaborated by Keyword, qualified
/// by the nested-name-specifier contained in SS, and that is (re)declared by
/// OwnedTagDecl, which is nullptr if this is not a (re)declaration.</doc>
