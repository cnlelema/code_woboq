<inh f='llvm/clang/include/clang/AST/Decl.h' l='248' c='clang::NamedDecl'/>
<inh f='llvm/clang/include/clang/AST/Redeclarable.h' l='312' c='clang::Mergeable'/>
<inh f='llvm/llvm/include/llvm/Support/TrailingObjects.h' l='233' c='llvm::TrailingObjects'/>
<def f='llvm/clang/include/clang/AST/DeclCXX.h' l='3628' ll='3684'/>
<size>1</size>
<doc f='llvm/clang/include/clang/AST/DeclCXX.h' l='3615'>/// Represents a pack of using declarations that a single
/// using-declarator pack-expanded into.
///
/// \code
/// template&lt;typename ...T&gt; struct X : T... {
///   using T::operator()...;
///   using T::operator T...;
/// };
/// \endcode
///
/// In the second case above, the UsingPackDecl will have the name
/// &apos;operator T&apos; (which contains an unexpanded pack), but the individual
/// UsingDecls and UsingShadowDecls will have more reasonable names.</doc>
<mbr r='clang::UsingPackDecl::InstantiatedFrom' t='clang::NamedDecl *'/>
<mbr r='clang::UsingPackDecl::NumExpansions' t='unsigned int'/>
<fun r='_ZN5clang13UsingPackDeclC1EPNS_11DeclContextEPNS_9NamedDeclEN4llvm8ArrayRefIS4_EE'/>
<fun r='_ZN5clang13UsingPackDecl6anchorEv'/>
<fun r='_ZNK5clang13UsingPackDecl28getInstantiatedFromUsingDeclEv'/>
<fun r='_ZNK5clang13UsingPackDecl10expansionsEv'/>
<fun r='_ZN5clang13UsingPackDecl6CreateERNS_10ASTContextEPNS_11DeclContextEPNS_9NamedDeclEN4llvm8ArrayRefIS6_EE'/>
<fun r='_ZN5clang13UsingPackDecl18CreateDeserializedERNS_10ASTContextEjj'/>
<fun r='_ZNK5clang13UsingPackDecl14getSourceRangeEv'/>
<fun r='_ZN5clang13UsingPackDecl16getCanonicalDeclEv'/>
<fun r='_ZNK5clang13UsingPackDecl16getCanonicalDeclEv'/>
<fun r='_ZN5clang13UsingPackDecl7classofEPKNS_4DeclE'/>
<fun r='_ZN5clang13UsingPackDecl11classofKindENS_4Decl4KindE'/>
