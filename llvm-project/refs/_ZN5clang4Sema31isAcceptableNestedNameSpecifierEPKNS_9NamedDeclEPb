<dec f='llvm/clang/include/clang/Sema/Sema.h' l='5563' type='bool clang::Sema::isAcceptableNestedNameSpecifier(const clang::NamedDecl * SD, bool * CanCorrect = nullptr)'/>
<def f='llvm/clang/lib/Sema/SemaCXXScopeSpec.cpp' l='314' ll='352' type='bool clang::Sema::isAcceptableNestedNameSpecifier(const clang::NamedDecl * SD, bool * IsExtension = nullptr)'/>
<use f='llvm/clang/lib/Sema/SemaCXXScopeSpec.cpp' l='377' u='c' c='_ZN5clang4Sema25FindFirstQualifierInScopeEPNS_5ScopeEPNS_19NestedNameSpecifierE'/>
<use f='llvm/clang/lib/Sema/SemaCXXScopeSpec.cpp' l='439' u='c' c='_ZN12_GLOBAL__N_131NestedNameSpecifierValidatorCCC17ValidateCandidateERKN5clang14TypoCorrectionE'/>
<use f='llvm/clang/lib/Sema/SemaCXXScopeSpec.cpp' l='654' u='c' c='_ZN5clang4Sema27BuildCXXNestedNameSpecifierEPNS_5ScopeERNS0_18NestedNameSpecInfoEbRNS_12CXXScopeSpecEPNS_9NamedDeclEbPbb'/>
<doc f='llvm/clang/lib/Sema/SemaCXXScopeSpec.cpp' l='309'>/// Determines whether the given declaration is an valid acceptable
/// result for name lookup of a nested-name-specifier.
/// \param SD Declaration checked for nested-name-specifier.
/// \param IsExtension If not null and the declaration is accepted as an
/// extension, the pointed variable is assigned true.</doc>
<use f='llvm/clang/lib/Sema/SemaCodeComplete.cpp' l='1437' u='c' c='_ZNK12_GLOBAL__N_113ResultBuilder21IsNestedNameSpecifierEPKN5clang9NamedDeclE'/>
