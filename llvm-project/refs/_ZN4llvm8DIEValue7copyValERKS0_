<def f='llvm/llvm/include/llvm/CodeGen/DIE.h' l='420' ll='434' type='void llvm::DIEValue::copyVal(const llvm::DIEValue &amp; X)'/>
<use f='llvm/llvm/include/llvm/CodeGen/DIE.h' l='440' u='c' c='_ZN4llvm8DIEValueC1ERKS0_'/>
<use f='llvm/llvm/include/llvm/CodeGen/DIE.h' l='448' u='c' c='_ZN4llvm8DIEValueaSERKS0_'/>
<doc f='llvm/llvm/include/llvm/CodeGen/DIE.h' l='415'>/// Copy the underlying value.
  ///
  /// This should get optimized down to a simple copy.  We need to actually
  /// construct the value, rather than calling memcpy, to satisfy strict
  /// aliasing rules.</doc>
