<def f='llvm/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h' l='181' ll='198' type='void llvm::LPMUpdater::addChildLoops(ArrayRef&lt;llvm::Loop *&gt; NewChildLoops)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h' l='175'>/// Loop passes should use this method to indicate they have added new child
  /// loops of the current loop.
  ///
  /// \p NewChildLoops must contain only the immediate children. Any nested
  /// loops within them will be visited in postorder as usual for the loop pass
  /// manager.</doc>
<use f='llvm/llvm/lib/Transforms/Scalar/LoopUnrollPass.cpp' l='1343' u='c' c='_ZN4llvm18LoopFullUnrollPass3runERNS_4LoopERNS_15AnalysisManagerIS1_JRNS_27LoopStandardAnalysisResultsEEEES5_RNS_10LPMUpdaterE'/>
<use f='llvm/llvm/unittests/Transforms/Scalar/LoopPassManagerTest.cpp' l='975' u='c' c='_ZN12_GLOBAL__N_143LoopPassManagerTest_LoopChildInsertion_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Transforms/Scalar/LoopPassManagerTest.cpp' l='1016' u='c' c='_ZN12_GLOBAL__N_143LoopPassManagerTest_LoopChildInsertion_Test8TestBodyEv'/>
