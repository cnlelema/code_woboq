<dec f='llvm/llvm/lib/Target/Mips/MipsTargetStreamer.h' l='164' type='void llvm::MipsTargetStreamer::emitLoadWithImmOffset(unsigned int Opcode, unsigned int DstReg, unsigned int BaseReg, int64_t Offset, unsigned int TmpReg, llvm::SMLoc IDLoc, const llvm::MCSubtargetInfo * STI)'/>
<def f='llvm/llvm/lib/Target/Mips/MCTargetDesc/MipsTargetStreamer.cpp' l='340' ll='370' type='void llvm::MipsTargetStreamer::emitLoadWithImmOffset(unsigned int Opcode, unsigned int DstReg, unsigned int BaseReg, int64_t Offset, unsigned int TmpReg, llvm::SMLoc IDLoc, const llvm::MCSubtargetInfo * STI)'/>
<doc f='llvm/llvm/lib/Target/Mips/MCTargetDesc/MipsTargetStreamer.cpp' l='336'>/// Emit a load instruction with an immediate offset. DstReg and TmpReg are
/// permitted to be the same register iff DstReg is distinct from BaseReg and
/// DstReg is a GPR. It is the callers responsibility to identify such cases
/// and pass the appropriate register in TmpReg.</doc>
