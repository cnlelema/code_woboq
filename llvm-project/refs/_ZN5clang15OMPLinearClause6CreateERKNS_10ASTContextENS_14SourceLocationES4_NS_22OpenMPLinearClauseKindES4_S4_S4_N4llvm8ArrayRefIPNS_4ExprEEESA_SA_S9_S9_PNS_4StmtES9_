<dec f='llvm/clang/include/clang/AST/OpenMPClause.h' l='3012' type='static clang::OMPLinearClause * clang::OMPLinearClause::Create(const clang::ASTContext &amp; C, clang::SourceLocation StartLoc, clang::SourceLocation LParenLoc, clang::OpenMPLinearClauseKind Modifier, clang::SourceLocation ModifierLoc, clang::SourceLocation ColonLoc, clang::SourceLocation EndLoc, ArrayRef&lt;clang::Expr *&gt; VL, ArrayRef&lt;clang::Expr *&gt; PL, ArrayRef&lt;clang::Expr *&gt; IL, clang::Expr * Step, clang::Expr * CalcStep, clang::Stmt * PreInit, clang::Expr * PostUpdate)'/>
<doc f='llvm/clang/include/clang/AST/OpenMPClause.h' l='2992'>/// Creates clause with a list of variables \a VL and a linear step
  /// \a Step.
  ///
  /// \param C AST Context.
  /// \param StartLoc Starting location of the clause.
  /// \param LParenLoc Location of &apos;(&apos;.
  /// \param Modifier Modifier of &apos;linear&apos; clause.
  /// \param ModifierLoc Modifier location.
  /// \param ColonLoc Location of &apos;:&apos;.
  /// \param EndLoc Ending location of the clause.
  /// \param VL List of references to the variables.
  /// \param PL List of private copies of original variables.
  /// \param IL List of initial values for the variables.
  /// \param Step Linear step.
  /// \param CalcStep Calculation of the linear step.
  /// \param PreInit Statement that must be executed before entering the OpenMP
  /// region with this clause.
  /// \param PostUpdate Expression that must be executed after exit from the
  /// OpenMP region with this clause.</doc>
<def f='llvm/clang/lib/AST/OpenMPClause.cpp' l='399' ll='424' type='static clang::OMPLinearClause * clang::OMPLinearClause::Create(const clang::ASTContext &amp; C, clang::SourceLocation StartLoc, clang::SourceLocation LParenLoc, clang::OpenMPLinearClauseKind Modifier, clang::SourceLocation ModifierLoc, clang::SourceLocation ColonLoc, clang::SourceLocation EndLoc, ArrayRef&lt;clang::Expr *&gt; VL, ArrayRef&lt;clang::Expr *&gt; PL, ArrayRef&lt;clang::Expr *&gt; IL, clang::Expr * Step, clang::Expr * CalcStep, clang::Stmt * PreInit, clang::Expr * PostUpdate)'/>
