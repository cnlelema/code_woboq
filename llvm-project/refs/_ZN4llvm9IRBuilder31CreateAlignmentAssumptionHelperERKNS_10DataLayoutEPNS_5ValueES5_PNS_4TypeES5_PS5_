<def f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='2332' ll='2358' type='llvm::CallInst * llvm::IRBuilder::CreateAlignmentAssumptionHelper(const llvm::DataLayout &amp; DL, llvm::Value * PtrValue, llvm::Value * Mask, llvm::Type * IntPtrTy, llvm::Value * OffsetValue, llvm::Value ** TheCheck)'/>
<use f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='2381' u='c' c='_ZN4llvm9IRBuilder25CreateAlignmentAssumptionERKNS_10DataLayoutEPNS_5ValueEjS5_PS5_'/>
<use f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='2412' u='c' c='_ZN4llvm9IRBuilder25CreateAlignmentAssumptionERKNS_10DataLayoutEPNS_5ValueES5_S5_PS5_'/>
<doc f='llvm/llvm/include/llvm/IR/IRBuilder.h' l='2328'>/// Helper function that creates an assume intrinsic call that
  /// represents an alignment assumption on the provided Ptr, Mask, Type
  /// and Offset. It may be sometimes useful to do some other logic
  /// based on this alignment check, thus it can be stored into &apos;TheCheck&apos;.</doc>
