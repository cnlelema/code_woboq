<dec f='llvm/llvm/include/llvm/Analysis/MemorySSAUpdater.h' l='269' type='llvm::MemoryAccess * llvm::MemorySSAUpdater::getPreviousDefInBlock(llvm::MemoryAccess * )'/>
<use f='llvm/llvm/lib/Analysis/MemorySSAUpdater.cpp' l='123' u='c' c='_ZN4llvm16MemorySSAUpdater14getPreviousDefEPNS_12MemoryAccessE'/>
<def f='llvm/llvm/lib/Analysis/MemorySSAUpdater.cpp' l='132' ll='154' type='llvm::MemoryAccess * llvm::MemorySSAUpdater::getPreviousDefInBlock(llvm::MemoryAccess * MA)'/>
<doc f='llvm/llvm/lib/Analysis/MemorySSAUpdater.cpp' l='129'>// This starts at the memory access, and goes backwards in the block to the find
// the previous definition. If the definition is not found in the block of the
// access, it returns nullptr.</doc>
