<dec f='llvm/clang/lib/CodeGen/ConstantEmitter.h' l='150' type='void clang::CodeGen::ConstantEmitter::registerCurrentAddrPrivate(llvm::Constant * signal, llvm::GlobalValue * placeholder)'/>
<doc f='llvm/clang/lib/CodeGen/ConstantEmitter.h' l='141'>/// Register a &apos;signal&apos; value with the emitter to inform it where to
  /// resolve a placeholder.  The signal value must be unique in the
  /// initializer; it might, for example, be the address of a global that
  /// refers to the current-address value in its own initializer.
  ///
  /// Uses of the placeholder must be properly anchored before finalizing
  /// the emitter, e.g. by being installed as the initializer of a global
  /// variable.  That is, it must be possible to replaceAllUsesWith
  /// the placeholder with the proper address of the signal.</doc>
<def f='llvm/clang/lib/CodeGen/CGExprConstant.cpp' l='1302' ll='1308' type='void clang::CodeGen::ConstantEmitter::registerCurrentAddrPrivate(llvm::Constant * signal, llvm::GlobalValue * placeholder)'/>
