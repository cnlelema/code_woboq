<dec f='llvm/llvm/include/llvm/Analysis/InstructionSimplify.h' l='172' type='llvm::Value * llvm::SimplifyLShrInst(llvm::Value * Op0, llvm::Value * Op1, bool isExact, const llvm::SimplifyQuery &amp; Q)'/>
<doc f='llvm/llvm/include/llvm/Analysis/InstructionSimplify.h' l='171'>/// Given operands for a LShr, fold the result or return null.</doc>
<def f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='1357' ll='1360' type='llvm::Value * llvm::SimplifyLShrInst(llvm::Value * Op0, llvm::Value * Op1, bool isExact, const llvm::SimplifyQuery &amp; Q)'/>
<use f='llvm/llvm/lib/Analysis/InstructionSimplify.cpp' l='5154' u='c' c='_ZN4llvm19SimplifyInstructionEPNS_11InstructionERKNS_13SimplifyQueryEPNS_25OptimizationRemarkEmitterE'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp' l='677' u='c' c='_ZN4llvm12InstCombiner9visitLShrERNS_14BinaryOperatorE'/>
