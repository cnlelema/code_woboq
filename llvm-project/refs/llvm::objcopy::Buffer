<def f='llvm/llvm/tools/llvm-objcopy/Buffer.h' l='25' ll='36'/>
<ovr f='llvm/llvm/tools/llvm-objcopy/Buffer.h' l='38' c='llvm::objcopy::FileBuffer'/>
<ovr f='llvm/llvm/tools/llvm-objcopy/Buffer.h' l='52' c='llvm::objcopy::MemBuffer'/>
<size>24</size>
<doc f='llvm/llvm/tools/llvm-objcopy/Buffer.h' l='20'>// The class Buffer abstracts out the common interface of FileOutputBuffer and
// WritableMemoryBuffer so that the hierarchy of Writers depends on this
// abstract interface and doesn&apos;t depend on a particular implementation.
// TODO: refactor the buffer classes in LLVM to enable us to use them here
// directly.</doc>
<mbr r='llvm::objcopy::Buffer::Name' o='64' t='llvm::StringRef'/>
<fun r='_ZN4llvm7objcopy6BufferD1Ev'/>
<fun r='_ZN4llvm7objcopy6Buffer8allocateEm'/>
<fun r='_ZN4llvm7objcopy6Buffer14getBufferStartEv'/>
<fun r='_ZN4llvm7objcopy6Buffer6commitEv'/>
<fun r='_ZN4llvm7objcopy6BufferC1ENS_9StringRefE'/>
<fun r='_ZNK4llvm7objcopy6Buffer7getNameEv'/>
<fun r='_ZN4llvm7objcopy6BufferD1Ev'/>
