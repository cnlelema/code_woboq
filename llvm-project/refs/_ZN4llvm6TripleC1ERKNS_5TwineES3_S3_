<dec f='llvm/llvm/include/llvm/ADT/Triple.h' l='268' type='void llvm::Triple::Triple(const llvm::Twine &amp; ArchStr, const llvm::Twine &amp; VendorStr, const llvm::Twine &amp; OSStr)'/>
<def f='llvm/llvm/lib/Support/Triple.cpp' l='801' ll='809' type='void llvm::Triple::Triple(const llvm::Twine &amp; ArchStr, const llvm::Twine &amp; VendorStr, const llvm::Twine &amp; OSStr)'/>
<doc f='llvm/llvm/lib/Support/Triple.cpp' l='795'>/// Construct a triple from string representations of the architecture,
/// vendor, and OS.
///
/// This joins each argument into a canonical string representation and parses
/// them into enum members. It leaves the environment unknown and omits it from
/// the string representation.</doc>
