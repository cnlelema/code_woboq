<dec f='llvm/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h' l='65' type='SmallVector&lt;int, 0&gt;'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.cpp' l='153' u='m' c='_ZN4llvm23SystemZHazardRecognizer9nextGroupEv'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.cpp' l='153' u='m' c='_ZN4llvm23SystemZHazardRecognizer9nextGroupEv'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.cpp' l='154' u='m' c='_ZN4llvm23SystemZHazardRecognizer9nextGroupEv'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.cpp' l='159' u='m' c='_ZN4llvm23SystemZHazardRecognizer9nextGroupEv'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.cpp' l='227' u='m' c='_ZNK4llvm23SystemZHazardRecognizer24dumpProcResourceCountersEv'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.cpp' l='237' u='m' c='_ZNK4llvm23SystemZHazardRecognizer24dumpProcResourceCountersEv'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.cpp' l='239' u='m' c='_ZNK4llvm23SystemZHazardRecognizer24dumpProcResourceCountersEv'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.cpp' l='260' u='m' c='_ZN4llvm23SystemZHazardRecognizer20clearProcResCountersEv'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.cpp' l='303' u='m' c='_ZN4llvm23SystemZHazardRecognizer15EmitInstructionEPNS_5SUnitE'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.cpp' l='310' u='m' c='_ZN4llvm23SystemZHazardRecognizer15EmitInstructionEPNS_5SUnitE'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.cpp' l='457' u='w' c='_ZN4llvm23SystemZHazardRecognizer9copyStateEPS0_'/>
<use f='llvm/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.cpp' l='457' u='r' c='_ZN4llvm23SystemZHazardRecognizer9copyStateEPS0_'/>
<offset>320</offset>
<doc f='llvm/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h' l='58'>/// The tracking of resources here are quite similar to the common
  /// code use of a critical resource. However, z13 differs in the way
  /// that it has two processor sides which may be interesting to
  /// model in the future (a work in progress).

  /// Counters for the number of uops scheduled per processor
  /// resource.</doc>
