<dec f='llvm/clang/include/clang/Sema/Sema.h' l='10050' type='clang::Expr * clang::Sema::recreateSyntacticForm(clang::PseudoObjectExpr * E)'/>
<use f='llvm/clang/lib/Sema/TreeTransform.h' l='9436' u='c' c='_ZN5clang13TreeTransform25TransformPseudoObjectExprEPNS_16PseudoObjectExprE'/>
<def f='llvm/clang/lib/Sema/SemaPseudoObject.cpp' l='1645' ll='1675' type='clang::Expr * clang::Sema::recreateSyntacticForm(clang::PseudoObjectExpr * E)'/>
<doc f='llvm/clang/lib/Sema/SemaPseudoObject.cpp' l='1639'>/// Given a pseudo-object expression, recreate what it looks like
/// syntactically without the attendant OpaqueValueExprs.
///
/// This is a hack which should be removed when TreeTransform is
/// capable of rebuilding a tree without stripping implicit
/// operations.</doc>
