<dec f='llvm/clang/include/clang/AST/NestedNameSpecifier.h' l='148' type='static clang::NestedNameSpecifier * clang::NestedNameSpecifier::Create(const clang::ASTContext &amp; Context, clang::IdentifierInfo * II)'/>
<doc f='llvm/clang/include/clang/AST/NestedNameSpecifier.h' l='142'>/// Builds a specifier that consists of just an identifier.
  ///
  /// The nested-name-specifier is assumed to be dependent, but has no
  /// prefix because the prefix is implied by something outside of the
  /// nested name specifier, e.g., in &quot;x-&gt;Base::f&quot;, the &quot;x&quot; has a dependent
  /// type.</doc>
<def f='llvm/clang/lib/AST/NestedNameSpecifier.cpp' l='114' ll='122' type='static clang::NestedNameSpecifier * clang::NestedNameSpecifier::Create(const clang::ASTContext &amp; Context, clang::IdentifierInfo * II)'/>
