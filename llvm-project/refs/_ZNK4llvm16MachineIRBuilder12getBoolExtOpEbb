<dec f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='499' type='unsigned int llvm::MachineIRBuilder::getBoolExtOp(bool IsVec, bool IsFP) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h' l='497'>/// \return The opcode of the extension the target wants to use for boolean
  /// values.</doc>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='1145' u='c' c='_ZN4llvm15LegalizerHelper11widenScalarERNS_12MachineInstrEjNS_3LLTE'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp' l='1246' u='c' c='_ZN4llvm15LegalizerHelper11widenScalarERNS_12MachineInstrEjNS_3LLTE'/>
<def f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='395' ll='405' type='unsigned int llvm::MachineIRBuilder::getBoolExtOp(bool IsVec, bool IsFP) const'/>
<use f='llvm/llvm/lib/CodeGen/GlobalISel/MachineIRBuilder.cpp' l='410' u='c' c='_ZN4llvm16MachineIRBuilder12buildBoolExtERKNS_5DstOpERKNS_5SrcOpEb'/>
