<dec f='llvm/llvm/lib/Target/ARM/ARMISelLowering.h' l='538' type='bool llvm::ARMTargetLowering::lowerInterleavedStore(llvm::StoreInst * SI, llvm::ShuffleVectorInst * SVI, unsigned int Factor) const'/>
<inh f='llvm/llvm/include/llvm/CodeGen/TargetLowering.h' l='2461' c='_ZNK4llvm18TargetLoweringBase21lowerInterleavedStoreEPNS_9StoreInstEPNS_17ShuffleVectorInstEj'/>
<def f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='15098' ll='15210' type='bool llvm::ARMTargetLowering::lowerInterleavedStore(llvm::StoreInst * SI, llvm::ShuffleVectorInst * SVI, unsigned int Factor) const'/>
<doc f='llvm/llvm/lib/Target/ARM/ARMISelLowering.cpp' l='15072'>/// Lower an interleaved store into a vstN intrinsic.
///
/// E.g. Lower an interleaved store (Factor = 3):
///        %i.vec = shuffle &lt;8 x i32&gt; %v0, &lt;8 x i32&gt; %v1,
///                                  &lt;0, 4, 8, 1, 5, 9, 2, 6, 10, 3, 7, 11&gt;
///        store &lt;12 x i32&gt; %i.vec, &lt;12 x i32&gt;* %ptr, align 4
///
///      Into:
///        %sub.v0 = shuffle &lt;8 x i32&gt; %v0, &lt;8 x i32&gt; v1, &lt;0, 1, 2, 3&gt;
///        %sub.v1 = shuffle &lt;8 x i32&gt; %v0, &lt;8 x i32&gt; v1, &lt;4, 5, 6, 7&gt;
///        %sub.v2 = shuffle &lt;8 x i32&gt; %v0, &lt;8 x i32&gt; v1, &lt;8, 9, 10, 11&gt;
///        call void llvm.arm.neon.vst3(%ptr, %sub.v0, %sub.v1, %sub.v2, 4)
///
/// Note that the new shufflevectors will be removed and we&apos;ll only generate one
/// vst3 instruction in CodeGen.
///
/// Example for a more general valid mask (Factor 3). Lower:
///        %i.vec = shuffle &lt;32 x i32&gt; %v0, &lt;32 x i32&gt; %v1,
///                 &lt;4, 32, 16, 5, 33, 17, 6, 34, 18, 7, 35, 19&gt;
///        store &lt;12 x i32&gt; %i.vec, &lt;12 x i32&gt;* %ptr
///
///      Into:
///        %sub.v0 = shuffle &lt;32 x i32&gt; %v0, &lt;32 x i32&gt; v1, &lt;4, 5, 6, 7&gt;
///        %sub.v1 = shuffle &lt;32 x i32&gt; %v0, &lt;32 x i32&gt; v1, &lt;32, 33, 34, 35&gt;
///        %sub.v2 = shuffle &lt;32 x i32&gt; %v0, &lt;32 x i32&gt; v1, &lt;16, 17, 18, 19&gt;
///        call void llvm.arm.neon.vst3(%ptr, %sub.v0, %sub.v1, %sub.v2, 4)</doc>
