<inh f='llvm/clang/include/clang/AST/Expr.h' l='108' c='clang::Expr'/>
<def f='llvm/clang/include/clang/AST/ExprObjC.h' l='1699' ll='1734'/>
<size>40</size>
<doc f='llvm/clang/include/clang/AST/ExprObjC.h' l='1686'>/// A runtime availability query.
///
/// There are 2 ways to spell this node:
/// \code
///   @available(macos 10.10, ios 8, *); // Objective-C
///   __builtin_available(macos 10.10, ios 8, *); // C, C++, and Objective-C
/// \endcode
///
/// Note that we only need to keep track of one \c VersionTuple here, which is
/// the one that corresponds to the current deployment target. This is meant to
/// be used in the condition of an \c if, but it is also usable as top level
/// expressions.
///</doc>
<mbr r='clang::ObjCAvailabilityCheckExpr::VersionToCheck' o='128' t='llvm::VersionTuple'/>
<mbr r='clang::ObjCAvailabilityCheckExpr::AtLoc' o='256' t='clang::SourceLocation'/>
<mbr r='clang::ObjCAvailabilityCheckExpr::RParen' o='288' t='clang::SourceLocation'/>
<fun r='_ZN5clang25ObjCAvailabilityCheckExprC1EN4llvm12VersionTupleENS_14SourceLocationES3_NS_8QualTypeE'/>
<fun r='_ZN5clang25ObjCAvailabilityCheckExprC1ENS_4Stmt10EmptyShellE'/>
<fun r='_ZNK5clang25ObjCAvailabilityCheckExpr11getBeginLocEv'/>
<fun r='_ZNK5clang25ObjCAvailabilityCheckExpr9getEndLocEv'/>
<fun r='_ZNK5clang25ObjCAvailabilityCheckExpr14getSourceRangeEv'/>
<fun r='_ZNK5clang25ObjCAvailabilityCheckExpr10hasVersionEv'/>
<fun r='_ZN5clang25ObjCAvailabilityCheckExpr10getVersionEv'/>
<fun r='_ZN5clang25ObjCAvailabilityCheckExpr8childrenEv'/>
<fun r='_ZNK5clang25ObjCAvailabilityCheckExpr8childrenEv'/>
<fun r='_ZN5clang25ObjCAvailabilityCheckExpr7classofEPKNS_4StmtE'/>
