<dec f='llvm/llvm/include/llvm/ADT/APInt.h' l='183' type='void llvm::APInt::fromString(unsigned int numBits, llvm::StringRef str, uint8_t radix)'/>
<doc f='llvm/llvm/include/llvm/ADT/APInt.h' l='171'>/// Convert a char array into an APInt
  ///
  /// \param radix 2, 8, 10, 16, or 36
  /// Converts a string into a number.  The string must be non-empty
  /// and well-formed as a number of the given base. The bit-width
  /// must be sufficient to hold the result.
  ///
  /// This is used by the constructors that take string arguments.
  ///
  /// StringRef::getAsInteger is superficially similar but (1) does
  /// not assume that the string is well-formed and (2) grows the
  /// result to hold the input.</doc>
<use f='llvm/llvm/lib/Support/APInt.cpp' l='121' u='c' c='_ZN4llvm5APIntC1EjNS_9StringRefEh'/>
<def f='llvm/llvm/lib/Support/APInt.cpp' l='1995' ll='2044' type='void llvm::APInt::fromString(unsigned int numbits, llvm::StringRef str, uint8_t radix)'/>
