<def f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='298' ll='335' type='bool llvm::InterleaveGroup::insertMember(InstTy * Instr, int32_t Index, uint32_t NewAlign)'/>
<doc f='llvm/llvm/include/llvm/Analysis/VectorUtils.h' l='293'>/// Try to insert a new member \p Instr with index \p Index and
  /// alignment \p NewAlign. The index is related to the leader and it could be
  /// negative if it is the new leader.
  ///
  /// \returns false if the instruction doesn&apos;t belong to the group.</doc>
<use f='llvm/llvm/lib/Analysis/VectorUtils.cpp' l='1029' u='c' c='_ZN4llvm21InterleavedAccessInfo19analyzeInterleavingEb'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/VPlan.cpp' l='737' u='c' c='_ZN4llvm23VPInterleavedAccessInfo10visitBlockEPNS_11VPBlockBaseERNS_8DenseMapIPNS_15InterleaveGroupINS_11InstructionEEEPNS4_INS_13VPInstructionEEENS_12779539'/>
