<dec f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='770' type='const llvm::SCEV * llvm::ScalarEvolution::getPredicatedBackedgeTakenCount(const llvm::Loop * L, llvm::SCEVUnionPredicate &amp; Predicates)'/>
<doc f='llvm/llvm/include/llvm/Analysis/ScalarEvolution.h' l='766'>/// Similar to getBackedgeTakenCount, except it will add a set of
  /// SCEV predicates to Predicates that are required to be true in order for
  /// the answer to be correct. Predicates can be checked with run-time
  /// checks and can be used to perform loop versioning.</doc>
<def f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='6582' ll='6586' type='const llvm::SCEV * llvm::ScalarEvolution::getPredicatedBackedgeTakenCount(const llvm::Loop * L, llvm::SCEVUnionPredicate &amp; Preds)'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='11434' u='c' c='_ZL13PrintLoopInfoRN4llvm11raw_ostreamEPNS_15ScalarEvolutionEPKNS_4LoopE'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolution.cpp' l='12312' u='c' c='_ZN4llvm25PredicatedScalarEvolution21getBackedgeTakenCountEv'/>
<use f='llvm/llvm/lib/Analysis/ScalarEvolutionExpander.cpp' l='2236' u='c' c='_ZN4llvm12SCEVExpander21generateOverflowCheckEPKNS_14SCEVAddRecExprEPNS_11InstructionEb'/>
