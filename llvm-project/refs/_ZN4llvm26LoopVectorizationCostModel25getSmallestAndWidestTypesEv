<dec f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='878' type='std::pair&lt;unsigned int, unsigned int&gt; llvm::LoopVectorizationCostModel::getSmallestAndWidestTypes()'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='4749' u='c' c='_ZN4llvm26LoopVectorizationCostModel20computeFeasibleMaxVFEbj'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='4868' ll='4922' type='std::pair&lt;unsigned int, unsigned int&gt; llvm::LoopVectorizationCostModel::getSmallestAndWidestTypes()'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='6135' u='c' c='_ZL16determineVPlanVFjRN4llvm26LoopVectorizationCostModelE'/>
<doc f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='875'>/// \return The size (in bits) of the smallest and widest types in the code
  /// that needs to be vectorized. We ignore values that remain scalar such as
  /// 64 bit loop indices.</doc>
