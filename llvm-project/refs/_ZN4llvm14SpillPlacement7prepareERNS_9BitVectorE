<dec f='llvm/llvm/lib/CodeGen/SpillPlacement.h' l='107' type='void llvm::SpillPlacement::prepare(llvm::BitVector &amp; RegBundles)'/>
<use f='llvm/llvm/lib/CodeGen/RegAllocGreedy.cpp' l='1383' u='c' c='_ZN12_GLOBAL__N_18RAGreedy17calcCompactRegionERNS0_20GlobalSplitCandidateE'/>
<use f='llvm/llvm/lib/CodeGen/RegAllocGreedy.cpp' l='1908' u='c' c='_ZN12_GLOBAL__N_18RAGreedy24calculateRegionSplitCostERN4llvm12LiveIntervalERNS1_15AllocationOrderERNS1_14BlockFrequencyERjbPb'/>
<doc f='llvm/llvm/lib/CodeGen/SpillPlacement.h' l='100'>/// prepare - Reset state and prepare for a new spill placement computation.
  /// @param RegBundles Bit vector to receive the edge bundles where the
  ///                   variable should be kept in a register. Each bit
  ///                   corresponds to an edge bundle, a set bit means the
  ///                   variable should be kept in a register through the
  ///                   bundle. A clear bit means the variable should be
  ///                   spilled. This vector is retained.</doc>
<def f='llvm/llvm/lib/CodeGen/SpillPlacement.cpp' l='360' ll='367' type='void llvm::SpillPlacement::prepare(llvm::BitVector &amp; RegBundles)'/>
