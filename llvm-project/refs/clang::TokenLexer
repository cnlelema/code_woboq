<def f='llvm/clang/include/clang/Lex/TokenLexer.h' l='30' ll='241'/>
<size>72</size>
<doc f='llvm/clang/include/clang/Lex/TokenLexer.h' l='27'>/// TokenLexer - This implements a lexer that returns tokens from a macro body
/// or token stream instead of lexing from a character buffer.  This is used for
/// macro expansion and _Pragma handling, for example.</doc>
<mbr r='clang::TokenLexer::Macro' o='0' t='clang::MacroInfo *'/>
<mbr r='clang::TokenLexer::ActualArgs' o='64' t='clang::MacroArgs *'/>
<mbr r='clang::TokenLexer::PP' o='128' t='clang::Preprocessor &amp;'/>
<mbr r='clang::TokenLexer::Tokens' o='192' t='const clang::Token *'/>
<mbr r='clang::TokenLexer::NumTokens' o='256' t='unsigned int'/>
<mbr r='clang::TokenLexer::CurTokenIdx' o='288' t='unsigned int'/>
<mbr r='clang::TokenLexer::ExpandLocStart' o='320' t='clang::SourceLocation'/>
<mbr r='clang::TokenLexer::ExpandLocEnd' o='352' t='clang::SourceLocation'/>
<mbr r='clang::TokenLexer::MacroExpansionStart' o='384' t='clang::SourceLocation'/>
<mbr r='clang::TokenLexer::MacroStartSLocOffset' o='416' t='unsigned int'/>
<mbr r='clang::TokenLexer::MacroDefStart' o='448' t='clang::SourceLocation'/>
<mbr r='clang::TokenLexer::MacroDefLength' o='480' t='unsigned int'/>
<mbr r='clang::TokenLexer::AtStartOfLine' o='512' t='bool'/>
<mbr r='clang::TokenLexer::HasLeadingSpace' o='513' t='bool'/>
<mbr r='clang::TokenLexer::NextTokGetsSpace' o='514' t='bool'/>
<mbr r='clang::TokenLexer::OwnsTokens' o='515' t='bool'/>
<mbr r='clang::TokenLexer::DisableMacroExpansion' o='516' t='bool'/>
<mbr r='clang::TokenLexer::IsReinject' o='517' t='bool'/>
<fun r='_ZN5clang10TokenLexerC1ERNS_5TokenENS_14SourceLocationEPNS_9MacroInfoEPNS_9MacroArgsERNS_12PreprocessorE'/>
<fun r='_ZN5clang10TokenLexerC1EPKNS_5TokenEjbbbRNS_12PreprocessorE'/>
<fun r='_ZN5clang10TokenLexerC1ERKS0_'/>
<fun r='_ZN5clang10TokenLexeraSERKS0_'/>
<fun r='_ZN5clang10TokenLexerD1Ev'/>
<fun r='_ZN5clang10TokenLexer4InitERNS_5TokenENS_14SourceLocationEPNS_9MacroInfoEPNS_9MacroArgsE'/>
<fun r='_ZN5clang10TokenLexer4InitEPKNS_5TokenEjbbb'/>
<fun r='_ZNK5clang10TokenLexer17isNextTokenLParenEv'/>
<fun r='_ZN5clang10TokenLexer3LexERNS_5TokenE'/>
<fun r='_ZNK5clang10TokenLexer30isParsingPreprocessorDirectiveEv'/>
<fun r='_ZN5clang10TokenLexer7destroyEv'/>
<fun r='_ZNK5clang10TokenLexer7isAtEndEv'/>
<fun r='_ZN5clang10TokenLexer11pasteTokensERNS_5TokenEN4llvm8ArrayRefIS1_EERj'/>
<fun r='_ZN5clang10TokenLexer11pasteTokensERNS_5TokenE'/>
<fun r='_ZN5clang10TokenLexer22stringifyVAOPTContentsERN4llvm15SmallVectorImplINS_5TokenEEERKNS_21VAOptExpansionContextENS_14SourceLocationE'/>
<fun r='_ZN5clang10TokenLexer23ExpandFunctionArgumentsEv'/>
<fun r='_ZN5clang10TokenLexer27HandleMicrosoftCommentPasteERNS_5TokenENS_14SourceLocationE'/>
<fun r='_ZNK5clang10TokenLexer29getExpansionLocForMacroDefLocENS_14SourceLocationE'/>
<fun r='_ZN5clang10TokenLexer26updateLocForMacroArgTokensENS_14SourceLocationEPNS_5TokenES3_'/>
<fun r='_ZN5clang10TokenLexer28MaybeRemoveCommaBeforeVaArgsERN4llvm15SmallVectorImplINS_5TokenEEEbPNS_9MacroInfoEjRNS_12PreprocessorE'/>
<fun r='_ZN5clang10TokenLexer34PropagateLineStartLeadingSpaceInfoERNS_5TokenE'/>
<fun r='_ZN5clang10TokenLexer23ExpandFunctionArgumentsEv'/>
