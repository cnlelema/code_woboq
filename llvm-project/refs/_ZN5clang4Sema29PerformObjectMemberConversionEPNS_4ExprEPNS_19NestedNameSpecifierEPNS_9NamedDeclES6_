<dec f='llvm/clang/include/clang/Sema/Sema.h' l='2867' type='ExprResult clang::Sema::PerformObjectMemberConversion(clang::Expr * From, clang::NestedNameSpecifier * Qualifier, clang::NamedDecl * FoundDecl, clang::NamedDecl * Member)'/>
<def f='llvm/clang/lib/Sema/SemaExpr.cpp' l='2658' ll='2819' type='ExprResult clang::Sema::PerformObjectMemberConversion(clang::Expr * From, clang::NestedNameSpecifier * Qualifier, clang::NamedDecl * FoundDecl, clang::NamedDecl * Member)'/>
<doc f='llvm/clang/lib/Sema/SemaExpr.cpp' l='2641'>/// Cast a base object to a member&apos;s actual type.
///
/// Logically this happens in three phases:
///
/// * First we cast from the base type to the naming class.
///   The naming class is the class into which we were looking
///   when we found the member;  it&apos;s the qualifier type if a
///   qualifier was provided, and otherwise it&apos;s the base type.
///
/// * Next we cast from the naming class to the declaring class.
///   If the member we found was brought into a class&apos;s scope by
///   a using declaration, this is that class;  otherwise it&apos;s
///   the class declaring the member.
///
/// * Finally we cast from the declaring class to the &quot;true&quot;
///   declaring class of the member.  This conversion does not
///   obey access control.</doc>
