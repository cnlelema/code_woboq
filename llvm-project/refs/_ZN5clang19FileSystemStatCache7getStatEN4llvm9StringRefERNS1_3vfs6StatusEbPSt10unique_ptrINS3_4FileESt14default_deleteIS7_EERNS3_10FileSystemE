<dec f='llvm/clang/include/clang/Basic/FileSystemStatCache.h' l='59' type='std::error_code clang::FileSystemStatCache::getStat(llvm::StringRef Path, llvm::vfs::Status &amp; Status, bool isFile, std::unique_ptr&lt;llvm::vfs::File&gt; * F, llvm::vfs::FileSystem &amp; FS)'/>
<doc f='llvm/clang/include/clang/Basic/FileSystemStatCache.h' l='56'>// FIXME: The pointer here is a non-owning/optional reference to the
  // unique_ptr. Optional&lt;unique_ptr&lt;vfs::File&gt;&amp;&gt; might be nicer, but
  // Optional needs some work to support references so this isn&apos;t possible yet.</doc>
<use f='llvm/clang/lib/Basic/FileSystemStatCache.cpp' l='43' u='c' c='_ZN5clang19FileSystemStatCache3getEN4llvm9StringRefERNS1_3vfs6StatusEbPSt10unique_ptrINS3_4FileESt14default_deleteIS7_EEPS0_RNS3_10FileSystemE'/>
<ovr f='llvm/clang/lib/Basic/FileSystemStatCache.cpp' l='102' c='_ZN5clang17MemorizeStatCalls7getStatEN4llvm9StringRefERNS1_3vfs6StatusEbPSt10unique_ptrINS3_4FileESt14default_deleteIS7_EERNS3_10FileSystemE'/>
<ovr f='llvm/clang/unittests/Basic/FileManagerTest.cpp' l='60' c='_ZN12_GLOBAL__N_113FakeStatCache7getStatEN4llvm9StringRefERNS1_3vfs6StatusEbPSt10unique_ptrINS3_4FileESt14default_deleteIS7_EERNS3_10FileSystemE'/>
