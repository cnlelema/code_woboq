<def f='llvm/clang/include/clang/Tooling/Refactoring/AtomicChange.h' l='79' type='const std::string &amp; clang::tooling::AtomicChange::getError() const'/>
<use f='llvm/clang/lib/Tooling/Refactoring/AtomicChange.cpp' l='30' u='c' c='_ZN12_GLOBAL__N_122NormalizedAtomicChangeC1ERKN4llvm4yaml2IOERKN5clang7tooling12AtomicChangeE'/>
<doc f='llvm/clang/include/clang/Tooling/Refactoring/AtomicChange.h' l='78'>/// Returns the error message or an empty string if it does not exist.</doc>
<use f='llvm/clang/unittests/Tooling/RefactoringTest.cpp' l='1176' u='c' c='_ZN5clang7tooling40AtomicChangeTest_YAMLToAtomicChange_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/RefactoringTest.cpp' l='1176' u='c' c='_ZN5clang7tooling40AtomicChangeTest_YAMLToAtomicChange_Test8TestBodyEv'/>
<use f='llvm/clang/unittests/Tooling/RefactoringTest.cpp' l='1176' u='c' c='_ZN5clang7tooling40AtomicChangeTest_YAMLToAtomicChange_Test8TestBodyEv'/>
