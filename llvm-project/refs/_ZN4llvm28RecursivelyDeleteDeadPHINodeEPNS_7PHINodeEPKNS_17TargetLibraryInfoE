<dec f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='164' type='bool llvm::RecursivelyDeleteDeadPHINode(llvm::PHINode * PN, const llvm::TargetLibraryInfo * TLI = nullptr)'/>
<doc f='llvm/llvm/include/llvm/Transforms/Utils/Local.h' l='159'>/// If the specified value is an effectively dead PHI node, due to being a
/// def-use chain of single-use nodes that either forms a cycle or is terminated
/// by a trivially dead instruction, delete it. If that makes any of its
/// operands trivially dead, delete them too, recursively. Return true if a
/// change was made.</doc>
<use f='llvm/llvm/lib/Target/AMDGPU/SIAnnotateControlFlow.cpp' l='197' u='c' c='_ZN12_GLOBAL__N_121SIAnnotateControlFlow13eraseIfUnusedEPN4llvm7PHINodeE'/>
<use f='llvm/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp' l='166' u='c' c='_ZN4llvm14DeleteDeadPHIsEPNS_10BasicBlockEPKNS_17TargetLibraryInfoE'/>
<def f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='517' ll='535' type='bool llvm::RecursivelyDeleteDeadPHINode(llvm::PHINode * PN, const llvm::TargetLibraryInfo * TLI = nullptr)'/>
<doc f='llvm/llvm/lib/Transforms/Utils/Local.cpp' l='512'>/// RecursivelyDeleteDeadPHINode - If the specified value is an effectively
/// dead PHI node, due to being a def-use chain of single-use nodes that
/// either forms a cycle or is terminated by a trivially dead instruction,
/// delete it.  If that makes any of its operands trivially dead, delete them
/// too, recursively.  Return true if a change was made.</doc>
<use f='llvm/llvm/unittests/Transforms/Utils/LocalTest.cpp' l='45' u='c' c='_ZN40Local_RecursivelyDeleteDeadPHINodes_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Transforms/Utils/LocalTest.cpp' l='54' u='c' c='_ZN40Local_RecursivelyDeleteDeadPHINodes_Test8TestBodyEv'/>
<use f='llvm/llvm/unittests/Transforms/Utils/LocalTest.cpp' l='60' u='c' c='_ZN40Local_RecursivelyDeleteDeadPHINodes_Test8TestBodyEv'/>
