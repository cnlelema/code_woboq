<def f='llvm/llvm/include/llvm/IR/LegacyPassManager.h' l='98' macro='1' type='legacy::PassManagerBase * llvm::unwrap(LLVMPassManagerRef P)'/>
<def f='llvm/llvm/include/llvm/IR/LegacyPassManager.h' l='98' macro='1' type='T * llvm::unwrap(LLVMPassManagerRef P)'/>
<use f='llvm/llvm/include/llvm/IR/LegacyPassManager.h' l='98' macro='1' u='c'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='4013' u='c' c='LLVMRunPassManager'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='4017' u='c' c='LLVMInitializeFunctionPassManager'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='4021' u='c' c='LLVMRunFunctionPassManager'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='4025' u='c' c='LLVMFinalizeFunctionPassManager'/>
<use f='llvm/llvm/lib/IR/Core.cpp' l='4029' u='c' c='LLVMDisposePassManager'/>
<use f='llvm/llvm/lib/Target/Target.cpp' l='65' u='c' c='LLVMAddTargetLibraryInfo'/>
<use f='llvm/llvm/lib/Target/TargetMachineC.cpp' l='269' u='c' c='LLVMAddAnalysisPasses'/>
<use f='llvm/llvm/lib/Transforms/AggressiveInstCombine/AggressiveInstCombine.cpp' l='350' u='c' c='LLVMAddAggressiveInstCombinerPass'/>
<use f='llvm/llvm/lib/Transforms/Coroutines/Coroutines.cpp' l='349' u='c' c='LLVMAddCoroEarlyPass'/>
<use f='llvm/llvm/lib/Transforms/Coroutines/Coroutines.cpp' l='353' u='c' c='LLVMAddCoroSplitPass'/>
<use f='llvm/llvm/lib/Transforms/Coroutines/Coroutines.cpp' l='357' u='c' c='LLVMAddCoroElidePass'/>
<use f='llvm/llvm/lib/Transforms/Coroutines/Coroutines.cpp' l='361' u='c' c='LLVMAddCoroCleanupPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='70' u='c' c='LLVMAddArgumentPromotionPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='74' u='c' c='LLVMAddCalledValuePropagationPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='78' u='c' c='LLVMAddConstantMergePass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='82' u='c' c='LLVMAddDeadArgEliminationPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='86' u='c' c='LLVMAddFunctionAttrsPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='90' u='c' c='LLVMAddFunctionInliningPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='94' u='c' c='LLVMAddAlwaysInlinerPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='98' u='c' c='LLVMAddGlobalDCEPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='102' u='c' c='LLVMAddGlobalOptimizerPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='106' u='c' c='LLVMAddIPConstantPropagationPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='110' u='c' c='LLVMAddPruneEHPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='114' u='c' c='LLVMAddIPSCCPPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='121' u='c' c='LLVMAddInternalizePass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='125' u='c' c='LLVMAddStripDeadPrototypesPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/IPO.cpp' l='129' u='c' c='LLVMAddStripSymbolsPass'/>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='1106' u='c' c='LLVMPassManagerBuilderPopulateFunctionPassManager'/>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='1114' u='c' c='LLVMPassManagerBuilderPopulateModulePassManager'/>
<use f='llvm/llvm/lib/Transforms/IPO/PassManagerBuilder.cpp' l='1123' u='c' c='LLVMPassManagerBuilderPopulateLTOPassManager'/>
<use f='llvm/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp' l='3609' u='c' c='LLVMAddInstructionCombiningPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='115' u='c' c='_Z26LLVMAddLoopSimplifyCFGPassP21LLVMOpaquePassManager'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='123' u='c' c='LLVMAddAggressiveDCEPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='127' u='c' c='LLVMAddBitTrackingDCEPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='131' u='c' c='LLVMAddAlignmentFromAssumptionsPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='135' u='c' c='LLVMAddCFGSimplificationPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='139' u='c' c='LLVMAddDeadStoreEliminationPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='143' u='c' c='LLVMAddScalarizerPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='147' u='c' c='LLVMAddGVNPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='151' u='c' c='LLVMAddNewGVNPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='155' u='c' c='LLVMAddMergedLoadStoreMotionPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='159' u='c' c='LLVMAddIndVarSimplifyPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='163' u='c' c='LLVMAddJumpThreadingPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='167' u='c' c='_Z19LLVMAddLoopSinkPassP21LLVMOpaquePassManager'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='171' u='c' c='LLVMAddLICMPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='175' u='c' c='LLVMAddLoopDeletionPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='179' u='c' c='LLVMAddLoopIdiomPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='183' u='c' c='LLVMAddLoopRotatePass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='187' u='c' c='LLVMAddLoopRerollPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='191' u='c' c='LLVMAddLoopUnrollPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='195' u='c' c='LLVMAddLoopUnrollAndJamPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='199' u='c' c='LLVMAddLoopUnswitchPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='203' u='c' c='LLVMAddLowerAtomicPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='207' u='c' c='LLVMAddMemCpyOptPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='211' u='c' c='LLVMAddPartiallyInlineLibCallsPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='215' u='c' c='LLVMAddReassociatePass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='219' u='c' c='LLVMAddSCCPPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='223' u='c' c='LLVMAddScalarReplAggregatesPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='227' u='c' c='LLVMAddScalarReplAggregatesPassSSA'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='232' u='c' c='LLVMAddScalarReplAggregatesPassWithThreshold'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='240' u='c' c='LLVMAddTailCallEliminationPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='244' u='c' c='LLVMAddConstantPropagationPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='248' u='c' c='LLVMAddDemoteMemoryToRegisterPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='252' u='c' c='LLVMAddVerifierPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='256' u='c' c='LLVMAddCorrelatedValuePropagationPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='260' u='c' c='LLVMAddEarlyCSEPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='264' u='c' c='LLVMAddEarlyCSEMemSSAPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='268' u='c' c='_Z25LLVMAddGVNHoistLegacyPassP21LLVMOpaquePassManager'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='272' u='c' c='LLVMAddTypeBasedAliasAnalysisPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='276' u='c' c='LLVMAddScopedNoAliasAAPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='280' u='c' c='LLVMAddBasicAliasAnalysisPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='284' u='c' c='LLVMAddLowerExpectIntrinsicPass'/>
<use f='llvm/llvm/lib/Transforms/Scalar/Scalar.cpp' l='288' u='c' c='LLVMAddUnifyFunctionExitNodesPass'/>
<use f='llvm/llvm/lib/Transforms/Utils/Utils.cpp' l='50' u='c' c='LLVMAddLowerSwitchPass'/>
<use f='llvm/llvm/lib/Transforms/Utils/Utils.cpp' l='54' u='c' c='LLVMAddPromoteMemoryToRegisterPass'/>
<use f='llvm/llvm/lib/Transforms/Utils/Utils.cpp' l='58' u='c' c='LLVMAddAddDiscriminatorsPass'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/Vectorize.cpp' l='37' u='c' c='LLVMAddLoopVectorizePass'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/Vectorize.cpp' l='41' u='c' c='LLVMAddSLPVectorizePass'/>
