<def f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='821' ll='823' type='llvm::IntervalMapImpl::NodeRef &amp; llvm::IntervalMapImpl::Path::subtree(unsigned int Level) const'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='828' u='c' c='_ZN4llvm15IntervalMapImpl4Path5resetEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='850' u='c' c='_ZN4llvm15IntervalMapImpl4Path7setSizeEjj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='883' u='c' c='_ZN4llvm15IntervalMapImpl4Path8fillLeftEj'/>
<use f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='1458' u='c' c='_ZN4llvm11IntervalMap14const_iterator12pathFillFindET_'/>
<doc f='llvm/llvm/include/llvm/ADT/IntervalMap.h' l='818'>/// subtree - Get the subtree referenced from Level. When the path is
  /// consistent, node(Level + 1) == subtree(Level).
  /// @param Level 0..height-1. The leaves have no subtrees.</doc>
<use f='llvm/llvm/lib/Support/IntervalMap.cpp' l='21' u='c' c='_ZN4llvm15IntervalMapImpl4Path11replaceRootEPvjSt4pairIjjE'/>
<use f='llvm/llvm/lib/Support/IntervalMap.cpp' l='64' u='c' c='_ZN4llvm15IntervalMapImpl4Path8moveLeftEj'/>
<use f='llvm/llvm/lib/Support/IntervalMap.cpp' l='109' u='c' c='_ZN4llvm15IntervalMapImpl4Path9moveRightEj'/>
