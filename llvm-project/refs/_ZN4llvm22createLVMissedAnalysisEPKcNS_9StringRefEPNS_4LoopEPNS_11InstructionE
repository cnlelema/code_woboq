<dec f='llvm/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h' l='43' type='llvm::OptimizationRemarkAnalysis llvm::createLVMissedAnalysis(const char * PassName, llvm::StringRef RemarkName, llvm::Loop * TheLoop, llvm::Instruction * I = nullptr)'/>
<def f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp' l='62' ll='80' type='llvm::OptimizationRemarkAnalysis llvm::createLVMissedAnalysis(const char * PassName, llvm::StringRef RemarkName, llvm::Loop * TheLoop, llvm::Instruction * I = nullptr)'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorizationLegality.cpp' l='452' u='c' c='_ZNK4llvm25LoopVectorizationLegality26reportVectorizationFailureENS_9StringRefES1_S1_PNS_11InstructionE'/>
<doc f='llvm/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h' l='36'>/// Create an analysis remark that explains why vectorization failed
///
/// \p PassName is the name of the pass (e.g. can be AlwaysPrint).  \p
/// RemarkName is the identifier for the remark.  If \p I is passed it is an
/// instruction that prevents vectorization.  Otherwise \p TheLoop is used for
/// the location of the remark.  \return the remark object that can be
/// streamed to.</doc>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='1254' u='c' c='_ZN4llvm26LoopVectorizationCostModel20createMissedAnalysisENS_9StringRefE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='7349' u='c' c='_ZN4llvm17LoopVectorizePass11processLoopEPNS_4LoopE'/>
<use f='llvm/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp' l='7365' u='c' c='_ZN4llvm17LoopVectorizePass11processLoopEPNS_4LoopE'/>
