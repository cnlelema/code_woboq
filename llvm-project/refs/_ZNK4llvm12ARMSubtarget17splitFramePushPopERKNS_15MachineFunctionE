<def f='llvm/llvm/lib/Target/ARM/ARMSubtarget.h' l='771' ll='775' type='bool llvm::ARMSubtarget::splitFramePushPop(const llvm::MachineFunction &amp; MF) const'/>
<doc f='llvm/llvm/lib/Target/ARM/ARMSubtarget.h' l='767'>/// Returns true if the frame setup is split into two separate pushes (first
  /// r0-r7,lr then r8-r11), principally so that the frame pointer is adjacent
  /// to lr. This is always required on Thumb1-only targets, as the push and
  /// pop instructions can&apos;t access the high registers.</doc>
<use f='llvm/llvm/lib/Target/ARM/ARMBaseRegisterInfo.cpp' l='67' u='c' c='_ZNK4llvm19ARMBaseRegisterInfo18getCalleeSavedRegsEPKNS_15MachineFunctionE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMFrameLowering.cpp' l='984' u='c' c='_ZNK4llvm16ARMFrameLowering12emitPushInstERNS_17MachineBasicBlockENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEERKSt6vectorINS_15CalleeSaved1390212'/>
<use f='llvm/llvm/lib/Target/ARM/ARMFrameLowering.cpp' l='1074' u='c' c='_ZNK4llvm16ARMFrameLowering11emitPopInstERNS_17MachineBasicBlockENS_26MachineInstrBundleIteratorINS_12MachineInstrELb0EEERSt6vectorINS_15CalleeSavedIn2127797'/>
<use f='llvm/llvm/lib/Target/ARM/ARMFrameLowering.cpp' l='1689' u='c' c='_ZNK4llvm16ARMFrameLowering20determineCalleeSavesERNS_15MachineFunctionERNS_9BitVectorEPNS_12RegScavengerE'/>
<use f='llvm/llvm/lib/Target/ARM/ARMFrameLowering.cpp' l='1711' u='c' c='_ZNK4llvm16ARMFrameLowering20determineCalleeSavesERNS_15MachineFunctionERNS_9BitVectorEPNS_12RegScavengerE'/>
