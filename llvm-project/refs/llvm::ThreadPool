<def f='llvm/llvm/include/llvm/Support/ThreadPool.h' l='36' ll='97'/>
<size>288</size>
<doc f='llvm/llvm/include/llvm/Support/ThreadPool.h' l='31'>/// A ThreadPool for asynchronous parallel execution on a defined number of
/// threads.
///
/// The pool keeps a vector of threads alive, waiting on a condition variable
/// for some work to become available.</doc>
<fun r='_ZN4llvm10ThreadPoolC1Ev'/>
<fun r='_ZN4llvm10ThreadPoolC1Ej'/>
<fun r='_ZN4llvm10ThreadPoolD1Ev'/>
<fun r='_ZN4llvm10ThreadPool5asyncEOT_DpOT0_'/>
<fun r='_ZN4llvm10ThreadPool5asyncEOT_'/>
<fun r='_ZN4llvm10ThreadPool4waitEv'/>
<fun r='_ZN4llvm10ThreadPool9asyncImplESt8functionIFvvEE'/>
<mbr r='llvm::ThreadPool::Threads' o='0' t='std::vector&lt;llvm::thread&gt;'/>
<mbr r='llvm::ThreadPool::Tasks' o='192' t='std::queue&lt;PackagedTaskTy&gt;'/>
<mbr r='llvm::ThreadPool::QueueLock' o='832' t='std::mutex'/>
<mbr r='llvm::ThreadPool::QueueCondition' o='1152' t='std::condition_variable'/>
<mbr r='llvm::ThreadPool::CompletionLock' o='1536' t='std::mutex'/>
<mbr r='llvm::ThreadPool::CompletionCondition' o='1856' t='std::condition_variable'/>
<mbr r='llvm::ThreadPool::ActiveThreads' o='2240' t='std::atomic&lt;unsigned int&gt;'/>
<mbr r='llvm::ThreadPool::EnableFlag' o='2272' t='bool'/>
