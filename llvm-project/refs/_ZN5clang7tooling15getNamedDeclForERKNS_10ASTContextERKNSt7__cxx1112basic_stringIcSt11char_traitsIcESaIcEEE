<dec f='llvm/clang/include/clang/Tooling/Refactoring/Rename/USRFinder.h' l='40' type='const clang::NamedDecl * clang::tooling::getNamedDeclFor(const clang::ASTContext &amp; Context, const std::string &amp; Name)'/>
<use f='llvm/clang/lib/Tooling/Refactoring/Rename/RenamingAction.cpp' l='93' u='c' c='_ZN5clang7tooling19QualifiedRenameRule8initiateERNS0_22RefactoringRuleContextENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_'/>
<doc f='llvm/clang/include/clang/Tooling/Refactoring/Rename/USRFinder.h' l='37'>// Given an AST context and a fully qualified name, returns a NamedDecl
// identifying the symbol with a matching name. Returns null if nothing is
// found for the name.</doc>
<def f='llvm/clang/lib/Tooling/Refactoring/Rename/USRFinder.cpp' l='127' ll='132' type='const clang::NamedDecl * clang::tooling::getNamedDeclFor(const clang::ASTContext &amp; Context, const std::string &amp; Name)'/>
<use f='llvm/clang/lib/Tooling/Refactoring/Rename/USRFindingAction.cpp' l='213' u='c' c='_ZN5clang7tooling24NamedDeclFindingConsumer10FindSymbolERNS_10ASTContextERKNS_13SourceManagerEjRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
