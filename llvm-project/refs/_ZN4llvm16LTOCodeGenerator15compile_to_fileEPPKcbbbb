<dec f='llvm/llvm/include/llvm/LTO/legacy/LTOCodeGenerator.h' l='146' type='bool llvm::LTOCodeGenerator::compile_to_file(const char ** Name, bool DisableVerify, bool DisableInline, bool DisableGVNLoadPRE, bool DisableVectorization)'/>
<def f='llvm/llvm/lib/LTO/LTOCodeGenerator.cpp' l='311' ll='320' type='bool llvm::LTOCodeGenerator::compile_to_file(const char ** Name, bool DisableVerify, bool DisableInline, bool DisableGVNLoadPRE, bool DisableVectorization)'/>
<doc f='llvm/llvm/include/llvm/LTO/legacy/LTOCodeGenerator.h' l='139'>/// Compile the merged module into a *single* output file; the path to output
  /// file is returned to the caller via argument &quot;name&quot;. Return true on
  /// success.
  ///
  /// \note It is up to the linker to remove the intermediate output file.  Do
  /// not try to remove the object file in LTOCodeGenerator&apos;s destructor as we
  /// don&apos;t who (LTOCodeGenerator or the output file) will last longer.</doc>
<use f='llvm/llvm/tools/llvm-lto/llvm-lto.cpp' l='1043' u='c' c='main'/>
<use f='llvm/llvm/tools/lto/lto.cpp' l='450' u='c' c='lto_codegen_compile_to_file'/>
