<dec f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='574' type='bool llvm::TreePredicateFn::isAtomicOrderingAcquireRelease() const'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='927' u='c' c='_ZNK4llvm15TreePredicateFn11getPredCodeEv'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='945' u='c' c='_ZNK4llvm15TreePredicateFn11getPredCodeEv'/>
<use f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='983' u='c' c='_ZNK4llvm15TreePredicateFn11getPredCodeEv'/>
<def f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.cpp' l='1133' ll='1135' type='bool llvm::TreePredicateFn::isAtomicOrderingAcquireRelease() const'/>
<doc f='llvm/llvm/utils/TableGen/CodeGenDAGPatterns.h' l='573'>/// Is this predicate the predefined acquire-release atomic predicate?</doc>
<use f='llvm/llvm/utils/TableGen/GlobalISelEmitter.cpp' l='241' u='c' c='_ZN12_GLOBAL__N_1L17explainPredicatesEPKN4llvm15TreePatternNodeE'/>
<use f='llvm/llvm/utils/TableGen/GlobalISelEmitter.cpp' l='318' u='c' c='_ZN12_GLOBAL__N_1L21isTrivialOperatorNodeEPKN4llvm15TreePatternNodeE'/>
<use f='llvm/llvm/utils/TableGen/GlobalISelEmitter.cpp' l='3278' u='c' c='_ZN12_GLOBAL__N_117GlobalISelEmitter28createAndImportSelDAGMatcherERNS_11RuleMatcherERNS_18InstructionMatcherEPKN4llvm15TreePatternNodeERj'/>
