<inh f='llvm/clang/include/clang/AST/DeclBase.h' l='88' c='clang::Decl'/>
<inh f='llvm/clang/include/clang/AST/DeclBase.h' l='1271' c='clang::DeclContext'/>
<def f='llvm/clang/include/clang/AST/Decl.h' l='3888' ll='4078'/>
<size>1</size>
<doc f='llvm/clang/include/clang/AST/Decl.h' l='3885'>/// Represents a block literal declaration, which is like an
/// unnamed FunctionDecl.  For example:
/// ^{ statement-body }   or   ^(int arg1, float arg2){ statement-body }</doc>
<mbr r='clang::BlockDecl::ParamInfo' t='clang::ParmVarDecl **'/>
<mbr r='clang::BlockDecl::NumParams' t='unsigned int'/>
<mbr r='clang::BlockDecl::Body' t='clang::Stmt *'/>
<mbr r='clang::BlockDecl::SignatureAsWritten' t='clang::TypeSourceInfo *'/>
<mbr r='clang::BlockDecl::Captures' t='const clang::BlockDecl::Capture *'/>
<mbr r='clang::BlockDecl::NumCaptures' t='unsigned int'/>
<mbr r='clang::BlockDecl::ManglingNumber' t='unsigned int'/>
<mbr r='clang::BlockDecl::ManglingContextDecl' t='clang::Decl *'/>
<fun r='_ZN5clang9BlockDeclC1EPNS_11DeclContextENS_14SourceLocationE'/>
<fun r='_ZN5clang9BlockDecl6CreateERNS_10ASTContextEPNS_11DeclContextENS_14SourceLocationE'/>
<fun r='_ZN5clang9BlockDecl18CreateDeserializedERNS_10ASTContextEj'/>
<fun r='_ZNK5clang9BlockDecl16getCaretLocationEv'/>
<fun r='_ZNK5clang9BlockDecl10isVariadicEv'/>
<fun r='_ZN5clang9BlockDecl13setIsVariadicEb'/>
<fun r='_ZNK5clang9BlockDecl15getCompoundBodyEv'/>
<fun r='_ZNK5clang9BlockDecl7getBodyEv'/>
<fun r='_ZN5clang9BlockDecl7setBodyEPNS_12CompoundStmtE'/>
<fun r='_ZN5clang9BlockDecl21setSignatureAsWrittenEPNS_14TypeSourceInfoE'/>
<fun r='_ZNK5clang9BlockDecl21getSignatureAsWrittenEv'/>
<fun r='_ZNK5clang9BlockDecl10parametersEv'/>
<fun r='_ZN5clang9BlockDecl10parametersEv'/>
<fun r='_ZNK5clang9BlockDecl11param_emptyEv'/>
<fun r='_ZN5clang9BlockDecl11param_beginEv'/>
<fun r='_ZN5clang9BlockDecl9param_endEv'/>
<fun r='_ZNK5clang9BlockDecl11param_beginEv'/>
<fun r='_ZNK5clang9BlockDecl9param_endEv'/>
<fun r='_ZNK5clang9BlockDecl10param_sizeEv'/>
<fun r='_ZNK5clang9BlockDecl12getNumParamsEv'/>
<fun r='_ZNK5clang9BlockDecl12getParamDeclEj'/>
<fun r='_ZN5clang9BlockDecl12getParamDeclEj'/>
<fun r='_ZN5clang9BlockDecl9setParamsEN4llvm8ArrayRefIPNS_11ParmVarDeclEEE'/>
<fun r='_ZNK5clang9BlockDecl11hasCapturesEv'/>
<fun r='_ZNK5clang9BlockDecl14getNumCapturesEv'/>
<fun r='_ZNK5clang9BlockDecl8capturesEv'/>
<fun r='_ZNK5clang9BlockDecl13capture_beginEv'/>
<fun r='_ZNK5clang9BlockDecl11capture_endEv'/>
<fun r='_ZNK5clang9BlockDecl15capturesCXXThisEv'/>
<fun r='_ZN5clang9BlockDecl18setCapturesCXXThisEb'/>
<fun r='_ZNK5clang9BlockDecl22blockMissingReturnTypeEv'/>
<fun r='_ZN5clang9BlockDecl25setBlockMissingReturnTypeEb'/>
<fun r='_ZNK5clang9BlockDecl22isConversionFromLambdaEv'/>
<fun r='_ZN5clang9BlockDecl25setIsConversionFromLambdaEb'/>
<fun r='_ZNK5clang9BlockDecl13doesNotEscapeEv'/>
<fun r='_ZN5clang9BlockDecl16setDoesNotEscapeEb'/>
<fun r='_ZNK5clang9BlockDecl18canAvoidCopyToHeapEv'/>
<fun r='_ZN5clang9BlockDecl21setCanAvoidCopyToHeapEb'/>
<fun r='_ZNK5clang9BlockDecl16capturesVariableEPKNS_7VarDeclE'/>
<fun r='_ZN5clang9BlockDecl11setCapturesERNS_10ASTContextEN4llvm8ArrayRefINS0_7CaptureEEEb'/>
<fun r='_ZNK5clang9BlockDecl22getBlockManglingNumberEv'/>
<fun r='_ZNK5clang9BlockDecl27getBlockManglingContextDeclEv'/>
<fun r='_ZN5clang9BlockDecl16setBlockManglingEjPNS_4DeclE'/>
<fun r='_ZNK5clang9BlockDecl14getSourceRangeEv'/>
<fun r='_ZN5clang9BlockDecl7classofEPKNS_4DeclE'/>
<fun r='_ZN5clang9BlockDecl11classofKindENS_4Decl4KindE'/>
<fun r='_ZN5clang9BlockDecl17castToDeclContextEPKS0_'/>
<fun r='_ZN5clang9BlockDecl19castFromDeclContextEPKNS_11DeclContextE'/>
