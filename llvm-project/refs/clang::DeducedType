<inh f='llvm/clang/include/clang/AST/Type.h' l='1428' c='clang::Type'/>
<def f='llvm/clang/include/clang/AST/Type.h' l='4791' ll='4828'/>
<ovr f='llvm/clang/include/clang/AST/Type.h' l='4831' c='clang::AutoType'/>
<ovr f='llvm/clang/include/clang/AST/Type.h' l='4869' c='clang::DeducedTemplateSpecializationType'/>
<size>24</size>
<doc f='llvm/clang/include/clang/AST/Type.h' l='4782'>/// Common base class for placeholders for types that get replaced by
/// placeholder type deduction: C++11 auto, C++14 decltype(auto), C++17 deduced
/// class template types, and (eventually) constrained type names from the C++
/// Concepts TS.
///
/// These types are usually a placeholder for a deduced type. However, before
/// the initializer is attached, or (usually) if the initializer is
/// type-dependent, there is no deduced type and the type is canonical. In
/// the latter case, it is also a dependent type.</doc>
<fun r='_ZN5clang11DeducedTypeC1ENS_4Type9TypeClassENS_8QualTypeEbbb'/>
<fun r='_ZNK5clang11DeducedType9isSugaredEv'/>
<fun r='_ZNK5clang11DeducedType7desugarEv'/>
<fun r='_ZNK5clang11DeducedType14getDeducedTypeEv'/>
<fun r='_ZNK5clang11DeducedType9isDeducedEv'/>
<fun r='_ZN5clang11DeducedType7classofEPKNS_4TypeE'/>
