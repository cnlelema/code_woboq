<dec f='llvm/llvm/include/llvm/Analysis/InstructionPrecedenceTracking.h' l='43' type='void llvm::InstructionPrecedenceTracking::validate(const llvm::BasicBlock * BB) const'/>
<doc f='llvm/llvm/include/llvm/Analysis/InstructionPrecedenceTracking.h' l='40'>/// Asserts that the cached info for \p BB is up-to-date. This helps to catch
  /// the usage error of accessing a block without properly invalidating after a
  /// previous transform.</doc>
<use f='llvm/llvm/lib/Analysis/InstructionPrecedenceTracking.cpp' l='42' u='c' c='_ZN4llvm29InstructionPrecedenceTracking26getFirstSpecialInstructionEPKNS_10BasicBlockE'/>
<def f='llvm/llvm/lib/Analysis/InstructionPrecedenceTracking.cpp' l='77' ll='93' type='void llvm::InstructionPrecedenceTracking::validate(const llvm::BasicBlock * BB) const'/>
<use f='llvm/llvm/lib/Analysis/InstructionPrecedenceTracking.cpp' l='98' u='c' c='_ZNK4llvm29InstructionPrecedenceTracking11validateAllEv'/>
