<dec f='llvm/llvm/include/llvm/Transforms/IPO/FunctionImport.h' l='218' type='void llvm::thinLTOInternalizeModule(llvm::Module &amp; TheModule, const GVSummaryMapTy &amp; DefinedGlobals)'/>
<doc f='llvm/llvm/include/llvm/Transforms/IPO/FunctionImport.h' l='216'>/// Internalize \p TheModule based on the information recorded in the summaries
/// during global summary-based analysis.</doc>
<use f='llvm/llvm/lib/LTO/LTOBackend.cpp' l='512' u='c' c='_ZN4llvm3lto11thinBackendERNS0_6ConfigEjSt8functionIFSt10unique_ptrINS0_18NativeObjectStreamESt14default_deleteIS5_EEjEERNS_6ModuleERKNS_18ModuleSumma11234596'/>
<use f='llvm/llvm/lib/LTO/ThinLTOCodeGenerator.cpp' l='420' u='c' c='_ZN12_GLOBAL__N_1L20ProcessThinLTOModuleERN4llvm6ModuleERNS0_18ModuleSummaryIndexERNS0_9StringMapIPNS0_3lto9InputFileENS0_15MallocAllocatorEEERNS0_13T16283080'/>
<use f='llvm/llvm/lib/LTO/ThinLTOCodeGenerator.cpp' l='803' u='c' c='_ZN4llvm20ThinLTOCodeGenerator11internalizeERNS_6ModuleERNS_18ModuleSummaryIndexERKNS_3lto9InputFileE'/>
<def f='llvm/llvm/lib/Transforms/IPO/FunctionImport.cpp' l='1012' ll='1048' type='void llvm::thinLTOInternalizeModule(llvm::Module &amp; TheModule, const GVSummaryMapTy &amp; DefinedGlobals)'/>
<doc f='llvm/llvm/lib/Transforms/IPO/FunctionImport.cpp' l='1011'>/// Run internalization on \p TheModule based on symmary analysis.</doc>
