<inh f='llvm/lld/wasm/InputChunks.h' l='36' c='lld::wasm::InputChunk'/>
<def f='llvm/lld/wasm/InputChunks.h' l='92' ll='116'/>
<size>72</size>
<doc f='llvm/lld/wasm/InputChunks.h' l='84'>// Represents a WebAssembly data segment which can be included as part of
// an output data segments.  Note that in WebAssembly, unlike ELF and other
// formats, used the term &quot;data segment&quot; to refer to the continous regions of
// memory that make on the data section. See:
// https://webassembly.github.io/spec/syntax/modules.html#syntax-data
//
// For example, by default, clang will produce a separate data section for
// each global variable.</doc>
<fun r='_ZN3lld4wasm12InputSegmentC1ERKN4llvm6object11WasmSegmentEPNS0_7ObjFileE'/>
<fun r='_ZN3lld4wasm12InputSegment7classofEPKNS0_10InputChunkE'/>
<fun r='_ZNK3lld4wasm12InputSegment22generateRelocationCodeERN4llvm11raw_ostreamE'/>
<fun r='_ZNK3lld4wasm12InputSegment12getAlignmentEv'/>
<fun r='_ZNK3lld4wasm12InputSegment7getNameEv'/>
<fun r='_ZNK3lld4wasm12InputSegment12getDebugNameEv'/>
<fun r='_ZNK3lld4wasm12InputSegment9getComdatEv'/>
<fun r='_ZNK3lld4wasm12InputSegment21getInputSectionOffsetEv'/>
<mbr r='lld::wasm::InputSegment::OutputSeg' o='384' t='const lld::wasm::OutputSegment *'/>
<mbr r='lld::wasm::InputSegment::OutputSegmentOffset' o='448' t='int32_t'/>
<fun r='_ZNK3lld4wasm12InputSegment4dataEv'/>
<mbr r='lld::wasm::InputSegment::Segment' o='512' t='const llvm::object::WasmSegment &amp;'/>
