<def f='llvm/llvm/include/llvm/ADT/ilist_iterator.h' l='113' ll='115' type='void llvm::ilist_iterator::ilist_iterator&lt;OptionsT, IsReverse, IsConst&gt;(const ilist_iterator&lt;OptionsT, !IsReverse, IsConst&gt; &amp; RHS)'/>
<doc f='llvm/llvm/include/llvm/ADT/ilist_iterator.h' l='105'>/// Explicit conversion between forward/reverse iterators.
  ///
  /// Translate between forward and reverse iterators without changing range
  /// boundaries.  The resulting iterator will dereference (and have a handle)
  /// to the previous node, which is somewhat unexpected; but converting the
  /// two endpoints in a range will give the same range in reverse.
  ///
  /// This matches std::reverse_iterator conversions.</doc>
