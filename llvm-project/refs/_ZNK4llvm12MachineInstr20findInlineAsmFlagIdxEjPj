<dec f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='1253' type='int llvm::MachineInstr::findInlineAsmFlagIdx(unsigned int OpIdx, unsigned int * GroupNo = nullptr) const'/>
<doc f='llvm/llvm/include/llvm/CodeGen/MachineInstr.h' l='1244'>/// Find the index of the flag word operand that
  /// corresponds to operand OpIdx on an inline asm instruction.  Returns -1 if
  /// getOperand(OpIdx) does not belong to an inline asm operand group.
  ///
  /// If GroupNo is not NULL, it will receive the number of the operand group
  /// containing OpIdx.
  ///
  /// The flag operand is an immediate that can be decoded with methods like
  /// InlineAsm::hasRegClassConstraint().</doc>
<def f='llvm/llvm/lib/CodeGen/MachineInstr.cpp' l='792' ll='818' type='int llvm::MachineInstr::findInlineAsmFlagIdx(unsigned int OpIdx, unsigned int * GroupNo = nullptr) const'/>
<use f='llvm/llvm/lib/CodeGen/MachineInstr.cpp' l='856' u='c' c='_ZNK4llvm12MachineInstr21getRegClassConstraintEjPKNS_15TargetInstrInfoEPKNS_18TargetRegisterInfoE'/>
<use f='llvm/llvm/lib/CodeGen/MachineInstr.cpp' l='1831' u='c' c='_ZN4llvm12MachineInstr17addRegisterKilledEjPKNS_18TargetRegisterInfoEb'/>
<use f='llvm/llvm/lib/CodeGen/MachineInstr.cpp' l='1896' u='c' c='_ZN4llvm12MachineInstr15addRegisterDeadEjPKNS_18TargetRegisterInfoEb'/>
