<inh f='llvm/clang/include/clang/AST/Expr.h' l='108' c='clang::Expr'/>
<inh f='llvm/llvm/include/llvm/Support/TrailingObjects.h' l='233' c='llvm::TrailingObjects'/>
<def f='llvm/clang/include/clang/AST/ExprCXX.h' l='1722' ll='1949'/>
<size>40</size>
<doc f='llvm/clang/include/clang/AST/ExprCXX.h' l='1701'>/// A C++ lambda expression, which produces a function object
/// (of unspecified type) that can be invoked later.
///
/// Example:
/// \code
/// void low_pass_filter(std::vector&lt;double&gt; &amp;values, double cutoff) {
///   values.erase(std::remove_if(values.begin(), values.end(),
///                               [=](double value) { return value &gt; cutoff; });
/// }
/// \endcode
///
/// C++11 lambda expressions can capture local variables, either by copying
/// the values of those local variables at the time the function
/// object is constructed (not when it is called!) or by holding a
/// reference to the local variable. These captures can occur either
/// implicitly or can be written explicitly between the square
/// brackets ([...]) that start the lambda expression.
///
/// C++1y introduces a new form of &quot;capture&quot; called an init-capture that
/// includes an initializing expression (rather than capturing a variable),
/// and which can never occur implicitly.</doc>
<mbr r='clang::LambdaExpr::IntroducerRange' o='128' t='clang::SourceRange'/>
<mbr r='clang::LambdaExpr::CaptureDefaultLoc' o='192' t='clang::SourceLocation'/>
<mbr r='clang::LambdaExpr::NumCaptures' o='224' t='unsigned int'/>
<mbr r='clang::LambdaExpr::CaptureDefault' o='240' t='unsigned int'/>
<mbr r='clang::LambdaExpr::ExplicitParams' o='242' t='unsigned int'/>
<mbr r='clang::LambdaExpr::ExplicitResultType' o='243' t='unsigned int'/>
<mbr r='clang::LambdaExpr::ClosingBrace' o='256' t='clang::SourceLocation'/>
<fun r='_ZN5clang10LambdaExprC1ENS_8QualTypeENS_11SourceRangeENS_20LambdaCaptureDefaultENS_14SourceLocationEN4llvm8ArrayRefINS_13LambdaCaptureEEEbbNS6_IPNS_4ExprEEES4_b'/>
<fun r='_ZN5clang10LambdaExprC1ENS_4Stmt10EmptyShellEj'/>
<fun r='_ZN5clang10LambdaExpr14getStoredStmtsEv'/>
<fun r='_ZNK5clang10LambdaExpr14getStoredStmtsEv'/>
<fun r='_ZN5clang10LambdaExpr6CreateERKNS_10ASTContextEPNS_13CXXRecordDeclENS_11SourceRangeENS_20LambdaCaptureDefaultENS_14SourceLocationEN4llvm8ArrayRefINS_116276280'/>
<fun r='_ZN5clang10LambdaExpr18CreateDeserializedERKNS_10ASTContextEj'/>
<fun r='_ZNK5clang10LambdaExpr17getCaptureDefaultEv'/>
<fun r='_ZNK5clang10LambdaExpr20getCaptureDefaultLocEv'/>
<fun r='_ZNK5clang10LambdaExpr13isInitCaptureEPKNS_13LambdaCaptureE'/>
<fun r='_ZNK5clang10LambdaExpr8capturesEv'/>
<fun r='_ZNK5clang10LambdaExpr13capture_beginEv'/>
<fun r='_ZNK5clang10LambdaExpr11capture_endEv'/>
<fun r='_ZNK5clang10LambdaExpr12capture_sizeEv'/>
<fun r='_ZNK5clang10LambdaExpr17explicit_capturesEv'/>
<fun r='_ZNK5clang10LambdaExpr22explicit_capture_beginEv'/>
<fun r='_ZNK5clang10LambdaExpr20explicit_capture_endEv'/>
<fun r='_ZNK5clang10LambdaExpr17implicit_capturesEv'/>
<fun r='_ZNK5clang10LambdaExpr22implicit_capture_beginEv'/>
<fun r='_ZNK5clang10LambdaExpr20implicit_capture_endEv'/>
<fun r='_ZN5clang10LambdaExpr13capture_initsEv'/>
<fun r='_ZNK5clang10LambdaExpr13capture_initsEv'/>
<fun r='_ZN5clang10LambdaExpr18capture_init_beginEv'/>
<fun r='_ZNK5clang10LambdaExpr18capture_init_beginEv'/>
<fun r='_ZN5clang10LambdaExpr16capture_init_endEv'/>
<fun r='_ZNK5clang10LambdaExpr16capture_init_endEv'/>
<fun r='_ZNK5clang10LambdaExpr18getIntroducerRangeEv'/>
<fun r='_ZNK5clang10LambdaExpr14getLambdaClassEv'/>
<fun r='_ZNK5clang10LambdaExpr15getCallOperatorEv'/>
<fun r='_ZNK5clang10LambdaExpr24getTemplateParameterListEv'/>
<fun r='_ZNK5clang10LambdaExpr29getExplicitTemplateParametersEv'/>
<fun r='_ZNK5clang10LambdaExpr15isGenericLambdaEv'/>
<fun r='_ZNK5clang10LambdaExpr7getBodyEv'/>
<fun r='_ZNK5clang10LambdaExpr9isMutableEv'/>
<fun r='_ZNK5clang10LambdaExpr21hasExplicitParametersEv'/>
<fun r='_ZNK5clang10LambdaExpr21hasExplicitResultTypeEv'/>
<fun r='_ZN5clang10LambdaExpr7classofEPKNS_4StmtE'/>
<fun r='_ZNK5clang10LambdaExpr11getBeginLocEv'/>
<fun r='_ZNK5clang10LambdaExpr9getEndLocEv'/>
<fun r='_ZN5clang10LambdaExpr8childrenEv'/>
<fun r='_ZNK5clang10LambdaExpr8childrenEv'/>
