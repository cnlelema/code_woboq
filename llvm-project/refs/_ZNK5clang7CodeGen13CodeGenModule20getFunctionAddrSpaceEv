<def f='llvm/clang/lib/CodeGen/CodeGenModule.h' l='675' ll='680' type='unsigned int clang::CodeGen::CodeGenModule::getFunctionAddrSpace() const'/>
<doc f='llvm/clang/lib/CodeGen/CodeGenModule.h' l='672'>// This is the same as DataLayout::getProgramAddressSpace() except that it
  // also includes a hack for the legacy CHERI ABI: functions must still be in
  // address space 0 even though all code pointers are in AS200</doc>
<use f='llvm/clang/lib/CodeGen/CGCXX.cpp' l='136' u='c' c='_ZN5clang7CodeGen13CodeGenModule28TryEmitBaseDestructorAsAliasEPKNS_17CXXDestructorDeclE'/>
<use f='llvm/clang/lib/CodeGen/CGCXX.cpp' l='185' u='c' c='_ZN5clang7CodeGen13CodeGenModule28TryEmitBaseDestructorAsAliasEPKNS_17CXXDestructorDeclE'/>
<use f='llvm/clang/lib/CodeGen/CGException.cpp' l='253' u='c' c='_ZL22getOpaquePersonalityFnRN5clang7CodeGen13CodeGenModuleERKNS0_13EHPersonalityE'/>
<use f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='3163' u='c' c='_ZN5clang7CodeGen13CodeGenModule23GetOrCreateLLVMFunctionEN4llvm9StringRefEPNS2_4TypeENS_10GlobalDeclEbbbNS2_13AttributeListENS0_15ForDefinition_tE'/>
<use f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='3206' u='c' c='_ZN5clang7CodeGen13CodeGenModule23GetOrCreateLLVMFunctionEN4llvm9StringRefEPNS2_4TypeENS_10GlobalDeclEbbbNS2_13AttributeListENS0_15ForDefinition_tE'/>
<use f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='3269' u='c' c='_ZN5clang7CodeGen13CodeGenModule23GetOrCreateLLVMFunctionEN4llvm9StringRefEPNS2_4TypeENS_10GlobalDeclEbbbNS2_13AttributeListENS0_15ForDefinition_tE'/>
<use f='llvm/clang/lib/CodeGen/CodeGenModule.cpp' l='4485' u='c' c='_ZN5clang7CodeGen13CodeGenModule19EmitAliasDefinitionENS_10GlobalDeclE'/>
